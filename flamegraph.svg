<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="678" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="661.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="661.00"> </text><svg id="frames" x="10" width="1180" total_samples="126177"><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (20 samples, 0.02%)</title><rect x="0.0349%" y="389" width="0.0159%" height="15" fill="rgb(227,0,7)" fg:x="44" fg:w="20"/><text x="0.2849%" y="399.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (23 samples, 0.02%)</title><rect x="0.0341%" y="437" width="0.0182%" height="15" fill="rgb(217,0,24)" fg:x="43" fg:w="23"/><text x="0.2841%" y="447.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (23 samples, 0.02%)</title><rect x="0.0341%" y="421" width="0.0182%" height="15" fill="rgb(221,193,54)" fg:x="43" fg:w="23"/><text x="0.2841%" y="431.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (22 samples, 0.02%)</title><rect x="0.0349%" y="405" width="0.0174%" height="15" fill="rgb(248,212,6)" fg:x="44" fg:w="22"/><text x="0.2849%" y="415.50"></text></g><g><title>App`glutin_window::GlutinWindow::from_raw (51 samples, 0.04%)</title><rect x="0.0182%" y="485" width="0.0404%" height="15" fill="rgb(208,68,35)" fg:x="23" fg:w="51"/><text x="0.2682%" y="495.50"></text></g><g><title>App`glutin_winit::DisplayBuilder::build (43 samples, 0.03%)</title><rect x="0.0246%" y="469" width="0.0341%" height="15" fill="rgb(232,128,0)" fg:x="31" fg:w="43"/><text x="0.2746%" y="479.50"></text></g><g><title>App`winit::platform_impl::platform::window::WinitWindow::new (31 samples, 0.02%)</title><rect x="0.0341%" y="453" width="0.0246%" height="15" fill="rgb(207,160,47)" fg:x="43" fg:w="31"/><text x="0.2841%" y="463.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (27 samples, 0.02%)</title><rect x="0.0586%" y="469" width="0.0214%" height="15" fill="rgb(228,23,34)" fg:x="74" fg:w="27"/><text x="0.3086%" y="479.50"></text></g><g><title>AppKit`-[NSApplication init] (27 samples, 0.02%)</title><rect x="0.0586%" y="453" width="0.0214%" height="15" fill="rgb(218,30,26)" fg:x="74" fg:w="27"/><text x="0.3086%" y="463.50"></text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::BuildFromWindowSettings&gt;::build_from_window_settings (84 samples, 0.07%)</title><rect x="0.0182%" y="517" width="0.0666%" height="15" fill="rgb(220,122,19)" fg:x="23" fg:w="84"/><text x="0.2682%" y="527.50"></text></g><g><title>App`glutin_window::GlutinWindow::new (84 samples, 0.07%)</title><rect x="0.0182%" y="501" width="0.0666%" height="15" fill="rgb(250,228,42)" fg:x="23" fg:w="84"/><text x="0.2682%" y="511.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (33 samples, 0.03%)</title><rect x="0.0586%" y="485" width="0.0262%" height="15" fill="rgb(240,193,28)" fg:x="74" fg:w="33"/><text x="0.3086%" y="495.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (41 samples, 0.03%)</title><rect x="0.2481%" y="421" width="0.0325%" height="15" fill="rgb(216,20,37)" fg:x="313" fg:w="41"/><text x="0.4981%" y="431.50"></text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (46 samples, 0.04%)</title><rect x="0.3115%" y="341" width="0.0365%" height="15" fill="rgb(206,188,39)" fg:x="393" fg:w="46"/><text x="0.5615%" y="351.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (54 samples, 0.04%)</title><rect x="0.3067%" y="357" width="0.0428%" height="15" fill="rgb(217,207,13)" fg:x="387" fg:w="54"/><text x="0.5567%" y="367.50"></text></g><g><title>CoreFoundation`CFEqual (25 samples, 0.02%)</title><rect x="0.3717%" y="309" width="0.0198%" height="15" fill="rgb(231,73,38)" fg:x="469" fg:w="25"/><text x="0.6217%" y="319.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (46 samples, 0.04%)</title><rect x="0.3606%" y="325" width="0.0365%" height="15" fill="rgb(225,20,46)" fg:x="455" fg:w="46"/><text x="0.6106%" y="335.50"></text></g><g><title>CoreFoundation`CFSetGetValue (84 samples, 0.07%)</title><rect x="0.3598%" y="341" width="0.0666%" height="15" fill="rgb(210,31,41)" fg:x="454" fg:w="84"/><text x="0.6098%" y="351.50"></text></g><g><title>CoreFoundation`__CFStringHash (29 samples, 0.02%)</title><rect x="0.4034%" y="325" width="0.0230%" height="15" fill="rgb(221,200,47)" fg:x="509" fg:w="29"/><text x="0.6534%" y="335.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (102 samples, 0.08%)</title><rect x="0.3543%" y="357" width="0.0808%" height="15" fill="rgb(226,26,5)" fg:x="447" fg:w="102"/><text x="0.6043%" y="367.50"></text></g><g><title>CoreFoundation`CFRunLoopAddSource (188 samples, 0.15%)</title><rect x="0.3027%" y="373" width="0.1490%" height="15" fill="rgb(249,33,26)" fg:x="382" fg:w="188"/><text x="0.5527%" y="383.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (215 samples, 0.17%)</title><rect x="0.2877%" y="405" width="0.1704%" height="15" fill="rgb(235,183,28)" fg:x="363" fg:w="215"/><text x="0.5377%" y="415.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (201 samples, 0.16%)</title><rect x="0.2988%" y="389" width="0.1593%" height="15" fill="rgb(221,5,38)" fg:x="377" fg:w="201"/><text x="0.5488%" y="399.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (220 samples, 0.17%)</title><rect x="0.2853%" y="421" width="0.1744%" height="15" fill="rgb(247,18,42)" fg:x="360" fg:w="220"/><text x="0.5353%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.01%)</title><rect x="0.4938%" y="341" width="0.0127%" height="15" fill="rgb(241,131,45)" fg:x="623" fg:w="16"/><text x="0.7438%" y="351.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (27 samples, 0.02%)</title><rect x="0.4858%" y="389" width="0.0214%" height="15" fill="rgb(249,31,29)" fg:x="613" fg:w="27"/><text x="0.7358%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (17 samples, 0.01%)</title><rect x="0.4938%" y="373" width="0.0135%" height="15" fill="rgb(225,111,53)" fg:x="623" fg:w="17"/><text x="0.7438%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (17 samples, 0.01%)</title><rect x="0.4938%" y="357" width="0.0135%" height="15" fill="rgb(238,160,17)" fg:x="623" fg:w="17"/><text x="0.7438%" y="367.50"></text></g><g><title>CoreFoundation`CFBasicHashCreateCopy (70 samples, 0.06%)</title><rect x="0.4644%" y="405" width="0.0555%" height="15" fill="rgb(214,148,48)" fg:x="586" fg:w="70"/><text x="0.7144%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (16 samples, 0.01%)</title><rect x="0.5072%" y="389" width="0.0127%" height="15" fill="rgb(232,36,49)" fg:x="640" fg:w="16"/><text x="0.7572%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (16 samples, 0.01%)</title><rect x="0.5072%" y="373" width="0.0127%" height="15" fill="rgb(209,103,24)" fg:x="640" fg:w="16"/><text x="0.7572%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.01%)</title><rect x="0.5072%" y="357" width="0.0127%" height="15" fill="rgb(229,88,8)" fg:x="640" fg:w="16"/><text x="0.7572%" y="367.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (14 samples, 0.01%)</title><rect x="0.5207%" y="405" width="0.0111%" height="15" fill="rgb(213,181,19)" fg:x="657" fg:w="14"/><text x="0.7707%" y="415.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeID (13 samples, 0.01%)</title><rect x="0.5215%" y="389" width="0.0103%" height="15" fill="rgb(254,191,54)" fg:x="658" fg:w="13"/><text x="0.7715%" y="399.50"></text></g><g><title>CoreFoundation`CFSetCreateCopy (96 samples, 0.08%)</title><rect x="0.4597%" y="421" width="0.0761%" height="15" fill="rgb(241,83,37)" fg:x="580" fg:w="96"/><text x="0.7097%" y="431.50"></text></g><g><title>CoreFoundation`__CFBasicHashDrain (13 samples, 0.01%)</title><rect x="0.5453%" y="405" width="0.0103%" height="15" fill="rgb(233,36,39)" fg:x="688" fg:w="13"/><text x="0.7953%" y="415.50"></text></g><g><title>CoreFoundation`_CFRelease (50 samples, 0.04%)</title><rect x="0.5358%" y="421" width="0.0396%" height="15" fill="rgb(226,3,54)" fg:x="676" fg:w="50"/><text x="0.7858%" y="431.50"></text></g><g><title>CoreFoundation`CFRunLoopAddSource (449 samples, 0.36%)</title><rect x="0.2409%" y="437" width="0.3558%" height="15" fill="rgb(245,192,40)" fg:x="304" fg:w="449"/><text x="0.4909%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.02%)</title><rect x="0.6237%" y="405" width="0.0182%" height="15" fill="rgb(238,167,29)" fg:x="787" fg:w="23"/><text x="0.8737%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.02%)</title><rect x="0.6269%" y="389" width="0.0151%" height="15" fill="rgb(232,182,51)" fg:x="791" fg:w="19"/><text x="0.8769%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (19 samples, 0.02%)</title><rect x="0.6269%" y="373" width="0.0151%" height="15" fill="rgb(231,60,39)" fg:x="791" fg:w="19"/><text x="0.8769%" y="383.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (55 samples, 0.04%)</title><rect x="0.6039%" y="421" width="0.0436%" height="15" fill="rgb(208,69,12)" fg:x="762" fg:w="55"/><text x="0.8539%" y="431.50"></text></g><g><title>CoreFoundation`CFRunLoopSourceCreate (70 samples, 0.06%)</title><rect x="0.6015%" y="437" width="0.0555%" height="15" fill="rgb(235,93,37)" fg:x="759" fg:w="70"/><text x="0.8515%" y="447.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::create_proxy (618 samples, 0.49%)</title><rect x="0.1989%" y="453" width="0.4898%" height="15" fill="rgb(213,116,39)" fg:x="251" fg:w="618"/><text x="0.4489%" y="463.50"></text></g><g><title>AppKit`-[NSApplication _enableImmediateEventHandlingIfNeeded] (15 samples, 0.01%)</title><rect x="0.7038%" y="437" width="0.0119%" height="15" fill="rgb(222,207,29)" fg:x="888" fg:w="15"/><text x="0.9538%" y="447.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (27 samples, 0.02%)</title><rect x="0.8647%" y="309" width="0.0214%" height="15" fill="rgb(206,96,30)" fg:x="1091" fg:w="27"/><text x="1.1147%" y="319.50"></text></g><g><title>CoreFoundation`CFSetGetValue (57 samples, 0.05%)</title><rect x="0.8615%" y="325" width="0.0452%" height="15" fill="rgb(218,138,4)" fg:x="1087" fg:w="57"/><text x="1.1115%" y="335.50"></text></g><g><title>CoreFoundation`__CFStringHash (18 samples, 0.01%)</title><rect x="0.8924%" y="309" width="0.0143%" height="15" fill="rgb(250,191,14)" fg:x="1126" fg:w="18"/><text x="1.1424%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (69 samples, 0.05%)</title><rect x="0.8583%" y="341" width="0.0547%" height="15" fill="rgb(239,60,40)" fg:x="1083" fg:w="69"/><text x="1.1083%" y="351.50"></text></g><g><title>CoreFoundation`CFRunLoopAddObserver (114 samples, 0.09%)</title><rect x="0.8361%" y="357" width="0.0903%" height="15" fill="rgb(206,27,48)" fg:x="1055" fg:w="114"/><text x="1.0861%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.02%)</title><rect x="0.9566%" y="309" width="0.0166%" height="15" fill="rgb(225,35,8)" fg:x="1207" fg:w="21"/><text x="1.2066%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.01%)</title><rect x="0.9590%" y="293" width="0.0143%" height="15" fill="rgb(250,213,24)" fg:x="1210" fg:w="18"/><text x="1.2090%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.01%)</title><rect x="0.9590%" y="277" width="0.0143%" height="15" fill="rgb(247,123,22)" fg:x="1210" fg:w="18"/><text x="1.2090%" y="287.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (43 samples, 0.03%)</title><rect x="0.9431%" y="325" width="0.0341%" height="15" fill="rgb(231,138,38)" fg:x="1190" fg:w="43"/><text x="1.1931%" y="335.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (16 samples, 0.01%)</title><rect x="0.9867%" y="309" width="0.0127%" height="15" fill="rgb(231,145,46)" fg:x="1245" fg:w="16"/><text x="1.2367%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.01%)</title><rect x="0.9994%" y="309" width="0.0103%" height="15" fill="rgb(251,118,11)" fg:x="1261" fg:w="13"/><text x="1.2494%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.01%)</title><rect x="0.9994%" y="293" width="0.0103%" height="15" fill="rgb(217,147,25)" fg:x="1261" fg:w="13"/><text x="1.2494%" y="303.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (39 samples, 0.03%)</title><rect x="0.9796%" y="325" width="0.0309%" height="15" fill="rgb(247,81,37)" fg:x="1236" fg:w="39"/><text x="1.2296%" y="335.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverCreate (107 samples, 0.08%)</title><rect x="0.9336%" y="341" width="0.0848%" height="15" fill="rgb(209,12,38)" fg:x="1178" fg:w="107"/><text x="1.1836%" y="351.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverCreateWithHandler (125 samples, 0.10%)</title><rect x="0.9296%" y="357" width="0.0991%" height="15" fill="rgb(227,1,9)" fg:x="1173" fg:w="125"/><text x="1.1796%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_copyWeak (16 samples, 0.01%)</title><rect x="1.0319%" y="357" width="0.0127%" height="15" fill="rgb(248,47,43)" fg:x="1302" fg:w="16"/><text x="1.2819%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_initWeak (50 samples, 0.04%)</title><rect x="1.0485%" y="357" width="0.0396%" height="15" fill="rgb(221,10,30)" fg:x="1323" fg:w="50"/><text x="1.2985%" y="367.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (30 samples, 0.02%)</title><rect x="1.0644%" y="341" width="0.0238%" height="15" fill="rgb(210,229,1)" fg:x="1343" fg:w="30"/><text x="1.3144%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (16 samples, 0.01%)</title><rect x="1.0889%" y="357" width="0.0127%" height="15" fill="rgb(222,148,37)" fg:x="1374" fg:w="16"/><text x="1.3389%" y="367.50"></text></g><g><title>AppKit`-[NSApplication setWindowsNeedUpdate:] (370 samples, 0.29%)</title><rect x="0.8116%" y="373" width="0.2932%" height="15" fill="rgb(234,67,33)" fg:x="1024" fg:w="370"/><text x="1.0616%" y="383.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (35 samples, 0.03%)</title><rect x="1.1183%" y="165" width="0.0277%" height="15" fill="rgb(247,98,35)" fg:x="1411" fg:w="35"/><text x="1.3683%" y="175.50"></text></g><g><title>AppKit`-[NSEvent _postAtStart:] (16 samples, 0.01%)</title><rect x="1.1508%" y="37" width="0.0127%" height="15" fill="rgb(247,138,52)" fg:x="1452" fg:w="16"/><text x="1.4008%" y="47.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (19 samples, 0.02%)</title><rect x="1.1508%" y="101" width="0.0151%" height="15" fill="rgb(213,79,30)" fg:x="1452" fg:w="19"/><text x="1.4008%" y="111.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler (19 samples, 0.02%)</title><rect x="1.1508%" y="85" width="0.0151%" height="15" fill="rgb(246,177,23)" fg:x="1452" fg:w="19"/><text x="1.4008%" y="95.50"></text></g><g><title>App`std::panicking::try (19 samples, 0.02%)</title><rect x="1.1508%" y="69" width="0.0151%" height="15" fill="rgb(230,62,27)" fg:x="1452" fg:w="19"/><text x="1.4008%" y="79.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::cleared (19 samples, 0.02%)</title><rect x="1.1508%" y="53" width="0.0151%" height="15" fill="rgb(216,154,8)" fg:x="1452" fg:w="19"/><text x="1.4008%" y="63.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (21 samples, 0.02%)</title><rect x="1.1508%" y="117" width="0.0166%" height="15" fill="rgb(244,35,45)" fg:x="1452" fg:w="21"/><text x="1.4008%" y="127.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (16 samples, 0.01%)</title><rect x="1.1674%" y="117" width="0.0127%" height="15" fill="rgb(251,115,12)" fg:x="1473" fg:w="16"/><text x="1.4174%" y="127.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (16 samples, 0.01%)</title><rect x="1.1674%" y="101" width="0.0127%" height="15" fill="rgb(240,54,50)" fg:x="1473" fg:w="16"/><text x="1.4174%" y="111.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (49 samples, 0.04%)</title><rect x="1.1508%" y="133" width="0.0388%" height="15" fill="rgb(233,84,52)" fg:x="1452" fg:w="49"/><text x="1.4008%" y="143.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (55 samples, 0.04%)</title><rect x="1.1476%" y="149" width="0.0436%" height="15" fill="rgb(207,117,47)" fg:x="1448" fg:w="55"/><text x="1.3976%" y="159.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) trackEventsMatchingMask:timeout:mode:handler:] (95 samples, 0.08%)</title><rect x="1.1183%" y="245" width="0.0753%" height="15" fill="rgb(249,43,39)" fg:x="1411" fg:w="95"/><text x="1.3683%" y="255.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (95 samples, 0.08%)</title><rect x="1.1183%" y="229" width="0.0753%" height="15" fill="rgb(209,38,44)" fg:x="1411" fg:w="95"/><text x="1.3683%" y="239.50"></text></g><g><title>AppKit`_DPSNextEvent (95 samples, 0.08%)</title><rect x="1.1183%" y="213" width="0.0753%" height="15" fill="rgb(236,212,23)" fg:x="1411" fg:w="95"/><text x="1.3683%" y="223.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (95 samples, 0.08%)</title><rect x="1.1183%" y="197" width="0.0753%" height="15" fill="rgb(242,79,21)" fg:x="1411" fg:w="95"/><text x="1.3683%" y="207.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (95 samples, 0.08%)</title><rect x="1.1183%" y="181" width="0.0753%" height="15" fill="rgb(211,96,35)" fg:x="1411" fg:w="95"/><text x="1.3683%" y="191.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (58 samples, 0.05%)</title><rect x="1.1476%" y="165" width="0.0460%" height="15" fill="rgb(253,215,40)" fg:x="1448" fg:w="58"/><text x="1.3976%" y="175.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (99 samples, 0.08%)</title><rect x="1.1159%" y="325" width="0.0785%" height="15" fill="rgb(211,81,21)" fg:x="1408" fg:w="99"/><text x="1.3659%" y="335.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (99 samples, 0.08%)</title><rect x="1.1159%" y="309" width="0.0785%" height="15" fill="rgb(208,190,38)" fg:x="1408" fg:w="99"/><text x="1.3659%" y="319.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (99 samples, 0.08%)</title><rect x="1.1159%" y="293" width="0.0785%" height="15" fill="rgb(235,213,38)" fg:x="1408" fg:w="99"/><text x="1.3659%" y="303.50"></text></g><g><title>AppKit`NSControlTrackMouse (99 samples, 0.08%)</title><rect x="1.1159%" y="277" width="0.0785%" height="15" fill="rgb(237,122,38)" fg:x="1408" fg:w="99"/><text x="1.3659%" y="287.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (98 samples, 0.08%)</title><rect x="1.1167%" y="261" width="0.0777%" height="15" fill="rgb(244,218,35)" fg:x="1409" fg:w="98"/><text x="1.3667%" y="271.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (103 samples, 0.08%)</title><rect x="1.1151%" y="341" width="0.0816%" height="15" fill="rgb(240,68,47)" fg:x="1407" fg:w="103"/><text x="1.3651%" y="351.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (109 samples, 0.09%)</title><rect x="1.1135%" y="357" width="0.0864%" height="15" fill="rgb(210,16,53)" fg:x="1405" fg:w="109"/><text x="1.3635%" y="367.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (113 samples, 0.09%)</title><rect x="1.1111%" y="373" width="0.0896%" height="15" fill="rgb(235,124,12)" fg:x="1402" fg:w="113"/><text x="1.3611%" y="383.50"></text></g><g><title>QuartzCore`CA::Transaction::ensure_implicit (36 samples, 0.03%)</title><rect x="1.2364%" y="357" width="0.0285%" height="15" fill="rgb(224,169,11)" fg:x="1560" fg:w="36"/><text x="1.4864%" y="367.50"></text></g><g><title>QuartzCore`+[CATransaction(CATransactionPrivate) activateBackground:] (50 samples, 0.04%)</title><rect x="1.2284%" y="373" width="0.0396%" height="15" fill="rgb(250,166,2)" fg:x="1550" fg:w="50"/><text x="1.4784%" y="383.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (13 samples, 0.01%)</title><rect x="1.2760%" y="373" width="0.0103%" height="15" fill="rgb(242,216,29)" fg:x="1610" fg:w="13"/><text x="1.5260%" y="383.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (629 samples, 0.50%)</title><rect x="0.7925%" y="389" width="0.4985%" height="15" fill="rgb(230,116,27)" fg:x="1000" fg:w="629"/><text x="1.0425%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (23 samples, 0.02%)</title><rect x="1.3045%" y="389" width="0.0182%" height="15" fill="rgb(228,99,48)" fg:x="1646" fg:w="23"/><text x="1.5545%" y="399.50"></text></g><g><title>App`winit::platform_impl::platform::app::WinitApplication::send_event (685 samples, 0.54%)</title><rect x="0.7822%" y="405" width="0.5429%" height="15" fill="rgb(253,11,6)" fg:x="987" fg:w="685"/><text x="1.0322%" y="415.50"></text></g><g><title>Foundation`+[NSUndoManager(NSPrivate) _endTopLevelGroupings] (13 samples, 0.01%)</title><rect x="1.3283%" y="405" width="0.0103%" height="15" fill="rgb(247,143,39)" fg:x="1676" fg:w="13"/><text x="1.5783%" y="415.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (750 samples, 0.59%)</title><rect x="0.7640%" y="421" width="0.5944%" height="15" fill="rgb(236,97,10)" fg:x="964" fg:w="750"/><text x="1.0140%" y="431.50"></text></g><g><title>AppKit`+[NSEvent _discardTrackingAndCursorEventsIfNeeded] (22 samples, 0.02%)</title><rect x="1.4503%" y="405" width="0.0174%" height="15" fill="rgb(233,208,19)" fg:x="1830" fg:w="22"/><text x="1.7003%" y="415.50"></text></g><g><title>QuartzCore`CA::Layer::ancestor_context_id (16 samples, 0.01%)</title><rect x="1.5764%" y="341" width="0.0127%" height="15" fill="rgb(216,164,2)" fg:x="1989" fg:w="16"/><text x="1.8264%" y="351.50"></text></g><g><title>QuartzCore`CA::Layer::retain_context (23 samples, 0.02%)</title><rect x="1.5740%" y="357" width="0.0182%" height="15" fill="rgb(220,129,5)" fg:x="1986" fg:w="23"/><text x="1.8240%" y="367.50"></text></g><g><title>QuartzCore`-[CALayer(CALayerPrivate) context] (55 samples, 0.04%)</title><rect x="1.5676%" y="373" width="0.0436%" height="15" fill="rgb(242,17,10)" fg:x="1978" fg:w="55"/><text x="1.8176%" y="383.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _findWindowUsingContextID:] (126 samples, 0.10%)</title><rect x="1.5328%" y="389" width="0.0999%" height="15" fill="rgb(242,107,0)" fg:x="1934" fg:w="126"/><text x="1.7828%" y="399.50"></text></g><g><title>SkyLight`SLEventGetIntegerValueField (16 samples, 0.01%)</title><rect x="1.6849%" y="389" width="0.0127%" height="15" fill="rgb(251,28,31)" fg:x="2126" fg:w="16"/><text x="1.9349%" y="399.50"></text></g><g><title>SkyLight`CGSDisplaySystemStateGetBounds (47 samples, 0.04%)</title><rect x="1.7412%" y="373" width="0.0372%" height="15" fill="rgb(233,223,10)" fg:x="2197" fg:w="47"/><text x="1.9912%" y="383.50"></text></g><g><title>SkyLight`get_current_display_system_state() (342 samples, 0.27%)</title><rect x="1.7792%" y="373" width="0.2710%" height="15" fill="rgb(215,21,27)" fg:x="2245" fg:w="342"/><text x="2.0292%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (333 samples, 0.26%)</title><rect x="1.7864%" y="357" width="0.2639%" height="15" fill="rgb(232,23,21)" fg:x="2254" fg:w="333"/><text x="2.0364%" y="367.50"></text></g><g><title>SkyLight`SLSGetDisplayBounds (446 samples, 0.35%)</title><rect x="1.6976%" y="389" width="0.3535%" height="15" fill="rgb(244,5,23)" fg:x="2142" fg:w="446"/><text x="1.9476%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (343 samples, 0.27%)</title><rect x="2.0828%" y="357" width="0.2718%" height="15" fill="rgb(226,81,46)" fg:x="2628" fg:w="343"/><text x="2.3328%" y="367.50"></text></g><g><title>SkyLight`get_current_display_system_state() (366 samples, 0.29%)</title><rect x="2.0661%" y="373" width="0.2901%" height="15" fill="rgb(247,70,30)" fg:x="2607" fg:w="366"/><text x="2.3161%" y="383.50"></text></g><g><title>SkyLight`SLSMainDisplayID (386 samples, 0.31%)</title><rect x="2.0519%" y="389" width="0.3059%" height="15" fill="rgb(212,68,19)" fg:x="2589" fg:w="386"/><text x="2.3019%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (68 samples, 0.05%)</title><rect x="2.3578%" y="389" width="0.0539%" height="15" fill="rgb(240,187,13)" fg:x="2975" fg:w="68"/><text x="2.6078%" y="399.50"></text></g><g><title>AppKit`-[NSEvent _initWithCGEvent:eventRef:] (1,164 samples, 0.92%)</title><rect x="1.4995%" y="405" width="0.9225%" height="15" fill="rgb(223,113,26)" fg:x="1892" fg:w="1164"/><text x="1.7495%" y="415.50"></text></g><g><title>CoreFoundation`_CFRelease (27 samples, 0.02%)</title><rect x="2.4688%" y="325" width="0.0214%" height="15" fill="rgb(206,192,2)" fg:x="3115" fg:w="27"/><text x="2.7188%" y="335.50"></text></g><g><title>SkyLight`event_finalize(void const*) (65 samples, 0.05%)</title><rect x="2.4505%" y="357" width="0.0515%" height="15" fill="rgb(241,108,4)" fg:x="3092" fg:w="65"/><text x="2.7005%" y="367.50"></text></g><g><title>SkyLight`CGSEventReclaimObjects (62 samples, 0.05%)</title><rect x="2.4529%" y="341" width="0.0491%" height="15" fill="rgb(247,173,49)" fg:x="3095" fg:w="62"/><text x="2.7029%" y="351.50"></text></g><g><title>CoreFoundation`_CFRelease (89 samples, 0.07%)</title><rect x="2.4426%" y="373" width="0.0705%" height="15" fill="rgb(224,114,35)" fg:x="3082" fg:w="89"/><text x="2.6926%" y="383.50"></text></g><g><title>HIToolbox`ReleaseEvent (115 samples, 0.09%)</title><rect x="2.4339%" y="389" width="0.0911%" height="15" fill="rgb(245,159,27)" fg:x="3071" fg:w="115"/><text x="2.6839%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (17 samples, 0.01%)</title><rect x="2.5250%" y="373" width="0.0135%" height="15" fill="rgb(245,172,44)" fg:x="3186" fg:w="17"/><text x="2.7750%" y="383.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (15 samples, 0.01%)</title><rect x="2.5266%" y="357" width="0.0119%" height="15" fill="rgb(236,23,11)" fg:x="3188" fg:w="15"/><text x="2.7766%" y="367.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (18 samples, 0.01%)</title><rect x="2.5250%" y="389" width="0.0143%" height="15" fill="rgb(205,117,38)" fg:x="3186" fg:w="18"/><text x="2.7750%" y="399.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (156 samples, 0.12%)</title><rect x="2.4220%" y="405" width="0.1236%" height="15" fill="rgb(237,72,25)" fg:x="3056" fg:w="156"/><text x="2.6720%" y="415.50"></text></g><g><title>AppKit`-[NSEvent window] (31 samples, 0.02%)</title><rect x="2.5456%" y="405" width="0.0246%" height="15" fill="rgb(244,70,9)" fg:x="3212" fg:w="31"/><text x="2.7956%" y="415.50"></text></g><g><title>CoreFoundation`_CFSuddenTerminationDisable (29 samples, 0.02%)</title><rect x="2.6106%" y="357" width="0.0230%" height="15" fill="rgb(217,125,39)" fg:x="3294" fg:w="29"/><text x="2.8606%" y="367.50"></text></g><g><title>libxpc.dylib`_xpc_transaction_begin (19 samples, 0.02%)</title><rect x="2.6185%" y="341" width="0.0151%" height="15" fill="rgb(235,36,10)" fg:x="3304" fg:w="19"/><text x="2.8685%" y="351.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (15 samples, 0.01%)</title><rect x="2.6384%" y="357" width="0.0119%" height="15" fill="rgb(251,123,47)" fg:x="3329" fg:w="15"/><text x="2.8884%" y="367.50"></text></g><g><title>HIToolbox`_HIDisableSuddenTerminationForSendEvent (72 samples, 0.06%)</title><rect x="2.6027%" y="373" width="0.0571%" height="15" fill="rgb(221,13,13)" fg:x="3284" fg:w="72"/><text x="2.8527%" y="383.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (27 samples, 0.02%)</title><rect x="2.6598%" y="373" width="0.0214%" height="15" fill="rgb(238,131,9)" fg:x="3356" fg:w="27"/><text x="2.9098%" y="383.50"></text></g><g><title>AppKit`-[NSApplication _disableSuddenTermination] (127 samples, 0.10%)</title><rect x="2.5860%" y="389" width="0.1007%" height="15" fill="rgb(211,50,8)" fg:x="3263" fg:w="127"/><text x="2.8360%" y="399.50"></text></g><g><title>SkyLight`SLSGetCurrentCursorLocation (13 samples, 0.01%)</title><rect x="2.7010%" y="341" width="0.0103%" height="15" fill="rgb(245,182,24)" fg:x="3408" fg:w="13"/><text x="2.9510%" y="351.50"></text></g><g><title>HIToolbox`GetGlobalMouse (26 samples, 0.02%)</title><rect x="2.6986%" y="357" width="0.0206%" height="15" fill="rgb(242,14,37)" fg:x="3405" fg:w="26"/><text x="2.9486%" y="367.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (54 samples, 0.04%)</title><rect x="2.6891%" y="389" width="0.0428%" height="15" fill="rgb(246,228,12)" fg:x="3393" fg:w="54"/><text x="2.9391%" y="399.50"></text></g><g><title>HIToolbox`ConvertEventRefToEventRecord (54 samples, 0.04%)</title><rect x="2.6891%" y="373" width="0.0428%" height="15" fill="rgb(213,55,15)" fg:x="3393" fg:w="54"/><text x="2.9391%" y="383.50"></text></g><g><title>HIToolbox`FindWindowAndPartFromMouseEvent (29 samples, 0.02%)</title><rect x="2.7382%" y="325" width="0.0230%" height="15" fill="rgb(209,9,3)" fg:x="3455" fg:w="29"/><text x="2.9882%" y="335.50"></text></g><g><title>HIToolbox`FindWindow (29 samples, 0.02%)</title><rect x="2.7382%" y="309" width="0.0230%" height="15" fill="rgb(230,59,30)" fg:x="3455" fg:w="29"/><text x="2.9882%" y="319.50"></text></g><g><title>HIToolbox`FindWindowOfClass (29 samples, 0.02%)</title><rect x="2.7382%" y="293" width="0.0230%" height="15" fill="rgb(209,121,21)" fg:x="3455" fg:w="29"/><text x="2.9882%" y="303.50"></text></g><g><title>HIToolbox`FindWindowCommon(Point, OpaqueWindowPtr**, short*) (29 samples, 0.02%)</title><rect x="2.7382%" y="277" width="0.0230%" height="15" fill="rgb(220,109,13)" fg:x="3455" fg:w="29"/><text x="2.9882%" y="287.50"></text></g><g><title>HIToolbox`MBarHit (27 samples, 0.02%)</title><rect x="2.7398%" y="261" width="0.0214%" height="15" fill="rgb(232,18,1)" fg:x="3457" fg:w="27"/><text x="2.9898%" y="271.50"></text></g><g><title>HIToolbox`_MBarHit(MenuData*, Point, unsigned char, unsigned char*, MenuData**) (26 samples, 0.02%)</title><rect x="2.7406%" y="245" width="0.0206%" height="15" fill="rgb(215,41,42)" fg:x="3458" fg:w="26"/><text x="2.9906%" y="255.50"></text></g><g><title>HIToolbox`_HIPresentationInstanceFindAtLocation (26 samples, 0.02%)</title><rect x="2.7406%" y="229" width="0.0206%" height="15" fill="rgb(224,123,36)" fg:x="3458" fg:w="26"/><text x="2.9906%" y="239.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachMenuBarDo(void  (26 samples, 0.02%)</title><rect x="2.7406%" y="213" width="0.0206%" height="15" fill="rgb(240,125,3)" fg:x="3458" fg:w="26"/><text x="2.9906%" y="223.50"></text></g><g><title>HIToolbox`___HIPresentationInstanceFindAtLocation_block_invoke (26 samples, 0.02%)</title><rect x="2.7406%" y="197" width="0.0206%" height="15" fill="rgb(205,98,50)" fg:x="3458" fg:w="26"/><text x="2.9906%" y="207.50"></text></g><g><title>HIToolbox`MenuBarInstance::ContainsPoint (26 samples, 0.02%)</title><rect x="2.7406%" y="181" width="0.0206%" height="15" fill="rgb(205,185,37)" fg:x="3458" fg:w="26"/><text x="2.9906%" y="191.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (26 samples, 0.02%)</title><rect x="2.7406%" y="165" width="0.0206%" height="15" fill="rgb(238,207,15)" fg:x="3458" fg:w="26"/><text x="2.9906%" y="175.50"></text></g><g><title>HIToolbox`SendEventToEventTarget (31 samples, 0.02%)</title><rect x="2.7382%" y="389" width="0.0246%" height="15" fill="rgb(213,199,42)" fg:x="3455" fg:w="31"/><text x="2.9882%" y="399.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (31 samples, 0.02%)</title><rect x="2.7382%" y="373" width="0.0246%" height="15" fill="rgb(235,201,11)" fg:x="3455" fg:w="31"/><text x="2.9882%" y="383.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (31 samples, 0.02%)</title><rect x="2.7382%" y="357" width="0.0246%" height="15" fill="rgb(207,46,11)" fg:x="3455" fg:w="31"/><text x="2.9882%" y="367.50"></text></g><g><title>HIToolbox`ToolboxEventDispatcherHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (31 samples, 0.02%)</title><rect x="2.7382%" y="341" width="0.0246%" height="15" fill="rgb(241,35,35)" fg:x="3455" fg:w="31"/><text x="2.9882%" y="351.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (245 samples, 0.19%)</title><rect x="2.5829%" y="405" width="0.1942%" height="15" fill="rgb(243,32,47)" fg:x="3259" fg:w="245"/><text x="2.8329%" y="415.50"></text></g><g><title>CoreFoundation`-[NSDate timeIntervalSinceNow] (26 samples, 0.02%)</title><rect x="2.8222%" y="389" width="0.0206%" height="15" fill="rgb(247,202,23)" fg:x="3561" fg:w="26"/><text x="3.0722%" y="399.50"></text></g><g><title>HIToolbox`GetMainEventQueue (15 samples, 0.01%)</title><rect x="2.8745%" y="373" width="0.0119%" height="15" fill="rgb(219,102,11)" fg:x="3627" fg:w="15"/><text x="3.1245%" y="383.50"></text></g><g><title>AppKit`___DPSBlockUntilNextEventMatchingListInMode_block_invoke (14 samples, 0.01%)</title><rect x="2.9046%" y="357" width="0.0111%" height="15" fill="rgb(243,110,44)" fg:x="3665" fg:w="14"/><text x="3.1546%" y="367.50"></text></g><g><title>CarbonCore`DYLD-STUB$$pthread_self (14 samples, 0.01%)</title><rect x="2.9157%" y="357" width="0.0111%" height="15" fill="rgb(222,74,54)" fg:x="3679" fg:w="14"/><text x="3.1657%" y="367.50"></text></g><g><title>CarbonCore`MPCurrentTaskID (29 samples, 0.02%)</title><rect x="2.9268%" y="357" width="0.0230%" height="15" fill="rgb(216,99,12)" fg:x="3693" fg:w="29"/><text x="3.1768%" y="367.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (14 samples, 0.01%)</title><rect x="3.0299%" y="309" width="0.0111%" height="15" fill="rgb(226,22,26)" fg:x="3823" fg:w="14"/><text x="3.2799%" y="319.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (14 samples, 0.01%)</title><rect x="3.0299%" y="293" width="0.0111%" height="15" fill="rgb(217,163,10)" fg:x="3823" fg:w="14"/><text x="3.2799%" y="303.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (14 samples, 0.01%)</title><rect x="3.0299%" y="277" width="0.0111%" height="15" fill="rgb(213,25,53)" fg:x="3823" fg:w="14"/><text x="3.2799%" y="287.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (14 samples, 0.01%)</title><rect x="3.0299%" y="261" width="0.0111%" height="15" fill="rgb(252,105,26)" fg:x="3823" fg:w="14"/><text x="3.2799%" y="271.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (14 samples, 0.01%)</title><rect x="3.0299%" y="245" width="0.0111%" height="15" fill="rgb(220,39,43)" fg:x="3823" fg:w="14"/><text x="3.2799%" y="255.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (14 samples, 0.01%)</title><rect x="3.0299%" y="229" width="0.0111%" height="15" fill="rgb(229,68,48)" fg:x="3823" fg:w="14"/><text x="3.2799%" y="239.50"></text></g><g><title>HIToolbox`ShowHide (13 samples, 0.01%)</title><rect x="3.0307%" y="213" width="0.0103%" height="15" fill="rgb(252,8,32)" fg:x="3824" fg:w="13"/><text x="3.2807%" y="223.50"></text></g><g><title>HIToolbox`_ShowHideWindows (13 samples, 0.01%)</title><rect x="3.0307%" y="197" width="0.0103%" height="15" fill="rgb(223,20,43)" fg:x="3824" fg:w="13"/><text x="3.2807%" y="207.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (13 samples, 0.01%)</title><rect x="3.0307%" y="181" width="0.0103%" height="15" fill="rgb(229,81,49)" fg:x="3824" fg:w="13"/><text x="3.2807%" y="191.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (20 samples, 0.02%)</title><rect x="3.0275%" y="325" width="0.0159%" height="15" fill="rgb(236,28,36)" fg:x="3820" fg:w="20"/><text x="3.2775%" y="335.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (46 samples, 0.04%)</title><rect x="3.0180%" y="341" width="0.0365%" height="15" fill="rgb(249,185,26)" fg:x="3808" fg:w="46"/><text x="3.2680%" y="351.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (80 samples, 0.06%)</title><rect x="2.9918%" y="357" width="0.0634%" height="15" fill="rgb(249,174,33)" fg:x="3775" fg:w="80"/><text x="3.2418%" y="367.50"></text></g><g><title>CarbonCore`MPTaskIsPreemptive (13 samples, 0.01%)</title><rect x="3.0814%" y="341" width="0.0103%" height="15" fill="rgb(233,201,37)" fg:x="3888" fg:w="13"/><text x="3.3314%" y="351.50"></text></g><g><title>HIToolbox`GetCurrentEventQueue (39 samples, 0.03%)</title><rect x="3.0806%" y="357" width="0.0309%" height="15" fill="rgb(221,78,26)" fg:x="3887" fg:w="39"/><text x="3.3306%" y="367.50"></text></g><g><title>HIToolbox`GetMainEventQueue (22 samples, 0.02%)</title><rect x="3.1194%" y="357" width="0.0174%" height="15" fill="rgb(250,127,30)" fg:x="3936" fg:w="22"/><text x="3.3694%" y="367.50"></text></g><g><title>CoreFoundation`CFRunLoopGetCurrent (13 samples, 0.01%)</title><rect x="3.1797%" y="341" width="0.0103%" height="15" fill="rgb(230,49,44)" fg:x="4012" fg:w="13"/><text x="3.4297%" y="351.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (29 samples, 0.02%)</title><rect x="3.2779%" y="293" width="0.0230%" height="15" fill="rgb(229,67,23)" fg:x="4136" fg:w="29"/><text x="3.5279%" y="303.50"></text></g><g><title>CoreFoundation`CFSetGetValue (56 samples, 0.04%)</title><rect x="3.2700%" y="309" width="0.0444%" height="15" fill="rgb(249,83,47)" fg:x="4126" fg:w="56"/><text x="3.5200%" y="319.50"></text></g><g><title>CoreFoundation`__CFStringHash (15 samples, 0.01%)</title><rect x="3.3025%" y="293" width="0.0119%" height="15" fill="rgb(215,43,3)" fg:x="4167" fg:w="15"/><text x="3.5525%" y="303.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (20 samples, 0.02%)</title><rect x="3.3215%" y="309" width="0.0159%" height="15" fill="rgb(238,154,13)" fg:x="4191" fg:w="20"/><text x="3.5715%" y="319.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeID (19 samples, 0.02%)</title><rect x="3.3223%" y="293" width="0.0151%" height="15" fill="rgb(219,56,2)" fg:x="4192" fg:w="19"/><text x="3.5723%" y="303.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (116 samples, 0.09%)</title><rect x="3.2613%" y="325" width="0.0919%" height="15" fill="rgb(233,0,4)" fg:x="4115" fg:w="116"/><text x="3.5113%" y="335.50"></text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (15 samples, 0.01%)</title><rect x="3.4039%" y="309" width="0.0119%" height="15" fill="rgb(235,30,7)" fg:x="4295" fg:w="15"/><text x="3.6539%" y="319.50"></text></g><g><title>QuartzCore`CA::Context::retain_all_contexts (24 samples, 0.02%)</title><rect x="3.5831%" y="245" width="0.0190%" height="15" fill="rgb(250,79,13)" fg:x="4521" fg:w="24"/><text x="3.8331%" y="255.50"></text></g><g><title>QuartzCore`CA::Layer::layout_if_needed (13 samples, 0.01%)</title><rect x="3.6195%" y="245" width="0.0103%" height="15" fill="rgb(211,146,34)" fg:x="4567" fg:w="13"/><text x="3.8695%" y="255.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_set (18 samples, 0.01%)</title><rect x="3.6687%" y="213" width="0.0143%" height="15" fill="rgb(228,22,38)" fg:x="4629" fg:w="18"/><text x="3.9187%" y="223.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (564 samples, 0.45%)</title><rect x="3.6663%" y="229" width="0.4470%" height="15" fill="rgb(235,168,5)" fg:x="4626" fg:w="564"/><text x="3.9163%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (540 samples, 0.43%)</title><rect x="3.6853%" y="213" width="0.4280%" height="15" fill="rgb(221,155,16)" fg:x="4650" fg:w="540"/><text x="3.9353%" y="223.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (598 samples, 0.47%)</title><rect x="3.6528%" y="245" width="0.4739%" height="15" fill="rgb(215,215,53)" fg:x="4609" fg:w="598"/><text x="3.9028%" y="255.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::set_object_cache (24 samples, 0.02%)</title><rect x="4.1267%" y="245" width="0.0190%" height="15" fill="rgb(223,4,10)" fg:x="5207" fg:w="24"/><text x="4.3767%" y="255.50"></text></g><g><title>QuartzCore`x_hash_table_foreach (19 samples, 0.02%)</title><rect x="4.1307%" y="229" width="0.0151%" height="15" fill="rgb(234,103,6)" fg:x="5212" fg:w="19"/><text x="4.3807%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (21 samples, 0.02%)</title><rect x="4.1870%" y="165" width="0.0166%" height="15" fill="rgb(227,97,0)" fg:x="5283" fg:w="21"/><text x="4.4370%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (32 samples, 0.03%)</title><rect x="4.1791%" y="181" width="0.0254%" height="15" fill="rgb(234,150,53)" fg:x="5273" fg:w="32"/><text x="4.4291%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (35 samples, 0.03%)</title><rect x="4.1783%" y="213" width="0.0277%" height="15" fill="rgb(228,201,54)" fg:x="5272" fg:w="35"/><text x="4.4283%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (34 samples, 0.03%)</title><rect x="4.1791%" y="197" width="0.0269%" height="15" fill="rgb(222,22,37)" fg:x="5273" fg:w="34"/><text x="4.4291%" y="207.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_alloc_from_heap (45 samples, 0.04%)</title><rect x="4.1743%" y="229" width="0.0357%" height="15" fill="rgb(237,53,32)" fg:x="5267" fg:w="45"/><text x="4.4243%" y="239.50"></text></g><g><title>libdispatch.dylib`_dispatch_async_f_slow (60 samples, 0.05%)</title><rect x="4.1672%" y="245" width="0.0476%" height="15" fill="rgb(233,25,53)" fg:x="5258" fg:w="60"/><text x="4.4172%" y="255.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (645 samples, 0.51%)</title><rect x="4.2171%" y="245" width="0.5112%" height="15" fill="rgb(210,40,34)" fg:x="5321" fg:w="645"/><text x="4.4671%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (618 samples, 0.49%)</title><rect x="4.2385%" y="229" width="0.4898%" height="15" fill="rgb(241,220,44)" fg:x="5348" fg:w="618"/><text x="4.4885%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (109 samples, 0.09%)</title><rect x="4.7465%" y="245" width="0.0864%" height="15" fill="rgb(235,28,35)" fg:x="5989" fg:w="109"/><text x="4.9965%" y="255.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (17 samples, 0.01%)</title><rect x="4.8361%" y="245" width="0.0135%" height="15" fill="rgb(210,56,17)" fg:x="6102" fg:w="17"/><text x="5.0861%" y="255.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (1,743 samples, 1.38%)</title><rect x="3.4792%" y="261" width="1.3814%" height="15" fill="rgb(224,130,29)" fg:x="4390" fg:w="1743"/><text x="3.7292%" y="271.50"></text></g><g><title>QuartzCore`CA::Layer::free_transaction (16 samples, 0.01%)</title><rect x="4.8773%" y="261" width="0.0127%" height="15" fill="rgb(235,212,8)" fg:x="6154" fg:w="16"/><text x="5.1273%" y="271.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::~Encoder (18 samples, 0.01%)</title><rect x="4.9145%" y="261" width="0.0143%" height="15" fill="rgb(223,33,50)" fg:x="6201" fg:w="18"/><text x="5.1645%" y="271.50"></text></g><g><title>QuartzCore`CA::Transaction::set_frame_begin_time (14 samples, 0.01%)</title><rect x="4.9359%" y="261" width="0.0111%" height="15" fill="rgb(219,149,13)" fg:x="6228" fg:w="14"/><text x="5.1859%" y="271.50"></text></g><g><title>libdispatch.dylib`voucher_get_activity_id (13 samples, 0.01%)</title><rect x="5.0326%" y="245" width="0.0103%" height="15" fill="rgb(250,156,29)" fg:x="6350" fg:w="13"/><text x="5.2826%" y="255.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (68 samples, 0.05%)</title><rect x="5.1190%" y="213" width="0.0539%" height="15" fill="rgb(216,193,19)" fg:x="6459" fg:w="68"/><text x="5.3690%" y="223.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (162 samples, 0.13%)</title><rect x="5.0500%" y="245" width="0.1284%" height="15" fill="rgb(216,135,14)" fg:x="6372" fg:w="162"/><text x="5.3000%" y="255.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (133 samples, 0.11%)</title><rect x="5.0730%" y="229" width="0.1054%" height="15" fill="rgb(241,47,5)" fg:x="6401" fg:w="133"/><text x="5.3230%" y="239.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_unreliably_with_name_impl (188 samples, 0.15%)</title><rect x="5.0310%" y="261" width="0.1490%" height="15" fill="rgb(233,42,35)" fg:x="6348" fg:w="188"/><text x="5.2810%" y="271.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (2,177 samples, 1.73%)</title><rect x="3.4642%" y="277" width="1.7254%" height="15" fill="rgb(231,13,6)" fg:x="4371" fg:w="2177"/><text x="3.7142%" y="287.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (2,245 samples, 1.78%)</title><rect x="3.4475%" y="293" width="1.7792%" height="15" fill="rgb(207,181,40)" fg:x="4350" fg:w="2245"/><text x="3.6975%" y="303.50">Q..</text></g><g><title>QuartzCore`CA::Transaction::observer_callback (17 samples, 0.01%)</title><rect x="5.2268%" y="293" width="0.0135%" height="15" fill="rgb(254,173,49)" fg:x="6595" fg:w="17"/><text x="5.4768%" y="303.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (2,296 samples, 1.82%)</title><rect x="3.4317%" y="309" width="1.8197%" height="15" fill="rgb(221,1,38)" fg:x="4330" fg:w="2296"/><text x="3.6817%" y="319.50">C..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (15 samples, 0.01%)</title><rect x="5.2728%" y="309" width="0.0119%" height="15" fill="rgb(206,124,46)" fg:x="6653" fg:w="15"/><text x="5.5228%" y="319.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (17 samples, 0.01%)</title><rect x="5.2846%" y="309" width="0.0135%" height="15" fill="rgb(249,21,11)" fg:x="6668" fg:w="17"/><text x="5.5346%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (2,460 samples, 1.95%)</title><rect x="3.3580%" y="325" width="1.9496%" height="15" fill="rgb(222,201,40)" fg:x="4237" fg:w="2460"/><text x="3.6080%" y="335.50">C..</text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (22 samples, 0.02%)</title><rect x="5.3219%" y="293" width="0.0174%" height="15" fill="rgb(235,61,29)" fg:x="6715" fg:w="22"/><text x="5.5719%" y="303.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (32 samples, 0.03%)</title><rect x="5.3203%" y="309" width="0.0254%" height="15" fill="rgb(219,207,3)" fg:x="6713" fg:w="32"/><text x="5.5703%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeIsEmpty (43 samples, 0.03%)</title><rect x="5.3132%" y="325" width="0.0341%" height="15" fill="rgb(222,56,46)" fg:x="6704" fg:w="43"/><text x="5.5632%" y="335.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetCurrent (28 samples, 0.02%)</title><rect x="5.3956%" y="309" width="0.0222%" height="15" fill="rgb(239,76,54)" fg:x="6808" fg:w="28"/><text x="5.6456%" y="319.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (14 samples, 0.01%)</title><rect x="5.4210%" y="309" width="0.0111%" height="15" fill="rgb(231,124,27)" fg:x="6840" fg:w="14"/><text x="5.6710%" y="319.50"></text></g><g><title>CoreFoundation`CFSetGetCount (17 samples, 0.01%)</title><rect x="5.4439%" y="309" width="0.0135%" height="15" fill="rgb(249,195,6)" fg:x="6869" fg:w="17"/><text x="5.6939%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (14 samples, 0.01%)</title><rect x="5.4717%" y="309" width="0.0111%" height="15" fill="rgb(237,174,47)" fg:x="6904" fg:w="14"/><text x="5.7217%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (17 samples, 0.01%)</title><rect x="5.5636%" y="245" width="0.0135%" height="15" fill="rgb(206,201,31)" fg:x="7020" fg:w="17"/><text x="5.8136%" y="255.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (31 samples, 0.02%)</title><rect x="5.5541%" y="261" width="0.0246%" height="15" fill="rgb(231,57,52)" fg:x="7008" fg:w="31"/><text x="5.8041%" y="271.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (60 samples, 0.05%)</title><rect x="5.5335%" y="277" width="0.0476%" height="15" fill="rgb(248,177,22)" fg:x="6982" fg:w="60"/><text x="5.7835%" y="287.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverInvalidate (81 samples, 0.06%)</title><rect x="5.5232%" y="293" width="0.0642%" height="15" fill="rgb(215,211,37)" fg:x="6969" fg:w="81"/><text x="5.7732%" y="303.50"></text></g><g><title>CoreFoundation`_CFRelease (30 samples, 0.02%)</title><rect x="5.5969%" y="293" width="0.0238%" height="15" fill="rgb(241,128,51)" fg:x="7062" fg:w="30"/><text x="5.8469%" y="303.50"></text></g><g><title>AppKit`-[NSView inputContext] (13 samples, 0.01%)</title><rect x="5.6769%" y="213" width="0.0103%" height="15" fill="rgb(227,165,31)" fg:x="7163" fg:w="13"/><text x="5.9269%" y="223.50"></text></g><g><title>AppKit`-[NSWindow _isKeyWindowIgnoringFocus] (17 samples, 0.01%)</title><rect x="5.6976%" y="197" width="0.0135%" height="15" fill="rgb(228,167,24)" fg:x="7189" fg:w="17"/><text x="5.9476%" y="207.50"></text></g><g><title>AppKit`-[NSWindow _allowsActiveInputContext] (38 samples, 0.03%)</title><rect x="5.6872%" y="213" width="0.0301%" height="15" fill="rgb(228,143,12)" fg:x="7176" fg:w="38"/><text x="5.9372%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (26 samples, 0.02%)</title><rect x="5.7277%" y="197" width="0.0206%" height="15" fill="rgb(249,149,8)" fg:x="7227" fg:w="26"/><text x="5.9777%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (26 samples, 0.02%)</title><rect x="5.7277%" y="181" width="0.0206%" height="15" fill="rgb(243,35,44)" fg:x="7227" fg:w="26"/><text x="5.9777%" y="191.50"></text></g><g><title>AppKit`-[NSWindow firstResponder] (33 samples, 0.03%)</title><rect x="5.7229%" y="213" width="0.0262%" height="15" fill="rgb(246,89,9)" fg:x="7221" fg:w="33"/><text x="5.9729%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_getAssociatedObject (20 samples, 0.02%)</title><rect x="5.7665%" y="213" width="0.0159%" height="15" fill="rgb(233,213,13)" fg:x="7276" fg:w="20"/><text x="6.0165%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (17 samples, 0.01%)</title><rect x="5.7831%" y="197" width="0.0135%" height="15" fill="rgb(233,141,41)" fg:x="7297" fg:w="17"/><text x="6.0331%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (21 samples, 0.02%)</title><rect x="5.7824%" y="213" width="0.0166%" height="15" fill="rgb(239,167,4)" fg:x="7296" fg:w="21"/><text x="6.0324%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (21 samples, 0.02%)</title><rect x="5.7990%" y="213" width="0.0166%" height="15" fill="rgb(209,217,16)" fg:x="7317" fg:w="21"/><text x="6.0490%" y="223.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (207 samples, 0.16%)</title><rect x="5.6603%" y="229" width="0.1641%" height="15" fill="rgb(219,88,35)" fg:x="7142" fg:w="207"/><text x="5.9103%" y="239.50"></text></g><g><title>CoreFoundation`CFEqual (33 samples, 0.03%)</title><rect x="5.9123%" y="117" width="0.0262%" height="15" fill="rgb(220,193,23)" fg:x="7460" fg:w="33"/><text x="6.1623%" y="127.50"></text></g><g><title>CoreFoundation`CFCachedStringEqual (36 samples, 0.03%)</title><rect x="5.9123%" y="133" width="0.0285%" height="15" fill="rgb(230,90,52)" fg:x="7460" fg:w="36"/><text x="6.1623%" y="143.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (60 samples, 0.05%)</title><rect x="5.9004%" y="149" width="0.0476%" height="15" fill="rgb(252,106,19)" fg:x="7445" fg:w="60"/><text x="6.1504%" y="159.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (66 samples, 0.05%)</title><rect x="5.8973%" y="165" width="0.0523%" height="15" fill="rgb(206,74,20)" fg:x="7441" fg:w="66"/><text x="6.1473%" y="175.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (82 samples, 0.06%)</title><rect x="5.8973%" y="181" width="0.0650%" height="15" fill="rgb(230,138,44)" fg:x="7441" fg:w="82"/><text x="6.1473%" y="191.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (90 samples, 0.07%)</title><rect x="5.8965%" y="197" width="0.0713%" height="15" fill="rgb(235,182,43)" fg:x="7440" fg:w="90"/><text x="6.1465%" y="207.50"></text></g><g><title>CoreFoundation`-[NSArray makeObjectsPerformSelector:] (120 samples, 0.10%)</title><rect x="5.8767%" y="213" width="0.0951%" height="15" fill="rgb(242,16,51)" fg:x="7415" fg:w="120"/><text x="6.1267%" y="223.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (14 samples, 0.01%)</title><rect x="5.9757%" y="213" width="0.0111%" height="15" fill="rgb(248,9,4)" fg:x="7540" fg:w="14"/><text x="6.2257%" y="223.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (28 samples, 0.02%)</title><rect x="5.9932%" y="213" width="0.0222%" height="15" fill="rgb(210,31,22)" fg:x="7562" fg:w="28"/><text x="6.2432%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (16 samples, 0.01%)</title><rect x="6.0368%" y="213" width="0.0127%" height="15" fill="rgb(239,54,39)" fg:x="7617" fg:w="16"/><text x="6.2868%" y="223.50"></text></g><g><title>libobjc.A.dylib`object_getIndexedIvars (20 samples, 0.02%)</title><rect x="6.0582%" y="213" width="0.0159%" height="15" fill="rgb(230,99,41)" fg:x="7644" fg:w="20"/><text x="6.3082%" y="223.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _updateWindowsUsingCache] (314 samples, 0.25%)</title><rect x="5.8386%" y="229" width="0.2489%" height="15" fill="rgb(253,106,12)" fg:x="7367" fg:w="314"/><text x="6.0886%" y="239.50"></text></g><g><title>AppKit`-[NSWindow _allowsActiveInputContext] (13 samples, 0.01%)</title><rect x="6.0970%" y="229" width="0.0103%" height="15" fill="rgb(213,46,41)" fg:x="7693" fg:w="13"/><text x="6.3470%" y="239.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (13 samples, 0.01%)</title><rect x="6.1334%" y="229" width="0.0103%" height="15" fill="rgb(215,133,35)" fg:x="7739" fg:w="13"/><text x="6.3834%" y="239.50"></text></g><g><title>CoreFoundation`CFEqual (42 samples, 0.03%)</title><rect x="6.2737%" y="149" width="0.0333%" height="15" fill="rgb(213,28,5)" fg:x="7916" fg:w="42"/><text x="6.5237%" y="159.50"></text></g><g><title>CoreFoundation`CFCachedStringEqual (54 samples, 0.04%)</title><rect x="6.2721%" y="165" width="0.0428%" height="15" fill="rgb(215,77,49)" fg:x="7914" fg:w="54"/><text x="6.5221%" y="175.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (104 samples, 0.08%)</title><rect x="6.2381%" y="181" width="0.0824%" height="15" fill="rgb(248,100,22)" fg:x="7871" fg:w="104"/><text x="6.4881%" y="191.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (167 samples, 0.13%)</title><rect x="6.2151%" y="197" width="0.1324%" height="15" fill="rgb(208,67,9)" fg:x="7842" fg:w="167"/><text x="6.4651%" y="207.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (239 samples, 0.19%)</title><rect x="6.1953%" y="213" width="0.1894%" height="15" fill="rgb(219,133,21)" fg:x="7817" fg:w="239"/><text x="6.4453%" y="223.50"></text></g><g><title>Foundation`-[NSConcreteNotification initWithName:object:userInfo:] (17 samples, 0.01%)</title><rect x="6.3902%" y="213" width="0.0135%" height="15" fill="rgb(246,46,29)" fg:x="8063" fg:w="17"/><text x="6.6402%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (19 samples, 0.02%)</title><rect x="6.4116%" y="149" width="0.0151%" height="15" fill="rgb(246,185,52)" fg:x="8090" fg:w="19"/><text x="6.6616%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (22 samples, 0.02%)</title><rect x="6.4108%" y="181" width="0.0174%" height="15" fill="rgb(252,136,11)" fg:x="8089" fg:w="22"/><text x="6.6608%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (21 samples, 0.02%)</title><rect x="6.4116%" y="165" width="0.0166%" height="15" fill="rgb(219,138,53)" fg:x="8090" fg:w="21"/><text x="6.6616%" y="175.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (25 samples, 0.02%)</title><rect x="6.4100%" y="197" width="0.0198%" height="15" fill="rgb(211,51,23)" fg:x="8088" fg:w="25"/><text x="6.6600%" y="207.50"></text></g><g><title>Foundation`NSAllocateObject (32 samples, 0.03%)</title><rect x="6.4061%" y="213" width="0.0254%" height="15" fill="rgb(247,221,28)" fg:x="8083" fg:w="32"/><text x="6.6561%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (25 samples, 0.02%)</title><rect x="6.4386%" y="213" width="0.0198%" height="15" fill="rgb(251,222,45)" fg:x="8124" fg:w="25"/><text x="6.6886%" y="223.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (371 samples, 0.29%)</title><rect x="6.1755%" y="229" width="0.2940%" height="15" fill="rgb(217,162,53)" fg:x="7792" fg:w="371"/><text x="6.4255%" y="239.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (92 samples, 0.07%)</title><rect x="6.4948%" y="229" width="0.0729%" height="15" fill="rgb(229,93,14)" fg:x="8195" fg:w="92"/><text x="6.7448%" y="239.50"></text></g><g><title>libobjc.A.dylib`objc_retain (15 samples, 0.01%)</title><rect x="6.5773%" y="229" width="0.0119%" height="15" fill="rgb(209,67,49)" fg:x="8299" fg:w="15"/><text x="6.8273%" y="239.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (1,197 samples, 0.95%)</title><rect x="5.6429%" y="245" width="0.9487%" height="15" fill="rgb(213,87,29)" fg:x="7120" fg:w="1197"/><text x="5.8929%" y="255.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (22 samples, 0.02%)</title><rect x="6.6407%" y="197" width="0.0174%" height="15" fill="rgb(205,151,52)" fg:x="8379" fg:w="22"/><text x="6.8907%" y="207.50"></text></g><g><title>CoreFoundation`CFSetGetValue (31 samples, 0.02%)</title><rect x="6.6407%" y="213" width="0.0246%" height="15" fill="rgb(253,215,39)" fg:x="8379" fg:w="31"/><text x="6.8907%" y="223.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (41 samples, 0.03%)</title><rect x="6.6407%" y="229" width="0.0325%" height="15" fill="rgb(221,220,41)" fg:x="8379" fg:w="41"/><text x="6.8907%" y="239.50"></text></g><g><title>CoreFoundation`CFRunLoopRemoveObserver (99 samples, 0.08%)</title><rect x="6.6106%" y="245" width="0.0785%" height="15" fill="rgb(218,133,21)" fg:x="8341" fg:w="99"/><text x="6.8606%" y="255.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (17 samples, 0.01%)</title><rect x="6.7191%" y="197" width="0.0135%" height="15" fill="rgb(221,193,43)" fg:x="8478" fg:w="17"/><text x="6.9691%" y="207.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (30 samples, 0.02%)</title><rect x="6.7120%" y="213" width="0.0238%" height="15" fill="rgb(240,128,52)" fg:x="8469" fg:w="30"/><text x="6.9620%" y="223.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (36 samples, 0.03%)</title><rect x="6.7104%" y="229" width="0.0285%" height="15" fill="rgb(253,114,12)" fg:x="8467" fg:w="36"/><text x="6.9604%" y="239.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (60 samples, 0.05%)</title><rect x="6.7041%" y="245" width="0.0476%" height="15" fill="rgb(215,223,47)" fg:x="8459" fg:w="60"/><text x="6.9541%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (23 samples, 0.02%)</title><rect x="6.7627%" y="229" width="0.0182%" height="15" fill="rgb(248,225,23)" fg:x="8533" fg:w="23"/><text x="7.0127%" y="239.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (40 samples, 0.03%)</title><rect x="6.7532%" y="245" width="0.0317%" height="15" fill="rgb(250,108,0)" fg:x="8521" fg:w="40"/><text x="7.0032%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (68 samples, 0.05%)</title><rect x="6.7857%" y="245" width="0.0539%" height="15" fill="rgb(228,208,7)" fg:x="8562" fg:w="68"/><text x="7.0357%" y="255.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (1,533 samples, 1.21%)</title><rect x="5.6357%" y="261" width="1.2150%" height="15" fill="rgb(244,45,10)" fg:x="7111" fg:w="1533"/><text x="5.8857%" y="271.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (16 samples, 0.01%)</title><rect x="6.8515%" y="229" width="0.0127%" height="15" fill="rgb(207,125,25)" fg:x="8645" fg:w="16"/><text x="7.1015%" y="239.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (24 samples, 0.02%)</title><rect x="6.8507%" y="261" width="0.0190%" height="15" fill="rgb(210,195,18)" fg:x="8644" fg:w="24"/><text x="7.1007%" y="271.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (23 samples, 0.02%)</title><rect x="6.8515%" y="245" width="0.0182%" height="15" fill="rgb(249,80,12)" fg:x="8645" fg:w="23"/><text x="7.1015%" y="255.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (1,591 samples, 1.26%)</title><rect x="5.6310%" y="277" width="1.2609%" height="15" fill="rgb(221,65,9)" fg:x="7105" fg:w="1591"/><text x="5.8810%" y="287.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (20 samples, 0.02%)</title><rect x="6.9220%" y="229" width="0.0159%" height="15" fill="rgb(235,49,36)" fg:x="8734" fg:w="20"/><text x="7.1720%" y="239.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (36 samples, 0.03%)</title><rect x="6.9181%" y="245" width="0.0285%" height="15" fill="rgb(225,32,20)" fg:x="8729" fg:w="36"/><text x="7.1681%" y="255.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::wakeup (56 samples, 0.04%)</title><rect x="6.9054%" y="261" width="0.0444%" height="15" fill="rgb(215,141,46)" fg:x="8713" fg:w="56"/><text x="7.1554%" y="271.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_begin_handler (63 samples, 0.05%)</title><rect x="6.9014%" y="277" width="0.0499%" height="15" fill="rgb(250,160,47)" fg:x="8708" fg:w="63"/><text x="7.1514%" y="287.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) postEvent:atStart:] (15 samples, 0.01%)</title><rect x="6.9593%" y="245" width="0.0119%" height="15" fill="rgb(216,222,40)" fg:x="8781" fg:w="15"/><text x="7.2093%" y="255.50"></text></g><g><title>Foundation`NSKVOCopyPendingNotificationStack (25 samples, 0.02%)</title><rect x="7.0671%" y="197" width="0.0198%" height="15" fill="rgb(234,217,39)" fg:x="8917" fg:w="25"/><text x="7.3171%" y="207.50"></text></g><g><title>Foundation`NSKeyValueDidChangeWithPerThreadPendingNotifications (37 samples, 0.03%)</title><rect x="7.0631%" y="213" width="0.0293%" height="15" fill="rgb(207,178,40)" fg:x="8912" fg:w="37"/><text x="7.3131%" y="223.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (25 samples, 0.02%)</title><rect x="7.1178%" y="181" width="0.0198%" height="15" fill="rgb(221,136,13)" fg:x="8981" fg:w="25"/><text x="7.3678%" y="191.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (16 samples, 0.01%)</title><rect x="7.1249%" y="165" width="0.0127%" height="15" fill="rgb(249,199,10)" fg:x="8990" fg:w="16"/><text x="7.3749%" y="175.50"></text></g><g><title>Foundation`_NSKeyValueRetainedObservationInfoForObject (37 samples, 0.03%)</title><rect x="7.1130%" y="197" width="0.0293%" height="15" fill="rgb(249,222,13)" fg:x="8975" fg:w="37"/><text x="7.3630%" y="207.50"></text></g><g><title>Foundation`NSKeyValueWillChangeWithPerThreadPendingNotifications (77 samples, 0.06%)</title><rect x="7.0924%" y="213" width="0.0610%" height="15" fill="rgb(244,185,38)" fg:x="8949" fg:w="77"/><text x="7.3424%" y="223.50"></text></g><g><title>AppKit`-[NSApplication stop:] (175 samples, 0.14%)</title><rect x="7.0369%" y="229" width="0.1387%" height="15" fill="rgb(236,202,9)" fg:x="8879" fg:w="175"/><text x="7.2869%" y="239.50"></text></g><g><title>libobjc.A.dylib`object_getIndexedIvars (16 samples, 0.01%)</title><rect x="7.2723%" y="165" width="0.0127%" height="15" fill="rgb(250,229,37)" fg:x="9176" fg:w="16"/><text x="7.5223%" y="175.50"></text></g><g><title>AppKit`-[NSEvent window] (38 samples, 0.03%)</title><rect x="7.2573%" y="181" width="0.0301%" height="15" fill="rgb(206,174,23)" fg:x="9157" fg:w="38"/><text x="7.5073%" y="191.50"></text></g><g><title>SkyLight`CGSEventSourceForID (14 samples, 0.01%)</title><rect x="7.3310%" y="165" width="0.0111%" height="15" fill="rgb(211,33,43)" fg:x="9250" fg:w="14"/><text x="7.5810%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (14 samples, 0.01%)</title><rect x="7.3452%" y="165" width="0.0111%" height="15" fill="rgb(245,58,50)" fg:x="9268" fg:w="14"/><text x="7.5952%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.01%)</title><rect x="7.3452%" y="149" width="0.0111%" height="15" fill="rgb(244,68,36)" fg:x="9268" fg:w="14"/><text x="7.5952%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.01%)</title><rect x="7.3460%" y="133" width="0.0103%" height="15" fill="rgb(232,229,15)" fg:x="9269" fg:w="13"/><text x="7.5960%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.01%)</title><rect x="7.3460%" y="117" width="0.0103%" height="15" fill="rgb(254,30,23)" fg:x="9269" fg:w="13"/><text x="7.5960%" y="127.50"></text></g><g><title>SkyLight`SLEventCreate (74 samples, 0.06%)</title><rect x="7.2985%" y="181" width="0.0586%" height="15" fill="rgb(235,160,14)" fg:x="9209" fg:w="74"/><text x="7.5485%" y="191.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (25 samples, 0.02%)</title><rect x="7.3801%" y="133" width="0.0198%" height="15" fill="rgb(212,155,44)" fg:x="9312" fg:w="25"/><text x="7.6301%" y="143.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (27 samples, 0.02%)</title><rect x="7.3793%" y="149" width="0.0214%" height="15" fill="rgb(226,2,50)" fg:x="9311" fg:w="27"/><text x="7.6293%" y="159.50"></text></g><g><title>SkyLight`CGSEventAppendixCreate (31 samples, 0.02%)</title><rect x="7.3769%" y="165" width="0.0246%" height="15" fill="rgb(234,177,6)" fg:x="9308" fg:w="31"/><text x="7.6269%" y="175.50"></text></g><g><title>SkyLight`SLEventRecordSetIntegerValue(SLSEventRecord*, CGEventField, long long) (57 samples, 0.05%)</title><rect x="7.3571%" y="181" width="0.0452%" height="15" fill="rgb(217,24,9)" fg:x="9283" fg:w="57"/><text x="7.6071%" y="191.50"></text></g><g><title>SkyLight`SLSMainConnectionID (17 samples, 0.01%)</title><rect x="7.4150%" y="181" width="0.0135%" height="15" fill="rgb(220,13,46)" fg:x="9356" fg:w="17"/><text x="7.6650%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.01%)</title><rect x="7.4514%" y="133" width="0.0103%" height="15" fill="rgb(239,221,27)" fg:x="9402" fg:w="13"/><text x="7.7014%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.01%)</title><rect x="7.4514%" y="117" width="0.0103%" height="15" fill="rgb(222,198,25)" fg:x="9402" fg:w="13"/><text x="7.7014%" y="127.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (44 samples, 0.03%)</title><rect x="7.4316%" y="149" width="0.0349%" height="15" fill="rgb(211,99,13)" fg:x="9377" fg:w="44"/><text x="7.6816%" y="159.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (50 samples, 0.04%)</title><rect x="7.4316%" y="165" width="0.0396%" height="15" fill="rgb(232,111,31)" fg:x="9377" fg:w="50"/><text x="7.6816%" y="175.50"></text></g><g><title>SkyLight`_SLEventCreate(SLSEventRecord*) (54 samples, 0.04%)</title><rect x="7.4292%" y="181" width="0.0428%" height="15" fill="rgb(245,82,37)" fg:x="9374" fg:w="54"/><text x="7.6792%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (15 samples, 0.01%)</title><rect x="7.4760%" y="181" width="0.0119%" height="15" fill="rgb(227,149,46)" fg:x="9433" fg:w="15"/><text x="7.7260%" y="191.50"></text></g><g><title>AppKit`-[NSEvent CGEvent] (342 samples, 0.27%)</title><rect x="7.2200%" y="197" width="0.2710%" height="15" fill="rgb(218,36,50)" fg:x="9110" fg:w="342"/><text x="7.4700%" y="207.50"></text></g><g><title>AppKit`DYLD-STUB$$CGEventCreate (13 samples, 0.01%)</title><rect x="7.4911%" y="197" width="0.0103%" height="15" fill="rgb(226,80,48)" fg:x="9452" fg:w="13"/><text x="7.7411%" y="207.50"></text></g><g><title>HIToolbox`CreateEvent (24 samples, 0.02%)</title><rect x="7.5331%" y="181" width="0.0190%" height="15" fill="rgb(238,224,15)" fg:x="9505" fg:w="24"/><text x="7.7831%" y="191.50"></text></g><g><title>SkyLight`SLEventGetIntegerValueField (17 samples, 0.01%)</title><rect x="7.5568%" y="181" width="0.0135%" height="15" fill="rgb(241,136,10)" fg:x="9535" fg:w="17"/><text x="7.8068%" y="191.50"></text></g><g><title>HIToolbox`CreateEventWithCGEvent (80 samples, 0.06%)</title><rect x="7.5093%" y="197" width="0.0634%" height="15" fill="rgb(208,32,45)" fg:x="9475" fg:w="80"/><text x="7.7593%" y="207.50"></text></g><g><title>SkyLight`SLEventCreate (18 samples, 0.01%)</title><rect x="7.5759%" y="197" width="0.0143%" height="15" fill="rgb(207,135,9)" fg:x="9559" fg:w="18"/><text x="7.8259%" y="207.50"></text></g><g><title>AppKit`-[NSEvent _eventRefInternal] (565 samples, 0.45%)</title><rect x="7.2058%" y="213" width="0.4478%" height="15" fill="rgb(206,86,44)" fg:x="9092" fg:w="565"/><text x="7.4558%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (45 samples, 0.04%)</title><rect x="7.6179%" y="197" width="0.0357%" height="15" fill="rgb(245,177,15)" fg:x="9612" fg:w="45"/><text x="7.8679%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (123 samples, 0.10%)</title><rect x="7.6813%" y="197" width="0.0975%" height="15" fill="rgb(206,64,50)" fg:x="9692" fg:w="123"/><text x="7.9313%" y="207.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (139 samples, 0.11%)</title><rect x="7.6702%" y="213" width="0.1102%" height="15" fill="rgb(234,36,40)" fg:x="9678" fg:w="139"/><text x="7.9202%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (921 samples, 0.73%)</title><rect x="7.8501%" y="181" width="0.7299%" height="15" fill="rgb(213,64,8)" fg:x="9905" fg:w="921"/><text x="8.1001%" y="191.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (950 samples, 0.75%)</title><rect x="7.8342%" y="197" width="0.7529%" height="15" fill="rgb(210,75,36)" fg:x="9885" fg:w="950"/><text x="8.0842%" y="207.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (31 samples, 0.02%)</title><rect x="8.5982%" y="197" width="0.0246%" height="15" fill="rgb(229,88,21)" fg:x="10849" fg:w="31"/><text x="8.8482%" y="207.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (1,039 samples, 0.82%)</title><rect x="7.8176%" y="213" width="0.8234%" height="15" fill="rgb(252,204,47)" fg:x="9864" fg:w="1039"/><text x="8.0676%" y="223.50"></text></g><g><title>AppKit`-[NSEvent _postAtStart:] (1,854 samples, 1.47%)</title><rect x="7.1804%" y="229" width="1.4694%" height="15" fill="rgb(208,77,27)" fg:x="9060" fg:w="1854"/><text x="7.4304%" y="239.50"></text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (36 samples, 0.03%)</title><rect x="8.6926%" y="213" width="0.0285%" height="15" fill="rgb(221,76,26)" fg:x="10968" fg:w="36"/><text x="8.9426%" y="223.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_user_events (76 samples, 0.06%)</title><rect x="8.6616%" y="229" width="0.0602%" height="15" fill="rgb(225,139,18)" fg:x="10929" fg:w="76"/><text x="8.9116%" y="239.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (38 samples, 0.03%)</title><rect x="8.7504%" y="213" width="0.0301%" height="15" fill="rgb(230,137,11)" fg:x="11041" fg:w="38"/><text x="9.0004%" y="223.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (55 samples, 0.04%)</title><rect x="8.7401%" y="229" width="0.0436%" height="15" fill="rgb(212,28,1)" fg:x="11028" fg:w="55"/><text x="8.9901%" y="239.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApp (16 samples, 0.01%)</title><rect x="8.7932%" y="229" width="0.0127%" height="15" fill="rgb(248,164,17)" fg:x="11095" fg:w="16"/><text x="9.0432%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (22 samples, 0.02%)</title><rect x="8.8154%" y="181" width="0.0174%" height="15" fill="rgb(222,171,42)" fg:x="11123" fg:w="22"/><text x="9.0654%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (22 samples, 0.02%)</title><rect x="8.8154%" y="165" width="0.0174%" height="15" fill="rgb(243,84,45)" fg:x="11123" fg:w="22"/><text x="9.0654%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.02%)</title><rect x="8.8154%" y="149" width="0.0174%" height="15" fill="rgb(252,49,23)" fg:x="11123" fg:w="22"/><text x="9.0654%" y="159.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (26 samples, 0.02%)</title><rect x="8.8138%" y="197" width="0.0206%" height="15" fill="rgb(215,19,7)" fg:x="11121" fg:w="26"/><text x="9.0638%" y="207.50"></text></g><g><title>AppKit`+[NSEvent otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:] (44 samples, 0.03%)</title><rect x="8.8067%" y="213" width="0.0349%" height="15" fill="rgb(238,81,41)" fg:x="11112" fg:w="44"/><text x="9.0567%" y="223.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::event::NSEvent::dummy (64 samples, 0.05%)</title><rect x="8.8059%" y="229" width="0.0507%" height="15" fill="rgb(210,199,37)" fg:x="11111" fg:w="64"/><text x="9.0559%" y="239.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (17 samples, 0.01%)</title><rect x="8.8804%" y="229" width="0.0135%" height="15" fill="rgb(244,192,49)" fg:x="11205" fg:w="17"/><text x="9.1304%" y="239.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (20 samples, 0.02%)</title><rect x="8.9137%" y="165" width="0.0159%" height="15" fill="rgb(226,211,11)" fg:x="11247" fg:w="20"/><text x="9.1637%" y="175.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (18 samples, 0.01%)</title><rect x="8.9153%" y="149" width="0.0143%" height="15" fill="rgb(236,162,54)" fg:x="11249" fg:w="18"/><text x="9.1653%" y="159.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (22 samples, 0.02%)</title><rect x="8.9137%" y="181" width="0.0174%" height="15" fill="rgb(220,229,9)" fg:x="11247" fg:w="22"/><text x="9.1637%" y="191.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (43 samples, 0.03%)</title><rect x="8.9081%" y="197" width="0.0341%" height="15" fill="rgb(250,87,22)" fg:x="11240" fg:w="43"/><text x="9.1581%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (15 samples, 0.01%)</title><rect x="8.9509%" y="197" width="0.0119%" height="15" fill="rgb(239,43,17)" fg:x="11294" fg:w="15"/><text x="9.2009%" y="207.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (76 samples, 0.06%)</title><rect x="8.9065%" y="213" width="0.0602%" height="15" fill="rgb(231,177,25)" fg:x="11238" fg:w="76"/><text x="9.1565%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (108 samples, 0.09%)</title><rect x="8.8939%" y="229" width="0.0856%" height="15" fill="rgb(219,179,1)" fg:x="11222" fg:w="108"/><text x="9.1439%" y="239.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (68 samples, 0.05%)</title><rect x="8.9802%" y="229" width="0.0539%" height="15" fill="rgb(238,219,53)" fg:x="11331" fg:w="68"/><text x="9.2302%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (27 samples, 0.02%)</title><rect x="9.0381%" y="229" width="0.0214%" height="15" fill="rgb(232,167,36)" fg:x="11404" fg:w="27"/><text x="9.2881%" y="239.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::cleared (2,623 samples, 2.08%)</title><rect x="6.9838%" y="245" width="2.0788%" height="15" fill="rgb(244,19,51)" fg:x="8812" fg:w="2623"/><text x="7.2338%" y="255.50">A..</text></g><g><title>libobjc.A.dylib`objc_msgSend (16 samples, 0.01%)</title><rect x="9.0769%" y="245" width="0.0127%" height="15" fill="rgb(224,6,22)" fg:x="11453" fg:w="16"/><text x="9.3269%" y="255.50"></text></g><g><title>App`std::panicking::try (2,717 samples, 2.15%)</title><rect x="6.9537%" y="261" width="2.1533%" height="15" fill="rgb(224,145,5)" fg:x="8774" fg:w="2717"/><text x="7.2037%" y="271.50">A..</text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler (2,725 samples, 2.16%)</title><rect x="6.9513%" y="277" width="2.1597%" height="15" fill="rgb(234,130,49)" fg:x="8771" fg:w="2725"/><text x="7.2013%" y="287.50">A..</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (4,425 samples, 3.51%)</title><rect x="5.6238%" y="293" width="3.5070%" height="15" fill="rgb(254,6,2)" fg:x="7096" fg:w="4425"/><text x="5.8738%" y="303.50">Cor..</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (4,663 samples, 3.70%)</title><rect x="5.4828%" y="309" width="3.6956%" height="15" fill="rgb(208,96,46)" fg:x="6918" fg:w="4663"/><text x="5.7328%" y="319.50">Core..</text></g><g><title>CoreFoundation`CFSetApplyFunction (62 samples, 0.05%)</title><rect x="9.1839%" y="293" width="0.0491%" height="15" fill="rgb(239,3,39)" fg:x="11588" fg:w="62"/><text x="9.4339%" y="303.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (55 samples, 0.04%)</title><rect x="9.1895%" y="277" width="0.0436%" height="15" fill="rgb(233,210,1)" fg:x="11595" fg:w="55"/><text x="9.4395%" y="287.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (38 samples, 0.03%)</title><rect x="9.2029%" y="261" width="0.0301%" height="15" fill="rgb(244,137,37)" fg:x="11612" fg:w="38"/><text x="9.4529%" y="271.50"></text></g><g><title>CoreFoundation`__CFRunLoopCollectSources0 (38 samples, 0.03%)</title><rect x="9.2029%" y="245" width="0.0301%" height="15" fill="rgb(240,136,2)" fg:x="11612" fg:w="38"/><text x="9.4529%" y="255.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSources0 (84 samples, 0.07%)</title><rect x="9.1800%" y="309" width="0.0666%" height="15" fill="rgb(239,18,37)" fg:x="11583" fg:w="84"/><text x="9.4300%" y="319.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (22 samples, 0.02%)</title><rect x="9.2553%" y="293" width="0.0174%" height="15" fill="rgb(218,185,22)" fg:x="11678" fg:w="22"/><text x="9.5053%" y="303.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (24 samples, 0.02%)</title><rect x="9.2727%" y="293" width="0.0190%" height="15" fill="rgb(225,218,4)" fg:x="11700" fg:w="24"/><text x="9.5227%" y="303.50"></text></g><g><title>CoreFoundation`CFRetain (16 samples, 0.01%)</title><rect x="9.7894%" y="277" width="0.0127%" height="15" fill="rgb(230,182,32)" fg:x="12352" fg:w="16"/><text x="10.0394%" y="287.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (13 samples, 0.01%)</title><rect x="9.8132%" y="277" width="0.0103%" height="15" fill="rgb(242,56,43)" fg:x="12382" fg:w="13"/><text x="10.0632%" y="287.50"></text></g><g><title>CoreFoundation`CFArrayGetFirstIndexOfValue (16 samples, 0.01%)</title><rect x="9.8243%" y="261" width="0.0127%" height="15" fill="rgb(233,99,24)" fg:x="12396" fg:w="16"/><text x="10.0743%" y="271.50"></text></g><g><title>CoreFoundation`__CFArrayReleaseValues (19 samples, 0.02%)</title><rect x="9.8639%" y="245" width="0.0151%" height="15" fill="rgb(234,209,42)" fg:x="12446" fg:w="19"/><text x="10.1139%" y="255.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (49 samples, 0.04%)</title><rect x="9.8473%" y="261" width="0.0388%" height="15" fill="rgb(227,7,12)" fg:x="12425" fg:w="49"/><text x="10.0973%" y="271.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (15 samples, 0.01%)</title><rect x="9.8885%" y="261" width="0.0119%" height="15" fill="rgb(245,203,43)" fg:x="12477" fg:w="15"/><text x="10.1385%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (264 samples, 0.21%)</title><rect x="9.9115%" y="261" width="0.2092%" height="15" fill="rgb(238,205,33)" fg:x="12506" fg:w="264"/><text x="10.1615%" y="271.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (379 samples, 0.30%)</title><rect x="9.8235%" y="277" width="0.3004%" height="15" fill="rgb(231,56,7)" fg:x="12395" fg:w="379"/><text x="10.0735%" y="287.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (33 samples, 0.03%)</title><rect x="10.1318%" y="245" width="0.0262%" height="15" fill="rgb(244,186,29)" fg:x="12784" fg:w="33"/><text x="10.3818%" y="255.50"></text></g><g><title>CoreFoundation`CFSetGetValue (50 samples, 0.04%)</title><rect x="10.1302%" y="261" width="0.0396%" height="15" fill="rgb(234,111,31)" fg:x="12782" fg:w="50"/><text x="10.3802%" y="271.50"></text></g><g><title>CoreFoundation`__CFStringHash (13 samples, 0.01%)</title><rect x="10.1595%" y="245" width="0.0103%" height="15" fill="rgb(241,149,10)" fg:x="12819" fg:w="13"/><text x="10.4095%" y="255.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (68 samples, 0.05%)</title><rect x="10.1239%" y="277" width="0.0539%" height="15" fill="rgb(249,206,44)" fg:x="12774" fg:w="68"/><text x="10.3739%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (92 samples, 0.07%)</title><rect x="10.2031%" y="277" width="0.0729%" height="15" fill="rgb(251,153,30)" fg:x="12874" fg:w="92"/><text x="10.4531%" y="287.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (1,223 samples, 0.97%)</title><rect x="9.3290%" y="293" width="0.9693%" height="15" fill="rgb(239,152,38)" fg:x="11771" fg:w="1223"/><text x="9.5790%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (18 samples, 0.01%)</title><rect x="10.3046%" y="245" width="0.0143%" height="15" fill="rgb(249,139,47)" fg:x="13002" fg:w="18"/><text x="10.5546%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (16 samples, 0.01%)</title><rect x="10.3062%" y="229" width="0.0127%" height="15" fill="rgb(244,64,35)" fg:x="13004" fg:w="16"/><text x="10.5562%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (16 samples, 0.01%)</title><rect x="10.3062%" y="213" width="0.0127%" height="15" fill="rgb(216,46,15)" fg:x="13004" fg:w="16"/><text x="10.5562%" y="223.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (19 samples, 0.02%)</title><rect x="10.3046%" y="261" width="0.0151%" height="15" fill="rgb(250,74,19)" fg:x="13002" fg:w="19"/><text x="10.5546%" y="271.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (21 samples, 0.02%)</title><rect x="10.3046%" y="277" width="0.0166%" height="15" fill="rgb(249,42,33)" fg:x="13002" fg:w="21"/><text x="10.5546%" y="287.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (26 samples, 0.02%)</title><rect x="10.3022%" y="293" width="0.0206%" height="15" fill="rgb(242,149,17)" fg:x="12999" fg:w="26"/><text x="10.5522%" y="303.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (1,402 samples, 1.11%)</title><rect x="9.2465%" y="309" width="1.1111%" height="15" fill="rgb(244,29,21)" fg:x="11667" fg:w="1402"/><text x="9.4965%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (320 samples, 0.25%)</title><rect x="10.3624%" y="309" width="0.2536%" height="15" fill="rgb(220,130,37)" fg:x="13075" fg:w="320"/><text x="10.6124%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (307 samples, 0.24%)</title><rect x="10.3727%" y="293" width="0.2433%" height="15" fill="rgb(211,67,2)" fg:x="13088" fg:w="307"/><text x="10.6227%" y="303.50"></text></g><g><title>libdispatch.dylib`_dispatch_runloop_root_queue_get_port_4CF (17 samples, 0.01%)</title><rect x="10.6248%" y="309" width="0.0135%" height="15" fill="rgb(235,68,52)" fg:x="13406" fg:w="17"/><text x="10.8748%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (55 samples, 0.04%)</title><rect x="10.6430%" y="309" width="0.0436%" height="15" fill="rgb(246,142,3)" fg:x="13429" fg:w="55"/><text x="10.8930%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_extract_member_trap (65 samples, 0.05%)</title><rect x="10.7016%" y="309" width="0.0515%" height="15" fill="rgb(241,25,7)" fg:x="13503" fg:w="65"/><text x="10.9516%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (757 samples, 0.60%)</title><rect x="10.7531%" y="309" width="0.6000%" height="15" fill="rgb(242,119,39)" fg:x="13568" fg:w="757"/><text x="11.0031%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`voucher_mach_msg_revert (22 samples, 0.02%)</title><rect x="11.3697%" y="309" width="0.0174%" height="15" fill="rgb(241,98,45)" fg:x="14346" fg:w="22"/><text x="11.6197%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (7,639 samples, 6.05%)</title><rect x="5.3473%" y="325" width="6.0542%" height="15" fill="rgb(254,28,30)" fg:x="6747" fg:w="7639"/><text x="5.5973%" y="335.50">CoreFoun..</text></g><g><title>CoreFoundation`__CFStringEqual (13 samples, 0.01%)</title><rect x="11.4014%" y="325" width="0.0103%" height="15" fill="rgb(241,142,54)" fg:x="14386" fg:w="13"/><text x="11.6514%" y="335.50"></text></g><g><title>libdispatch.dylib`_dispatch_get_main_queue_port_4CF (20 samples, 0.02%)</title><rect x="11.4125%" y="325" width="0.0159%" height="15" fill="rgb(222,85,15)" fg:x="14400" fg:w="20"/><text x="11.6625%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (37 samples, 0.03%)</title><rect x="11.4522%" y="325" width="0.0293%" height="15" fill="rgb(210,85,47)" fg:x="14450" fg:w="37"/><text x="11.7022%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (35 samples, 0.03%)</title><rect x="11.4538%" y="309" width="0.0277%" height="15" fill="rgb(224,206,25)" fg:x="14452" fg:w="35"/><text x="11.7038%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (35 samples, 0.03%)</title><rect x="11.4538%" y="293" width="0.0277%" height="15" fill="rgb(243,201,19)" fg:x="14452" fg:w="35"/><text x="11.7038%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (20 samples, 0.02%)</title><rect x="11.4656%" y="277" width="0.0159%" height="15" fill="rgb(236,59,4)" fg:x="14467" fg:w="20"/><text x="11.7156%" y="287.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (10,504 samples, 8.32%)</title><rect x="3.1963%" y="341" width="8.3248%" height="15" fill="rgb(254,179,45)" fg:x="4033" fg:w="10504"/><text x="3.4463%" y="351.50">CoreFoundati..</text></g><g><title>CoreFoundation`CFStringCompareWithOptionsAndLocale (65 samples, 0.05%)</title><rect x="11.5219%" y="341" width="0.0515%" height="15" fill="rgb(226,14,10)" fg:x="14538" fg:w="65"/><text x="11.7719%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (26 samples, 0.02%)</title><rect x="11.5528%" y="325" width="0.0206%" height="15" fill="rgb(244,27,41)" fg:x="14577" fg:w="26"/><text x="11.8028%" y="335.50"></text></g><g><title>CoreFoundation`CFStringGetLength (30 samples, 0.02%)</title><rect x="11.5734%" y="341" width="0.0238%" height="15" fill="rgb(235,35,32)" fg:x="14603" fg:w="30"/><text x="11.8234%" y="351.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (25 samples, 0.02%)</title><rect x="11.6868%" y="309" width="0.0198%" height="15" fill="rgb(218,68,31)" fg:x="14746" fg:w="25"/><text x="11.9368%" y="319.50"></text></g><g><title>HIToolbox`PingEventQueueMachPort (14 samples, 0.01%)</title><rect x="11.7177%" y="293" width="0.0111%" height="15" fill="rgb(207,120,37)" fg:x="14785" fg:w="14"/><text x="11.9677%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (14 samples, 0.01%)</title><rect x="11.7177%" y="277" width="0.0111%" height="15" fill="rgb(227,98,0)" fg:x="14785" fg:w="14"/><text x="11.9677%" y="287.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (39 samples, 0.03%)</title><rect x="11.7066%" y="309" width="0.0309%" height="15" fill="rgb(207,7,3)" fg:x="14771" fg:w="39"/><text x="11.9566%" y="319.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (82 samples, 0.06%)</title><rect x="11.6788%" y="325" width="0.0650%" height="15" fill="rgb(206,98,19)" fg:x="14736" fg:w="82"/><text x="11.9288%" y="335.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (151 samples, 0.12%)</title><rect x="11.6337%" y="341" width="0.1197%" height="15" fill="rgb(217,5,26)" fg:x="14679" fg:w="151"/><text x="11.8837%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (13 samples, 0.01%)</title><rect x="11.7755%" y="341" width="0.0103%" height="15" fill="rgb(235,190,38)" fg:x="14858" fg:w="13"/><text x="12.0255%" y="351.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (10,917 samples, 8.65%)</title><rect x="3.1408%" y="357" width="8.6521%" height="15" fill="rgb(247,86,24)" fg:x="3963" fg:w="10917"/><text x="3.3908%" y="367.50">HIToolbox`Ru..</text></g><g><title>HIToolbox`_DropPendingBoost (15 samples, 0.01%)</title><rect x="11.8025%" y="357" width="0.0119%" height="15" fill="rgb(205,101,16)" fg:x="14892" fg:w="15"/><text x="12.0525%" y="367.50"></text></g><g><title>HIToolbox`_EventThreadLock (14 samples, 0.01%)</title><rect x="11.8151%" y="357" width="0.0111%" height="15" fill="rgb(246,168,33)" fg:x="14908" fg:w="14"/><text x="12.0651%" y="367.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (14 samples, 0.01%)</title><rect x="11.8270%" y="357" width="0.0111%" height="15" fill="rgb(231,114,1)" fg:x="14923" fg:w="14"/><text x="12.0770%" y="367.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (11,335 samples, 8.98%)</title><rect x="2.8864%" y="373" width="8.9834%" height="15" fill="rgb(207,184,53)" fg:x="3642" fg:w="11335"/><text x="3.1364%" y="383.50">HIToolbox`Rec..</text></g><g><title>libsystem_pthread.dylib`pthread_self (20 samples, 0.02%)</title><rect x="11.8540%" y="357" width="0.0159%" height="15" fill="rgb(224,95,51)" fg:x="14957" fg:w="20"/><text x="12.1040%" y="367.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (11,383 samples, 9.02%)</title><rect x="2.8571%" y="389" width="9.0215%" height="15" fill="rgb(212,188,45)" fg:x="3605" fg:w="11383"/><text x="3.1071%" y="399.50">HIToolbox`_Bl..</text></g><g><title>AppKit`_DPSNextEvent (11,494 samples, 9.11%)</title><rect x="2.7771%" y="405" width="9.1094%" height="15" fill="rgb(223,154,38)" fg:x="3504" fg:w="11494"/><text x="3.0271%" y="415.50">AppKit`_DPSNe..</text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (15 samples, 0.01%)</title><rect x="12.0157%" y="389" width="0.0119%" height="15" fill="rgb(251,22,52)" fg:x="15161" fg:w="15"/><text x="12.2657%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (13 samples, 0.01%)</title><rect x="12.0172%" y="373" width="0.0103%" height="15" fill="rgb(229,209,22)" fg:x="15163" fg:w="13"/><text x="12.2672%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.01%)</title><rect x="12.0172%" y="357" width="0.0103%" height="15" fill="rgb(234,138,34)" fg:x="15163" fg:w="13"/><text x="12.2672%" y="367.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (18 samples, 0.01%)</title><rect x="12.0141%" y="405" width="0.0143%" height="15" fill="rgb(212,95,11)" fg:x="15159" fg:w="18"/><text x="12.2641%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (19 samples, 0.02%)</title><rect x="12.0339%" y="405" width="0.0151%" height="15" fill="rgb(240,179,47)" fg:x="15184" fg:w="19"/><text x="12.2839%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (102 samples, 0.08%)</title><rect x="12.0497%" y="405" width="0.0808%" height="15" fill="rgb(240,163,11)" fg:x="15204" fg:w="102"/><text x="12.2997%" y="415.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (13,597 samples, 10.78%)</title><rect x="1.3814%" y="421" width="10.7761%" height="15" fill="rgb(236,37,12)" fg:x="1743" fg:w="13597"/><text x="1.6314%" y="431.50">AppKit`-[NSAppli..</text></g><g><title>Foundation` (23 samples, 0.02%)</title><rect x="12.1884%" y="421" width="0.0182%" height="15" fill="rgb(232,164,16)" fg:x="15379" fg:w="23"/><text x="12.4384%" y="431.50"></text></g><g><title>Foundation`-[NSAutoreleasePool drain] (18 samples, 0.01%)</title><rect x="12.2114%" y="421" width="0.0143%" height="15" fill="rgb(244,205,15)" fg:x="15408" fg:w="18"/><text x="12.4614%" y="431.50"></text></g><g><title>Foundation`NSKVOCopyPendingNotificationStack (22 samples, 0.02%)</title><rect x="12.2518%" y="405" width="0.0174%" height="15" fill="rgb(223,117,47)" fg:x="15459" fg:w="22"/><text x="12.5018%" y="415.50"></text></g><g><title>Foundation`NSKVOPendingPerThreadNotificationStack (15 samples, 0.01%)</title><rect x="12.2574%" y="389" width="0.0119%" height="15" fill="rgb(244,107,35)" fg:x="15466" fg:w="15"/><text x="12.5074%" y="399.50"></text></g><g><title>Foundation`NSKeyValueDidChangeWithPerThreadPendingNotifications (39 samples, 0.03%)</title><rect x="12.2415%" y="421" width="0.0309%" height="15" fill="rgb(205,140,8)" fg:x="15446" fg:w="39"/><text x="12.4915%" y="431.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (20 samples, 0.02%)</title><rect x="12.2946%" y="389" width="0.0159%" height="15" fill="rgb(228,84,46)" fg:x="15513" fg:w="20"/><text x="12.5446%" y="399.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (14 samples, 0.01%)</title><rect x="12.2994%" y="373" width="0.0111%" height="15" fill="rgb(254,188,9)" fg:x="15519" fg:w="14"/><text x="12.5494%" y="383.50"></text></g><g><title>Foundation`_NSKeyValueRetainedObservationInfoForObject (36 samples, 0.03%)</title><rect x="12.2899%" y="405" width="0.0285%" height="15" fill="rgb(206,112,54)" fg:x="15507" fg:w="36"/><text x="12.5399%" y="415.50"></text></g><g><title>Foundation`NSKeyValueWillChangeWithPerThreadPendingNotifications (74 samples, 0.06%)</title><rect x="12.2724%" y="421" width="0.0586%" height="15" fill="rgb(216,84,49)" fg:x="15485" fg:w="74"/><text x="12.5224%" y="431.50"></text></g><g><title>HIToolbox`_HIEnableSuddenTerminationIfRequestedByPlist (13 samples, 0.01%)</title><rect x="12.3446%" y="421" width="0.0103%" height="15" fill="rgb(214,194,35)" fg:x="15576" fg:w="13"/><text x="12.5946%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (115 samples, 0.09%)</title><rect x="12.3731%" y="421" width="0.0911%" height="15" fill="rgb(249,28,3)" fg:x="15612" fg:w="115"/><text x="12.6231%" y="431.50"></text></g><g><title>Foundation`+[NSAutoreleasePool allocWithZone:] (14 samples, 0.01%)</title><rect x="12.4714%" y="405" width="0.0111%" height="15" fill="rgb(222,56,52)" fg:x="15736" fg:w="14"/><text x="12.7214%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_opt_new (28 samples, 0.02%)</title><rect x="12.4642%" y="421" width="0.0222%" height="15" fill="rgb(245,217,50)" fg:x="15727" fg:w="28"/><text x="12.7142%" y="431.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_recursive_lock_lock_with_options (18 samples, 0.01%)</title><rect x="12.5023%" y="421" width="0.0143%" height="15" fill="rgb(213,201,24)" fg:x="15775" fg:w="18"/><text x="12.7523%" y="431.50"></text></g><g><title>AppKit`-[NSApplication run] (14,894 samples, 11.80%)</title><rect x="0.7188%" y="437" width="11.8041%" height="15" fill="rgb(248,116,28)" fg:x="907" fg:w="14894"/><text x="0.9688%" y="447.50">AppKit`-[NSApplica..</text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (22 samples, 0.02%)</title><rect x="12.5704%" y="405" width="0.0174%" height="15" fill="rgb(219,72,43)" fg:x="15861" fg:w="22"/><text x="12.8204%" y="415.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (34 samples, 0.03%)</title><rect x="12.5673%" y="421" width="0.0269%" height="15" fill="rgb(209,138,14)" fg:x="15857" fg:w="34"/><text x="12.8173%" y="431.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::exit (60 samples, 0.05%)</title><rect x="12.5514%" y="437" width="0.0476%" height="15" fill="rgb(222,18,33)" fg:x="15837" fg:w="60"/><text x="12.8014%" y="447.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::set_callback (24 samples, 0.02%)</title><rect x="12.5990%" y="437" width="0.0190%" height="15" fill="rgb(213,199,7)" fg:x="15897" fg:w="24"/><text x="12.8490%" y="447.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (13 samples, 0.01%)</title><rect x="12.6235%" y="421" width="0.0103%" height="15" fill="rgb(250,110,10)" fg:x="15928" fg:w="13"/><text x="12.8735%" y="431.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApp (24 samples, 0.02%)</title><rect x="12.6196%" y="437" width="0.0190%" height="15" fill="rgb(248,123,6)" fg:x="15923" fg:w="24"/><text x="12.8696%" y="447.50"></text></g><g><title>Foundation`NSPushAutoreleasePool (17 samples, 0.01%)</title><rect x="12.6917%" y="437" width="0.0135%" height="15" fill="rgb(206,91,31)" fg:x="16014" fg:w="17"/><text x="12.9417%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (123 samples, 0.10%)</title><rect x="12.7202%" y="437" width="0.0975%" height="15" fill="rgb(211,154,13)" fg:x="16050" fg:w="123"/><text x="12.9702%" y="447.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return (15,333 samples, 12.15%)</title><rect x="0.6887%" y="453" width="12.1520%" height="15" fill="rgb(225,148,7)" fg:x="869" fg:w="15333"/><text x="0.9387%" y="463.50">App`winit::platfor..</text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::send (25 samples, 0.02%)</title><rect x="12.8447%" y="437" width="0.0198%" height="15" fill="rgb(220,160,43)" fg:x="16207" fg:w="25"/><text x="13.0947%" y="447.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoopProxy&lt;T&gt;::send_event (63 samples, 0.05%)</title><rect x="12.8407%" y="453" width="0.0499%" height="15" fill="rgb(213,52,39)" fg:x="16202" fg:w="63"/><text x="13.0907%" y="463.50"></text></g><g><title>CoreFoundation`__CFRunLoopSourceDeallocate (15 samples, 0.01%)</title><rect x="12.9247%" y="437" width="0.0119%" height="15" fill="rgb(243,137,7)" fg:x="16308" fg:w="15"/><text x="13.1747%" y="447.50"></text></g><g><title>CoreFoundation`_CFRelease (34 samples, 0.03%)</title><rect x="12.9152%" y="453" width="0.0269%" height="15" fill="rgb(230,79,13)" fg:x="16296" fg:w="34"/><text x="13.1652%" y="463.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events (16,130 samples, 12.78%)</title><rect x="0.1744%" y="469" width="12.7836%" height="15" fill="rgb(247,105,23)" fg:x="220" fg:w="16130"/><text x="0.4244%" y="479.50">App`glutin_window::..</text></g><g><title>App`glutin_window::GlutinWindow::poll_event (16,197 samples, 12.84%)</title><rect x="0.1316%" y="485" width="12.8367%" height="15" fill="rgb(223,179,41)" fg:x="166" fg:w="16197"/><text x="0.3816%" y="495.50">App`glutin_window::..</text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::Window&gt;::poll_event (16,206 samples, 12.84%)</title><rect x="0.1268%" y="501" width="12.8439%" height="15" fill="rgb(218,9,34)" fg:x="160" fg:w="16206"/><text x="0.3768%" y="511.50">App`&lt;glutin_window:..</text></g><g><title>CoreFoundation`__CFNumberHash (14 samples, 0.01%)</title><rect x="13.0095%" y="357" width="0.0111%" height="15" fill="rgb(222,106,8)" fg:x="16415" fg:w="14"/><text x="13.2595%" y="367.50"></text></g><g><title>Foundation`probeGC (16 samples, 0.01%)</title><rect x="13.0095%" y="373" width="0.0127%" height="15" fill="rgb(211,220,0)" fg:x="16415" fg:w="16"/><text x="13.2595%" y="383.50"></text></g><g><title>AppKit`+[NSCGLSurface surfaceWithID:] (25 samples, 0.02%)</title><rect x="13.0047%" y="405" width="0.0198%" height="15" fill="rgb(229,52,16)" fg:x="16409" fg:w="25"/><text x="13.2547%" y="415.50"></text></g><g><title>Foundation`-[NSConcreteMapTable objectForKey:] (21 samples, 0.02%)</title><rect x="13.0079%" y="389" width="0.0166%" height="15" fill="rgb(212,155,18)" fg:x="16413" fg:w="21"/><text x="13.2579%" y="399.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreateDataBuffer (18 samples, 0.01%)</title><rect x="13.0872%" y="309" width="0.0143%" height="15" fill="rgb(242,21,14)" fg:x="16513" fg:w="18"/><text x="13.3372%" y="319.50"></text></g><g><title>IOAccelerator`_IOAccelResourceAlloc (16 samples, 0.01%)</title><rect x="13.0888%" y="293" width="0.0127%" height="15" fill="rgb(222,19,48)" fg:x="16515" fg:w="16"/><text x="13.3388%" y="303.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (13 samples, 0.01%)</title><rect x="13.0911%" y="277" width="0.0103%" height="15" fill="rgb(232,45,27)" fg:x="16518" fg:w="13"/><text x="13.3411%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (472 samples, 0.37%)</title><rect x="13.1070%" y="261" width="0.3741%" height="15" fill="rgb(249,103,42)" fg:x="16538" fg:w="472"/><text x="13.3570%" y="271.50"></text></g><g><title>IOKit`io_connect_method (477 samples, 0.38%)</title><rect x="13.1038%" y="277" width="0.3780%" height="15" fill="rgb(246,81,33)" fg:x="16534" fg:w="477"/><text x="13.3538%" y="287.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (479 samples, 0.38%)</title><rect x="13.1030%" y="309" width="0.3796%" height="15" fill="rgb(252,33,42)" fg:x="16533" fg:w="479"/><text x="13.3530%" y="319.50"></text></g><g><title>IOKit`IOConnectCallMethod (478 samples, 0.38%)</title><rect x="13.1038%" y="293" width="0.3788%" height="15" fill="rgb(209,212,41)" fg:x="16534" fg:w="478"/><text x="13.3538%" y="303.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (522 samples, 0.41%)</title><rect x="13.0737%" y="325" width="0.4137%" height="15" fill="rgb(207,154,6)" fg:x="16496" fg:w="522"/><text x="13.3237%" y="335.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (532 samples, 0.42%)</title><rect x="13.0682%" y="341" width="0.4216%" height="15" fill="rgb(223,64,47)" fg:x="16489" fg:w="532"/><text x="13.3182%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelCommandBuffer::getNew (541 samples, 0.43%)</title><rect x="13.0658%" y="357" width="0.4288%" height="15" fill="rgb(211,161,38)" fg:x="16486" fg:w="541"/><text x="13.3158%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`intelSubmitCommands (546 samples, 0.43%)</title><rect x="13.0634%" y="373" width="0.4327%" height="15" fill="rgb(219,138,40)" fg:x="16483" fg:w="546"/><text x="13.3134%" y="383.50"></text></g><g><title>GLEngine`gleBeginPrimitiveTCLFunc (61 samples, 0.05%)</title><rect x="13.5326%" y="357" width="0.0483%" height="15" fill="rgb(241,228,46)" fg:x="17075" fg:w="61"/><text x="13.7826%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrIntelBeginPrimitiveBuffer (60 samples, 0.05%)</title><rect x="13.5334%" y="341" width="0.0476%" height="15" fill="rgb(223,209,38)" fg:x="17076" fg:w="60"/><text x="13.7834%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramPipeline (59 samples, 0.05%)</title><rect x="13.5342%" y="325" width="0.0468%" height="15" fill="rgb(236,164,45)" fg:x="17077" fg:w="59"/><text x="13.7842%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (29 samples, 0.02%)</title><rect x="13.5881%" y="341" width="0.0230%" height="15" fill="rgb(231,15,5)" fg:x="17145" fg:w="29"/><text x="13.8381%" y="351.50"></text></g><g><title>GLEngine`gleUpdateDeferredStateFull (30 samples, 0.02%)</title><rect x="13.6126%" y="341" width="0.0238%" height="15" fill="rgb(252,35,15)" fg:x="17176" fg:w="30"/><text x="13.8626%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrBindContextDrawFramebuffer (17 samples, 0.01%)</title><rect x="13.6546%" y="309" width="0.0135%" height="15" fill="rgb(248,181,18)" fg:x="17229" fg:w="17"/><text x="13.9046%" y="319.50"></text></g><g><title>GLEngine`gleUpdateDrawFramebufferState (47 samples, 0.04%)</title><rect x="13.6364%" y="341" width="0.0372%" height="15" fill="rgb(233,39,42)" fg:x="17206" fg:w="47"/><text x="13.8864%" y="351.50"></text></g><g><title>libGPUSupportMercury.dylib`gldUpdateDrawFramebuffer (27 samples, 0.02%)</title><rect x="13.6523%" y="325" width="0.0214%" height="15" fill="rgb(238,110,33)" fg:x="17226" fg:w="27"/><text x="13.9023%" y="335.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCore (126 samples, 0.10%)</title><rect x="13.5809%" y="357" width="0.0999%" height="15" fill="rgb(233,195,10)" fg:x="17136" fg:w="126"/><text x="13.8309%" y="367.50"></text></g><g><title>GLEngine`glDrawArrays_IMM_Exec (201 samples, 0.16%)</title><rect x="13.5247%" y="373" width="0.1593%" height="15" fill="rgb(254,105,3)" fg:x="17065" fg:w="201"/><text x="13.7747%" y="383.50"></text></g><g><title>IOKit`io_connect_method (78 samples, 0.06%)</title><rect x="13.7180%" y="293" width="0.0618%" height="15" fill="rgb(221,225,9)" fg:x="17309" fg:w="78"/><text x="13.9680%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (77 samples, 0.06%)</title><rect x="13.7188%" y="277" width="0.0610%" height="15" fill="rgb(224,227,45)" fg:x="17310" fg:w="77"/><text x="13.9688%" y="287.50"></text></g><g><title>OpenGL`GLCGetParameter (100 samples, 0.08%)</title><rect x="13.7030%" y="357" width="0.0793%" height="15" fill="rgb(229,198,43)" fg:x="17290" fg:w="100"/><text x="13.9530%" y="367.50"></text></g><g><title>libGPUSupportMercury.dylib`gldGetInteger (98 samples, 0.08%)</title><rect x="13.7046%" y="341" width="0.0777%" height="15" fill="rgb(206,209,35)" fg:x="17292" fg:w="98"/><text x="13.9546%" y="351.50"></text></g><g><title>IOAccelerator`IOAccelDeviceGetSurfaceInfo (90 samples, 0.07%)</title><rect x="13.7109%" y="325" width="0.0713%" height="15" fill="rgb(245,195,53)" fg:x="17300" fg:w="90"/><text x="13.9609%" y="335.50"></text></g><g><title>IOKit`IOConnectCallMethod (84 samples, 0.07%)</title><rect x="13.7157%" y="309" width="0.0666%" height="15" fill="rgb(240,92,26)" fg:x="17306" fg:w="84"/><text x="13.9657%" y="319.50"></text></g><g><title>OpenGL`CGLGetParameter (103 samples, 0.08%)</title><rect x="13.7014%" y="373" width="0.0816%" height="15" fill="rgb(207,40,23)" fg:x="17288" fg:w="103"/><text x="13.9514%" y="383.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (964 samples, 0.76%)</title><rect x="13.0388%" y="389" width="0.7640%" height="15" fill="rgb(223,111,35)" fg:x="16452" fg:w="964"/><text x="13.2888%" y="399.50"></text></g><g><title>AppKit`is_surface_opaque (98 samples, 0.08%)</title><rect x="13.8092%" y="389" width="0.0777%" height="15" fill="rgb(229,147,28)" fg:x="17424" fg:w="98"/><text x="14.0592%" y="399.50"></text></g><g><title>SkyLight`SLSGetSurfaceOpacity (95 samples, 0.08%)</title><rect x="13.8116%" y="373" width="0.0753%" height="15" fill="rgb(211,29,28)" fg:x="17427" fg:w="95"/><text x="14.0616%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (86 samples, 0.07%)</title><rect x="13.8187%" y="357" width="0.0682%" height="15" fill="rgb(228,72,33)" fg:x="17436" fg:w="86"/><text x="14.0687%" y="367.50"></text></g><g><title>Foundation`hashProbe (21 samples, 0.02%)</title><rect x="13.8956%" y="373" width="0.0166%" height="15" fill="rgb(205,214,31)" fg:x="17533" fg:w="21"/><text x="14.1456%" y="383.50"></text></g><g><title>Foundation`-[NSConcreteHashTable addObject:] (31 samples, 0.02%)</title><rect x="13.8924%" y="389" width="0.0246%" height="15" fill="rgb(224,111,15)" fg:x="17529" fg:w="31"/><text x="14.1424%" y="399.50"></text></g><g><title>IOKit`io_registry_entry_get_registry_entry_id (37 samples, 0.03%)</title><rect x="13.9225%" y="373" width="0.0293%" height="15" fill="rgb(253,21,26)" fg:x="17567" fg:w="37"/><text x="14.1725%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (37 samples, 0.03%)</title><rect x="13.9225%" y="357" width="0.0293%" height="15" fill="rgb(245,139,43)" fg:x="17567" fg:w="37"/><text x="14.1725%" y="367.50"></text></g><g><title>IOKit`IORegistryEntryGetRegistryEntryID (38 samples, 0.03%)</title><rect x="13.9225%" y="389" width="0.0301%" height="15" fill="rgb(252,170,7)" fg:x="17567" fg:w="38"/><text x="14.1725%" y="399.50"></text></g><g><title>IOSurface`IOSurfaceClientDecrementUseCount (87 samples, 0.07%)</title><rect x="13.9661%" y="357" width="0.0690%" height="15" fill="rgb(231,118,14)" fg:x="17622" fg:w="87"/><text x="14.2161%" y="367.50"></text></g><g><title>IOKit`IOConnectCallMethod (86 samples, 0.07%)</title><rect x="13.9669%" y="341" width="0.0682%" height="15" fill="rgb(238,83,0)" fg:x="17623" fg:w="86"/><text x="14.2169%" y="351.50"></text></g><g><title>IOKit`io_connect_method (84 samples, 0.07%)</title><rect x="13.9685%" y="325" width="0.0666%" height="15" fill="rgb(221,39,39)" fg:x="17625" fg:w="84"/><text x="14.2185%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (82 samples, 0.06%)</title><rect x="13.9701%" y="309" width="0.0650%" height="15" fill="rgb(222,119,46)" fg:x="17627" fg:w="82"/><text x="14.2201%" y="319.50"></text></g><g><title>QuartzCore`release_image(_CAImageQueue*, unsigned long, CAImageQueueReleased*, bool) (104 samples, 0.08%)</title><rect x="13.9613%" y="373" width="0.0824%" height="15" fill="rgb(222,165,49)" fg:x="17616" fg:w="104"/><text x="14.2113%" y="383.50"></text></g><g><title>AppKit`__26-[NSCGLSurface flushRect:]_block_invoke (20 samples, 0.02%)</title><rect x="14.0509%" y="341" width="0.0159%" height="15" fill="rgb(219,113,52)" fg:x="17729" fg:w="20"/><text x="14.3009%" y="351.50"></text></g><g><title>AppKit`invoke_and_release_block (31 samples, 0.02%)</title><rect x="14.0501%" y="357" width="0.0246%" height="15" fill="rgb(214,7,15)" fg:x="17728" fg:w="31"/><text x="14.3001%" y="367.50"></text></g><g><title>QuartzCore`release_images(_CAImageQueue*, CAImageQueueReleased*) (56 samples, 0.04%)</title><rect x="14.0438%" y="373" width="0.0444%" height="15" fill="rgb(235,32,4)" fg:x="17720" fg:w="56"/><text x="14.2938%" y="383.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (168 samples, 0.13%)</title><rect x="13.9605%" y="389" width="0.1331%" height="15" fill="rgb(238,90,54)" fg:x="17615" fg:w="168"/><text x="14.2105%" y="399.50"></text></g><g><title>IOKit`io_connect_method (71 samples, 0.06%)</title><rect x="14.1167%" y="325" width="0.0563%" height="15" fill="rgb(213,208,19)" fg:x="17812" fg:w="71"/><text x="14.3667%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (69 samples, 0.05%)</title><rect x="14.1183%" y="309" width="0.0547%" height="15" fill="rgb(233,156,4)" fg:x="17814" fg:w="69"/><text x="14.3683%" y="319.50"></text></g><g><title>IOSurface`IOSurfaceClientIncrementUseCount (79 samples, 0.06%)</title><rect x="14.1135%" y="357" width="0.0626%" height="15" fill="rgb(207,194,5)" fg:x="17808" fg:w="79"/><text x="14.3635%" y="367.50"></text></g><g><title>IOKit`IOConnectCallMethod (78 samples, 0.06%)</title><rect x="14.1143%" y="341" width="0.0618%" height="15" fill="rgb(206,111,30)" fg:x="17809" fg:w="78"/><text x="14.3643%" y="351.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (121 samples, 0.10%)</title><rect x="14.1817%" y="357" width="0.0959%" height="15" fill="rgb(243,70,54)" fg:x="17894" fg:w="121"/><text x="14.4317%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (112 samples, 0.09%)</title><rect x="14.1888%" y="341" width="0.0888%" height="15" fill="rgb(242,28,8)" fg:x="17903" fg:w="112"/><text x="14.4388%" y="351.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (231 samples, 0.18%)</title><rect x="14.1048%" y="373" width="0.1831%" height="15" fill="rgb(219,106,18)" fg:x="17797" fg:w="231"/><text x="14.3548%" y="383.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage (248 samples, 0.20%)</title><rect x="14.0937%" y="389" width="0.1965%" height="15" fill="rgb(244,222,10)" fg:x="17783" fg:w="248"/><text x="14.3437%" y="399.50"></text></g><g><title>SkyLight`get_canonical_display_id(int) (70 samples, 0.06%)</title><rect x="14.2926%" y="373" width="0.0555%" height="15" fill="rgb(236,179,52)" fg:x="18034" fg:w="70"/><text x="14.5426%" y="383.50"></text></g><g><title>SkyLight`get_current_display_system_state() (70 samples, 0.06%)</title><rect x="14.2926%" y="357" width="0.0555%" height="15" fill="rgb(213,23,39)" fg:x="18034" fg:w="70"/><text x="14.5426%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (61 samples, 0.05%)</title><rect x="14.2998%" y="341" width="0.0483%" height="15" fill="rgb(238,48,10)" fg:x="18043" fg:w="61"/><text x="14.5498%" y="351.50"></text></g><g><title>SkyLight`get_current_display_system_state() (78 samples, 0.06%)</title><rect x="14.3481%" y="373" width="0.0618%" height="15" fill="rgb(251,196,23)" fg:x="18104" fg:w="78"/><text x="14.5981%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (64 samples, 0.05%)</title><rect x="14.3592%" y="357" width="0.0507%" height="15" fill="rgb(250,152,24)" fg:x="18118" fg:w="64"/><text x="14.6092%" y="367.50"></text></g><g><title>SkyLight`SLSAcceleratorForDisplayAlias (152 samples, 0.12%)</title><rect x="14.2910%" y="389" width="0.1205%" height="15" fill="rgb(209,150,17)" fg:x="18032" fg:w="152"/><text x="14.5410%" y="399.50"></text></g><g><title>SkyLight`get_current_display_system_state() (95 samples, 0.08%)</title><rect x="14.4186%" y="373" width="0.0753%" height="15" fill="rgb(234,202,34)" fg:x="18193" fg:w="95"/><text x="14.6686%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (79 samples, 0.06%)</title><rect x="14.4313%" y="357" width="0.0626%" height="15" fill="rgb(253,148,53)" fg:x="18209" fg:w="79"/><text x="14.6813%" y="367.50"></text></g><g><title>SkyLight`get_display_logging() (80 samples, 0.06%)</title><rect x="14.4939%" y="373" width="0.0634%" height="15" fill="rgb(218,129,16)" fg:x="18288" fg:w="80"/><text x="14.7439%" y="383.50"></text></g><g><title>SkyLight`get_current_display_system_state() (75 samples, 0.06%)</title><rect x="14.4979%" y="357" width="0.0594%" height="15" fill="rgb(216,85,19)" fg:x="18293" fg:w="75"/><text x="14.7479%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (65 samples, 0.05%)</title><rect x="14.5058%" y="341" width="0.0515%" height="15" fill="rgb(235,228,7)" fg:x="18303" fg:w="65"/><text x="14.7558%" y="351.50"></text></g><g><title>SkyLight`SLSGetDisplaysWithOpenGLDisplayMask (193 samples, 0.15%)</title><rect x="14.4115%" y="389" width="0.1530%" height="15" fill="rgb(245,175,0)" fg:x="18184" fg:w="193"/><text x="14.6615%" y="399.50"></text></g><g><title>SkyLight`SLSGetSurfaceBinding (114 samples, 0.09%)</title><rect x="14.5645%" y="389" width="0.0903%" height="15" fill="rgb(208,168,36)" fg:x="18377" fg:w="114"/><text x="14.8145%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (92 samples, 0.07%)</title><rect x="14.5819%" y="373" width="0.0729%" height="15" fill="rgb(246,171,24)" fg:x="18399" fg:w="92"/><text x="14.8319%" y="383.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (13 samples, 0.01%)</title><rect x="14.6841%" y="389" width="0.0103%" height="15" fill="rgb(215,142,24)" fg:x="18528" fg:w="13"/><text x="14.9341%" y="399.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (2,111 samples, 1.67%)</title><rect x="13.0246%" y="405" width="1.6730%" height="15" fill="rgb(250,187,7)" fg:x="16434" fg:w="2111"/><text x="13.2746%" y="415.50"></text></g><g><title>AppKit`NSWaitUntilHostTime (18 samples, 0.01%)</title><rect x="14.6976%" y="389" width="0.0143%" height="15" fill="rgb(228,66,33)" fg:x="18545" fg:w="18"/><text x="14.9476%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (17 samples, 0.01%)</title><rect x="14.6984%" y="373" width="0.0135%" height="15" fill="rgb(234,215,21)" fg:x="18546" fg:w="17"/><text x="14.9484%" y="383.50"></text></g><g><title>AppKit`-[NSCGLSurface synchronize] (19 samples, 0.02%)</title><rect x="14.6976%" y="405" width="0.0151%" height="15" fill="rgb(222,191,20)" fg:x="18545" fg:w="19"/><text x="14.9476%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (17 samples, 0.01%)</title><rect x="14.7412%" y="405" width="0.0135%" height="15" fill="rgb(245,79,54)" fg:x="18600" fg:w="17"/><text x="14.9912%" y="415.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (2,217 samples, 1.76%)</title><rect x="13.0000%" y="421" width="1.7571%" height="15" fill="rgb(240,10,37)" fg:x="16403" fg:w="2217"/><text x="13.2500%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (741 samples, 0.59%)</title><rect x="14.7848%" y="293" width="0.5873%" height="15" fill="rgb(214,192,32)" fg:x="18655" fg:w="741"/><text x="15.0348%" y="303.50"></text></g><g><title>IOKit`io_connect_method (748 samples, 0.59%)</title><rect x="14.7800%" y="309" width="0.5928%" height="15" fill="rgb(209,36,54)" fg:x="18649" fg:w="748"/><text x="15.0300%" y="319.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (753 samples, 0.60%)</title><rect x="14.7784%" y="341" width="0.5968%" height="15" fill="rgb(220,10,11)" fg:x="18647" fg:w="753"/><text x="15.0284%" y="351.50"></text></g><g><title>IOKit`IOConnectCallMethod (753 samples, 0.60%)</title><rect x="14.7784%" y="325" width="0.5968%" height="15" fill="rgb(221,106,17)" fg:x="18647" fg:w="753"/><text x="15.0284%" y="335.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (773 samples, 0.61%)</title><rect x="14.7650%" y="357" width="0.6126%" height="15" fill="rgb(251,142,44)" fg:x="18630" fg:w="773"/><text x="15.0150%" y="367.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (776 samples, 0.62%)</title><rect x="14.7634%" y="373" width="0.6150%" height="15" fill="rgb(238,13,15)" fg:x="18628" fg:w="776"/><text x="15.0134%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`intelSubmitCommands (780 samples, 0.62%)</title><rect x="14.7610%" y="405" width="0.6182%" height="15" fill="rgb(208,107,27)" fg:x="18625" fg:w="780"/><text x="15.0110%" y="415.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelCommandBuffer::getNew (780 samples, 0.62%)</title><rect x="14.7610%" y="389" width="0.6182%" height="15" fill="rgb(205,136,37)" fg:x="18625" fg:w="780"/><text x="15.0110%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (82 samples, 0.06%)</title><rect x="15.3895%" y="389" width="0.0650%" height="15" fill="rgb(250,205,27)" fg:x="19418" fg:w="82"/><text x="15.6395%" y="399.50"></text></g><g><title>SkyLight`SLSFlushSurfaceWithOptionsAndIndex (101 samples, 0.08%)</title><rect x="15.3800%" y="405" width="0.0800%" height="15" fill="rgb(210,80,43)" fg:x="19406" fg:w="101"/><text x="15.6300%" y="415.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gldPresentFramebufferData (888 samples, 0.70%)</title><rect x="14.7570%" y="421" width="0.7038%" height="15" fill="rgb(247,160,36)" fg:x="18620" fg:w="888"/><text x="15.0070%" y="431.50"></text></g><g><title>GLEngine`glSwap_Exec (3,128 samples, 2.48%)</title><rect x="12.9921%" y="437" width="2.4791%" height="15" fill="rgb(234,13,49)" fg:x="16393" fg:w="3128"/><text x="13.2421%" y="447.50">GL..</text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (3,142 samples, 2.49%)</title><rect x="12.9833%" y="469" width="2.4902%" height="15" fill="rgb(234,122,0)" fg:x="16382" fg:w="3142"/><text x="13.2333%" y="479.50">Ap..</text></g><g><title>OpenGL`CGLFlushDrawable (3,140 samples, 2.49%)</title><rect x="12.9849%" y="453" width="2.4886%" height="15" fill="rgb(207,146,38)" fg:x="16384" fg:w="3140"/><text x="13.2349%" y="463.50">Op..</text></g><g><title>App`glutin::api::cgl::context::ContextInner::flush_buffer (3,150 samples, 2.50%)</title><rect x="12.9794%" y="485" width="2.4965%" height="15" fill="rgb(207,177,25)" fg:x="16377" fg:w="3150"/><text x="13.2294%" y="495.50">Ap..</text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::Window&gt;::swap_buffers (3,156 samples, 2.50%)</title><rect x="12.9770%" y="501" width="2.5012%" height="15" fill="rgb(211,178,42)" fg:x="16374" fg:w="3156"/><text x="13.2270%" y="511.50">Ap..</text></g><g><title>libsystem_kernel.dylib`clock_get_time (129 samples, 0.10%)</title><rect x="15.5203%" y="453" width="0.1022%" height="15" fill="rgb(230,69,54)" fg:x="19583" fg:w="129"/><text x="15.7703%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (128 samples, 0.10%)</title><rect x="15.5211%" y="437" width="0.1014%" height="15" fill="rgb(214,135,41)" fg:x="19584" fg:w="128"/><text x="15.7711%" y="447.50"></text></g><g><title>libsystem_c.dylib`nanosleep (147 samples, 0.12%)</title><rect x="15.5108%" y="469" width="0.1165%" height="15" fill="rgb(237,67,25)" fg:x="19571" fg:w="147"/><text x="15.7608%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (137 samples, 0.11%)</title><rect x="15.6320%" y="469" width="0.1086%" height="15" fill="rgb(222,189,50)" fg:x="19724" fg:w="137"/><text x="15.8820%" y="479.50"></text></g><g><title>App`std::thread::sleep (303 samples, 0.24%)</title><rect x="15.5068%" y="485" width="0.2401%" height="15" fill="rgb(245,148,34)" fg:x="19566" fg:w="303"/><text x="15.7568%" y="495.50"></text></g><g><title>App`std::time::Instant::elapsed (21 samples, 0.02%)</title><rect x="15.7469%" y="485" width="0.0166%" height="15" fill="rgb(222,29,6)" fg:x="19869" fg:w="21"/><text x="15.9969%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (110 samples, 0.09%)</title><rect x="15.7659%" y="485" width="0.0872%" height="15" fill="rgb(221,189,43)" fg:x="19893" fg:w="110"/><text x="16.0159%" y="495.50"></text></g><g><title>App`spin_sleep::sleep (447 samples, 0.35%)</title><rect x="15.5012%" y="501" width="0.3543%" height="15" fill="rgb(207,36,27)" fg:x="19559" fg:w="447"/><text x="15.7512%" y="511.50"></text></g><g><title>App`event_loop::Events::next (19,889 samples, 15.76%)</title><rect x="0.0983%" y="517" width="15.7628%" height="15" fill="rgb(217,90,24)" fg:x="124" fg:w="19889"/><text x="0.3483%" y="527.50">App`event_loop::Events::..</text></g><g><title>App`App::App::render::draw_board (48 samples, 0.04%)</title><rect x="15.8706%" y="501" width="0.0380%" height="15" fill="rgb(224,66,35)" fg:x="20025" fg:w="48"/><text x="16.1206%" y="511.50"></text></g><g><title>App`graphics::rectangle::Rectangle::draw_tri (46 samples, 0.04%)</title><rect x="15.8721%" y="485" width="0.0365%" height="15" fill="rgb(221,13,50)" fg:x="20027" fg:w="46"/><text x="16.1221%" y="495.50"></text></g><g><title>App`&lt;opengl_graphics::back_end::GlGraphics as graphics::graphics::Graphics&gt;::tri_list (44 samples, 0.03%)</title><rect x="15.8737%" y="469" width="0.0349%" height="15" fill="rgb(236,68,49)" fg:x="20029" fg:w="44"/><text x="16.1237%" y="479.50"></text></g><g><title>libsystem_m.dylib`0x00007ff82a51f6f0 (36 samples, 0.03%)</title><rect x="15.8801%" y="453" width="0.0285%" height="15" fill="rgb(229,146,28)" fg:x="20037" fg:w="36"/><text x="16.1301%" y="463.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramPipeline (24 samples, 0.02%)</title><rect x="15.9419%" y="421" width="0.0190%" height="15" fill="rgb(225,31,38)" fg:x="20115" fg:w="24"/><text x="16.1919%" y="431.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrIntelRenderVertexArray (27 samples, 0.02%)</title><rect x="15.9411%" y="437" width="0.0214%" height="15" fill="rgb(250,208,3)" fg:x="20114" fg:w="27"/><text x="16.1911%" y="447.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (29 samples, 0.02%)</title><rect x="15.9704%" y="405" width="0.0230%" height="15" fill="rgb(246,54,23)" fg:x="20151" fg:w="29"/><text x="16.2204%" y="415.50"></text></g><g><title>GLEngine`gleUpdateDeferredStateFull (19 samples, 0.02%)</title><rect x="15.9950%" y="405" width="0.0151%" height="15" fill="rgb(243,76,11)" fg:x="20182" fg:w="19"/><text x="16.2450%" y="415.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (57 samples, 0.05%)</title><rect x="15.9657%" y="421" width="0.0452%" height="15" fill="rgb(245,21,50)" fg:x="20145" fg:w="57"/><text x="16.2157%" y="431.50"></text></g><g><title>GLEngine`glDrawArrays_GL3Exec (92 samples, 0.07%)</title><rect x="15.9403%" y="453" width="0.0729%" height="15" fill="rgb(228,9,43)" fg:x="20113" fg:w="92"/><text x="16.1903%" y="463.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (64 samples, 0.05%)</title><rect x="15.9625%" y="437" width="0.0507%" height="15" fill="rgb(208,100,47)" fg:x="20141" fg:w="64"/><text x="16.2125%" y="447.50"></text></g><g><title>App`opengl_graphics::back_end::Colored::flush (122 samples, 0.10%)</title><rect x="15.9213%" y="469" width="0.0967%" height="15" fill="rgb(232,26,8)" fg:x="20089" fg:w="122"/><text x="16.1713%" y="479.50"></text></g><g><title>GLEngine`glUseProgramObjectARB_Exec (42 samples, 0.03%)</title><rect x="16.0188%" y="453" width="0.0333%" height="15" fill="rgb(216,166,38)" fg:x="20212" fg:w="42"/><text x="16.2688%" y="463.50"></text></g><g><title>GLEngine`gleUseProgramObject (37 samples, 0.03%)</title><rect x="16.0227%" y="437" width="0.0293%" height="15" fill="rgb(251,202,51)" fg:x="20217" fg:w="37"/><text x="16.2727%" y="447.50"></text></g><g><title>App`opengl_graphics::back_end::GlGraphics::use_program (44 samples, 0.03%)</title><rect x="16.0188%" y="469" width="0.0349%" height="15" fill="rgb(254,216,34)" fg:x="20212" fg:w="44"/><text x="16.2688%" y="479.50"></text></g><g><title>GLEngine`gleBindVertexArray (15 samples, 0.01%)</title><rect x="16.0719%" y="437" width="0.0119%" height="15" fill="rgb(251,32,27)" fg:x="20279" fg:w="15"/><text x="16.3219%" y="447.50"></text></g><g><title>GLEngine`glBindVertexArray_Exec (16 samples, 0.01%)</title><rect x="16.0719%" y="453" width="0.0127%" height="15" fill="rgb(208,127,28)" fg:x="20279" fg:w="16"/><text x="16.3219%" y="463.50"></text></g><g><title>IOAccelerator`IOAccelResourceCheckSysMem (26 samples, 0.02%)</title><rect x="16.0996%" y="405" width="0.0206%" height="15" fill="rgb(224,137,22)" fg:x="20314" fg:w="26"/><text x="16.3496%" y="415.50"></text></g><g><title>GLEngine`gleGetFreeOrphanNode (50 samples, 0.04%)</title><rect x="16.0877%" y="421" width="0.0396%" height="15" fill="rgb(254,70,32)" fg:x="20299" fg:w="50"/><text x="16.3377%" y="431.50"></text></g><g><title>GLEngine`gleAcquireBufferData (57 samples, 0.05%)</title><rect x="16.0877%" y="437" width="0.0452%" height="15" fill="rgb(229,75,37)" fg:x="20299" fg:w="57"/><text x="16.3377%" y="447.50"></text></g><g><title>GLEngine`glBufferData_Exec (80 samples, 0.06%)</title><rect x="16.0845%" y="453" width="0.0634%" height="15" fill="rgb(252,64,23)" fg:x="20295" fg:w="80"/><text x="16.3345%" y="463.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::CheckOOM (17 samples, 0.01%)</title><rect x="16.1646%" y="405" width="0.0135%" height="15" fill="rgb(232,162,48)" fg:x="20396" fg:w="17"/><text x="16.4146%" y="415.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::CheckOOM (15 samples, 0.01%)</title><rect x="16.1662%" y="389" width="0.0119%" height="15" fill="rgb(246,160,12)" fg:x="20398" fg:w="15"/><text x="16.4162%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`void updateBindingTable&lt;SGfx3dStateBindingTablePointers&gt;(GenContext*, unsigned int, SGfx3dStateBindingTablePointers&amp;) (27 samples, 0.02%)</title><rect x="16.1900%" y="405" width="0.0214%" height="15" fill="rgb(247,166,0)" fg:x="20428" fg:w="27"/><text x="16.4400%" y="415.50"></text></g><g><title>IOAccelerator`IOAccelContextAddResource (13 samples, 0.01%)</title><rect x="16.2011%" y="389" width="0.0103%" height="15" fill="rgb(249,219,21)" fg:x="20442" fg:w="13"/><text x="16.4511%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramPipeline (73 samples, 0.06%)</title><rect x="16.1543%" y="421" width="0.0579%" height="15" fill="rgb(205,209,3)" fg:x="20383" fg:w="73"/><text x="16.4043%" y="431.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelVertexState::submitVboBuffers (14 samples, 0.01%)</title><rect x="16.2121%" y="421" width="0.0111%" height="15" fill="rgb(243,44,1)" fg:x="20456" fg:w="14"/><text x="16.4621%" y="431.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrIntelRenderVertexArray (96 samples, 0.08%)</title><rect x="16.1495%" y="437" width="0.0761%" height="15" fill="rgb(206,159,16)" fg:x="20377" fg:w="96"/><text x="16.3995%" y="447.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::updateContextSamplerStates (15 samples, 0.01%)</title><rect x="16.2399%" y="373" width="0.0119%" height="15" fill="rgb(244,77,30)" fg:x="20491" fg:w="15"/><text x="16.4899%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::UpdateSamplerStates (18 samples, 0.01%)</title><rect x="16.2399%" y="389" width="0.0143%" height="15" fill="rgb(218,69,12)" fg:x="20491" fg:w="18"/><text x="16.4899%" y="399.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusLoadCurrentTextures (20 samples, 0.02%)</title><rect x="16.2692%" y="389" width="0.0159%" height="15" fill="rgb(212,87,7)" fg:x="20528" fg:w="20"/><text x="16.5192%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrBindContextTexture (15 samples, 0.01%)</title><rect x="16.2732%" y="373" width="0.0119%" height="15" fill="rgb(245,114,25)" fg:x="20533" fg:w="15"/><text x="16.5232%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelVertexArray::buildBufData (15 samples, 0.01%)</title><rect x="16.2898%" y="357" width="0.0119%" height="15" fill="rgb(210,61,42)" fg:x="20554" fg:w="15"/><text x="16.5398%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (86 samples, 0.07%)</title><rect x="16.2367%" y="405" width="0.0682%" height="15" fill="rgb(211,52,33)" fg:x="20487" fg:w="86"/><text x="16.4867%" y="415.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusLoadCurrentVertexArray (25 samples, 0.02%)</title><rect x="16.2851%" y="389" width="0.0198%" height="15" fill="rgb(234,58,33)" fg:x="20548" fg:w="25"/><text x="16.5351%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrUpdateVertexArrayBuffers (19 samples, 0.02%)</title><rect x="16.2898%" y="373" width="0.0151%" height="15" fill="rgb(220,115,36)" fg:x="20554" fg:w="19"/><text x="16.5398%" y="383.50"></text></g><g><title>GLEngine`gleUpdateDeferredStateFull (19 samples, 0.02%)</title><rect x="16.3057%" y="405" width="0.0151%" height="15" fill="rgb(243,153,54)" fg:x="20574" fg:w="19"/><text x="16.5557%" y="415.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (114 samples, 0.09%)</title><rect x="16.2320%" y="421" width="0.0903%" height="15" fill="rgb(251,47,18)" fg:x="20481" fg:w="114"/><text x="16.4820%" y="431.50"></text></g><g><title>GLEngine`glDrawArrays_GL3Exec (221 samples, 0.18%)</title><rect x="16.1487%" y="453" width="0.1752%" height="15" fill="rgb(242,102,42)" fg:x="20376" fg:w="221"/><text x="16.3987%" y="463.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (124 samples, 0.10%)</title><rect x="16.2256%" y="437" width="0.0983%" height="15" fill="rgb(234,31,38)" fg:x="20473" fg:w="124"/><text x="16.4756%" y="447.50"></text></g><g><title>GLEngine`glUniform4f_Exec (15 samples, 0.01%)</title><rect x="16.3255%" y="453" width="0.0119%" height="15" fill="rgb(221,117,51)" fg:x="20599" fg:w="15"/><text x="16.5755%" y="463.50"></text></g><g><title>GLEngine`setUniform (14 samples, 0.01%)</title><rect x="16.3263%" y="437" width="0.0111%" height="15" fill="rgb(212,20,18)" fg:x="20600" fg:w="14"/><text x="16.5763%" y="447.50"></text></g><g><title>App`opengl_graphics::back_end::Textured::flush (368 samples, 0.29%)</title><rect x="16.0536%" y="469" width="0.2917%" height="15" fill="rgb(245,133,36)" fg:x="20256" fg:w="368"/><text x="16.3036%" y="479.50"></text></g><g><title>App`&lt;opengl_graphics::back_end::GlGraphics as graphics::graphics::Graphics&gt;::tri_list_uv (560 samples, 0.44%)</title><rect x="15.9134%" y="485" width="0.4438%" height="15" fill="rgb(212,6,19)" fg:x="20079" fg:w="560"/><text x="16.1634%" y="495.50"></text></g><g><title>App`App::App::render::draw_pieces (567 samples, 0.45%)</title><rect x="15.9086%" y="501" width="0.4494%" height="15" fill="rgb(218,1,36)" fg:x="20073" fg:w="567"/><text x="16.1586%" y="511.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramClearPipeline (21 samples, 0.02%)</title><rect x="16.3817%" y="469" width="0.0166%" height="15" fill="rgb(246,84,54)" fg:x="20670" fg:w="21"/><text x="16.6317%" y="479.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gldClearFramebufferData (33 samples, 0.03%)</title><rect x="16.3762%" y="485" width="0.0262%" height="15" fill="rgb(242,110,6)" fg:x="20663" fg:w="33"/><text x="16.6262%" y="495.50"></text></g><g><title>GLEngine`glClear_Exec (39 samples, 0.03%)</title><rect x="16.3722%" y="501" width="0.0309%" height="15" fill="rgb(214,47,5)" fg:x="20658" fg:w="39"/><text x="16.6222%" y="511.50"></text></g><g><title>App`opengl_graphics::back_end::GlGraphics::draw (681 samples, 0.54%)</title><rect x="15.8642%" y="517" width="0.5397%" height="15" fill="rgb(218,159,25)" fg:x="20017" fg:w="681"/><text x="16.1142%" y="527.50"></text></g><g><title>App`App::main (20,708 samples, 16.41%)</title><rect x="0.0008%" y="533" width="16.4119%" height="15" fill="rgb(215,211,28)" fg:x="1" fg:w="20708"/><text x="0.2508%" y="543.50">App`App::main</text></g><g><title>App`main (20,712 samples, 16.42%)</title><rect x="0.0000%" y="597" width="16.4150%" height="15" fill="rgb(238,59,32)" fg:x="0" fg:w="20712"/><text x="0.2500%" y="607.50">App`main</text></g><g><title>App`std::rt::lang_start_internal (20,712 samples, 16.42%)</title><rect x="0.0000%" y="581" width="16.4150%" height="15" fill="rgb(226,82,3)" fg:x="0" fg:w="20712"/><text x="0.2500%" y="591.50">App`std::rt::lang_start_i..</text></g><g><title>App`std::rt::lang_start::_{{closure}} (20,712 samples, 16.42%)</title><rect x="0.0000%" y="565" width="16.4150%" height="15" fill="rgb(240,164,32)" fg:x="0" fg:w="20712"/><text x="0.2500%" y="575.50">App`std::rt::lang_start::..</text></g><g><title>App`std::sys_common::backtrace::__rust_begin_short_backtrace (20,712 samples, 16.42%)</title><rect x="0.0000%" y="549" width="16.4150%" height="15" fill="rgb(232,46,7)" fg:x="0" fg:w="20712"/><text x="0.2500%" y="559.50">App`std::sys_common::back..</text></g><g><title>dyld`start (20,716 samples, 16.42%)</title><rect x="0.0000%" y="613" width="16.4182%" height="15" fill="rgb(229,129,53)" fg:x="0" fg:w="20716"/><text x="0.2500%" y="623.50">dyld`start</text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (929 samples, 0.74%)</title><rect x="16.4642%" y="597" width="0.7363%" height="15" fill="rgb(234,188,29)" fg:x="20774" fg:w="929"/><text x="16.7142%" y="607.50"></text></g><g><title>QuartzCore`CABackingStoreCollect_(double, bool) (33 samples, 0.03%)</title><rect x="17.3534%" y="485" width="0.0262%" height="15" fill="rgb(246,141,4)" fg:x="21896" fg:w="33"/><text x="17.6034%" y="495.50"></text></g><g><title>QuartzCore`CABackingStoreCollect (34 samples, 0.03%)</title><rect x="17.3534%" y="501" width="0.0269%" height="15" fill="rgb(229,23,39)" fg:x="21896" fg:w="34"/><text x="17.6034%" y="511.50"></text></g><g><title>QuartzCore`async_collect_callback(void*) (48 samples, 0.04%)</title><rect x="17.3534%" y="517" width="0.0380%" height="15" fill="rgb(206,12,3)" fg:x="21896" fg:w="48"/><text x="17.6034%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (58 samples, 0.05%)</title><rect x="17.3502%" y="533" width="0.0460%" height="15" fill="rgb(252,226,20)" fg:x="21892" fg:w="58"/><text x="17.6002%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (98 samples, 0.08%)</title><rect x="17.3328%" y="549" width="0.0777%" height="15" fill="rgb(216,123,35)" fg:x="21870" fg:w="98"/><text x="17.5828%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (133 samples, 0.11%)</title><rect x="17.3193%" y="565" width="0.1054%" height="15" fill="rgb(212,68,40)" fg:x="21853" fg:w="133"/><text x="17.5693%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (1,274 samples, 1.01%)</title><rect x="16.4253%" y="613" width="1.0097%" height="15" fill="rgb(254,125,32)" fg:x="20725" fg:w="1274"/><text x="16.6753%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (294 samples, 0.23%)</title><rect x="17.2020%" y="597" width="0.2330%" height="15" fill="rgb(253,97,22)" fg:x="21705" fg:w="294"/><text x="17.4520%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (271 samples, 0.21%)</title><rect x="17.2203%" y="581" width="0.2148%" height="15" fill="rgb(241,101,14)" fg:x="21728" fg:w="271"/><text x="17.4703%" y="591.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (13 samples, 0.01%)</title><rect x="17.4596%" y="437" width="0.0103%" height="15" fill="rgb(238,103,29)" fg:x="22030" fg:w="13"/><text x="17.7096%" y="447.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (21 samples, 0.02%)</title><rect x="17.4572%" y="453" width="0.0166%" height="15" fill="rgb(233,195,47)" fg:x="22027" fg:w="21"/><text x="17.7072%" y="463.50"></text></g><g><title>SkyLight`CGSEventLogEvent (18 samples, 0.01%)</title><rect x="17.4810%" y="421" width="0.0143%" height="15" fill="rgb(246,218,30)" fg:x="22057" fg:w="18"/><text x="17.7310%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (17 samples, 0.01%)</title><rect x="17.4968%" y="389" width="0.0135%" height="15" fill="rgb(219,145,47)" fg:x="22077" fg:w="17"/><text x="17.7468%" y="399.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (18 samples, 0.01%)</title><rect x="17.4968%" y="405" width="0.0143%" height="15" fill="rgb(243,12,26)" fg:x="22077" fg:w="18"/><text x="17.7468%" y="415.50"></text></g><g><title>IOKit`IOHIDEventCreateWithBytes (16 samples, 0.01%)</title><rect x="17.5135%" y="357" width="0.0127%" height="15" fill="rgb(214,87,16)" fg:x="22098" fg:w="16"/><text x="17.7635%" y="367.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_18::__invoke (17 samples, 0.01%)</title><rect x="17.5135%" y="373" width="0.0135%" height="15" fill="rgb(208,99,42)" fg:x="22098" fg:w="17"/><text x="17.7635%" y="383.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (20 samples, 0.02%)</title><rect x="17.5127%" y="389" width="0.0159%" height="15" fill="rgb(253,99,2)" fg:x="22097" fg:w="20"/><text x="17.7627%" y="399.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (25 samples, 0.02%)</title><rect x="17.5111%" y="405" width="0.0198%" height="15" fill="rgb(220,168,23)" fg:x="22095" fg:w="25"/><text x="17.7611%" y="415.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (118 samples, 0.09%)</title><rect x="17.4953%" y="421" width="0.0935%" height="15" fill="rgb(242,38,24)" fg:x="22075" fg:w="118"/><text x="17.7453%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (66 samples, 0.05%)</title><rect x="17.5365%" y="405" width="0.0523%" height="15" fill="rgb(225,182,9)" fg:x="22127" fg:w="66"/><text x="17.7865%" y="415.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (146 samples, 0.12%)</title><rect x="17.4786%" y="453" width="0.1157%" height="15" fill="rgb(243,178,37)" fg:x="22054" fg:w="146"/><text x="17.7286%" y="463.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (144 samples, 0.11%)</title><rect x="17.4802%" y="437" width="0.1141%" height="15" fill="rgb(232,139,19)" fg:x="22056" fg:w="144"/><text x="17.7302%" y="447.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (186 samples, 0.15%)</title><rect x="17.4509%" y="485" width="0.1474%" height="15" fill="rgb(225,201,24)" fg:x="22019" fg:w="186"/><text x="17.7009%" y="495.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (186 samples, 0.15%)</title><rect x="17.4509%" y="469" width="0.1474%" height="15" fill="rgb(221,47,46)" fg:x="22019" fg:w="186"/><text x="17.7009%" y="479.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (198 samples, 0.16%)</title><rect x="17.4422%" y="533" width="0.1569%" height="15" fill="rgb(249,23,13)" fg:x="22008" fg:w="198"/><text x="17.6922%" y="543.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (196 samples, 0.16%)</title><rect x="17.4437%" y="517" width="0.1553%" height="15" fill="rgb(219,9,5)" fg:x="22010" fg:w="196"/><text x="17.6937%" y="527.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (196 samples, 0.16%)</title><rect x="17.4437%" y="501" width="0.1553%" height="15" fill="rgb(254,171,16)" fg:x="22010" fg:w="196"/><text x="17.6937%" y="511.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (38 samples, 0.03%)</title><rect x="17.6007%" y="533" width="0.0301%" height="15" fill="rgb(230,171,20)" fg:x="22208" fg:w="38"/><text x="17.8507%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (35 samples, 0.03%)</title><rect x="17.6030%" y="517" width="0.0277%" height="15" fill="rgb(210,71,41)" fg:x="22211" fg:w="35"/><text x="17.8530%" y="527.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (251 samples, 0.20%)</title><rect x="17.4390%" y="549" width="0.1989%" height="15" fill="rgb(206,173,20)" fg:x="22004" fg:w="251"/><text x="17.6890%" y="559.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (257 samples, 0.20%)</title><rect x="17.4366%" y="565" width="0.2037%" height="15" fill="rgb(233,88,34)" fg:x="22001" fg:w="257"/><text x="17.6866%" y="575.50"></text></g><g><title>AppKit`_NSEventThread (259 samples, 0.21%)</title><rect x="17.4358%" y="581" width="0.2053%" height="15" fill="rgb(223,209,46)" fg:x="22000" fg:w="259"/><text x="17.6858%" y="591.50"></text></g><g><title>App`App::game_manager::board2::BoardState::is_in_check (40 samples, 0.03%)</title><rect x="17.8860%" y="437" width="0.0317%" height="15" fill="rgb(250,43,18)" fg:x="22568" fg:w="40"/><text x="18.1360%" y="447.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_bishop_moves (32 samples, 0.03%)</title><rect x="17.9232%" y="437" width="0.0254%" height="15" fill="rgb(208,13,10)" fg:x="22615" fg:w="32"/><text x="18.1732%" y="447.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_rook_moves (22 samples, 0.02%)</title><rect x="17.9510%" y="437" width="0.0174%" height="15" fill="rgb(212,200,36)" fg:x="22650" fg:w="22"/><text x="18.2010%" y="447.50"></text></g><g><title>App`App::game_manager::board2::BoardState::game_state (224 samples, 0.18%)</title><rect x="17.8083%" y="453" width="0.1775%" height="15" fill="rgb(225,90,30)" fg:x="22470" fg:w="224"/><text x="18.0583%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.01%)</title><rect x="17.9755%" y="437" width="0.0103%" height="15" fill="rgb(236,182,39)" fg:x="22681" fg:w="13"/><text x="18.2255%" y="447.50"></text></g><g><title>App`App::game_manager::board2::BoardState::perform_move_mutable (169 samples, 0.13%)</title><rect x="17.9858%" y="453" width="0.1339%" height="15" fill="rgb(212,144,35)" fg:x="22694" fg:w="169"/><text x="18.2358%" y="463.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (97 samples, 0.08%)</title><rect x="18.1198%" y="453" width="0.0769%" height="15" fill="rgb(228,63,44)" fg:x="22863" fg:w="97"/><text x="18.3698%" y="463.50"></text></g><g><title>App`App::game_manager::board2::BoardState::undo_move_mutable (98 samples, 0.08%)</title><rect x="18.1967%" y="453" width="0.0777%" height="15" fill="rgb(228,109,6)" fg:x="22960" fg:w="98"/><text x="18.4467%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (60 samples, 0.05%)</title><rect x="18.3290%" y="421" width="0.0476%" height="15" fill="rgb(238,117,24)" fg:x="23127" fg:w="60"/><text x="18.5790%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (57 samples, 0.05%)</title><rect x="18.3314%" y="405" width="0.0452%" height="15" fill="rgb(242,26,26)" fg:x="23130" fg:w="57"/><text x="18.5814%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.02%)</title><rect x="18.3591%" y="389" width="0.0174%" height="15" fill="rgb(221,92,48)" fg:x="23165" fg:w="22"/><text x="18.6091%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (72 samples, 0.06%)</title><rect x="18.3211%" y="437" width="0.0571%" height="15" fill="rgb(209,209,32)" fg:x="23117" fg:w="72"/><text x="18.5711%" y="447.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (133 samples, 0.11%)</title><rect x="18.2743%" y="453" width="0.1054%" height="15" fill="rgb(221,70,22)" fg:x="23058" fg:w="133"/><text x="18.5243%" y="463.50"></text></g><g><title>App`App::game_manager::board2::BoardState::is_in_check (619 samples, 0.49%)</title><rect x="19.8800%" y="421" width="0.4906%" height="15" fill="rgb(248,145,5)" fg:x="25084" fg:w="619"/><text x="20.1300%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::perform_move_mutable (96 samples, 0.08%)</title><rect x="20.3706%" y="421" width="0.0761%" height="15" fill="rgb(226,116,26)" fg:x="25703" fg:w="96"/><text x="20.6206%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_bishop_moves (37 samples, 0.03%)</title><rect x="20.4467%" y="421" width="0.0293%" height="15" fill="rgb(244,5,17)" fg:x="25799" fg:w="37"/><text x="20.6967%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_rook_moves (180 samples, 0.14%)</title><rect x="20.4895%" y="421" width="0.1427%" height="15" fill="rgb(252,159,33)" fg:x="25853" fg:w="180"/><text x="20.7395%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::undo_move_mutable (63 samples, 0.05%)</title><rect x="20.6321%" y="421" width="0.0499%" height="15" fill="rgb(206,71,0)" fg:x="26033" fg:w="63"/><text x="20.8821%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (62 samples, 0.05%)</title><rect x="20.6821%" y="421" width="0.0491%" height="15" fill="rgb(233,118,54)" fg:x="26096" fg:w="62"/><text x="20.9321%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::game_state (1,422 samples, 1.13%)</title><rect x="19.6716%" y="437" width="1.1270%" height="15" fill="rgb(234,83,48)" fg:x="24821" fg:w="1422"/><text x="19.9216%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (85 samples, 0.07%)</title><rect x="20.7312%" y="421" width="0.0674%" height="15" fill="rgb(228,3,54)" fg:x="26158" fg:w="85"/><text x="20.9812%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::perform_move_mutable (1,767 samples, 1.40%)</title><rect x="20.8033%" y="437" width="1.4004%" height="15" fill="rgb(226,155,13)" fg:x="26249" fg:w="1767"/><text x="21.0533%" y="447.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (399 samples, 0.32%)</title><rect x="22.2037%" y="437" width="0.3162%" height="15" fill="rgb(241,28,37)" fg:x="28016" fg:w="399"/><text x="22.4537%" y="447.50"></text></g><g><title>App`App::game_manager::board2::BoardState::undo_move_mutable (703 samples, 0.56%)</title><rect x="22.5326%" y="437" width="0.5572%" height="15" fill="rgb(233,93,10)" fg:x="28431" fg:w="703"/><text x="22.7826%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (37 samples, 0.03%)</title><rect x="23.4979%" y="405" width="0.0293%" height="15" fill="rgb(225,113,19)" fg:x="29649" fg:w="37"/><text x="23.7479%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (79 samples, 0.06%)</title><rect x="23.7745%" y="373" width="0.0626%" height="15" fill="rgb(241,2,18)" fg:x="29998" fg:w="79"/><text x="24.0245%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (616 samples, 0.49%)</title><rect x="23.5273%" y="405" width="0.4882%" height="15" fill="rgb(228,207,21)" fg:x="29686" fg:w="616"/><text x="23.7773%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (586 samples, 0.46%)</title><rect x="23.5510%" y="389" width="0.4644%" height="15" fill="rgb(213,211,35)" fg:x="29716" fg:w="586"/><text x="23.8010%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (223 samples, 0.18%)</title><rect x="23.8387%" y="373" width="0.1767%" height="15" fill="rgb(209,83,10)" fg:x="30079" fg:w="223"/><text x="24.0887%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (32 samples, 0.03%)</title><rect x="23.9901%" y="357" width="0.0254%" height="15" fill="rgb(209,164,1)" fg:x="30270" fg:w="32"/><text x="24.2401%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (726 samples, 0.58%)</title><rect x="23.4448%" y="421" width="0.5754%" height="15" fill="rgb(213,184,43)" fg:x="29582" fg:w="726"/><text x="23.6948%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (20 samples, 0.02%)</title><rect x="24.0202%" y="421" width="0.0159%" height="15" fill="rgb(231,61,34)" fg:x="30308" fg:w="20"/><text x="24.2702%" y="431.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (1,211 samples, 0.96%)</title><rect x="23.0898%" y="437" width="0.9598%" height="15" fill="rgb(235,75,3)" fg:x="29134" fg:w="1211"/><text x="23.3398%" y="447.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (79 samples, 0.06%)</title><rect x="24.0495%" y="437" width="0.0626%" height="15" fill="rgb(220,106,47)" fg:x="30345" fg:w="79"/><text x="24.2995%" y="447.50"></text></g><g><title>App`App::game_manager::board2::BoardState::is_in_check (9,259 samples, 7.34%)</title><rect x="41.7517%" y="405" width="7.3381%" height="15" fill="rgb(210,196,33)" fg:x="52681" fg:w="9259"/><text x="42.0017%" y="415.50">App`App::g..</text></g><g><title>App`App::game_manager::board2::BoardState::perform_move_mutable (2,112 samples, 1.67%)</title><rect x="49.0898%" y="405" width="1.6738%" height="15" fill="rgb(229,154,42)" fg:x="61940" fg:w="2112"/><text x="49.3398%" y="415.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_bishop_moves (4,338 samples, 3.44%)</title><rect x="50.7636%" y="405" width="3.4380%" height="15" fill="rgb(228,114,26)" fg:x="64052" fg:w="4338"/><text x="51.0136%" y="415.50">App..</text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_king_moves (73 samples, 0.06%)</title><rect x="54.2016%" y="405" width="0.0579%" height="15" fill="rgb(208,144,1)" fg:x="68390" fg:w="73"/><text x="54.4516%" y="415.50"></text></g><g><title>App`App::game_manager::board2::BoardState::is_in_check (36 samples, 0.03%)</title><rect x="54.2310%" y="389" width="0.0285%" height="15" fill="rgb(239,112,37)" fg:x="68427" fg:w="36"/><text x="54.4810%" y="399.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_pawn_moves (403 samples, 0.32%)</title><rect x="54.2595%" y="405" width="0.3194%" height="15" fill="rgb(210,96,50)" fg:x="68463" fg:w="403"/><text x="54.5095%" y="415.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_pawn_moves (44 samples, 0.03%)</title><rect x="54.5852%" y="405" width="0.0349%" height="15" fill="rgb(222,178,2)" fg:x="68874" fg:w="44"/><text x="54.8352%" y="415.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_pawn_moves::add_pawn_move_promotion_checked (44 samples, 0.03%)</title><rect x="54.5852%" y="389" width="0.0349%" height="15" fill="rgb(226,74,18)" fg:x="68874" fg:w="44"/><text x="54.8352%" y="399.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_rook_moves (4,624 samples, 3.66%)</title><rect x="54.6201%" y="405" width="3.6647%" height="15" fill="rgb(225,67,54)" fg:x="68918" fg:w="4624"/><text x="54.8701%" y="415.50">App`..</text></g><g><title>App`App::game_manager::board2::BoardState::undo_move_mutable (1,067 samples, 0.85%)</title><rect x="58.2848%" y="405" width="0.8456%" height="15" fill="rgb(251,92,32)" fg:x="73542" fg:w="1067"/><text x="58.5348%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1,162 samples, 0.92%)</title><rect x="59.1304%" y="405" width="0.9209%" height="15" fill="rgb(228,149,22)" fg:x="74609" fg:w="1162"/><text x="59.3804%" y="415.50"></text></g><g><title>App`App::game_manager::board2::BoardState::game_state (41,992 samples, 33.28%)</title><rect x="27.7491%" y="421" width="33.2802%" height="15" fill="rgb(243,54,13)" fg:x="35013" fg:w="41992"/><text x="27.9991%" y="431.50">App`App::game_manager::board2::BoardState::game_state</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1,234 samples, 0.98%)</title><rect x="60.0514%" y="405" width="0.9780%" height="15" fill="rgb(243,180,28)" fg:x="75771" fg:w="1234"/><text x="60.3014%" y="415.50"></text></g><g><title>App`App::game_manager::board2::BoardState::is_in_check (73 samples, 0.06%)</title><rect x="61.0293%" y="421" width="0.0579%" height="15" fill="rgb(208,167,24)" fg:x="77005" fg:w="73"/><text x="61.2793%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::perform_move_mutable (25 samples, 0.02%)</title><rect x="61.0872%" y="421" width="0.0198%" height="15" fill="rgb(245,73,45)" fg:x="77078" fg:w="25"/><text x="61.3372%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_bishop_moves (118 samples, 0.09%)</title><rect x="61.1070%" y="421" width="0.0935%" height="15" fill="rgb(237,203,48)" fg:x="77103" fg:w="118"/><text x="61.3570%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_pawn_moves (48 samples, 0.04%)</title><rect x="61.2069%" y="421" width="0.0380%" height="15" fill="rgb(211,197,16)" fg:x="77229" fg:w="48"/><text x="61.4569%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_rook_moves (66 samples, 0.05%)</title><rect x="61.2457%" y="421" width="0.0523%" height="15" fill="rgb(243,99,51)" fg:x="77278" fg:w="66"/><text x="61.4957%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::undo_move_mutable (87 samples, 0.07%)</title><rect x="61.2980%" y="421" width="0.0690%" height="15" fill="rgb(215,123,29)" fg:x="77344" fg:w="87"/><text x="61.5480%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::setup_state (24,723 samples, 19.59%)</title><rect x="61.3670%" y="421" width="19.5939%" height="15" fill="rgb(239,186,37)" fg:x="77431" fg:w="24723"/><text x="61.6170%" y="431.50">App`App::game_manager::move_gen..</text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (770 samples, 0.61%)</title><rect x="80.3506%" y="405" width="0.6103%" height="15" fill="rgb(252,136,39)" fg:x="101384" fg:w="770"/><text x="80.6006%" y="415.50"></text></g><g><title>App`DYLD-STUB$$__bzero (45 samples, 0.04%)</title><rect x="80.9609%" y="421" width="0.0357%" height="15" fill="rgb(223,213,32)" fg:x="102154" fg:w="45"/><text x="81.2109%" y="431.50"></text></g><g><title>App`DYLD-STUB$$memcpy (54 samples, 0.04%)</title><rect x="80.9965%" y="421" width="0.0428%" height="15" fill="rgb(233,115,5)" fg:x="102199" fg:w="54"/><text x="81.2465%" y="431.50"></text></g><g><title>App`DYLD-STUB$$memset_pattern16 (53 samples, 0.04%)</title><rect x="81.0393%" y="421" width="0.0420%" height="15" fill="rgb(207,226,44)" fg:x="102253" fg:w="53"/><text x="81.2893%" y="431.50"></text></g><g><title>App`&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (124 samples, 0.10%)</title><rect x="82.1465%" y="389" width="0.0983%" height="15" fill="rgb(208,126,0)" fg:x="103650" fg:w="124"/><text x="82.3965%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`getentropy (119 samples, 0.09%)</title><rect x="82.1505%" y="373" width="0.0943%" height="15" fill="rgb(244,66,21)" fg:x="103655" fg:w="119"/><text x="82.4005%" y="383.50"></text></g><g><title>App`rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (128 samples, 0.10%)</title><rect x="82.1449%" y="405" width="0.1014%" height="15" fill="rgb(222,97,12)" fg:x="103648" fg:w="128"/><text x="82.3949%" y="415.50"></text></g><g><title>App`rand_chacha::guts::refill_wide (42 samples, 0.03%)</title><rect x="82.2543%" y="405" width="0.0333%" height="15" fill="rgb(219,213,19)" fg:x="103786" fg:w="42"/><text x="82.5043%" y="415.50"></text></g><g><title>App`rand::rng::Rng::gen_range (2,053 samples, 1.63%)</title><rect x="81.0813%" y="421" width="1.6271%" height="15" fill="rgb(252,169,30)" fg:x="102306" fg:w="2053"/><text x="81.3313%" y="431.50"></text></g><g><title>App`rand_chacha::guts::refill_wide::impl_avx2 (531 samples, 0.42%)</title><rect x="82.2876%" y="405" width="0.4208%" height="15" fill="rgb(206,32,51)" fg:x="103828" fg:w="531"/><text x="82.5376%" y="415.50"></text></g><g><title>App`rand::rngs::adapter::reseeding::fork::get_fork_counter (28 samples, 0.02%)</title><rect x="82.7092%" y="421" width="0.0222%" height="15" fill="rgb(250,172,42)" fg:x="104360" fg:w="28"/><text x="82.9592%" y="431.50"></text></g><g><title>App`rand::rngs::thread::thread_rng (678 samples, 0.54%)</title><rect x="82.7314%" y="421" width="0.5373%" height="15" fill="rgb(209,34,43)" fg:x="104388" fg:w="678"/><text x="82.9814%" y="431.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (236 samples, 0.19%)</title><rect x="83.2783%" y="421" width="0.1870%" height="15" fill="rgb(223,11,35)" fg:x="105078" fg:w="236"/><text x="83.5283%" y="431.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$__bzero (65 samples, 0.05%)</title><rect x="83.4653%" y="421" width="0.0515%" height="15" fill="rgb(251,219,26)" fg:x="105314" fg:w="65"/><text x="83.7153%" y="431.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (64 samples, 0.05%)</title><rect x="83.5168%" y="421" width="0.0507%" height="15" fill="rgb(231,119,3)" fg:x="105379" fg:w="64"/><text x="83.7668%" y="431.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memset_pattern16 (80 samples, 0.06%)</title><rect x="83.5675%" y="421" width="0.0634%" height="15" fill="rgb(216,97,11)" fg:x="105443" fg:w="80"/><text x="83.8175%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (85 samples, 0.07%)</title><rect x="83.6309%" y="421" width="0.0674%" height="15" fill="rgb(223,59,9)" fg:x="105523" fg:w="85"/><text x="83.8809%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (168 samples, 0.13%)</title><rect x="83.6983%" y="421" width="0.1331%" height="15" fill="rgb(233,93,31)" fg:x="105608" fg:w="168"/><text x="83.9483%" y="431.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (75,479 samples, 59.82%)</title><rect x="24.1122%" y="437" width="59.8199%" height="15" fill="rgb(239,81,33)" fg:x="30424" fg:w="75479"/><text x="24.3622%" y="447.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (127 samples, 0.10%)</title><rect x="83.8314%" y="421" width="0.1007%" height="15" fill="rgb(213,120,34)" fg:x="105776" fg:w="127"/><text x="84.0814%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (19 samples, 0.02%)</title><rect x="83.9321%" y="437" width="0.0151%" height="15" fill="rgb(243,49,53)" fg:x="105903" fg:w="19"/><text x="84.1821%" y="447.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (141 samples, 0.11%)</title><rect x="84.3236%" y="405" width="0.1117%" height="15" fill="rgb(247,216,33)" fg:x="106397" fg:w="141"/><text x="84.5736%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (431 samples, 0.34%)</title><rect x="84.2142%" y="421" width="0.3416%" height="15" fill="rgb(226,26,14)" fg:x="106259" fg:w="431"/><text x="84.4642%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (152 samples, 0.12%)</title><rect x="84.4354%" y="405" width="0.1205%" height="15" fill="rgb(215,49,53)" fg:x="106538" fg:w="152"/><text x="84.6854%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (41 samples, 0.03%)</title><rect x="84.5828%" y="389" width="0.0325%" height="15" fill="rgb(245,162,40)" fg:x="106724" fg:w="41"/><text x="84.8328%" y="399.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_evading_king_moves (111 samples, 0.09%)</title><rect x="84.5630%" y="421" width="0.0880%" height="15" fill="rgb(229,68,17)" fg:x="106699" fg:w="111"/><text x="84.8130%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (101 samples, 0.08%)</title><rect x="84.5709%" y="405" width="0.0800%" height="15" fill="rgb(213,182,10)" fg:x="106709" fg:w="101"/><text x="84.8209%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (45 samples, 0.04%)</title><rect x="84.6153%" y="389" width="0.0357%" height="15" fill="rgb(245,125,30)" fg:x="106765" fg:w="45"/><text x="84.8653%" y="399.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (300 samples, 0.24%)</title><rect x="84.8039%" y="389" width="0.2378%" height="15" fill="rgb(232,202,2)" fg:x="107003" fg:w="300"/><text x="85.0539%" y="399.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (566 samples, 0.45%)</title><rect x="84.7120%" y="405" width="0.4486%" height="15" fill="rgb(237,140,51)" fg:x="106887" fg:w="566"/><text x="84.9620%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (150 samples, 0.12%)</title><rect x="85.0416%" y="389" width="0.1189%" height="15" fill="rgb(236,157,25)" fg:x="107303" fg:w="150"/><text x="85.2916%" y="399.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_king_moves (648 samples, 0.51%)</title><rect x="84.6509%" y="421" width="0.5136%" height="15" fill="rgb(219,209,0)" fg:x="106810" fg:w="648"/><text x="84.9009%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_bishop_moves (525 samples, 0.42%)</title><rect x="85.3143%" y="405" width="0.4161%" height="15" fill="rgb(240,116,54)" fg:x="107647" fg:w="525"/><text x="85.5643%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (322 samples, 0.26%)</title><rect x="85.4752%" y="389" width="0.2552%" height="15" fill="rgb(216,10,36)" fg:x="107850" fg:w="322"/><text x="85.7252%" y="399.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_knight_moves (188 samples, 0.15%)</title><rect x="85.7304%" y="405" width="0.1490%" height="15" fill="rgb(222,72,44)" fg:x="108172" fg:w="188"/><text x="85.9804%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_pawn_moves (548 samples, 0.43%)</title><rect x="85.8794%" y="405" width="0.4343%" height="15" fill="rgb(232,159,9)" fg:x="108360" fg:w="548"/><text x="86.1294%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (137 samples, 0.11%)</title><rect x="86.4302%" y="389" width="0.1086%" height="15" fill="rgb(210,39,32)" fg:x="109055" fg:w="137"/><text x="86.6802%" y="399.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_queen_moves (366 samples, 0.29%)</title><rect x="86.3137%" y="405" width="0.2901%" height="15" fill="rgb(216,194,45)" fg:x="108908" fg:w="366"/><text x="86.5637%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (82 samples, 0.06%)</title><rect x="86.5388%" y="389" width="0.0650%" height="15" fill="rgb(218,18,35)" fg:x="109192" fg:w="82"/><text x="86.7888%" y="399.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_rook_moves (322 samples, 0.26%)</title><rect x="86.6037%" y="405" width="0.2552%" height="15" fill="rgb(207,83,51)" fg:x="109274" fg:w="322"/><text x="86.8537%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (202 samples, 0.16%)</title><rect x="86.6988%" y="389" width="0.1601%" height="15" fill="rgb(225,63,43)" fg:x="109394" fg:w="202"/><text x="86.9488%" y="399.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_moves (2,146 samples, 1.70%)</title><rect x="85.1700%" y="421" width="1.7008%" height="15" fill="rgb(207,57,36)" fg:x="107465" fg:w="2146"/><text x="85.4200%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::setup_state (1,208 samples, 0.96%)</title><rect x="86.8914%" y="421" width="0.9574%" height="15" fill="rgb(216,99,33)" fg:x="109637" fg:w="1208"/><text x="87.1414%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (31 samples, 0.02%)</title><rect x="87.8242%" y="405" width="0.0246%" height="15" fill="rgb(225,42,16)" fg:x="110814" fg:w="31"/><text x="88.0742%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (317 samples, 0.25%)</title><rect x="87.8488%" y="421" width="0.2512%" height="15" fill="rgb(220,201,45)" fg:x="110845" fg:w="317"/><text x="88.0988%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (328 samples, 0.26%)</title><rect x="88.1000%" y="421" width="0.2600%" height="15" fill="rgb(225,33,4)" fg:x="111162" fg:w="328"/><text x="88.3500%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (46 samples, 0.04%)</title><rect x="88.3640%" y="421" width="0.0365%" height="15" fill="rgb(224,33,50)" fg:x="111495" fg:w="46"/><text x="88.6140%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (83 samples, 0.07%)</title><rect x="88.4004%" y="421" width="0.0658%" height="15" fill="rgb(246,198,51)" fg:x="111541" fg:w="83"/><text x="88.6504%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::gen_moves_legal (5,714 samples, 4.53%)</title><rect x="83.9472%" y="437" width="4.5286%" height="15" fill="rgb(205,22,4)" fg:x="105922" fg:w="5714"/><text x="84.1972%" y="447.50">App`A..</text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_moves (17 samples, 0.01%)</title><rect x="88.4821%" y="437" width="0.0135%" height="15" fill="rgb(206,3,8)" fg:x="111644" fg:w="17"/><text x="88.7321%" y="447.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::setup_state (48 samples, 0.04%)</title><rect x="88.4955%" y="437" width="0.0380%" height="15" fill="rgb(251,23,15)" fg:x="111661" fg:w="48"/><text x="88.7455%" y="447.50"></text></g><g><title>App`DYLD-STUB$$memcpy (14 samples, 0.01%)</title><rect x="88.5526%" y="437" width="0.0111%" height="15" fill="rgb(252,88,28)" fg:x="111733" fg:w="14"/><text x="88.8026%" y="447.50"></text></g><g><title>App`__rdl_alloc (26 samples, 0.02%)</title><rect x="88.5653%" y="437" width="0.0206%" height="15" fill="rgb(212,127,14)" fg:x="111749" fg:w="26"/><text x="88.8153%" y="447.50"></text></g><g><title>App`__rdl_dealloc (14 samples, 0.01%)</title><rect x="88.5859%" y="437" width="0.0111%" height="15" fill="rgb(247,145,37)" fg:x="111775" fg:w="14"/><text x="88.8359%" y="447.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (21 samples, 0.02%)</title><rect x="88.6675%" y="421" width="0.0166%" height="15" fill="rgb(209,117,53)" fg:x="111878" fg:w="21"/><text x="88.9175%" y="431.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (148 samples, 0.12%)</title><rect x="88.6049%" y="437" width="0.1173%" height="15" fill="rgb(212,90,42)" fg:x="111799" fg:w="148"/><text x="88.8549%" y="447.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (48 samples, 0.04%)</title><rect x="88.6842%" y="421" width="0.0380%" height="15" fill="rgb(218,164,37)" fg:x="111899" fg:w="48"/><text x="88.9342%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (14 samples, 0.01%)</title><rect x="88.7111%" y="405" width="0.0111%" height="15" fill="rgb(246,65,34)" fg:x="111933" fg:w="14"/><text x="88.9611%" y="415.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (879 samples, 0.70%)</title><rect x="91.8670%" y="421" width="0.6966%" height="15" fill="rgb(231,100,33)" fg:x="115915" fg:w="879"/><text x="92.1170%" y="431.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (1,976 samples, 1.57%)</title><rect x="92.5636%" y="421" width="1.5661%" height="15" fill="rgb(228,126,14)" fg:x="116794" fg:w="1976"/><text x="92.8136%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (716 samples, 0.57%)</title><rect x="93.5622%" y="405" width="0.5675%" height="15" fill="rgb(215,173,21)" fg:x="118054" fg:w="716"/><text x="93.8122%" y="415.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (324 samples, 0.26%)</title><rect x="94.9832%" y="405" width="0.2568%" height="15" fill="rgb(210,6,40)" fg:x="119847" fg:w="324"/><text x="95.2332%" y="415.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (2,316 samples, 1.84%)</title><rect x="94.1297%" y="421" width="1.8355%" height="15" fill="rgb(212,48,18)" fg:x="118770" fg:w="2316"/><text x="94.3797%" y="431.50">A..</text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (915 samples, 0.73%)</title><rect x="95.2400%" y="405" width="0.7252%" height="15" fill="rgb(230,214,11)" fg:x="120171" fg:w="915"/><text x="95.4900%" y="415.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (347 samples, 0.28%)</title><rect x="95.6902%" y="389" width="0.2750%" height="15" fill="rgb(254,105,39)" fg:x="120739" fg:w="347"/><text x="95.9402%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (486 samples, 0.39%)</title><rect x="96.0397%" y="389" width="0.3852%" height="15" fill="rgb(245,158,5)" fg:x="121180" fg:w="486"/><text x="96.2897%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (283 samples, 0.22%)</title><rect x="96.2006%" y="373" width="0.2243%" height="15" fill="rgb(249,208,11)" fg:x="121383" fg:w="283"/><text x="96.4506%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (586 samples, 0.46%)</title><rect x="95.9652%" y="421" width="0.4644%" height="15" fill="rgb(210,39,28)" fg:x="121086" fg:w="586"/><text x="96.2152%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (524 samples, 0.42%)</title><rect x="96.0143%" y="405" width="0.4153%" height="15" fill="rgb(211,56,53)" fg:x="121148" fg:w="524"/><text x="96.2643%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (29 samples, 0.02%)</title><rect x="96.4296%" y="421" width="0.0230%" height="15" fill="rgb(226,201,30)" fg:x="121672" fg:w="29"/><text x="96.6796%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (145 samples, 0.11%)</title><rect x="96.4978%" y="405" width="0.1149%" height="15" fill="rgb(239,101,34)" fg:x="121758" fg:w="145"/><text x="96.7478%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (208 samples, 0.16%)</title><rect x="96.4526%" y="421" width="0.1648%" height="15" fill="rgb(226,209,5)" fg:x="121701" fg:w="208"/><text x="96.7026%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (119 samples, 0.09%)</title><rect x="96.6262%" y="421" width="0.0943%" height="15" fill="rgb(250,105,47)" fg:x="121920" fg:w="119"/><text x="96.8762%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (17 samples, 0.01%)</title><rect x="96.7205%" y="421" width="0.0135%" height="15" fill="rgb(230,72,3)" fg:x="122039" fg:w="17"/><text x="96.9705%" y="431.50"></text></g><g><title>App`core::slice::sort::merge_sort (10,280 samples, 8.15%)</title><rect x="88.7222%" y="437" width="8.1473%" height="15" fill="rgb(232,218,39)" fg:x="111947" fg:w="10280"/><text x="88.9722%" y="447.50">App`core::s..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (171 samples, 0.14%)</title><rect x="96.7340%" y="421" width="0.1355%" height="15" fill="rgb(248,166,6)" fg:x="122056" fg:w="171"/><text x="96.9840%" y="431.50"></text></g><g><title>App`rand::rngs::thread::thread_rng (65 samples, 0.05%)</title><rect x="96.8734%" y="437" width="0.0515%" height="15" fill="rgb(247,89,20)" fg:x="122232" fg:w="65"/><text x="97.1234%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.02%)</title><rect x="96.9250%" y="437" width="0.0151%" height="15" fill="rgb(248,130,54)" fg:x="122297" fg:w="19"/><text x="97.1750%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (99 samples, 0.08%)</title><rect x="97.0684%" y="421" width="0.0785%" height="15" fill="rgb(234,196,4)" fg:x="122478" fg:w="99"/><text x="97.3184%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (68 samples, 0.05%)</title><rect x="97.1469%" y="421" width="0.0539%" height="15" fill="rgb(250,143,31)" fg:x="122577" fg:w="68"/><text x="97.3969%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (138 samples, 0.11%)</title><rect x="97.2008%" y="421" width="0.1094%" height="15" fill="rgb(211,110,34)" fg:x="122645" fg:w="138"/><text x="97.4508%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (129 samples, 0.10%)</title><rect x="97.2079%" y="405" width="0.1022%" height="15" fill="rgb(215,124,48)" fg:x="122654" fg:w="129"/><text x="97.4579%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (467 samples, 0.37%)</title><rect x="96.9440%" y="437" width="0.3701%" height="15" fill="rgb(216,46,13)" fg:x="122321" fg:w="467"/><text x="97.1940%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (39 samples, 0.03%)</title><rect x="97.4544%" y="421" width="0.0309%" height="15" fill="rgb(205,184,25)" fg:x="122965" fg:w="39"/><text x="97.7044%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (62 samples, 0.05%)</title><rect x="97.6969%" y="405" width="0.0491%" height="15" fill="rgb(228,1,10)" fg:x="123271" fg:w="62"/><text x="97.9469%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (581 samples, 0.46%)</title><rect x="97.3141%" y="437" width="0.4605%" height="15" fill="rgb(213,116,27)" fg:x="122788" fg:w="581"/><text x="97.5641%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (357 samples, 0.28%)</title><rect x="97.4916%" y="421" width="0.2829%" height="15" fill="rgb(241,95,50)" fg:x="123012" fg:w="357"/><text x="97.7416%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (36 samples, 0.03%)</title><rect x="97.7460%" y="405" width="0.0285%" height="15" fill="rgb(238,48,32)" fg:x="123333" fg:w="36"/><text x="97.9960%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (30 samples, 0.02%)</title><rect x="97.7746%" y="437" width="0.0238%" height="15" fill="rgb(235,113,49)" fg:x="123369" fg:w="30"/><text x="98.0246%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (54 samples, 0.04%)</title><rect x="97.7983%" y="437" width="0.0428%" height="15" fill="rgb(205,127,43)" fg:x="123399" fg:w="54"/><text x="98.0483%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (88 samples, 0.07%)</title><rect x="97.8411%" y="437" width="0.0697%" height="15" fill="rgb(250,162,2)" fg:x="123453" fg:w="88"/><text x="98.0911%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (18 samples, 0.01%)</title><rect x="97.9109%" y="437" width="0.0143%" height="15" fill="rgb(220,13,41)" fg:x="123541" fg:w="18"/><text x="98.1609%" y="447.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (48 samples, 0.04%)</title><rect x="97.9434%" y="437" width="0.0380%" height="15" fill="rgb(249,221,25)" fg:x="123582" fg:w="48"/><text x="98.1934%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (18 samples, 0.01%)</title><rect x="97.9814%" y="437" width="0.0143%" height="15" fill="rgb(215,208,19)" fg:x="123630" fg:w="18"/><text x="98.2314%" y="447.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (100,518 samples, 79.66%)</title><rect x="18.3869%" y="453" width="79.6643%" height="15" fill="rgb(236,175,2)" fg:x="23200" fg:w="100518"/><text x="18.6369%" y="463.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (70 samples, 0.06%)</title><rect x="97.9957%" y="437" width="0.0555%" height="15" fill="rgb(241,52,2)" fg:x="123648" fg:w="70"/><text x="98.2457%" y="447.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (21 samples, 0.02%)</title><rect x="98.1098%" y="421" width="0.0166%" height="15" fill="rgb(248,140,14)" fg:x="123792" fg:w="21"/><text x="98.3598%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (63 samples, 0.05%)</title><rect x="98.0924%" y="437" width="0.0499%" height="15" fill="rgb(253,22,42)" fg:x="123770" fg:w="63"/><text x="98.3424%" y="447.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (20 samples, 0.02%)</title><rect x="98.1264%" y="421" width="0.0159%" height="15" fill="rgb(234,61,47)" fg:x="123813" fg:w="20"/><text x="98.3764%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (45 samples, 0.04%)</title><rect x="98.1574%" y="405" width="0.0357%" height="15" fill="rgb(208,226,15)" fg:x="123852" fg:w="45"/><text x="98.4074%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (100 samples, 0.08%)</title><rect x="98.1502%" y="421" width="0.0793%" height="15" fill="rgb(217,221,4)" fg:x="123843" fg:w="100"/><text x="98.4002%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (46 samples, 0.04%)</title><rect x="98.1930%" y="405" width="0.0365%" height="15" fill="rgb(212,174,34)" fg:x="123897" fg:w="46"/><text x="98.4430%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_king_moves (111 samples, 0.09%)</title><rect x="98.1431%" y="437" width="0.0880%" height="15" fill="rgb(253,83,4)" fg:x="123834" fg:w="111"/><text x="98.3931%" y="447.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_bishop_moves (71 samples, 0.06%)</title><rect x="98.2453%" y="421" width="0.0563%" height="15" fill="rgb(250,195,49)" fg:x="123963" fg:w="71"/><text x="98.4953%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (41 samples, 0.03%)</title><rect x="98.2691%" y="405" width="0.0325%" height="15" fill="rgb(241,192,25)" fg:x="123993" fg:w="41"/><text x="98.5191%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_knight_moves (22 samples, 0.02%)</title><rect x="98.3016%" y="421" width="0.0174%" height="15" fill="rgb(208,124,10)" fg:x="124034" fg:w="22"/><text x="98.5516%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_pawn_moves (58 samples, 0.05%)</title><rect x="98.3190%" y="421" width="0.0460%" height="15" fill="rgb(222,33,0)" fg:x="124056" fg:w="58"/><text x="98.5690%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (31 samples, 0.02%)</title><rect x="98.3927%" y="405" width="0.0246%" height="15" fill="rgb(234,209,28)" fg:x="124149" fg:w="31"/><text x="98.6427%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_queen_moves (98 samples, 0.08%)</title><rect x="98.3650%" y="421" width="0.0777%" height="15" fill="rgb(224,11,23)" fg:x="124114" fg:w="98"/><text x="98.6150%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (32 samples, 0.03%)</title><rect x="98.4173%" y="405" width="0.0254%" height="15" fill="rgb(232,99,1)" fg:x="124180" fg:w="32"/><text x="98.6673%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_rook_moves (38 samples, 0.03%)</title><rect x="98.4427%" y="421" width="0.0301%" height="15" fill="rgb(237,95,45)" fg:x="124212" fg:w="38"/><text x="98.6927%" y="431.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (25 samples, 0.02%)</title><rect x="98.4530%" y="405" width="0.0198%" height="15" fill="rgb(208,109,11)" fg:x="124225" fg:w="25"/><text x="98.7030%" y="415.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_moves (303 samples, 0.24%)</title><rect x="98.2334%" y="437" width="0.2401%" height="15" fill="rgb(216,190,48)" fg:x="123948" fg:w="303"/><text x="98.4834%" y="447.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::setup_state (141 samples, 0.11%)</title><rect x="98.4767%" y="437" width="0.1117%" height="15" fill="rgb(251,171,36)" fg:x="124255" fg:w="141"/><text x="98.7267%" y="447.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (34 samples, 0.03%)</title><rect x="98.5885%" y="437" width="0.0269%" height="15" fill="rgb(230,62,22)" fg:x="124396" fg:w="34"/><text x="98.8385%" y="447.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (31 samples, 0.02%)</title><rect x="98.6154%" y="437" width="0.0246%" height="15" fill="rgb(225,114,35)" fg:x="124430" fg:w="31"/><text x="98.8654%" y="447.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::gen_moves_legal (756 samples, 0.60%)</title><rect x="98.0519%" y="453" width="0.5992%" height="15" fill="rgb(215,118,42)" fg:x="123719" fg:w="756"/><text x="98.3019%" y="463.50"></text></g><g><title>App`__rdl_dealloc (28 samples, 0.02%)</title><rect x="98.6606%" y="453" width="0.0222%" height="15" fill="rgb(243,119,21)" fg:x="124487" fg:w="28"/><text x="98.9106%" y="463.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (22 samples, 0.02%)</title><rect x="98.6891%" y="453" width="0.0174%" height="15" fill="rgb(252,177,53)" fg:x="124523" fg:w="22"/><text x="98.9391%" y="463.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (81 samples, 0.06%)</title><rect x="99.0830%" y="437" width="0.0642%" height="15" fill="rgb(237,209,29)" fg:x="125020" fg:w="81"/><text x="99.3330%" y="447.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (225 samples, 0.18%)</title><rect x="99.1472%" y="437" width="0.1783%" height="15" fill="rgb(212,65,23)" fg:x="125101" fg:w="225"/><text x="99.3972%" y="447.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (78 samples, 0.06%)</title><rect x="99.2637%" y="421" width="0.0618%" height="15" fill="rgb(230,222,46)" fg:x="125248" fg:w="78"/><text x="99.5137%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (33 samples, 0.03%)</title><rect x="99.4785%" y="421" width="0.0262%" height="15" fill="rgb(215,135,32)" fg:x="125519" fg:w="33"/><text x="99.7285%" y="431.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (355 samples, 0.28%)</title><rect x="99.3256%" y="437" width="0.2814%" height="15" fill="rgb(246,101,22)" fg:x="125326" fg:w="355"/><text x="99.5756%" y="447.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (129 samples, 0.10%)</title><rect x="99.5047%" y="421" width="0.1022%" height="15" fill="rgb(206,107,13)" fg:x="125552" fg:w="129"/><text x="99.7547%" y="431.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (44 samples, 0.03%)</title><rect x="99.5720%" y="405" width="0.0349%" height="15" fill="rgb(250,100,44)" fg:x="125637" fg:w="44"/><text x="99.8220%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (40 samples, 0.03%)</title><rect x="99.6124%" y="405" width="0.0317%" height="15" fill="rgb(231,147,38)" fg:x="125688" fg:w="40"/><text x="99.8624%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (26 samples, 0.02%)</title><rect x="99.6235%" y="389" width="0.0206%" height="15" fill="rgb(229,8,40)" fg:x="125702" fg:w="26"/><text x="99.8735%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (48 samples, 0.04%)</title><rect x="99.6069%" y="437" width="0.0380%" height="15" fill="rgb(221,135,30)" fg:x="125681" fg:w="48"/><text x="99.8569%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (45 samples, 0.04%)</title><rect x="99.6093%" y="421" width="0.0357%" height="15" fill="rgb(249,193,18)" fg:x="125684" fg:w="45"/><text x="99.8593%" y="431.50"></text></g><g><title>App`core::slice::sort::merge_sort (1,226 samples, 0.97%)</title><rect x="98.7066%" y="453" width="0.9717%" height="15" fill="rgb(209,133,39)" fg:x="124545" fg:w="1226"/><text x="98.9566%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.02%)</title><rect x="99.6632%" y="437" width="0.0151%" height="15" fill="rgb(232,100,14)" fg:x="125752" fg:w="19"/><text x="99.9132%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (25 samples, 0.02%)</title><rect x="99.6798%" y="453" width="0.0198%" height="15" fill="rgb(224,185,1)" fg:x="125773" fg:w="25"/><text x="99.9298%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (17 samples, 0.01%)</title><rect x="99.7448%" y="437" width="0.0135%" height="15" fill="rgb(223,139,8)" fg:x="125855" fg:w="17"/><text x="99.9948%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (89 samples, 0.07%)</title><rect x="99.6996%" y="453" width="0.0705%" height="15" fill="rgb(232,213,38)" fg:x="125798" fg:w="89"/><text x="99.9496%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (14 samples, 0.01%)</title><rect x="99.8122%" y="421" width="0.0111%" height="15" fill="rgb(207,94,22)" fg:x="125940" fg:w="14"/><text x="100.0622%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (72 samples, 0.06%)</title><rect x="99.7702%" y="453" width="0.0571%" height="15" fill="rgb(219,183,54)" fg:x="125887" fg:w="72"/><text x="100.0202%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (43 samples, 0.03%)</title><rect x="99.7931%" y="437" width="0.0341%" height="15" fill="rgb(216,185,54)" fg:x="125916" fg:w="43"/><text x="100.0431%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (21 samples, 0.02%)</title><rect x="99.8312%" y="453" width="0.0166%" height="15" fill="rgb(254,217,39)" fg:x="125964" fg:w="21"/><text x="100.0812%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (15 samples, 0.01%)</title><rect x="99.8605%" y="453" width="0.0119%" height="15" fill="rgb(240,178,23)" fg:x="126001" fg:w="15"/><text x="100.1105%" y="463.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (103,717 samples, 82.20%)</title><rect x="17.6997%" y="469" width="82.1996%" height="15" fill="rgb(218,11,47)" fg:x="22333" fg:w="103717"/><text x="17.9497%" y="479.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.02%)</title><rect x="99.8811%" y="453" width="0.0182%" height="15" fill="rgb(218,51,51)" fg:x="126027" fg:w="23"/><text x="100.1311%" y="463.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_moves (13 samples, 0.01%)</title><rect x="99.9057%" y="453" width="0.0103%" height="15" fill="rgb(238,126,27)" fg:x="126058" fg:w="13"/><text x="100.1557%" y="463.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::gen_moves_legal (36 samples, 0.03%)</title><rect x="99.8993%" y="469" width="0.0285%" height="15" fill="rgb(249,202,22)" fg:x="126050" fg:w="36"/><text x="100.1493%" y="479.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (14 samples, 0.01%)</title><rect x="99.9540%" y="453" width="0.0111%" height="15" fill="rgb(254,195,49)" fg:x="126119" fg:w="14"/><text x="100.2040%" y="463.50"></text></g><g><title>App`core::slice::sort::merge_sort (48 samples, 0.04%)</title><rect x="99.9303%" y="469" width="0.0380%" height="15" fill="rgb(208,123,14)" fg:x="126089" fg:w="48"/><text x="100.1803%" y="479.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (103,894 samples, 82.34%)</title><rect x="17.6490%" y="485" width="82.3399%" height="15" fill="rgb(224,200,8)" fg:x="22269" fg:w="103894"/><text x="17.8990%" y="495.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`core::ops::function::FnOnce::call_once{{vtable.shim}} (103,915 samples, 82.36%)</title><rect x="17.6411%" y="565" width="82.3565%" height="15" fill="rgb(217,61,36)" fg:x="22259" fg:w="103915"/><text x="17.8911%" y="575.50">App`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>App`std::sys_common::backtrace::__rust_begin_short_backtrace (103,915 samples, 82.36%)</title><rect x="17.6411%" y="549" width="82.3565%" height="15" fill="rgb(206,35,45)" fg:x="22259" fg:w="103915"/><text x="17.8911%" y="559.50">App`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>App`App::game_manager::bot2::Bot2::search (103,914 samples, 82.36%)</title><rect x="17.6419%" y="533" width="82.3557%" height="15" fill="rgb(217,65,33)" fg:x="22260" fg:w="103914"/><text x="17.8919%" y="543.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::bot2::Bot2::search (103,914 samples, 82.36%)</title><rect x="17.6419%" y="517" width="82.3557%" height="15" fill="rgb(222,158,48)" fg:x="22260" fg:w="103914"/><text x="17.8919%" y="527.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::bot2::Bot2::search (103,913 samples, 82.35%)</title><rect x="17.6427%" y="501" width="82.3549%" height="15" fill="rgb(254,2,54)" fg:x="22261" fg:w="103913"/><text x="17.8927%" y="511.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`std::sys::unix::thread::Thread::new::thread_start (103,916 samples, 82.36%)</title><rect x="17.6411%" y="581" width="82.3573%" height="15" fill="rgb(250,143,38)" fg:x="22259" fg:w="103916"/><text x="17.8911%" y="591.50">App`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>all (126,177 samples, 100%)</title><rect x="0.0000%" y="629" width="100.0000%" height="15" fill="rgb(248,25,0)" fg:x="0" fg:w="126177"/><text x="0.2500%" y="639.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (104,178 samples, 82.56%)</title><rect x="17.4350%" y="613" width="82.5650%" height="15" fill="rgb(206,152,27)" fg:x="21999" fg:w="104178"/><text x="17.6850%" y="623.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (104,177 samples, 82.56%)</title><rect x="17.4358%" y="597" width="82.5642%" height="15" fill="rgb(240,77,30)" fg:x="22000" fg:w="104177"/><text x="17.6858%" y="607.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>