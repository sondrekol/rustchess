<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1238" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1221.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1221.00"> </text><svg id="frames" x="10" width="1180" total_samples="52122"><g><title>App`graphics::color::gamma_srgb_to_linear (16 samples, 0.03%)</title><rect x="0.0691%" y="933" width="0.0307%" height="15" fill="rgb(227,0,7)" fg:x="36" fg:w="16"/><text x="0.3191%" y="943.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8126d26f0 (12 samples, 0.02%)</title><rect x="0.0767%" y="917" width="0.0230%" height="15" fill="rgb(217,0,24)" fg:x="40" fg:w="12"/><text x="0.3267%" y="927.50"></text></g><g><title>App`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (15 samples, 0.03%)</title><rect x="0.1477%" y="901" width="0.0288%" height="15" fill="rgb(221,193,54)" fg:x="77" fg:w="15"/><text x="0.3977%" y="911.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.01%)</title><rect x="0.1803%" y="885" width="0.0134%" height="15" fill="rgb(248,212,6)" fg:x="94" fg:w="7"/><text x="0.4303%" y="895.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.02%)</title><rect x="0.1784%" y="901" width="0.0173%" height="15" fill="rgb(208,68,35)" fg:x="93" fg:w="9"/><text x="0.4284%" y="911.50"></text></g><g><title>App`&lt;opengl_graphics::back_end::GlGraphics as graphics::graphics::Graphics&gt;::tri_list::_{{closure}} (41 samples, 0.08%)</title><rect x="0.1209%" y="917" width="0.0787%" height="15" fill="rgb(232,128,0)" fg:x="63" fg:w="41"/><text x="0.3709%" y="927.50"></text></g><g><title>App`graphics::rectangle::Rectangle::draw_tri::_{{closure}} (60 samples, 0.12%)</title><rect x="0.0998%" y="933" width="0.1151%" height="15" fill="rgb(207,160,47)" fg:x="52" fg:w="60"/><text x="0.3498%" y="943.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.02%)</title><rect x="0.1995%" y="917" width="0.0153%" height="15" fill="rgb(228,23,34)" fg:x="104" fg:w="8"/><text x="0.4495%" y="927.50"></text></g><g><title>App`graphics::rectangle::Rectangle::draw_tri (89 samples, 0.17%)</title><rect x="0.0518%" y="965" width="0.1708%" height="15" fill="rgb(218,30,26)" fg:x="27" fg:w="89"/><text x="0.3018%" y="975.50"></text></g><g><title>App`&lt;opengl_graphics::back_end::GlGraphics as graphics::graphics::Graphics&gt;::tri_list (87 samples, 0.17%)</title><rect x="0.0556%" y="949" width="0.1669%" height="15" fill="rgb(220,122,19)" fg:x="29" fg:w="87"/><text x="0.3056%" y="959.50"></text></g><g><title>App`App::App::render::draw_board (104 samples, 0.20%)</title><rect x="0.0288%" y="997" width="0.1995%" height="15" fill="rgb(250,228,42)" fg:x="15" fg:w="104"/><text x="0.2788%" y="1007.50"></text></g><g><title>App`graphics::rectangle (96 samples, 0.18%)</title><rect x="0.0441%" y="981" width="0.1842%" height="15" fill="rgb(240,193,28)" fg:x="23" fg:w="96"/><text x="0.2941%" y="991.50"></text></g><g><title>App`graphics::color::gamma_srgb_to_linear (8 samples, 0.02%)</title><rect x="0.2705%" y="949" width="0.0153%" height="15" fill="rgb(216,20,37)" fg:x="141" fg:w="8"/><text x="0.5205%" y="959.50"></text></g><g><title>App`graphics::image::Image::draw_tri::_{{closure}} (21 samples, 0.04%)</title><rect x="0.2859%" y="949" width="0.0403%" height="15" fill="rgb(206,188,39)" fg:x="149" fg:w="21"/><text x="0.5359%" y="959.50"></text></g><g><title>App`&lt;opengl_graphics::back_end::GlGraphics as graphics::graphics::Graphics&gt;::tri_list_uv::_{{closure}} (7 samples, 0.01%)</title><rect x="0.3127%" y="933" width="0.0134%" height="15" fill="rgb(217,207,13)" fg:x="163" fg:w="7"/><text x="0.5627%" y="943.50"></text></g><g><title>GLEngine`glBindVertexArray_Exec (7 samples, 0.01%)</title><rect x="0.3281%" y="917" width="0.0134%" height="15" fill="rgb(231,73,38)" fg:x="171" fg:w="7"/><text x="0.5781%" y="927.50"></text></g><g><title>App`gl::BindVertexArray (8 samples, 0.02%)</title><rect x="0.3281%" y="933" width="0.0153%" height="15" fill="rgb(225,20,46)" fg:x="171" fg:w="8"/><text x="0.5781%" y="943.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramPipeline (22 samples, 0.04%)</title><rect x="0.3569%" y="885" width="0.0422%" height="15" fill="rgb(210,31,41)" fg:x="186" fg:w="22"/><text x="0.6069%" y="895.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrIntelRenderVertexArray (24 samples, 0.05%)</title><rect x="0.3549%" y="901" width="0.0460%" height="15" fill="rgb(221,200,47)" fg:x="185" fg:w="24"/><text x="0.6049%" y="911.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`intelUpdateCtxSysProgramCommon(GLDContextRec*, GLDProgramRec*, GLDPipelineProgramRec*, void*, ShaderInfoCacheRec*, unsigned int) (7 samples, 0.01%)</title><rect x="0.4394%" y="837" width="0.0134%" height="15" fill="rgb(226,26,5)" fg:x="229" fg:w="7"/><text x="0.6894%" y="847.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`USC::IM_Shader::Compile (7 samples, 0.01%)</title><rect x="0.4394%" y="821" width="0.0134%" height="15" fill="rgb(249,33,26)" fg:x="229" fg:w="7"/><text x="0.6894%" y="831.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gpusLoadCurrentPipelinePrograms (15 samples, 0.03%)</title><rect x="0.4259%" y="853" width="0.0288%" height="15" fill="rgb(235,183,28)" fg:x="222" fg:w="15"/><text x="0.6759%" y="863.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (29 samples, 0.06%)</title><rect x="0.4144%" y="869" width="0.0556%" height="15" fill="rgb(221,5,38)" fg:x="216" fg:w="29"/><text x="0.6644%" y="879.50"></text></g><g><title>GLEngine`gleUpdateDeferredStateFull (10 samples, 0.02%)</title><rect x="0.4739%" y="869" width="0.0192%" height="15" fill="rgb(247,18,42)" fg:x="247" fg:w="10"/><text x="0.7239%" y="879.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (45 samples, 0.09%)</title><rect x="0.4087%" y="885" width="0.0863%" height="15" fill="rgb(241,131,45)" fg:x="213" fg:w="45"/><text x="0.6587%" y="895.50"></text></g><g><title>App`gl::DrawArrays (78 samples, 0.15%)</title><rect x="0.3473%" y="933" width="0.1496%" height="15" fill="rgb(249,31,29)" fg:x="181" fg:w="78"/><text x="0.5973%" y="943.50"></text></g><g><title>GLEngine`glDrawArrays_GL3Exec (78 samples, 0.15%)</title><rect x="0.3473%" y="917" width="0.1496%" height="15" fill="rgb(225,111,53)" fg:x="181" fg:w="78"/><text x="0.5973%" y="927.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (50 samples, 0.10%)</title><rect x="0.4010%" y="901" width="0.0959%" height="15" fill="rgb(238,160,17)" fg:x="209" fg:w="50"/><text x="0.6510%" y="911.50"></text></g><g><title>GLEngine`glBufferData_Exec (11 samples, 0.02%)</title><rect x="0.4988%" y="901" width="0.0211%" height="15" fill="rgb(214,148,48)" fg:x="260" fg:w="11"/><text x="0.7488%" y="911.50"></text></g><g><title>App`gl::BufferData (13 samples, 0.02%)</title><rect x="0.4988%" y="917" width="0.0249%" height="15" fill="rgb(232,36,49)" fg:x="260" fg:w="13"/><text x="0.7488%" y="927.50"></text></g><g><title>App`opengl_graphics::shader_utils::DynamicAttribute::set (17 samples, 0.03%)</title><rect x="0.4969%" y="933" width="0.0326%" height="15" fill="rgb(209,103,24)" fg:x="259" fg:w="17"/><text x="0.7469%" y="943.50"></text></g><g><title>App`opengl_graphics::back_end::Colored::flush (109 samples, 0.21%)</title><rect x="0.3262%" y="949" width="0.2091%" height="15" fill="rgb(229,88,8)" fg:x="170" fg:w="109"/><text x="0.5762%" y="959.50"></text></g><g><title>App`opengl_graphics::back_end::GlGraphics::use_draw_state (7 samples, 0.01%)</title><rect x="0.5353%" y="949" width="0.0134%" height="15" fill="rgb(213,181,19)" fg:x="279" fg:w="7"/><text x="0.7853%" y="959.50"></text></g><g><title>GLEngine`gleUpdateCurrentProgramState (9 samples, 0.02%)</title><rect x="0.5717%" y="885" width="0.0173%" height="15" fill="rgb(254,191,54)" fg:x="298" fg:w="9"/><text x="0.8217%" y="895.50"></text></g><g><title>GLEngine`glUseProgramObjectARB_Exec (26 samples, 0.05%)</title><rect x="0.5506%" y="917" width="0.0499%" height="15" fill="rgb(241,83,37)" fg:x="287" fg:w="26"/><text x="0.8006%" y="927.50"></text></g><g><title>GLEngine`gleUseProgramObject (25 samples, 0.05%)</title><rect x="0.5525%" y="901" width="0.0480%" height="15" fill="rgb(233,36,39)" fg:x="288" fg:w="25"/><text x="0.8025%" y="911.50"></text></g><g><title>App`opengl_graphics::back_end::GlGraphics::use_program (29 samples, 0.06%)</title><rect x="0.5487%" y="949" width="0.0556%" height="15" fill="rgb(226,3,54)" fg:x="286" fg:w="29"/><text x="0.7987%" y="959.50"></text></g><g><title>App`gl::UseProgram (28 samples, 0.05%)</title><rect x="0.5506%" y="933" width="0.0537%" height="15" fill="rgb(245,192,40)" fg:x="287" fg:w="28"/><text x="0.8006%" y="943.50"></text></g><g><title>App`gl::BindTexture (12 samples, 0.02%)</title><rect x="0.6139%" y="933" width="0.0230%" height="15" fill="rgb(238,167,29)" fg:x="320" fg:w="12"/><text x="0.8639%" y="943.50"></text></g><g><title>GLEngine`glBindTexture_Exec (12 samples, 0.02%)</title><rect x="0.6139%" y="917" width="0.0230%" height="15" fill="rgb(232,182,51)" fg:x="320" fg:w="12"/><text x="0.8639%" y="927.50"></text></g><g><title>GLEngine`gleBindTexture (12 samples, 0.02%)</title><rect x="0.6139%" y="901" width="0.0230%" height="15" fill="rgb(231,60,39)" fg:x="320" fg:w="12"/><text x="0.8639%" y="911.50"></text></g><g><title>GLEngine`gleLookupHashObject (7 samples, 0.01%)</title><rect x="0.6235%" y="885" width="0.0134%" height="15" fill="rgb(208,69,12)" fg:x="325" fg:w="7"/><text x="0.8735%" y="895.50"></text></g><g><title>GLEngine`glBindVertexArray_Exec (10 samples, 0.02%)</title><rect x="0.6389%" y="917" width="0.0192%" height="15" fill="rgb(235,93,37)" fg:x="333" fg:w="10"/><text x="0.8889%" y="927.50"></text></g><g><title>GLEngine`gleBindVertexArray (8 samples, 0.02%)</title><rect x="0.6427%" y="901" width="0.0153%" height="15" fill="rgb(213,116,39)" fg:x="335" fg:w="8"/><text x="0.8927%" y="911.50"></text></g><g><title>App`gl::BindVertexArray (12 samples, 0.02%)</title><rect x="0.6370%" y="933" width="0.0230%" height="15" fill="rgb(222,207,29)" fg:x="332" fg:w="12"/><text x="0.8870%" y="943.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::CheckOOM (10 samples, 0.02%)</title><rect x="0.6907%" y="869" width="0.0192%" height="15" fill="rgb(206,96,30)" fg:x="360" fg:w="10"/><text x="0.9407%" y="879.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::CheckOOM (9 samples, 0.02%)</title><rect x="0.6926%" y="853" width="0.0173%" height="15" fill="rgb(218,138,4)" fg:x="361" fg:w="9"/><text x="0.9426%" y="863.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelStateHeaps::resetHeap (6 samples, 0.01%)</title><rect x="0.6984%" y="837" width="0.0115%" height="15" fill="rgb(250,191,14)" fg:x="364" fg:w="6"/><text x="0.9484%" y="847.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelStateHeaps::allocateHeap (6 samples, 0.01%)</title><rect x="0.6984%" y="821" width="0.0115%" height="15" fill="rgb(239,60,40)" fg:x="364" fg:w="6"/><text x="0.9484%" y="831.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreate (6 samples, 0.01%)</title><rect x="0.6984%" y="805" width="0.0115%" height="15" fill="rgb(206,27,48)" fg:x="364" fg:w="6"/><text x="0.9484%" y="815.50"></text></g><g><title>IOKit`IOConnectCallMethod (6 samples, 0.01%)</title><rect x="0.6984%" y="789" width="0.0115%" height="15" fill="rgb(225,35,8)" fg:x="364" fg:w="6"/><text x="0.9484%" y="799.50"></text></g><g><title>IOKit`io_connect_method (6 samples, 0.01%)</title><rect x="0.6984%" y="773" width="0.0115%" height="15" fill="rgb(250,213,24)" fg:x="364" fg:w="6"/><text x="0.9484%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (6 samples, 0.01%)</title><rect x="0.6984%" y="757" width="0.0115%" height="15" fill="rgb(247,123,22)" fg:x="364" fg:w="6"/><text x="0.9484%" y="767.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updatePSConstantState(GenContext*, unsigned long long) (7 samples, 0.01%)</title><rect x="0.7195%" y="869" width="0.0134%" height="15" fill="rgb(231,138,38)" fg:x="375" fg:w="7"/><text x="0.9695%" y="879.50"></text></g><g><title>IOAccelerator`IOAccelContextAddResource (10 samples, 0.02%)</title><rect x="0.7636%" y="853" width="0.0192%" height="15" fill="rgb(231,145,46)" fg:x="398" fg:w="10"/><text x="1.0136%" y="863.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`void updateBindingTable&lt;SGfx3dStateBindingTablePointers&gt;(GenContext*, unsigned int, SGfx3dStateBindingTablePointers&amp;) (24 samples, 0.05%)</title><rect x="0.7425%" y="869" width="0.0460%" height="15" fill="rgb(251,118,11)" fg:x="387" fg:w="24"/><text x="0.9925%" y="879.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramPipeline (61 samples, 0.12%)</title><rect x="0.6734%" y="885" width="0.1170%" height="15" fill="rgb(217,147,25)" fg:x="351" fg:w="61"/><text x="0.9234%" y="895.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelVertexState::submitVboBuffers (8 samples, 0.02%)</title><rect x="0.7905%" y="885" width="0.0153%" height="15" fill="rgb(247,81,37)" fg:x="412" fg:w="8"/><text x="1.0405%" y="895.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrIntelRenderVertexArray (76 samples, 0.15%)</title><rect x="0.6677%" y="901" width="0.1458%" height="15" fill="rgb(209,12,38)" fg:x="348" fg:w="76"/><text x="0.9177%" y="911.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::updateContextSamplerStates (10 samples, 0.02%)</title><rect x="0.8384%" y="837" width="0.0192%" height="15" fill="rgb(227,1,9)" fg:x="437" fg:w="10"/><text x="1.0884%" y="847.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::UpdateSamplerStates (11 samples, 0.02%)</title><rect x="0.8384%" y="853" width="0.0211%" height="15" fill="rgb(248,47,43)" fg:x="437" fg:w="11"/><text x="1.0884%" y="863.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gpusLoadCurrentPipelinePrograms (11 samples, 0.02%)</title><rect x="0.8710%" y="853" width="0.0211%" height="15" fill="rgb(221,10,30)" fg:x="454" fg:w="11"/><text x="1.1210%" y="863.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`intelUpdateCtxSysProgramCommon(GLDContextRec*, GLDProgramRec*, GLDPipelineProgramRec*, void*, ShaderInfoCacheRec*, unsigned int) (6 samples, 0.01%)</title><rect x="0.8806%" y="837" width="0.0115%" height="15" fill="rgb(210,229,1)" fg:x="459" fg:w="6"/><text x="1.1306%" y="847.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`USC::IM_Shader::Compile (6 samples, 0.01%)</title><rect x="0.8806%" y="821" width="0.0115%" height="15" fill="rgb(222,148,37)" fg:x="459" fg:w="6"/><text x="1.1306%" y="831.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::BindTexture (7 samples, 0.01%)</title><rect x="0.9171%" y="837" width="0.0134%" height="15" fill="rgb(234,67,33)" fg:x="478" fg:w="7"/><text x="1.1671%" y="847.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusLoadCurrentTextures (18 samples, 0.03%)</title><rect x="0.9132%" y="853" width="0.0345%" height="15" fill="rgb(247,98,35)" fg:x="476" fg:w="18"/><text x="1.1632%" y="863.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrBindContextTexture (8 samples, 0.02%)</title><rect x="0.9324%" y="837" width="0.0153%" height="15" fill="rgb(247,138,52)" fg:x="486" fg:w="8"/><text x="1.1824%" y="847.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelVertexArray::buildBufData (10 samples, 0.02%)</title><rect x="0.9727%" y="821" width="0.0192%" height="15" fill="rgb(213,79,30)" fg:x="507" fg:w="10"/><text x="1.2227%" y="831.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelVertexArray::extractBuffers (6 samples, 0.01%)</title><rect x="0.9919%" y="821" width="0.0115%" height="15" fill="rgb(246,177,23)" fg:x="517" fg:w="6"/><text x="1.2419%" y="831.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (93 samples, 0.18%)</title><rect x="0.8269%" y="869" width="0.1784%" height="15" fill="rgb(230,62,27)" fg:x="431" fg:w="93"/><text x="1.0769%" y="879.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusLoadCurrentVertexArray (30 samples, 0.06%)</title><rect x="0.9478%" y="853" width="0.0576%" height="15" fill="rgb(216,154,8)" fg:x="494" fg:w="30"/><text x="1.1978%" y="863.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrUpdateVertexArrayBuffers (18 samples, 0.03%)</title><rect x="0.9708%" y="837" width="0.0345%" height="15" fill="rgb(244,35,45)" fg:x="506" fg:w="18"/><text x="1.2208%" y="847.50"></text></g><g><title>GLEngine`glDrawArrays_GL3Exec (197 samples, 0.38%)</title><rect x="0.6638%" y="917" width="0.3780%" height="15" fill="rgb(251,115,12)" fg:x="346" fg:w="197"/><text x="0.9138%" y="927.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (119 samples, 0.23%)</title><rect x="0.8135%" y="901" width="0.2283%" height="15" fill="rgb(240,54,50)" fg:x="424" fg:w="119"/><text x="1.0635%" y="911.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (114 samples, 0.22%)</title><rect x="0.8231%" y="885" width="0.2187%" height="15" fill="rgb(233,84,52)" fg:x="429" fg:w="114"/><text x="1.0731%" y="895.50"></text></g><g><title>GLEngine`gleUpdateDeferredStateFull (19 samples, 0.04%)</title><rect x="1.0053%" y="869" width="0.0365%" height="15" fill="rgb(207,117,47)" fg:x="524" fg:w="19"/><text x="1.2553%" y="879.50"></text></g><g><title>App`gl::DrawArrays (200 samples, 0.38%)</title><rect x="0.6619%" y="933" width="0.3837%" height="15" fill="rgb(249,43,39)" fg:x="345" fg:w="200"/><text x="0.9119%" y="943.50"></text></g><g><title>GLEngine`glUniform4f_Exec (13 samples, 0.02%)</title><rect x="1.0456%" y="917" width="0.0249%" height="15" fill="rgb(209,38,44)" fg:x="545" fg:w="13"/><text x="1.2956%" y="927.50"></text></g><g><title>GLEngine`setUniform (11 samples, 0.02%)</title><rect x="1.0495%" y="901" width="0.0211%" height="15" fill="rgb(236,212,23)" fg:x="547" fg:w="11"/><text x="1.2995%" y="911.50"></text></g><g><title>GLEngine`setProgramUniformInner (11 samples, 0.02%)</title><rect x="1.0495%" y="885" width="0.0211%" height="15" fill="rgb(242,79,21)" fg:x="547" fg:w="11"/><text x="1.2995%" y="895.50"></text></g><g><title>App`gl::Uniform4f (14 samples, 0.03%)</title><rect x="1.0456%" y="933" width="0.0269%" height="15" fill="rgb(211,96,35)" fg:x="545" fg:w="14"/><text x="1.2956%" y="943.50"></text></g><g><title>GLEngine`glBindBuffer_Exec (6 samples, 0.01%)</title><rect x="1.0744%" y="901" width="0.0115%" height="15" fill="rgb(253,215,40)" fg:x="560" fg:w="6"/><text x="1.3244%" y="911.50"></text></g><g><title>App`gl::BindBuffer (8 samples, 0.02%)</title><rect x="1.0744%" y="917" width="0.0153%" height="15" fill="rgb(211,81,21)" fg:x="560" fg:w="8"/><text x="1.3244%" y="927.50"></text></g><g><title>IOAccelerator`IOAccelDeviceTestEventFast (8 samples, 0.02%)</title><rect x="1.1070%" y="853" width="0.0153%" height="15" fill="rgb(208,190,38)" fg:x="577" fg:w="8"/><text x="1.3570%" y="863.50"></text></g><g><title>IOAccelerator`IOAccelResourceCheckSysMem (15 samples, 0.03%)</title><rect x="1.1224%" y="853" width="0.0288%" height="15" fill="rgb(235,213,38)" fg:x="585" fg:w="15"/><text x="1.3724%" y="863.50"></text></g><g><title>GLEngine`gleGetFreeOrphanNode (29 samples, 0.06%)</title><rect x="1.1032%" y="869" width="0.0556%" height="15" fill="rgb(237,122,38)" fg:x="575" fg:w="29"/><text x="1.3532%" y="879.50"></text></g><g><title>GLEngine`gleAcquireBufferData (38 samples, 0.07%)</title><rect x="1.1013%" y="885" width="0.0729%" height="15" fill="rgb(244,218,35)" fg:x="574" fg:w="38"/><text x="1.3513%" y="895.50"></text></g><g><title>GLEngine`gleApplyBufferData (8 samples, 0.02%)</title><rect x="1.1742%" y="885" width="0.0153%" height="15" fill="rgb(240,68,47)" fg:x="612" fg:w="8"/><text x="1.4242%" y="895.50"></text></g><g><title>GLEngine`gleOrphanBufferObject (8 samples, 0.02%)</title><rect x="1.1895%" y="885" width="0.0153%" height="15" fill="rgb(210,16,53)" fg:x="620" fg:w="8"/><text x="1.4395%" y="895.50"></text></g><g><title>GLEngine`glBufferData_Exec (67 samples, 0.13%)</title><rect x="1.0898%" y="901" width="0.1285%" height="15" fill="rgb(235,124,12)" fg:x="568" fg:w="67"/><text x="1.3398%" y="911.50"></text></g><g><title>App`gl::BufferData (71 samples, 0.14%)</title><rect x="1.0898%" y="917" width="0.1362%" height="15" fill="rgb(224,169,11)" fg:x="568" fg:w="71"/><text x="1.3398%" y="927.50"></text></g><g><title>App`opengl_graphics::shader_utils::DynamicAttribute::set (82 samples, 0.16%)</title><rect x="1.0725%" y="933" width="0.1573%" height="15" fill="rgb(250,166,2)" fg:x="559" fg:w="82"/><text x="1.3225%" y="943.50"></text></g><g><title>App`opengl_graphics::back_end::Textured::flush (331 samples, 0.64%)</title><rect x="0.6044%" y="949" width="0.6350%" height="15" fill="rgb(242,216,29)" fg:x="315" fg:w="331"/><text x="0.8544%" y="959.50"></text></g><g><title>App`&lt;opengl_graphics::back_end::GlGraphics as graphics::graphics::Graphics&gt;::tri_list_uv (516 samples, 0.99%)</title><rect x="0.2513%" y="965" width="0.9900%" height="15" fill="rgb(230,116,27)" fg:x="131" fg:w="516"/><text x="0.5013%" y="975.50"></text></g><g><title>App`graphics::image::Image::draw_tri (521 samples, 1.00%)</title><rect x="0.2475%" y="981" width="0.9996%" height="15" fill="rgb(228,99,48)" fg:x="129" fg:w="521"/><text x="0.4975%" y="991.50"></text></g><g><title>App`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="1.2567%" y="933" width="0.0173%" height="15" fill="rgb(253,11,6)" fg:x="655" fg:w="9"/><text x="1.5067%" y="943.50"></text></g><g><title>App`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (9 samples, 0.02%)</title><rect x="1.2567%" y="917" width="0.0173%" height="15" fill="rgb(247,143,39)" fg:x="655" fg:w="9"/><text x="1.5067%" y="927.50"></text></g><g><title>App`&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.01%)</title><rect x="1.2605%" y="901" width="0.0134%" height="15" fill="rgb(236,97,10)" fg:x="657" fg:w="7"/><text x="1.5105%" y="911.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (18 samples, 0.03%)</title><rect x="1.2567%" y="949" width="0.0345%" height="15" fill="rgb(233,208,19)" fg:x="655" fg:w="18"/><text x="1.5067%" y="959.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (7 samples, 0.01%)</title><rect x="1.3027%" y="917" width="0.0134%" height="15" fill="rgb(216,164,2)" fg:x="679" fg:w="7"/><text x="1.5527%" y="927.50"></text></g><g><title>App`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (41 samples, 0.08%)</title><rect x="1.2528%" y="981" width="0.0787%" height="15" fill="rgb(220,129,5)" fg:x="653" fg:w="41"/><text x="1.5028%" y="991.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (40 samples, 0.08%)</title><rect x="1.2547%" y="965" width="0.0767%" height="15" fill="rgb(242,17,10)" fg:x="654" fg:w="40"/><text x="1.5047%" y="975.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.04%)</title><rect x="1.2912%" y="949" width="0.0403%" height="15" fill="rgb(242,107,0)" fg:x="673" fg:w="21"/><text x="1.5412%" y="959.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.04%)</title><rect x="1.2912%" y="933" width="0.0403%" height="15" fill="rgb(251,28,31)" fg:x="673" fg:w="21"/><text x="1.5412%" y="943.50"></text></g><g><title>App`hashbrown::raw::sse2::Group::match_byte (8 samples, 0.02%)</title><rect x="1.3161%" y="917" width="0.0153%" height="15" fill="rgb(233,223,10)" fg:x="686" fg:w="8"/><text x="1.5661%" y="927.50"></text></g><g><title>App`App::App::render::draw_pieces (578 samples, 1.11%)</title><rect x="0.2283%" y="997" width="1.1089%" height="15" fill="rgb(215,21,27)" fg:x="119" fg:w="578"/><text x="0.4783%" y="1007.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramClearPipeline (12 samples, 0.02%)</title><rect x="1.3564%" y="917" width="0.0230%" height="15" fill="rgb(232,23,21)" fg:x="707" fg:w="12"/><text x="1.6064%" y="927.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.01%)</title><rect x="1.3679%" y="901" width="0.0115%" height="15" fill="rgb(244,5,23)" fg:x="713" fg:w="6"/><text x="1.6179%" y="911.50"></text></g><g><title>App`gl::Clear (21 samples, 0.04%)</title><rect x="1.3411%" y="965" width="0.0403%" height="15" fill="rgb(226,81,46)" fg:x="699" fg:w="21"/><text x="1.5911%" y="975.50"></text></g><g><title>GLEngine`glClear_Exec (20 samples, 0.04%)</title><rect x="1.3430%" y="949" width="0.0384%" height="15" fill="rgb(247,70,30)" fg:x="700" fg:w="20"/><text x="1.5930%" y="959.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gldClearFramebufferData (18 samples, 0.03%)</title><rect x="1.3468%" y="933" width="0.0345%" height="15" fill="rgb(212,68,19)" fg:x="702" fg:w="18"/><text x="1.5968%" y="943.50"></text></g><g><title>App`&lt;opengl_graphics::back_end::GlGraphics as graphics::graphics::Graphics&gt;::clear_color (28 samples, 0.05%)</title><rect x="1.3392%" y="981" width="0.0537%" height="15" fill="rgb(240,187,13)" fg:x="698" fg:w="28"/><text x="1.5892%" y="991.50"></text></g><g><title>App`graphics::clear (34 samples, 0.07%)</title><rect x="1.3392%" y="997" width="0.0652%" height="15" fill="rgb(223,113,26)" fg:x="698" fg:w="34"/><text x="1.5892%" y="1007.50"></text></g><g><title>App`App::App::render::_{{closure}} (719 samples, 1.38%)</title><rect x="0.0269%" y="1013" width="1.3795%" height="15" fill="rgb(206,192,2)" fg:x="14" fg:w="719"/><text x="0.2769%" y="1023.50"></text></g><g><title>App`opengl_graphics::back_end::GlGraphics::draw_begin (10 samples, 0.02%)</title><rect x="1.4063%" y="1013" width="0.0192%" height="15" fill="rgb(241,108,4)" fg:x="733" fg:w="10"/><text x="1.6563%" y="1023.50"></text></g><g><title>App`gl::DrawArrays (6 samples, 0.01%)</title><rect x="1.4293%" y="981" width="0.0115%" height="15" fill="rgb(247,173,49)" fg:x="745" fg:w="6"/><text x="1.6793%" y="991.50"></text></g><g><title>GLEngine`glDrawArrays_GL3Exec (6 samples, 0.01%)</title><rect x="1.4293%" y="965" width="0.0115%" height="15" fill="rgb(224,114,35)" fg:x="745" fg:w="6"/><text x="1.6793%" y="975.50"></text></g><g><title>App`App::App::render (739 samples, 1.42%)</title><rect x="0.0249%" y="1045" width="1.4178%" height="15" fill="rgb(245,159,27)" fg:x="13" fg:w="739"/><text x="0.2749%" y="1055.50"></text></g><g><title>App`opengl_graphics::back_end::GlGraphics::draw (738 samples, 1.42%)</title><rect x="0.0269%" y="1029" width="1.4159%" height="15" fill="rgb(245,172,44)" fg:x="14" fg:w="738"/><text x="0.2769%" y="1039.50"></text></g><g><title>App`opengl_graphics::back_end::GlGraphics::draw_end (9 samples, 0.02%)</title><rect x="1.4255%" y="1013" width="0.0173%" height="15" fill="rgb(236,23,11)" fg:x="743" fg:w="9"/><text x="1.6755%" y="1023.50"></text></g><g><title>App`opengl_graphics::back_end::Textured::flush (8 samples, 0.02%)</title><rect x="1.4274%" y="997" width="0.0153%" height="15" fill="rgb(205,117,38)" fg:x="744" fg:w="8"/><text x="1.6774%" y="1007.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.01%)</title><rect x="1.5138%" y="981" width="0.0134%" height="15" fill="rgb(237,72,25)" fg:x="789" fg:w="7"/><text x="1.7638%" y="991.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.02%)</title><rect x="1.5138%" y="997" width="0.0153%" height="15" fill="rgb(244,70,9)" fg:x="789" fg:w="8"/><text x="1.7638%" y="1007.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::generate_rook_moves (35 samples, 0.07%)</title><rect x="1.4639%" y="1013" width="0.0672%" height="15" fill="rgb(217,125,39)" fg:x="763" fg:w="35"/><text x="1.7139%" y="1023.50"></text></g><g><title>App`App::game_manager::GameManager::new_game (43 samples, 0.08%)</title><rect x="1.4504%" y="1045" width="0.0825%" height="15" fill="rgb(235,36,10)" fg:x="756" fg:w="43"/><text x="1.7004%" y="1055.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::populate_rook_moves (40 samples, 0.08%)</title><rect x="1.4562%" y="1029" width="0.0767%" height="15" fill="rgb(251,123,47)" fg:x="759" fg:w="40"/><text x="1.7062%" y="1039.50"></text></g><g><title>App`&lt;T as core::convert::Into&lt;U&gt;&gt;::into (6 samples, 0.01%)</title><rect x="1.5752%" y="1029" width="0.0115%" height="15" fill="rgb(221,13,13)" fg:x="821" fg:w="6"/><text x="1.8252%" y="1039.50"></text></g><g><title>App`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (20 samples, 0.04%)</title><rect x="1.6461%" y="997" width="0.0384%" height="15" fill="rgb(238,131,9)" fg:x="858" fg:w="20"/><text x="1.8961%" y="1007.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.03%)</title><rect x="1.6519%" y="981" width="0.0326%" height="15" fill="rgb(211,50,8)" fg:x="861" fg:w="17"/><text x="1.9019%" y="991.50"></text></g><g><title>App`glutin_window::GlutinWindow::handle_event (9 samples, 0.02%)</title><rect x="1.6979%" y="997" width="0.0173%" height="15" fill="rgb(245,182,24)" fg:x="885" fg:w="9"/><text x="1.9479%" y="1007.50"></text></g><g><title>App`alloc::rc::Rc&lt;T&gt;::new (9 samples, 0.02%)</title><rect x="1.7421%" y="949" width="0.0173%" height="15" fill="rgb(242,14,37)" fg:x="908" fg:w="9"/><text x="1.9921%" y="959.50"></text></g><g><title>App`alloc::alloc::exchange_malloc (8 samples, 0.02%)</title><rect x="1.7440%" y="933" width="0.0153%" height="15" fill="rgb(246,228,12)" fg:x="909" fg:w="8"/><text x="1.9940%" y="943.50"></text></g><g><title>App`&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.01%)</title><rect x="1.7651%" y="901" width="0.0115%" height="15" fill="rgb(213,55,15)" fg:x="920" fg:w="6"/><text x="2.0151%" y="911.50"></text></g><g><title>App`core::mem::drop (10 samples, 0.02%)</title><rect x="1.7613%" y="949" width="0.0192%" height="15" fill="rgb(209,9,3)" fg:x="918" fg:w="10"/><text x="2.0113%" y="959.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;dyn core::ops::function::FnMut&lt;(winit::event::Event&lt;glutin_window::UserEvent&gt;,&amp;winit::event_loop::EventLoopWindowTarget&lt;glutin_window::UserEvent&gt;,&amp;mut winit::event_loop::ControlFlow)&gt;+Output = ()&gt;&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="1.7613%" y="933" width="0.0192%" height="15" fill="rgb(230,59,30)" fg:x="918" fg:w="10"/><text x="2.0113%" y="943.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;dyn core::ops::function::FnMut&lt;(winit::event::Event&lt;glutin_window::UserEvent&gt;,&amp;winit::event_loop::EventLoopWindowTarget&lt;glutin_window::UserEvent&gt;,&amp;mut winit::event_loop::ControlFlow)&gt;+Output = ()&gt;&gt;&gt; (10 samples, 0.02%)</title><rect x="1.7613%" y="917" width="0.0192%" height="15" fill="rgb(209,121,21)" fg:x="918" fg:w="10"/><text x="2.0113%" y="927.50"></text></g><g><title>App`&lt;objc2::rc::autorelease::AutoreleasePool as core::ops::drop::Drop&gt;::drop::_{{closure}} (9 samples, 0.02%)</title><rect x="1.8284%" y="869" width="0.0173%" height="15" fill="rgb(220,109,13)" fg:x="953" fg:w="9"/><text x="2.0784%" y="879.50"></text></g><g><title>App`std::thread::local::LocalKey&lt;T&gt;::with (35 samples, 0.07%)</title><rect x="1.8150%" y="901" width="0.0672%" height="15" fill="rgb(232,18,1)" fg:x="946" fg:w="35"/><text x="2.0650%" y="911.50"></text></g><g><title>App`std::thread::local::LocalKey&lt;T&gt;::try_with (34 samples, 0.07%)</title><rect x="1.8169%" y="885" width="0.0652%" height="15" fill="rgb(215,41,42)" fg:x="947" fg:w="34"/><text x="2.0669%" y="895.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (7 samples, 0.01%)</title><rect x="1.8687%" y="869" width="0.0134%" height="15" fill="rgb(224,123,36)" fg:x="974" fg:w="7"/><text x="2.1187%" y="879.50"></text></g><g><title>App`&lt;objc2::rc::autorelease::AutoreleasePool as core::ops::drop::Drop&gt;::drop (40 samples, 0.08%)</title><rect x="1.8073%" y="917" width="0.0767%" height="15" fill="rgb(240,125,3)" fg:x="942" fg:w="40"/><text x="2.0573%" y="927.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;objc2::rc::autorelease::AutoreleasePool&gt; (42 samples, 0.08%)</title><rect x="1.8073%" y="933" width="0.0806%" height="15" fill="rgb(205,98,50)" fg:x="942" fg:w="42"/><text x="2.0573%" y="943.50"></text></g><g><title>App`std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.02%)</title><rect x="1.8879%" y="917" width="0.0153%" height="15" fill="rgb(205,185,37)" fg:x="984" fg:w="8"/><text x="2.1379%" y="927.50"></text></g><g><title>App`std::thread::local::LocalKey&lt;T&gt;::try_with (7 samples, 0.01%)</title><rect x="1.8898%" y="901" width="0.0134%" height="15" fill="rgb(238,207,15)" fg:x="985" fg:w="7"/><text x="2.1398%" y="911.50"></text></g><g><title>App`objc2::rc::autorelease::AutoreleasePool::new (10 samples, 0.02%)</title><rect x="1.8879%" y="933" width="0.0192%" height="15" fill="rgb(213,199,42)" fg:x="984" fg:w="10"/><text x="2.1379%" y="943.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn winit::platform_impl::platform::app_state::EventHandler&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="1.9493%" y="917" width="0.0153%" height="15" fill="rgb(235,201,11)" fg:x="1016" fg:w="8"/><text x="2.1993%" y="927.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;objc2::rc::id::Id&lt;winit::platform_impl::platform::appkit::application::NSApplication,objc2::rc::ownership::Shared&gt;&gt; (7 samples, 0.01%)</title><rect x="1.9646%" y="917" width="0.0134%" height="15" fill="rgb(207,46,11)" fg:x="1024" fg:w="7"/><text x="2.2146%" y="927.50"></text></g><g><title>App`once_cell::imp::OnceCell&lt;T&gt;::get_unchecked (6 samples, 0.01%)</title><rect x="2.0356%" y="805" width="0.0115%" height="15" fill="rgb(241,35,35)" fg:x="1061" fg:w="6"/><text x="2.2856%" y="815.50"></text></g><g><title>App`once_cell::sync::Lazy&lt;T,F&gt;::force (24 samples, 0.05%)</title><rect x="2.0049%" y="885" width="0.0460%" height="15" fill="rgb(243,32,47)" fg:x="1045" fg:w="24"/><text x="2.2549%" y="895.50"></text></g><g><title>App`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (24 samples, 0.05%)</title><rect x="2.0049%" y="869" width="0.0460%" height="15" fill="rgb(247,202,23)" fg:x="1045" fg:w="24"/><text x="2.2549%" y="879.50"></text></g><g><title>App`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (22 samples, 0.04%)</title><rect x="2.0087%" y="853" width="0.0422%" height="15" fill="rgb(219,102,11)" fg:x="1047" fg:w="22"/><text x="2.2587%" y="863.50"></text></g><g><title>App`once_cell::sync::OnceCell&lt;T&gt;::get (19 samples, 0.04%)</title><rect x="2.0145%" y="837" width="0.0365%" height="15" fill="rgb(243,110,44)" fg:x="1050" fg:w="19"/><text x="2.2645%" y="847.50"></text></g><g><title>App`once_cell::sync::OnceCell&lt;T&gt;::get_unchecked (11 samples, 0.02%)</title><rect x="2.0299%" y="821" width="0.0211%" height="15" fill="rgb(222,74,54)" fg:x="1058" fg:w="11"/><text x="2.2799%" y="831.50"></text></g><g><title>App`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (27 samples, 0.05%)</title><rect x="2.0030%" y="901" width="0.0518%" height="15" fill="rgb(216,99,12)" fg:x="1044" fg:w="27"/><text x="2.2530%" y="911.50"></text></g><g><title>App`&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="2.0701%" y="869" width="0.0326%" height="15" fill="rgb(226,22,26)" fg:x="1079" fg:w="17"/><text x="2.3201%" y="879.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn winit::platform_impl::platform::app_state::EventHandler&gt;&gt; (30 samples, 0.06%)</title><rect x="2.0663%" y="885" width="0.0576%" height="15" fill="rgb(217,163,10)" fg:x="1077" fg:w="30"/><text x="2.3163%" y="895.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;glutin_window::UserEvent&gt;&gt; (11 samples, 0.02%)</title><rect x="2.1028%" y="869" width="0.0211%" height="15" fill="rgb(213,25,53)" fg:x="1096" fg:w="11"/><text x="2.3528%" y="879.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;winit::event_loop::EventLoopWindowTarget&lt;glutin_window::UserEvent&gt;&gt;&gt; (6 samples, 0.01%)</title><rect x="2.1124%" y="853" width="0.0115%" height="15" fill="rgb(252,105,26)" fg:x="1101" fg:w="6"/><text x="2.3624%" y="863.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;dyn winit::platform_impl::platform::app_state::EventHandler&gt;&gt;&gt; (37 samples, 0.07%)</title><rect x="2.0606%" y="901" width="0.0710%" height="15" fill="rgb(220,39,43)" fg:x="1074" fg:w="37"/><text x="2.3106%" y="911.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::get_old_and_new_control_flow (9 samples, 0.02%)</title><rect x="2.1565%" y="901" width="0.0173%" height="15" fill="rgb(229,68,48)" fg:x="1124" fg:w="9"/><text x="2.4065%" y="911.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events::_{{closure}} (13 samples, 0.02%)</title><rect x="2.2179%" y="837" width="0.0249%" height="15" fill="rgb(252,8,32)" fg:x="1156" fg:w="13"/><text x="2.4679%" y="847.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event::_{{closure}} (34 samples, 0.07%)</title><rect x="2.1987%" y="853" width="0.0652%" height="15" fill="rgb(223,20,43)" fg:x="1146" fg:w="34"/><text x="2.4487%" y="863.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::_&lt;impl winit::event::Event&lt;Never&gt;&gt;::userify (9 samples, 0.02%)</title><rect x="2.2467%" y="837" width="0.0173%" height="15" fill="rgb(229,81,49)" fg:x="1171" fg:w="9"/><text x="2.4967%" y="847.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt;::with_callback (54 samples, 0.10%)</title><rect x="2.1929%" y="869" width="0.1036%" height="15" fill="rgb(236,28,36)" fg:x="1143" fg:w="54"/><text x="2.4429%" y="879.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (58 samples, 0.11%)</title><rect x="2.1891%" y="885" width="0.1113%" height="15" fill="rgb(249,185,26)" fg:x="1141" fg:w="58"/><text x="2.4391%" y="895.50"></text></g><g><title>App`std::sync::poison::Flag::guard (7 samples, 0.01%)</title><rect x="2.3234%" y="853" width="0.0134%" height="15" fill="rgb(249,174,33)" fg:x="1211" fg:w="7"/><text x="2.5734%" y="863.50"></text></g><g><title>App`std::sync::mutex::MutexGuard&lt;T&gt;::new (14 samples, 0.03%)</title><rect x="2.3157%" y="869" width="0.0269%" height="15" fill="rgb(233,201,37)" fg:x="1207" fg:w="14"/><text x="2.5657%" y="879.50"></text></g><g><title>App`std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.06%)</title><rect x="2.3157%" y="885" width="0.0556%" height="15" fill="rgb(221,78,26)" fg:x="1207" fg:w="29"/><text x="2.5657%" y="895.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (10 samples, 0.02%)</title><rect x="2.3522%" y="869" width="0.0192%" height="15" fill="rgb(250,127,30)" fg:x="1226" fg:w="10"/><text x="2.6022%" y="879.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (107 samples, 0.21%)</title><rect x="2.1737%" y="901" width="0.2053%" height="15" fill="rgb(230,49,44)" fg:x="1133" fg:w="107"/><text x="2.4237%" y="911.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::exit (201 samples, 0.39%)</title><rect x="1.9972%" y="917" width="0.3856%" height="15" fill="rgb(229,67,23)" fg:x="1041" fg:w="201"/><text x="2.2472%" y="927.50"></text></g><g><title>App`once_cell::sync::Lazy&lt;T,F&gt;::force (6 samples, 0.01%)</title><rect x="2.3848%" y="885" width="0.0115%" height="15" fill="rgb(249,83,47)" fg:x="1243" fg:w="6"/><text x="2.6348%" y="895.50"></text></g><g><title>App`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.01%)</title><rect x="2.3848%" y="901" width="0.0134%" height="15" fill="rgb(215,43,3)" fg:x="1243" fg:w="7"/><text x="2.6348%" y="911.50"></text></g><g><title>App`alloc::alloc::Global::alloc_impl (7 samples, 0.01%)</title><rect x="2.4001%" y="885" width="0.0134%" height="15" fill="rgb(238,154,13)" fg:x="1251" fg:w="7"/><text x="2.6501%" y="895.50"></text></g><g><title>App`alloc::alloc::exchange_malloc (8 samples, 0.02%)</title><rect x="2.4001%" y="901" width="0.0153%" height="15" fill="rgb(219,56,2)" fg:x="1251" fg:w="8"/><text x="2.6501%" y="911.50"></text></g><g><title>App`std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.02%)</title><rect x="2.4232%" y="901" width="0.0249%" height="15" fill="rgb(233,0,4)" fg:x="1263" fg:w="13"/><text x="2.6732%" y="911.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::set_callback (36 samples, 0.07%)</title><rect x="2.3829%" y="917" width="0.0691%" height="15" fill="rgb(235,30,7)" fg:x="1242" fg:w="36"/><text x="2.6329%" y="927.50"></text></g><g><title>App`objc2::cache::CachedSel::get (7 samples, 0.01%)</title><rect x="2.4692%" y="901" width="0.0134%" height="15" fill="rgb(250,79,13)" fg:x="1287" fg:w="7"/><text x="2.7192%" y="911.50"></text></g><g><title>App`&lt;() as objc2::message::MessageArguments&gt;::__invoke (6 samples, 0.01%)</title><rect x="2.5210%" y="805" width="0.0115%" height="15" fill="rgb(211,146,34)" fg:x="1314" fg:w="6"/><text x="2.7710%" y="815.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (6 samples, 0.01%)</title><rect x="2.5210%" y="789" width="0.0115%" height="15" fill="rgb(228,22,38)" fg:x="1314" fg:w="6"/><text x="2.7710%" y="799.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_message (19 samples, 0.04%)</title><rect x="2.5095%" y="869" width="0.0365%" height="15" fill="rgb(235,168,5)" fg:x="1308" fg:w="19"/><text x="2.7595%" y="879.50"></text></g><g><title>App`objc2::message::platform::send_unverified (16 samples, 0.03%)</title><rect x="2.5153%" y="853" width="0.0307%" height="15" fill="rgb(221,155,16)" fg:x="1311" fg:w="16"/><text x="2.7653%" y="863.50"></text></g><g><title>App`objc2::message::conditional_try (16 samples, 0.03%)</title><rect x="2.5153%" y="837" width="0.0307%" height="15" fill="rgb(215,215,53)" fg:x="1311" fg:w="16"/><text x="2.7653%" y="847.50"></text></g><g><title>App`objc2::message::platform::send_unverified::_{{closure}} (15 samples, 0.03%)</title><rect x="2.5172%" y="821" width="0.0288%" height="15" fill="rgb(223,4,10)" fg:x="1312" fg:w="15"/><text x="2.7672%" y="831.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.01%)</title><rect x="2.5325%" y="805" width="0.0134%" height="15" fill="rgb(234,103,6)" fg:x="1320" fg:w="7"/><text x="2.7825%" y="815.50"></text></g><g><title>App`objc2::rc::id::Id&lt;T,O&gt;::retain_autoreleased (11 samples, 0.02%)</title><rect x="2.5498%" y="869" width="0.0211%" height="15" fill="rgb(227,97,0)" fg:x="1329" fg:w="11"/><text x="2.7998%" y="879.50"></text></g><g><title>App`objc2::rc::id::Id&lt;T,O&gt;::new (6 samples, 0.01%)</title><rect x="2.5594%" y="853" width="0.0115%" height="15" fill="rgb(234,150,53)" fg:x="1334" fg:w="6"/><text x="2.8094%" y="863.50"></text></g><g><title>App`core::option::Option&lt;T&gt;::map (6 samples, 0.01%)</title><rect x="2.5594%" y="837" width="0.0115%" height="15" fill="rgb(228,201,54)" fg:x="1334" fg:w="6"/><text x="2.8094%" y="847.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (9 samples, 0.02%)</title><rect x="2.5709%" y="869" width="0.0173%" height="15" fill="rgb(222,22,37)" fg:x="1340" fg:w="9"/><text x="2.8209%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_retain (12 samples, 0.02%)</title><rect x="2.5882%" y="869" width="0.0230%" height="15" fill="rgb(237,53,32)" fg:x="1349" fg:w="12"/><text x="2.8382%" y="879.50"></text></g><g><title>App`&lt;objc2::__macro_helpers::RetainSemantics&lt;_,_,_,_&gt; as objc2::__macro_helpers::MsgSendId&lt;T,U,O&gt;&gt;::send_message_id (61 samples, 0.12%)</title><rect x="2.4961%" y="885" width="0.1170%" height="15" fill="rgb(233,25,53)" fg:x="1301" fg:w="61"/><text x="2.7461%" y="895.50"></text></g><g><title>App`objc2::cache::CachedSel::get (6 samples, 0.01%)</title><rect x="2.6265%" y="885" width="0.0115%" height="15" fill="rgb(210,40,34)" fg:x="1369" fg:w="6"/><text x="2.8765%" y="895.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApp (97 samples, 0.19%)</title><rect x="2.4577%" y="917" width="0.1861%" height="15" fill="rgb(241,220,44)" fg:x="1281" fg:w="97"/><text x="2.7077%" y="927.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApplication::shared (84 samples, 0.16%)</title><rect x="2.4826%" y="901" width="0.1612%" height="15" fill="rgb(235,28,35)" fg:x="1294" fg:w="84"/><text x="2.7326%" y="911.50"></text></g><g><title>AppKit`-[NSApplication _disableSuddenTermination] (7 samples, 0.01%)</title><rect x="2.7512%" y="789" width="0.0134%" height="15" fill="rgb(210,56,17)" fg:x="1434" fg:w="7"/><text x="3.0012%" y="799.50"></text></g><g><title>HIToolbox`_HIDisableSuddenTerminationForSendEvent (7 samples, 0.01%)</title><rect x="2.7512%" y="773" width="0.0134%" height="15" fill="rgb(224,130,29)" fg:x="1434" fg:w="7"/><text x="3.0012%" y="783.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::appkit::application::NSApplication as objc2::class_type::ClassType&gt;::class (8 samples, 0.02%)</title><rect x="2.8107%" y="757" width="0.0153%" height="15" fill="rgb(235,212,8)" fg:x="1465" fg:w="8"/><text x="3.0607%" y="767.50"></text></g><g><title>AppKit`+[NSAnimationContext activate] (11 samples, 0.02%)</title><rect x="2.8510%" y="661" width="0.0211%" height="15" fill="rgb(223,33,50)" fg:x="1486" fg:w="11"/><text x="3.1010%" y="671.50"></text></g><g><title>QuartzCore`+[CATransaction(CATransactionPrivate) currentState] (6 samples, 0.01%)</title><rect x="2.8606%" y="645" width="0.0115%" height="15" fill="rgb(219,149,13)" fg:x="1491" fg:w="6"/><text x="3.1106%" y="655.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (8 samples, 0.02%)</title><rect x="2.8875%" y="645" width="0.0153%" height="15" fill="rgb(250,156,29)" fg:x="1505" fg:w="8"/><text x="3.1375%" y="655.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (9 samples, 0.02%)</title><rect x="2.9105%" y="629" width="0.0173%" height="15" fill="rgb(216,193,19)" fg:x="1517" fg:w="9"/><text x="3.1605%" y="639.50"></text></g><g><title>CoreFoundation`CFArrayContainsValue (7 samples, 0.01%)</title><rect x="2.9277%" y="629" width="0.0134%" height="15" fill="rgb(216,135,14)" fg:x="1526" fg:w="7"/><text x="3.1777%" y="639.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (22 samples, 0.04%)</title><rect x="2.9565%" y="597" width="0.0422%" height="15" fill="rgb(241,47,5)" fg:x="1541" fg:w="22"/><text x="3.2065%" y="607.50"></text></g><g><title>CoreFoundation`CFHash (9 samples, 0.02%)</title><rect x="2.9815%" y="581" width="0.0173%" height="15" fill="rgb(233,42,35)" fg:x="1554" fg:w="9"/><text x="3.2315%" y="591.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeEqual (7 samples, 0.01%)</title><rect x="2.9987%" y="597" width="0.0134%" height="15" fill="rgb(231,13,6)" fg:x="1563" fg:w="7"/><text x="3.2487%" y="607.50"></text></g><g><title>CoreFoundation`CFSetGetValue (44 samples, 0.08%)</title><rect x="2.9527%" y="613" width="0.0844%" height="15" fill="rgb(207,181,40)" fg:x="1539" fg:w="44"/><text x="3.2027%" y="623.50"></text></g><g><title>CoreFoundation`__CFStringHash (13 samples, 0.02%)</title><rect x="3.0122%" y="597" width="0.0249%" height="15" fill="rgb(254,173,49)" fg:x="1570" fg:w="13"/><text x="3.2622%" y="607.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (6 samples, 0.01%)</title><rect x="3.0390%" y="613" width="0.0115%" height="15" fill="rgb(221,1,38)" fg:x="1584" fg:w="6"/><text x="3.2890%" y="623.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (55 samples, 0.11%)</title><rect x="2.9469%" y="629" width="0.1055%" height="15" fill="rgb(206,124,46)" fg:x="1536" fg:w="55"/><text x="3.1969%" y="639.50"></text></g><g><title>CoreFoundation`CFRunLoopAddObserver (84 samples, 0.16%)</title><rect x="2.9028%" y="645" width="0.1612%" height="15" fill="rgb(249,21,11)" fg:x="1513" fg:w="84"/><text x="3.1528%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (19 samples, 0.04%)</title><rect x="3.0966%" y="597" width="0.0365%" height="15" fill="rgb(222,201,40)" fg:x="1614" fg:w="19"/><text x="3.3466%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.03%)</title><rect x="3.1062%" y="581" width="0.0269%" height="15" fill="rgb(235,61,29)" fg:x="1619" fg:w="14"/><text x="3.3562%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.03%)</title><rect x="3.1062%" y="565" width="0.0269%" height="15" fill="rgb(219,207,3)" fg:x="1619" fg:w="14"/><text x="3.3562%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.01%)</title><rect x="3.1215%" y="549" width="0.0115%" height="15" fill="rgb(222,56,46)" fg:x="1627" fg:w="6"/><text x="3.3715%" y="559.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (29 samples, 0.06%)</title><rect x="3.0793%" y="613" width="0.0556%" height="15" fill="rgb(239,76,54)" fg:x="1605" fg:w="29"/><text x="3.3293%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_copyWeak (7 samples, 0.01%)</title><rect x="3.1541%" y="565" width="0.0134%" height="15" fill="rgb(231,124,27)" fg:x="1644" fg:w="7"/><text x="3.4041%" y="575.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (14 samples, 0.03%)</title><rect x="3.1465%" y="597" width="0.0269%" height="15" fill="rgb(249,195,6)" fg:x="1640" fg:w="14"/><text x="3.3965%" y="607.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (13 samples, 0.02%)</title><rect x="3.1484%" y="581" width="0.0249%" height="15" fill="rgb(237,174,47)" fg:x="1641" fg:w="13"/><text x="3.3984%" y="591.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (23 samples, 0.04%)</title><rect x="3.1388%" y="613" width="0.0441%" height="15" fill="rgb(206,201,31)" fg:x="1636" fg:w="23"/><text x="3.3888%" y="623.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverCreate (63 samples, 0.12%)</title><rect x="3.0736%" y="629" width="0.1209%" height="15" fill="rgb(231,57,52)" fg:x="1602" fg:w="63"/><text x="3.3236%" y="639.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverCreateWithHandler (75 samples, 0.14%)</title><rect x="3.0716%" y="645" width="0.1439%" height="15" fill="rgb(248,177,22)" fg:x="1601" fg:w="75"/><text x="3.3216%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_copyWeak (8 samples, 0.02%)</title><rect x="3.2213%" y="645" width="0.0153%" height="15" fill="rgb(215,211,37)" fg:x="1679" fg:w="8"/><text x="3.4713%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_initWeak (36 samples, 0.07%)</title><rect x="3.2386%" y="645" width="0.0691%" height="15" fill="rgb(241,128,51)" fg:x="1688" fg:w="36"/><text x="3.4886%" y="655.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (26 samples, 0.05%)</title><rect x="3.2577%" y="629" width="0.0499%" height="15" fill="rgb(227,165,31)" fg:x="1698" fg:w="26"/><text x="3.5077%" y="639.50"></text></g><g><title>libobjc.A.dylib`weak_entry_for_referent(weak_table_t*, objc_object*) (6 samples, 0.01%)</title><rect x="3.2961%" y="613" width="0.0115%" height="15" fill="rgb(228,167,24)" fg:x="1718" fg:w="6"/><text x="3.5461%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.01%)</title><rect x="3.3076%" y="645" width="0.0134%" height="15" fill="rgb(228,143,12)" fg:x="1724" fg:w="7"/><text x="3.5576%" y="655.50"></text></g><g><title>AppKit`-[NSApplication setWindowsNeedUpdate:] (239 samples, 0.46%)</title><rect x="2.8759%" y="661" width="0.4585%" height="15" fill="rgb(249,149,8)" fg:x="1499" fg:w="239"/><text x="3.1259%" y="671.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (33 samples, 0.06%)</title><rect x="3.3613%" y="453" width="0.0633%" height="15" fill="rgb(243,35,44)" fg:x="1752" fg:w="33"/><text x="3.6113%" y="463.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (6 samples, 0.01%)</title><rect x="3.4323%" y="421" width="0.0115%" height="15" fill="rgb(246,89,9)" fg:x="1789" fg:w="6"/><text x="3.6823%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (13 samples, 0.02%)</title><rect x="3.4899%" y="37" width="0.0249%" height="15" fill="rgb(233,213,13)" fg:x="1819" fg:w="13"/><text x="3.7399%" y="47.50"></text></g><g><title>AppKit`-[NSEvent _postAtStart:] (23 samples, 0.04%)</title><rect x="3.4726%" y="85" width="0.0441%" height="15" fill="rgb(233,141,41)" fg:x="1810" fg:w="23"/><text x="3.7226%" y="95.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (16 samples, 0.03%)</title><rect x="3.4861%" y="69" width="0.0307%" height="15" fill="rgb(239,167,4)" fg:x="1817" fg:w="16"/><text x="3.7361%" y="79.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (15 samples, 0.03%)</title><rect x="3.4880%" y="53" width="0.0288%" height="15" fill="rgb(209,217,16)" fg:x="1818" fg:w="15"/><text x="3.7380%" y="63.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApplication::postEvent_atStart (27 samples, 0.05%)</title><rect x="3.4707%" y="181" width="0.0518%" height="15" fill="rgb(219,88,35)" fg:x="1809" fg:w="27"/><text x="3.7207%" y="191.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_message (27 samples, 0.05%)</title><rect x="3.4707%" y="165" width="0.0518%" height="15" fill="rgb(220,193,23)" fg:x="1809" fg:w="27"/><text x="3.7207%" y="175.50"></text></g><g><title>App`objc2::message::platform::send_unverified (27 samples, 0.05%)</title><rect x="3.4707%" y="149" width="0.0518%" height="15" fill="rgb(230,90,52)" fg:x="1809" fg:w="27"/><text x="3.7207%" y="159.50"></text></g><g><title>App`objc2::message::conditional_try (26 samples, 0.05%)</title><rect x="3.4726%" y="133" width="0.0499%" height="15" fill="rgb(252,106,19)" fg:x="1810" fg:w="26"/><text x="3.7226%" y="143.50"></text></g><g><title>App`objc2::message::platform::send_unverified::_{{closure}} (26 samples, 0.05%)</title><rect x="3.4726%" y="117" width="0.0499%" height="15" fill="rgb(206,74,20)" fg:x="1810" fg:w="26"/><text x="3.7226%" y="127.50"></text></g><g><title>App`&lt;(A,B) as objc2::message::MessageArguments&gt;::__invoke (26 samples, 0.05%)</title><rect x="3.4726%" y="101" width="0.0499%" height="15" fill="rgb(230,138,44)" fg:x="1810" fg:w="26"/><text x="3.7226%" y="111.50"></text></g><g><title>App`objc2::rc::autorelease::autoreleasepool (31 samples, 0.06%)</title><rect x="3.4669%" y="213" width="0.0595%" height="15" fill="rgb(235,182,43)" fg:x="1807" fg:w="31"/><text x="3.7169%" y="223.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::cleared::_{{closure}} (29 samples, 0.06%)</title><rect x="3.4707%" y="197" width="0.0556%" height="15" fill="rgb(242,16,51)" fg:x="1809" fg:w="29"/><text x="3.7207%" y="207.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::cleared (48 samples, 0.09%)</title><rect x="3.4573%" y="229" width="0.0921%" height="15" fill="rgb(248,9,4)" fg:x="1802" fg:w="48"/><text x="3.7073%" y="239.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (52 samples, 0.10%)</title><rect x="3.4515%" y="389" width="0.0998%" height="15" fill="rgb(210,31,22)" fg:x="1799" fg:w="52"/><text x="3.7015%" y="399.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler (50 samples, 0.10%)</title><rect x="3.4554%" y="373" width="0.0959%" height="15" fill="rgb(239,54,39)" fg:x="1801" fg:w="50"/><text x="3.7054%" y="383.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_handler (50 samples, 0.10%)</title><rect x="3.4554%" y="357" width="0.0959%" height="15" fill="rgb(230,99,41)" fg:x="1801" fg:w="50"/><text x="3.7054%" y="367.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::stop_app_on_panic (50 samples, 0.10%)</title><rect x="3.4554%" y="341" width="0.0959%" height="15" fill="rgb(253,106,12)" fg:x="1801" fg:w="50"/><text x="3.7054%" y="351.50"></text></g><g><title>App`std::panic::catch_unwind (50 samples, 0.10%)</title><rect x="3.4554%" y="325" width="0.0959%" height="15" fill="rgb(213,46,41)" fg:x="1801" fg:w="50"/><text x="3.7054%" y="335.50"></text></g><g><title>App`std::panicking::try (50 samples, 0.10%)</title><rect x="3.4554%" y="309" width="0.0959%" height="15" fill="rgb(215,133,35)" fg:x="1801" fg:w="50"/><text x="3.7054%" y="319.50"></text></g><g><title>App`__rust_try (50 samples, 0.10%)</title><rect x="3.4554%" y="293" width="0.0959%" height="15" fill="rgb(213,28,5)" fg:x="1801" fg:w="50"/><text x="3.7054%" y="303.50"></text></g><g><title>App`std::panicking::try::do_call (50 samples, 0.10%)</title><rect x="3.4554%" y="277" width="0.0959%" height="15" fill="rgb(215,77,49)" fg:x="1801" fg:w="50"/><text x="3.7054%" y="287.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_handler::_{{closure}} (50 samples, 0.10%)</title><rect x="3.4554%" y="261" width="0.0959%" height="15" fill="rgb(248,100,22)" fg:x="1801" fg:w="50"/><text x="3.7054%" y="271.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler::_{{closure}} (50 samples, 0.10%)</title><rect x="3.4554%" y="245" width="0.0959%" height="15" fill="rgb(208,67,9)" fg:x="1801" fg:w="50"/><text x="3.7054%" y="255.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (54 samples, 0.10%)</title><rect x="3.4496%" y="405" width="0.1036%" height="15" fill="rgb(219,133,21)" fg:x="1798" fg:w="54"/><text x="3.6996%" y="415.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (12 samples, 0.02%)</title><rect x="3.5590%" y="405" width="0.0230%" height="15" fill="rgb(246,46,29)" fg:x="1855" fg:w="12"/><text x="3.8090%" y="415.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (11 samples, 0.02%)</title><rect x="3.5609%" y="389" width="0.0211%" height="15" fill="rgb(246,185,52)" fg:x="1856" fg:w="11"/><text x="3.8109%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (10 samples, 0.02%)</title><rect x="3.5858%" y="405" width="0.0192%" height="15" fill="rgb(252,136,11)" fg:x="1869" fg:w="10"/><text x="3.8358%" y="415.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (83 samples, 0.16%)</title><rect x="3.4477%" y="421" width="0.1592%" height="15" fill="rgb(219,138,53)" fg:x="1797" fg:w="83"/><text x="3.6977%" y="431.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (93 samples, 0.18%)</title><rect x="3.4304%" y="437" width="0.1784%" height="15" fill="rgb(211,51,23)" fg:x="1788" fg:w="93"/><text x="3.6804%" y="447.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (135 samples, 0.26%)</title><rect x="3.3594%" y="485" width="0.2590%" height="15" fill="rgb(247,221,28)" fg:x="1751" fg:w="135"/><text x="3.6094%" y="495.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (134 samples, 0.26%)</title><rect x="3.3613%" y="469" width="0.2571%" height="15" fill="rgb(251,222,45)" fg:x="1752" fg:w="134"/><text x="3.6113%" y="479.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (98 samples, 0.19%)</title><rect x="3.4304%" y="453" width="0.1880%" height="15" fill="rgb(217,162,53)" fg:x="1788" fg:w="98"/><text x="3.6804%" y="463.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (141 samples, 0.27%)</title><rect x="3.3498%" y="613" width="0.2705%" height="15" fill="rgb(229,93,14)" fg:x="1746" fg:w="141"/><text x="3.5998%" y="623.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (141 samples, 0.27%)</title><rect x="3.3498%" y="597" width="0.2705%" height="15" fill="rgb(209,67,49)" fg:x="1746" fg:w="141"/><text x="3.5998%" y="607.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (141 samples, 0.27%)</title><rect x="3.3498%" y="581" width="0.2705%" height="15" fill="rgb(213,87,29)" fg:x="1746" fg:w="141"/><text x="3.5998%" y="591.50"></text></g><g><title>AppKit`NSControlTrackMouse (141 samples, 0.27%)</title><rect x="3.3498%" y="565" width="0.2705%" height="15" fill="rgb(205,151,52)" fg:x="1746" fg:w="141"/><text x="3.5998%" y="575.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (141 samples, 0.27%)</title><rect x="3.3498%" y="549" width="0.2705%" height="15" fill="rgb(253,215,39)" fg:x="1746" fg:w="141"/><text x="3.5998%" y="559.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) trackEventsMatchingMask:timeout:mode:handler:] (137 samples, 0.26%)</title><rect x="3.3575%" y="533" width="0.2628%" height="15" fill="rgb(221,220,41)" fg:x="1750" fg:w="137"/><text x="3.6075%" y="543.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (137 samples, 0.26%)</title><rect x="3.3575%" y="517" width="0.2628%" height="15" fill="rgb(218,133,21)" fg:x="1750" fg:w="137"/><text x="3.6075%" y="527.50"></text></g><g><title>AppKit`_DPSNextEvent (136 samples, 0.26%)</title><rect x="3.3594%" y="501" width="0.2609%" height="15" fill="rgb(221,193,43)" fg:x="1751" fg:w="136"/><text x="3.6094%" y="511.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (145 samples, 0.28%)</title><rect x="3.3498%" y="629" width="0.2782%" height="15" fill="rgb(240,128,52)" fg:x="1746" fg:w="145"/><text x="3.5998%" y="639.50"></text></g><g><title>App`winit::platform_impl::platform::view::WinitView::mouse_moved (14 samples, 0.03%)</title><rect x="3.6299%" y="629" width="0.0269%" height="15" fill="rgb(253,114,12)" fg:x="1892" fg:w="14"/><text x="3.8799%" y="639.50"></text></g><g><title>App`winit::platform_impl::platform::view::WinitView::mouse_motion (14 samples, 0.03%)</title><rect x="3.6299%" y="613" width="0.0269%" height="15" fill="rgb(215,223,47)" fg:x="1892" fg:w="14"/><text x="3.8799%" y="623.50"></text></g><g><title>App`winit::platform_impl::platform::view::WinitView::update_potentially_stale_modifiers (6 samples, 0.01%)</title><rect x="3.6453%" y="597" width="0.0115%" height="15" fill="rgb(248,225,23)" fg:x="1900" fg:w="6"/><text x="3.8953%" y="607.50"></text></g><g><title>App`&lt;objc2::declare::ivar::Ivar&lt;T&gt; as core::ops::deref::Deref&gt;::deref (6 samples, 0.01%)</title><rect x="3.6453%" y="581" width="0.0115%" height="15" fill="rgb(250,108,0)" fg:x="1900" fg:w="6"/><text x="3.8953%" y="591.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (167 samples, 0.32%)</title><rect x="3.3479%" y="645" width="0.3204%" height="15" fill="rgb(228,208,7)" fg:x="1745" fg:w="167"/><text x="3.5979%" y="655.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (172 samples, 0.33%)</title><rect x="3.3441%" y="661" width="0.3300%" height="15" fill="rgb(244,45,10)" fg:x="1743" fg:w="172"/><text x="3.5941%" y="671.50"></text></g><g><title>CoreFoundation`CFRunLoopCopyCurrentMode (9 samples, 0.02%)</title><rect x="3.7220%" y="645" width="0.0173%" height="15" fill="rgb(207,125,25)" fg:x="1940" fg:w="9"/><text x="3.9720%" y="655.50"></text></g><g><title>CoreFoundation`_CFGetNonObjCTypeID (7 samples, 0.01%)</title><rect x="3.7547%" y="629" width="0.0134%" height="15" fill="rgb(210,195,18)" fg:x="1957" fg:w="7"/><text x="4.0047%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (7 samples, 0.01%)</title><rect x="3.7834%" y="629" width="0.0134%" height="15" fill="rgb(249,80,12)" fg:x="1972" fg:w="7"/><text x="4.0334%" y="639.50"></text></g><g><title>QuartzCore`CA::Transaction::ensure_implicit (35 samples, 0.07%)</title><rect x="3.7393%" y="645" width="0.0672%" height="15" fill="rgb(221,65,9)" fg:x="1949" fg:w="35"/><text x="3.9893%" y="655.50"></text></g><g><title>QuartzCore`+[CATransaction(CATransactionPrivate) activateBackground:] (49 samples, 0.09%)</title><rect x="3.7201%" y="661" width="0.0940%" height="15" fill="rgb(235,49,36)" fg:x="1939" fg:w="49"/><text x="3.9701%" y="671.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (520 samples, 1.00%)</title><rect x="2.8357%" y="677" width="0.9977%" height="15" fill="rgb(225,32,20)" fg:x="1478" fg:w="520"/><text x="3.0857%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.01%)</title><rect x="3.8218%" y="661" width="0.0115%" height="15" fill="rgb(215,141,46)" fg:x="1992" fg:w="6"/><text x="4.0718%" y="671.50"></text></g><g><title>App`&lt;(A,) as objc2::message::MessageArguments&gt;::__invoke (533 samples, 1.02%)</title><rect x="2.8318%" y="693" width="1.0226%" height="15" fill="rgb(250,160,47)" fg:x="1476" fg:w="533"/><text x="3.0818%" y="703.50"></text></g><g><title>App`objc2::message::conditional_try (540 samples, 1.04%)</title><rect x="2.8261%" y="725" width="1.0360%" height="15" fill="rgb(216,222,40)" fg:x="1473" fg:w="540"/><text x="3.0761%" y="735.50"></text></g><g><title>App`objc2::message::platform::send_super_unverified::_{{closure}} (537 samples, 1.03%)</title><rect x="2.8318%" y="709" width="1.0303%" height="15" fill="rgb(234,217,39)" fg:x="1476" fg:w="537"/><text x="3.0818%" y="719.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_super_message (542 samples, 1.04%)</title><rect x="2.8261%" y="757" width="1.0399%" height="15" fill="rgb(207,178,40)" fg:x="1473" fg:w="542"/><text x="3.0761%" y="767.50"></text></g><g><title>App`objc2::message::platform::send_super_unverified (542 samples, 1.04%)</title><rect x="2.8261%" y="741" width="1.0399%" height="15" fill="rgb(221,136,13)" fg:x="1473" fg:w="542"/><text x="3.0761%" y="751.50"></text></g><g><title>App`objc2::message::MessageReceiver::__send_super_message_static (558 samples, 1.07%)</title><rect x="2.7973%" y="773" width="1.0706%" height="15" fill="rgb(249,199,10)" fg:x="1458" fg:w="558"/><text x="3.0473%" y="783.50"></text></g><g><title>App`winit::platform_impl::platform::app::maybe_dispatch_device_event (6 samples, 0.01%)</title><rect x="3.8698%" y="773" width="0.0115%" height="15" fill="rgb(249,222,13)" fg:x="2017" fg:w="6"/><text x="4.1198%" y="783.50"></text></g><g><title>App`objc2::message::conditional_try (8 samples, 0.02%)</title><rect x="3.8890%" y="725" width="0.0153%" height="15" fill="rgb(244,185,38)" fg:x="2027" fg:w="8"/><text x="4.1390%" y="735.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_message (12 samples, 0.02%)</title><rect x="3.8832%" y="757" width="0.0230%" height="15" fill="rgb(236,202,9)" fg:x="2024" fg:w="12"/><text x="4.1332%" y="767.50"></text></g><g><title>App`objc2::message::platform::send_unverified (11 samples, 0.02%)</title><rect x="3.8851%" y="741" width="0.0211%" height="15" fill="rgb(250,229,37)" fg:x="2025" fg:w="11"/><text x="4.1351%" y="751.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::event::NSEvent::modifierFlags (15 samples, 0.03%)</title><rect x="3.8813%" y="773" width="0.0288%" height="15" fill="rgb(206,174,23)" fg:x="2023" fg:w="15"/><text x="4.1313%" y="783.50"></text></g><g><title>App`objc2::cache::CachedSel::get (13 samples, 0.02%)</title><rect x="3.9139%" y="757" width="0.0249%" height="15" fill="rgb(211,33,43)" fg:x="2040" fg:w="13"/><text x="4.1639%" y="767.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_message (10 samples, 0.02%)</title><rect x="3.9388%" y="757" width="0.0192%" height="15" fill="rgb(245,58,50)" fg:x="2053" fg:w="10"/><text x="4.1888%" y="767.50"></text></g><g><title>App`objc2::message::platform::send_unverified (8 samples, 0.02%)</title><rect x="3.9427%" y="741" width="0.0153%" height="15" fill="rgb(244,68,36)" fg:x="2055" fg:w="8"/><text x="4.1927%" y="751.50"></text></g><g><title>App`winit::platform_impl::platform::app::WinitApplication::send_event (620 samples, 1.19%)</title><rect x="2.7762%" y="789" width="1.1895%" height="15" fill="rgb(232,229,15)" fg:x="1447" fg:w="620"/><text x="3.0262%" y="799.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::event::NSEvent::type_ (29 samples, 0.06%)</title><rect x="3.9101%" y="773" width="0.0556%" height="15" fill="rgb(254,30,23)" fg:x="2038" fg:w="29"/><text x="4.1601%" y="783.50"></text></g><g><title>Foundation`+[NSUndoManager(NSPrivate) _endTopLevelGroupings] (6 samples, 0.01%)</title><rect x="3.9715%" y="789" width="0.0115%" height="15" fill="rgb(235,160,14)" fg:x="2070" fg:w="6"/><text x="4.2215%" y="799.50"></text></g><g><title>CoreFoundation`_CFSuddenTerminationEnable (6 samples, 0.01%)</title><rect x="3.9868%" y="773" width="0.0115%" height="15" fill="rgb(212,155,44)" fg:x="2078" fg:w="6"/><text x="4.2368%" y="783.50"></text></g><g><title>HIToolbox`_HIEnableSuddenTerminationForSendEvent (7 samples, 0.01%)</title><rect x="3.9868%" y="789" width="0.0134%" height="15" fill="rgb(226,2,50)" fg:x="2078" fg:w="7"/><text x="4.2368%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_release (6 samples, 0.01%)</title><rect x="4.0021%" y="789" width="0.0115%" height="15" fill="rgb(234,177,6)" fg:x="2086" fg:w="6"/><text x="4.2521%" y="799.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (663 samples, 1.27%)</title><rect x="2.7493%" y="805" width="1.2720%" height="15" fill="rgb(217,24,9)" fg:x="1433" fg:w="663"/><text x="2.9993%" y="815.50"></text></g><g><title>AppKit`-[NSApplication windowWithWindowNumber:] (8 samples, 0.02%)</title><rect x="4.1384%" y="789" width="0.0153%" height="15" fill="rgb(220,13,46)" fg:x="2157" fg:w="8"/><text x="4.3884%" y="799.50"></text></g><g><title>QuartzCore`CA::Layer::ancestor_context_id (8 samples, 0.02%)</title><rect x="4.2343%" y="725" width="0.0153%" height="15" fill="rgb(239,221,27)" fg:x="2207" fg:w="8"/><text x="4.4843%" y="735.50"></text></g><g><title>QuartzCore`CA::Layer::retain_context (14 samples, 0.03%)</title><rect x="4.2305%" y="741" width="0.0269%" height="15" fill="rgb(222,198,25)" fg:x="2205" fg:w="14"/><text x="4.4805%" y="751.50"></text></g><g><title>QuartzCore`-[CALayer(CALayerPrivate) context] (24 samples, 0.05%)</title><rect x="4.2266%" y="757" width="0.0460%" height="15" fill="rgb(211,99,13)" fg:x="2203" fg:w="24"/><text x="4.4766%" y="767.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _findWindowUsingContextID:] (47 samples, 0.09%)</title><rect x="4.2055%" y="773" width="0.0902%" height="15" fill="rgb(232,111,31)" fg:x="2192" fg:w="47"/><text x="4.4555%" y="783.50"></text></g><g><title>CoreGraphics`CGRectIsEmpty (7 samples, 0.01%)</title><rect x="4.3226%" y="773" width="0.0134%" height="15" fill="rgb(245,82,37)" fg:x="2253" fg:w="7"/><text x="4.5726%" y="783.50"></text></g><g><title>SkyLight`SLEventGetFlags (7 samples, 0.01%)</title><rect x="4.3705%" y="773" width="0.0134%" height="15" fill="rgb(227,149,46)" fg:x="2278" fg:w="7"/><text x="4.6205%" y="783.50"></text></g><g><title>CoreGraphics`CGRectIsEmpty (7 samples, 0.01%)</title><rect x="4.4453%" y="757" width="0.0134%" height="15" fill="rgb(218,36,50)" fg:x="2317" fg:w="7"/><text x="4.6953%" y="767.50"></text></g><g><title>SkyLight`CGSDisplaySystemStateGetBounds (34 samples, 0.07%)</title><rect x="4.4588%" y="757" width="0.0652%" height="15" fill="rgb(226,80,48)" fg:x="2324" fg:w="34"/><text x="4.7088%" y="767.50"></text></g><g><title>SkyLight`SLSGetDisplayBounds (361 samples, 0.69%)</title><rect x="4.3955%" y="773" width="0.6926%" height="15" fill="rgb(238,224,15)" fg:x="2291" fg:w="361"/><text x="4.6455%" y="783.50"></text></g><g><title>SkyLight`get_current_display_system_state() (294 samples, 0.56%)</title><rect x="4.5240%" y="757" width="0.5641%" height="15" fill="rgb(241,136,10)" fg:x="2358" fg:w="294"/><text x="4.7740%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (278 samples, 0.53%)</title><rect x="4.5547%" y="741" width="0.5334%" height="15" fill="rgb(208,32,45)" fg:x="2374" fg:w="278"/><text x="4.8047%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (310 samples, 0.59%)</title><rect x="5.1610%" y="741" width="0.5948%" height="15" fill="rgb(207,135,9)" fg:x="2690" fg:w="310"/><text x="5.4110%" y="751.50"></text></g><g><title>SkyLight`SLSMainDisplayID (350 samples, 0.67%)</title><rect x="5.0881%" y="773" width="0.6715%" height="15" fill="rgb(206,86,44)" fg:x="2652" fg:w="350"/><text x="5.3381%" y="783.50"></text></g><g><title>SkyLight`get_current_display_system_state() (335 samples, 0.64%)</title><rect x="5.1168%" y="757" width="0.6427%" height="15" fill="rgb(245,177,15)" fg:x="2667" fg:w="335"/><text x="5.3668%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (38 samples, 0.07%)</title><rect x="5.7634%" y="773" width="0.0729%" height="15" fill="rgb(206,64,50)" fg:x="3004" fg:w="38"/><text x="6.0134%" y="783.50"></text></g><g><title>AppKit`-[NSEvent _initWithCGEvent:eventRef:] (883 samples, 1.69%)</title><rect x="4.1576%" y="789" width="1.6941%" height="15" fill="rgb(234,36,40)" fg:x="2167" fg:w="883"/><text x="4.4076%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_os_nospin_lock_unlock (7 samples, 0.01%)</title><rect x="5.8382%" y="773" width="0.0134%" height="15" fill="rgb(213,64,8)" fg:x="3043" fg:w="7"/><text x="6.0882%" y="783.50"></text></g><g><title>CoreFoundation`_CFRelease (16 samples, 0.03%)</title><rect x="5.9169%" y="709" width="0.0307%" height="15" fill="rgb(210,75,36)" fg:x="3084" fg:w="16"/><text x="6.1669%" y="719.50"></text></g><g><title>SkyLight`event_finalize(void const*) (33 samples, 0.06%)</title><rect x="5.8958%" y="741" width="0.0633%" height="15" fill="rgb(229,88,21)" fg:x="3073" fg:w="33"/><text x="6.1458%" y="751.50"></text></g><g><title>SkyLight`CGSEventReclaimObjects (30 samples, 0.06%)</title><rect x="5.9015%" y="725" width="0.0576%" height="15" fill="rgb(252,204,47)" fg:x="3076" fg:w="30"/><text x="6.1515%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free (7 samples, 0.01%)</title><rect x="5.9610%" y="741" width="0.0134%" height="15" fill="rgb(208,77,27)" fg:x="3107" fg:w="7"/><text x="6.2110%" y="751.50"></text></g><g><title>CoreFoundation`_CFRelease (51 samples, 0.10%)</title><rect x="5.8824%" y="757" width="0.0978%" height="15" fill="rgb(221,76,26)" fg:x="3066" fg:w="51"/><text x="6.1324%" y="767.50"></text></g><g><title>HIToolbox`ReleaseEvent (74 samples, 0.14%)</title><rect x="5.8651%" y="773" width="0.1420%" height="15" fill="rgb(225,139,18)" fg:x="3057" fg:w="74"/><text x="6.1151%" y="783.50"></text></g><g><title>AppKit`-[NSEvent .cxx_destruct] (8 samples, 0.02%)</title><rect x="6.0167%" y="725" width="0.0153%" height="15" fill="rgb(230,137,11)" fg:x="3136" fg:w="8"/><text x="6.2667%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (8 samples, 0.02%)</title><rect x="6.0167%" y="709" width="0.0153%" height="15" fill="rgb(212,28,1)" fg:x="3136" fg:w="8"/><text x="6.2667%" y="719.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (19 samples, 0.04%)</title><rect x="6.0090%" y="757" width="0.0365%" height="15" fill="rgb(248,164,17)" fg:x="3132" fg:w="19"/><text x="6.2590%" y="767.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (17 samples, 0.03%)</title><rect x="6.0128%" y="741" width="0.0326%" height="15" fill="rgb(222,171,42)" fg:x="3134" fg:w="17"/><text x="6.2628%" y="751.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (23 samples, 0.04%)</title><rect x="6.0071%" y="773" width="0.0441%" height="15" fill="rgb(243,84,45)" fg:x="3131" fg:w="23"/><text x="6.2571%" y="783.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (6 samples, 0.01%)</title><rect x="6.0589%" y="773" width="0.0115%" height="15" fill="rgb(252,49,23)" fg:x="3158" fg:w="6"/><text x="6.3089%" y="783.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (115 samples, 0.22%)</title><rect x="5.8517%" y="789" width="0.2206%" height="15" fill="rgb(215,19,7)" fg:x="3050" fg:w="115"/><text x="6.1017%" y="799.50"></text></g><g><title>AppKit`-[NSEvent window] (27 samples, 0.05%)</title><rect x="6.0723%" y="789" width="0.0518%" height="15" fill="rgb(238,81,41)" fg:x="3165" fg:w="27"/><text x="6.3223%" y="799.50"></text></g><g><title>libobjc.A.dylib`object_getIndexedIvars (13 samples, 0.02%)</title><rect x="6.0992%" y="773" width="0.0249%" height="15" fill="rgb(210,199,37)" fg:x="3179" fg:w="13"/><text x="6.3492%" y="783.50"></text></g><g><title>CoreFoundation`_CFSuddenTerminationDisable (10 samples, 0.02%)</title><rect x="6.1510%" y="757" width="0.0192%" height="15" fill="rgb(244,192,49)" fg:x="3206" fg:w="10"/><text x="6.4010%" y="767.50"></text></g><g><title>CoreFoundation`_CFSuddenTerminationDisable (17 samples, 0.03%)</title><rect x="6.1874%" y="741" width="0.0326%" height="15" fill="rgb(226,211,11)" fg:x="3225" fg:w="17"/><text x="6.4374%" y="751.50"></text></g><g><title>libxpc.dylib`_xpc_transaction_begin (10 samples, 0.02%)</title><rect x="6.2008%" y="725" width="0.0192%" height="15" fill="rgb(236,162,54)" fg:x="3232" fg:w="10"/><text x="6.4508%" y="735.50"></text></g><g><title>HIToolbox`_HIDisableSuddenTerminationForSendEvent (27 samples, 0.05%)</title><rect x="6.1817%" y="757" width="0.0518%" height="15" fill="rgb(220,229,9)" fg:x="3222" fg:w="27"/><text x="6.4317%" y="767.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (13 samples, 0.02%)</title><rect x="6.2335%" y="757" width="0.0249%" height="15" fill="rgb(250,87,22)" fg:x="3249" fg:w="13"/><text x="6.4835%" y="767.50"></text></g><g><title>AppKit`-[NSApplication _disableSuddenTermination] (58 samples, 0.11%)</title><rect x="6.1510%" y="773" width="0.1113%" height="15" fill="rgb(239,43,17)" fg:x="3206" fg:w="58"/><text x="6.4010%" y="783.50"></text></g><g><title>SkyLight`SLSGetCurrentCursorLocation (6 samples, 0.01%)</title><rect x="6.2833%" y="741" width="0.0115%" height="15" fill="rgb(231,177,25)" fg:x="3275" fg:w="6"/><text x="6.5333%" y="751.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (21 samples, 0.04%)</title><rect x="6.2622%" y="773" width="0.0403%" height="15" fill="rgb(219,179,1)" fg:x="3264" fg:w="21"/><text x="6.5122%" y="783.50"></text></g><g><title>HIToolbox`ConvertEventRefToEventRecord (20 samples, 0.04%)</title><rect x="6.2641%" y="757" width="0.0384%" height="15" fill="rgb(238,219,53)" fg:x="3265" fg:w="20"/><text x="6.5141%" y="767.50"></text></g><g><title>HIToolbox`MBDisplays::ForEachActiveDisplayDo(unsigned char, bool  (6 samples, 0.01%)</title><rect x="6.3140%" y="533" width="0.0115%" height="15" fill="rgb(232,167,36)" fg:x="3291" fg:w="6"/><text x="6.5640%" y="543.50"></text></g><g><title>HIToolbox`invocation function for block in MenuBarInstance::ForEachBoundsDo(bool  (8 samples, 0.02%)</title><rect x="6.3332%" y="533" width="0.0153%" height="15" fill="rgb(244,19,51)" fg:x="3301" fg:w="8"/><text x="6.5832%" y="543.50"></text></g><g><title>HIToolbox`GetCurrentSpaceForDisplay (8 samples, 0.02%)</title><rect x="6.3332%" y="517" width="0.0153%" height="15" fill="rgb(224,6,22)" fg:x="3301" fg:w="8"/><text x="6.5832%" y="527.50"></text></g><g><title>SkyLight`SLSManagedDisplayGetCurrentSpace (7 samples, 0.01%)</title><rect x="6.3351%" y="501" width="0.0134%" height="15" fill="rgb(224,145,5)" fg:x="3302" fg:w="7"/><text x="6.5851%" y="511.50"></text></g><g><title>SkyLight`SLSMainDisplayID (6 samples, 0.01%)</title><rect x="6.3505%" y="533" width="0.0115%" height="15" fill="rgb(234,130,49)" fg:x="3310" fg:w="6"/><text x="6.6005%" y="543.50"></text></g><g><title>SkyLight`get_current_display_system_state() (6 samples, 0.01%)</title><rect x="6.3505%" y="517" width="0.0115%" height="15" fill="rgb(254,6,2)" fg:x="3310" fg:w="6"/><text x="6.6005%" y="527.50"></text></g><g><title>HIToolbox`FindWindowAndPartFromMouseEvent (28 samples, 0.05%)</title><rect x="6.3102%" y="709" width="0.0537%" height="15" fill="rgb(208,96,46)" fg:x="3289" fg:w="28"/><text x="6.5602%" y="719.50"></text></g><g><title>HIToolbox`FindWindow (28 samples, 0.05%)</title><rect x="6.3102%" y="693" width="0.0537%" height="15" fill="rgb(239,3,39)" fg:x="3289" fg:w="28"/><text x="6.5602%" y="703.50"></text></g><g><title>HIToolbox`FindWindowOfClass (28 samples, 0.05%)</title><rect x="6.3102%" y="677" width="0.0537%" height="15" fill="rgb(233,210,1)" fg:x="3289" fg:w="28"/><text x="6.5602%" y="687.50"></text></g><g><title>HIToolbox`FindWindowCommon(Point, OpaqueWindowPtr**, short*) (28 samples, 0.05%)</title><rect x="6.3102%" y="661" width="0.0537%" height="15" fill="rgb(244,137,37)" fg:x="3289" fg:w="28"/><text x="6.5602%" y="671.50"></text></g><g><title>HIToolbox`MBarHit (27 samples, 0.05%)</title><rect x="6.3121%" y="645" width="0.0518%" height="15" fill="rgb(240,136,2)" fg:x="3290" fg:w="27"/><text x="6.5621%" y="655.50"></text></g><g><title>HIToolbox`_MBarHit(MenuData*, Point, unsigned char, unsigned char*, MenuData**) (27 samples, 0.05%)</title><rect x="6.3121%" y="629" width="0.0518%" height="15" fill="rgb(239,18,37)" fg:x="3290" fg:w="27"/><text x="6.5621%" y="639.50"></text></g><g><title>HIToolbox`_HIPresentationInstanceFindAtLocation (27 samples, 0.05%)</title><rect x="6.3121%" y="613" width="0.0518%" height="15" fill="rgb(218,185,22)" fg:x="3290" fg:w="27"/><text x="6.5621%" y="623.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachMenuBarDo(void  (26 samples, 0.05%)</title><rect x="6.3140%" y="597" width="0.0499%" height="15" fill="rgb(225,218,4)" fg:x="3291" fg:w="26"/><text x="6.5640%" y="607.50"></text></g><g><title>HIToolbox`___HIPresentationInstanceFindAtLocation_block_invoke (26 samples, 0.05%)</title><rect x="6.3140%" y="581" width="0.0499%" height="15" fill="rgb(230,182,32)" fg:x="3291" fg:w="26"/><text x="6.5640%" y="591.50"></text></g><g><title>HIToolbox`MenuBarInstance::ContainsPoint (26 samples, 0.05%)</title><rect x="6.3140%" y="565" width="0.0499%" height="15" fill="rgb(242,56,43)" fg:x="3291" fg:w="26"/><text x="6.5640%" y="575.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (26 samples, 0.05%)</title><rect x="6.3140%" y="549" width="0.0499%" height="15" fill="rgb(233,99,24)" fg:x="3291" fg:w="26"/><text x="6.5640%" y="559.50"></text></g><g><title>HIToolbox`SendEventToEventTarget (29 samples, 0.06%)</title><rect x="6.3102%" y="773" width="0.0556%" height="15" fill="rgb(234,209,42)" fg:x="3289" fg:w="29"/><text x="6.5602%" y="783.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (29 samples, 0.06%)</title><rect x="6.3102%" y="757" width="0.0556%" height="15" fill="rgb(227,7,12)" fg:x="3289" fg:w="29"/><text x="6.5602%" y="767.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (29 samples, 0.06%)</title><rect x="6.3102%" y="741" width="0.0556%" height="15" fill="rgb(245,203,43)" fg:x="3289" fg:w="29"/><text x="6.5602%" y="751.50"></text></g><g><title>HIToolbox`ToolboxEventDispatcherHandler(OpaqueEventHandlerCallRef*, OpaqueEventRef*, void*) (29 samples, 0.06%)</title><rect x="6.3102%" y="725" width="0.0556%" height="15" fill="rgb(238,205,33)" fg:x="3289" fg:w="29"/><text x="6.5602%" y="735.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (125 samples, 0.24%)</title><rect x="6.1471%" y="789" width="0.2398%" height="15" fill="rgb(231,56,7)" fg:x="3204" fg:w="125"/><text x="6.3971%" y="799.50"></text></g><g><title>CoreFoundation`-[NSDate timeIntervalSinceNow] (7 samples, 0.01%)</title><rect x="6.4330%" y="773" width="0.0134%" height="15" fill="rgb(244,186,29)" fg:x="3353" fg:w="7"/><text x="6.6830%" y="783.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (11 samples, 0.02%)</title><rect x="6.4522%" y="629" width="0.0211%" height="15" fill="rgb(234,111,31)" fg:x="3363" fg:w="11"/><text x="6.7022%" y="639.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (11 samples, 0.02%)</title><rect x="6.4522%" y="613" width="0.0211%" height="15" fill="rgb(241,149,10)" fg:x="3363" fg:w="11"/><text x="6.7022%" y="623.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (11 samples, 0.02%)</title><rect x="6.4522%" y="597" width="0.0211%" height="15" fill="rgb(249,206,44)" fg:x="3363" fg:w="11"/><text x="6.7022%" y="607.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (11 samples, 0.02%)</title><rect x="6.4522%" y="581" width="0.0211%" height="15" fill="rgb(251,153,30)" fg:x="3363" fg:w="11"/><text x="6.7022%" y="591.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (11 samples, 0.02%)</title><rect x="6.4522%" y="565" width="0.0211%" height="15" fill="rgb(239,152,38)" fg:x="3363" fg:w="11"/><text x="6.7022%" y="575.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (11 samples, 0.02%)</title><rect x="6.4522%" y="549" width="0.0211%" height="15" fill="rgb(249,139,47)" fg:x="3363" fg:w="11"/><text x="6.7022%" y="559.50"></text></g><g><title>App`winit::platform_impl::platform::app_delegate::ApplicationDelegate::did_finish_launching (11 samples, 0.02%)</title><rect x="6.4522%" y="533" width="0.0211%" height="15" fill="rgb(244,64,35)" fg:x="3363" fg:w="11"/><text x="6.7022%" y="543.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::launched (11 samples, 0.02%)</title><rect x="6.4522%" y="517" width="0.0211%" height="15" fill="rgb(216,46,15)" fg:x="3363" fg:w="11"/><text x="6.7022%" y="527.50"></text></g><g><title>App`winit::platform_impl::platform::menu::initialize (9 samples, 0.02%)</title><rect x="6.4560%" y="501" width="0.0173%" height="15" fill="rgb(250,74,19)" fg:x="3365" fg:w="9"/><text x="6.7060%" y="511.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::menu::NSMenu::addItem (6 samples, 0.01%)</title><rect x="6.4618%" y="485" width="0.0115%" height="15" fill="rgb(249,42,33)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="495.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_message (6 samples, 0.01%)</title><rect x="6.4618%" y="469" width="0.0115%" height="15" fill="rgb(242,149,17)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="479.50"></text></g><g><title>App`objc2::message::platform::send_unverified (6 samples, 0.01%)</title><rect x="6.4618%" y="453" width="0.0115%" height="15" fill="rgb(244,29,21)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="463.50"></text></g><g><title>App`objc2::message::conditional_try (6 samples, 0.01%)</title><rect x="6.4618%" y="437" width="0.0115%" height="15" fill="rgb(220,130,37)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="447.50"></text></g><g><title>App`objc2::message::platform::send_unverified::_{{closure}} (6 samples, 0.01%)</title><rect x="6.4618%" y="421" width="0.0115%" height="15" fill="rgb(211,67,2)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="431.50"></text></g><g><title>App`&lt;(A,) as objc2::message::MessageArguments&gt;::__invoke (6 samples, 0.01%)</title><rect x="6.4618%" y="405" width="0.0115%" height="15" fill="rgb(235,68,52)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="415.50"></text></g><g><title>AppKit`-[NSMenu insertItem:atIndex:] (6 samples, 0.01%)</title><rect x="6.4618%" y="389" width="0.0115%" height="15" fill="rgb(246,142,3)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="399.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (6 samples, 0.01%)</title><rect x="6.4618%" y="373" width="0.0115%" height="15" fill="rgb(241,25,7)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="383.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (6 samples, 0.01%)</title><rect x="6.4618%" y="357" width="0.0115%" height="15" fill="rgb(242,119,39)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="367.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (6 samples, 0.01%)</title><rect x="6.4618%" y="341" width="0.0115%" height="15" fill="rgb(241,98,45)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="351.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (6 samples, 0.01%)</title><rect x="6.4618%" y="325" width="0.0115%" height="15" fill="rgb(254,28,30)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="335.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (6 samples, 0.01%)</title><rect x="6.4618%" y="309" width="0.0115%" height="15" fill="rgb(241,142,54)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="319.50"></text></g><g><title>Foundation`-[__NSObserver _doit:] (6 samples, 0.01%)</title><rect x="6.4618%" y="293" width="0.0115%" height="15" fill="rgb(222,85,15)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="303.50"></text></g><g><title>AppKit`___NSMenuUpdateKeyboardAwareShortcuts_block_invoke_3 (6 samples, 0.01%)</title><rect x="6.4618%" y="277" width="0.0115%" height="15" fill="rgb(210,85,47)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="287.50"></text></g><g><title>AppKit`-[NSMenuItem(NSLocalizedKeyboardShortcuts) shouldMenuItemBeUpdatedDueToNotification] (6 samples, 0.01%)</title><rect x="6.4618%" y="261" width="0.0115%" height="15" fill="rgb(224,206,25)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="271.50"></text></g><g><title>AppKit`-[NSMenuItem(NSLocalizedKeyboardShortcuts) menuItemOrSubmenuNeedsShortcutLocalization] (6 samples, 0.01%)</title><rect x="6.4618%" y="245" width="0.0115%" height="15" fill="rgb(243,201,19)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="255.50"></text></g><g><title>Foundation`_NSFaultInObject (6 samples, 0.01%)</title><rect x="6.4618%" y="229" width="0.0115%" height="15" fill="rgb(236,59,4)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="239.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (6 samples, 0.01%)</title><rect x="6.4618%" y="213" width="0.0115%" height="15" fill="rgb(254,179,45)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="223.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (6 samples, 0.01%)</title><rect x="6.4618%" y="197" width="0.0115%" height="15" fill="rgb(226,14,10)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="207.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (6 samples, 0.01%)</title><rect x="6.4618%" y="181" width="0.0115%" height="15" fill="rgb(244,27,41)" fg:x="3368" fg:w="6"/><text x="6.7118%" y="191.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (12 samples, 0.02%)</title><rect x="6.4522%" y="773" width="0.0230%" height="15" fill="rgb(235,35,32)" fg:x="3363" fg:w="12"/><text x="6.7022%" y="783.50"></text></g><g><title>AE`aeProcessAppleEvent (12 samples, 0.02%)</title><rect x="6.4522%" y="757" width="0.0230%" height="15" fill="rgb(218,68,31)" fg:x="3363" fg:w="12"/><text x="6.7022%" y="767.50"></text></g><g><title>AE`0x00007ff80e171570 (12 samples, 0.02%)</title><rect x="6.4522%" y="741" width="0.0230%" height="15" fill="rgb(207,120,37)" fg:x="3363" fg:w="12"/><text x="6.7022%" y="751.50"></text></g><g><title>AE`0x00007ff80e1715ef (12 samples, 0.02%)</title><rect x="6.4522%" y="725" width="0.0230%" height="15" fill="rgb(227,98,0)" fg:x="3363" fg:w="12"/><text x="6.7022%" y="735.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (12 samples, 0.02%)</title><rect x="6.4522%" y="709" width="0.0230%" height="15" fill="rgb(207,7,3)" fg:x="3363" fg:w="12"/><text x="6.7022%" y="719.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (12 samples, 0.02%)</title><rect x="6.4522%" y="693" width="0.0230%" height="15" fill="rgb(206,98,19)" fg:x="3363" fg:w="12"/><text x="6.7022%" y="703.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (12 samples, 0.02%)</title><rect x="6.4522%" y="677" width="0.0230%" height="15" fill="rgb(217,5,26)" fg:x="3363" fg:w="12"/><text x="6.7022%" y="687.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (12 samples, 0.02%)</title><rect x="6.4522%" y="661" width="0.0230%" height="15" fill="rgb(235,190,38)" fg:x="3363" fg:w="12"/><text x="6.7022%" y="671.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (12 samples, 0.02%)</title><rect x="6.4522%" y="645" width="0.0230%" height="15" fill="rgb(247,86,24)" fg:x="3363" fg:w="12"/><text x="6.7022%" y="655.50"></text></g><g><title>HIToolbox`GetMainEventQueue (6 samples, 0.01%)</title><rect x="6.4982%" y="757" width="0.0115%" height="15" fill="rgb(205,101,16)" fg:x="3387" fg:w="6"/><text x="6.7482%" y="767.50"></text></g><g><title>CarbonCore`MPCurrentTaskID (8 samples, 0.02%)</title><rect x="6.5443%" y="741" width="0.0153%" height="15" fill="rgb(246,168,33)" fg:x="3411" fg:w="8"/><text x="6.7943%" y="751.50"></text></g><g><title>CoreFoundation`CFRunLoopGetCurrent (6 samples, 0.01%)</title><rect x="6.5615%" y="741" width="0.0115%" height="15" fill="rgb(231,114,1)" fg:x="3420" fg:w="6"/><text x="6.8115%" y="751.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (9 samples, 0.02%)</title><rect x="6.6498%" y="373" width="0.0173%" height="15" fill="rgb(207,184,53)" fg:x="3466" fg:w="9"/><text x="6.8998%" y="383.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (10 samples, 0.02%)</title><rect x="6.6498%" y="389" width="0.0192%" height="15" fill="rgb(224,95,51)" fg:x="3466" fg:w="10"/><text x="6.8998%" y="399.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (14 samples, 0.03%)</title><rect x="6.6459%" y="645" width="0.0269%" height="15" fill="rgb(212,188,45)" fg:x="3464" fg:w="14"/><text x="6.8959%" y="655.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (14 samples, 0.03%)</title><rect x="6.6459%" y="629" width="0.0269%" height="15" fill="rgb(223,154,38)" fg:x="3464" fg:w="14"/><text x="6.8959%" y="639.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (14 samples, 0.03%)</title><rect x="6.6459%" y="613" width="0.0269%" height="15" fill="rgb(251,22,52)" fg:x="3464" fg:w="14"/><text x="6.8959%" y="623.50"></text></g><g><title>HIToolbox`ShowHide (12 samples, 0.02%)</title><rect x="6.6498%" y="597" width="0.0230%" height="15" fill="rgb(229,209,22)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="607.50"></text></g><g><title>HIToolbox`_ShowHideWindows (12 samples, 0.02%)</title><rect x="6.6498%" y="581" width="0.0230%" height="15" fill="rgb(234,138,34)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="591.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (12 samples, 0.02%)</title><rect x="6.6498%" y="565" width="0.0230%" height="15" fill="rgb(212,95,11)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="575.50"></text></g><g><title>HIToolbox`HIView::Render (12 samples, 0.02%)</title><rect x="6.6498%" y="549" width="0.0230%" height="15" fill="rgb(240,179,47)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="559.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (12 samples, 0.02%)</title><rect x="6.6498%" y="533" width="0.0230%" height="15" fill="rgb(240,163,11)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="543.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (12 samples, 0.02%)</title><rect x="6.6498%" y="517" width="0.0230%" height="15" fill="rgb(236,37,12)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="527.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (12 samples, 0.02%)</title><rect x="6.6498%" y="501" width="0.0230%" height="15" fill="rgb(232,164,16)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="511.50"></text></g><g><title>HIToolbox`HIView::SendDraw (12 samples, 0.02%)</title><rect x="6.6498%" y="485" width="0.0230%" height="15" fill="rgb(244,205,15)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="495.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (12 samples, 0.02%)</title><rect x="6.6498%" y="469" width="0.0230%" height="15" fill="rgb(223,117,47)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="479.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (12 samples, 0.02%)</title><rect x="6.6498%" y="453" width="0.0230%" height="15" fill="rgb(244,107,35)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="463.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (12 samples, 0.02%)</title><rect x="6.6498%" y="437" width="0.0230%" height="15" fill="rgb(205,140,8)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="447.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (12 samples, 0.02%)</title><rect x="6.6498%" y="421" width="0.0230%" height="15" fill="rgb(228,84,46)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="431.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (12 samples, 0.02%)</title><rect x="6.6498%" y="405" width="0.0230%" height="15" fill="rgb(254,188,9)" fg:x="3466" fg:w="12"/><text x="6.8998%" y="415.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (15 samples, 0.03%)</title><rect x="6.6459%" y="693" width="0.0288%" height="15" fill="rgb(206,112,54)" fg:x="3464" fg:w="15"/><text x="6.8959%" y="703.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (15 samples, 0.03%)</title><rect x="6.6459%" y="677" width="0.0288%" height="15" fill="rgb(216,84,49)" fg:x="3464" fg:w="15"/><text x="6.8959%" y="687.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (15 samples, 0.03%)</title><rect x="6.6459%" y="661" width="0.0288%" height="15" fill="rgb(214,194,35)" fg:x="3464" fg:w="15"/><text x="6.8959%" y="671.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (16 samples, 0.03%)</title><rect x="6.6459%" y="709" width="0.0307%" height="15" fill="rgb(249,28,3)" fg:x="3464" fg:w="16"/><text x="6.8959%" y="719.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (33 samples, 0.06%)</title><rect x="6.6306%" y="725" width="0.0633%" height="15" fill="rgb(222,56,52)" fg:x="3456" fg:w="33"/><text x="6.8806%" y="735.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (51 samples, 0.10%)</title><rect x="6.6037%" y="741" width="0.0978%" height="15" fill="rgb(245,217,50)" fg:x="3442" fg:w="51"/><text x="6.8537%" y="751.50"></text></g><g><title>CarbonCore`_TSThreadManagerInitialized (9 samples, 0.02%)</title><rect x="6.7246%" y="725" width="0.0173%" height="15" fill="rgb(213,201,24)" fg:x="3505" fg:w="9"/><text x="6.9746%" y="735.50"></text></g><g><title>HIToolbox`GetCurrentEventQueue (19 samples, 0.04%)</title><rect x="6.7131%" y="741" width="0.0365%" height="15" fill="rgb(248,116,28)" fg:x="3499" fg:w="19"/><text x="6.9631%" y="751.50"></text></g><g><title>HIToolbox`GetCurrentEventTime (6 samples, 0.01%)</title><rect x="6.7495%" y="741" width="0.0115%" height="15" fill="rgb(219,72,43)" fg:x="3518" fg:w="6"/><text x="6.9995%" y="751.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (7 samples, 0.01%)</title><rect x="6.7649%" y="725" width="0.0134%" height="15" fill="rgb(209,138,14)" fg:x="3526" fg:w="7"/><text x="7.0149%" y="735.50"></text></g><g><title>HIToolbox`GetMainEventQueue (11 samples, 0.02%)</title><rect x="6.7611%" y="741" width="0.0211%" height="15" fill="rgb(222,18,33)" fg:x="3524" fg:w="11"/><text x="7.0111%" y="751.50"></text></g><g><title>CoreFoundation`CFEqual (6 samples, 0.01%)</title><rect x="6.8704%" y="709" width="0.0115%" height="15" fill="rgb(213,199,7)" fg:x="3581" fg:w="6"/><text x="7.1204%" y="719.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (18 samples, 0.03%)</title><rect x="6.9145%" y="677" width="0.0345%" height="15" fill="rgb(250,110,10)" fg:x="3604" fg:w="18"/><text x="7.1645%" y="687.50"></text></g><g><title>CoreFoundation`CFSetGetValue (29 samples, 0.06%)</title><rect x="6.9145%" y="693" width="0.0556%" height="15" fill="rgb(248,123,6)" fg:x="3604" fg:w="29"/><text x="7.1645%" y="703.50"></text></g><g><title>CoreFoundation`__CFStringHash (6 samples, 0.01%)</title><rect x="6.9587%" y="677" width="0.0115%" height="15" fill="rgb(206,91,31)" fg:x="3627" fg:w="6"/><text x="7.2087%" y="687.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (52 samples, 0.10%)</title><rect x="6.9011%" y="709" width="0.0998%" height="15" fill="rgb(211,154,13)" fg:x="3597" fg:w="52"/><text x="7.1511%" y="719.50"></text></g><g><title>libobjc.A.dylib`object_setClass (8 samples, 0.02%)</title><rect x="6.9855%" y="693" width="0.0153%" height="15" fill="rgb(225,148,7)" fg:x="3641" fg:w="8"/><text x="7.2355%" y="703.50"></text></g><g><title>App`&lt;alloc::rc::Weak&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.01%)</title><rect x="7.0795%" y="645" width="0.0115%" height="15" fill="rgb(220,160,43)" fg:x="3690" fg:w="6"/><text x="7.3295%" y="655.50"></text></g><g><title>App`std::panicking::try::do_call (11 samples, 0.02%)</title><rect x="7.1179%" y="581" width="0.0211%" height="15" fill="rgb(213,52,39)" fg:x="3710" fg:w="11"/><text x="7.3679%" y="591.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_handler::_{{closure}} (11 samples, 0.02%)</title><rect x="7.1179%" y="565" width="0.0211%" height="15" fill="rgb(243,137,7)" fg:x="3710" fg:w="11"/><text x="7.3679%" y="575.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler::_{{closure}} (8 samples, 0.02%)</title><rect x="7.1237%" y="549" width="0.0153%" height="15" fill="rgb(230,79,13)" fg:x="3713" fg:w="8"/><text x="7.3737%" y="559.50"></text></g><g><title>App`std::panic::catch_unwind (14 samples, 0.03%)</title><rect x="7.1141%" y="629" width="0.0269%" height="15" fill="rgb(247,105,23)" fg:x="3708" fg:w="14"/><text x="7.3641%" y="639.50"></text></g><g><title>App`std::panicking::try (12 samples, 0.02%)</title><rect x="7.1179%" y="613" width="0.0230%" height="15" fill="rgb(223,179,41)" fg:x="3710" fg:w="12"/><text x="7.3679%" y="623.50"></text></g><g><title>App`__rust_try (12 samples, 0.02%)</title><rect x="7.1179%" y="597" width="0.0230%" height="15" fill="rgb(218,9,34)" fg:x="3710" fg:w="12"/><text x="7.3679%" y="607.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler (43 samples, 0.08%)</title><rect x="7.0604%" y="677" width="0.0825%" height="15" fill="rgb(222,106,8)" fg:x="3680" fg:w="43"/><text x="7.3104%" y="687.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_handler (34 samples, 0.07%)</title><rect x="7.0776%" y="661" width="0.0652%" height="15" fill="rgb(211,220,0)" fg:x="3689" fg:w="34"/><text x="7.3276%" y="671.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::stop_app_on_panic (19 samples, 0.04%)</title><rect x="7.1064%" y="645" width="0.0365%" height="15" fill="rgb(229,52,16)" fg:x="3704" fg:w="19"/><text x="7.3564%" y="655.50"></text></g><g><title>QuartzCore`CA::Context::retain_all_contexts (9 samples, 0.02%)</title><rect x="7.2868%" y="629" width="0.0173%" height="15" fill="rgb(212,155,18)" fg:x="3798" fg:w="9"/><text x="7.5368%" y="639.50"></text></g><g><title>QuartzCore`CA::Layer::thread_flags_ (7 samples, 0.01%)</title><rect x="7.3270%" y="613" width="0.0134%" height="15" fill="rgb(242,21,14)" fg:x="3819" fg:w="7"/><text x="7.5770%" y="623.50"></text></g><g><title>QuartzCore`CA::Layer::layout_if_needed (18 samples, 0.03%)</title><rect x="7.3098%" y="629" width="0.0345%" height="15" fill="rgb(222,19,48)" fg:x="3810" fg:w="18"/><text x="7.5598%" y="639.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (227 samples, 0.44%)</title><rect x="7.3769%" y="613" width="0.4355%" height="15" fill="rgb(232,45,27)" fg:x="3845" fg:w="227"/><text x="7.6269%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (220 samples, 0.42%)</title><rect x="7.3904%" y="597" width="0.4221%" height="15" fill="rgb(249,103,42)" fg:x="3852" fg:w="220"/><text x="7.6404%" y="607.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (239 samples, 0.46%)</title><rect x="7.3673%" y="629" width="0.4585%" height="15" fill="rgb(246,81,33)" fg:x="3840" fg:w="239"/><text x="7.6173%" y="639.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::set_object_cache (15 samples, 0.03%)</title><rect x="7.8259%" y="629" width="0.0288%" height="15" fill="rgb(252,33,42)" fg:x="4079" fg:w="15"/><text x="8.0759%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (11 samples, 0.02%)</title><rect x="7.8969%" y="597" width="0.0211%" height="15" fill="rgb(209,212,41)" fg:x="4116" fg:w="11"/><text x="8.1469%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (11 samples, 0.02%)</title><rect x="7.8969%" y="581" width="0.0211%" height="15" fill="rgb(207,154,6)" fg:x="4116" fg:w="11"/><text x="8.1469%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (11 samples, 0.02%)</title><rect x="7.8969%" y="565" width="0.0211%" height="15" fill="rgb(223,64,47)" fg:x="4116" fg:w="11"/><text x="8.1469%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.02%)</title><rect x="7.8969%" y="549" width="0.0211%" height="15" fill="rgb(211,161,38)" fg:x="4116" fg:w="11"/><text x="8.1469%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_alloc_from_heap (14 samples, 0.03%)</title><rect x="7.8949%" y="613" width="0.0269%" height="15" fill="rgb(219,138,40)" fg:x="4115" fg:w="14"/><text x="8.1449%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_async_f_slow (19 samples, 0.04%)</title><rect x="7.8873%" y="629" width="0.0365%" height="15" fill="rgb(241,228,46)" fg:x="4111" fg:w="19"/><text x="8.1373%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (251 samples, 0.48%)</title><rect x="7.9256%" y="629" width="0.4816%" height="15" fill="rgb(223,209,38)" fg:x="4131" fg:w="251"/><text x="8.1756%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (242 samples, 0.46%)</title><rect x="7.9429%" y="613" width="0.4643%" height="15" fill="rgb(236,164,45)" fg:x="4140" fg:w="242"/><text x="8.1929%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (48 samples, 0.09%)</title><rect x="8.4225%" y="629" width="0.0921%" height="15" fill="rgb(231,15,5)" fg:x="4390" fg:w="48"/><text x="8.6725%" y="639.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (697 samples, 1.34%)</title><rect x="7.1927%" y="645" width="1.3372%" height="15" fill="rgb(252,35,15)" fg:x="3749" fg:w="697"/><text x="7.4427%" y="655.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::~Encoder (7 samples, 0.01%)</title><rect x="8.5703%" y="645" width="0.0134%" height="15" fill="rgb(248,181,18)" fg:x="4467" fg:w="7"/><text x="8.8203%" y="655.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (24 samples, 0.05%)</title><rect x="8.7353%" y="597" width="0.0460%" height="15" fill="rgb(233,39,42)" fg:x="4553" fg:w="24"/><text x="8.9853%" y="607.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_unreliably_with_name_impl (57 samples, 0.11%)</title><rect x="8.6739%" y="645" width="0.1094%" height="15" fill="rgb(238,110,33)" fg:x="4521" fg:w="57"/><text x="8.9239%" y="655.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (48 samples, 0.09%)</title><rect x="8.6911%" y="629" width="0.0921%" height="15" fill="rgb(233,195,10)" fg:x="4530" fg:w="48"/><text x="8.9411%" y="639.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (39 samples, 0.07%)</title><rect x="8.7084%" y="613" width="0.0748%" height="15" fill="rgb(254,105,3)" fg:x="4539" fg:w="39"/><text x="8.9584%" y="623.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (846 samples, 1.62%)</title><rect x="7.1774%" y="661" width="1.6231%" height="15" fill="rgb(221,225,9)" fg:x="3741" fg:w="846"/><text x="7.4274%" y="671.50"></text></g><g><title>libsystem_trace.dylib`os_signpost_enabled (9 samples, 0.02%)</title><rect x="8.7832%" y="645" width="0.0173%" height="15" fill="rgb(224,227,45)" fg:x="4578" fg:w="9"/><text x="9.0332%" y="655.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (867 samples, 1.66%)</title><rect x="7.1544%" y="677" width="1.6634%" height="15" fill="rgb(229,198,43)" fg:x="3729" fg:w="867"/><text x="7.4044%" y="687.50"></text></g><g><title>QuartzCore`CA::Transaction::observer_callback (7 samples, 0.01%)</title><rect x="8.8178%" y="677" width="0.0134%" height="15" fill="rgb(206,209,35)" fg:x="4596" fg:w="7"/><text x="9.0678%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPush (6 samples, 0.01%)</title><rect x="8.8370%" y="677" width="0.0115%" height="15" fill="rgb(245,195,53)" fg:x="4606" fg:w="6"/><text x="9.0870%" y="687.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (939 samples, 1.80%)</title><rect x="7.0604%" y="693" width="1.8015%" height="15" fill="rgb(240,92,26)" fg:x="3680" fg:w="939"/><text x="7.3104%" y="703.50">C..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (7 samples, 0.01%)</title><rect x="8.8485%" y="677" width="0.0134%" height="15" fill="rgb(207,40,23)" fg:x="4612" fg:w="7"/><text x="9.0985%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (7 samples, 0.01%)</title><rect x="8.8811%" y="693" width="0.0134%" height="15" fill="rgb(223,111,35)" fg:x="4629" fg:w="7"/><text x="9.1311%" y="703.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (9 samples, 0.02%)</title><rect x="8.8945%" y="693" width="0.0173%" height="15" fill="rgb(229,147,28)" fg:x="4636" fg:w="9"/><text x="9.1445%" y="703.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (999 samples, 1.92%)</title><rect x="7.0066%" y="709" width="1.9167%" height="15" fill="rgb(211,29,28)" fg:x="3652" fg:w="999"/><text x="7.2566%" y="719.50">C..</text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (12 samples, 0.02%)</title><rect x="8.9406%" y="677" width="0.0230%" height="15" fill="rgb(228,72,33)" fg:x="4660" fg:w="12"/><text x="9.1906%" y="687.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (13 samples, 0.02%)</title><rect x="8.9406%" y="693" width="0.0249%" height="15" fill="rgb(205,214,31)" fg:x="4660" fg:w="13"/><text x="9.1906%" y="703.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeIsEmpty (20 samples, 0.04%)</title><rect x="8.9310%" y="709" width="0.0384%" height="15" fill="rgb(224,111,15)" fg:x="4655" fg:w="20"/><text x="9.1810%" y="719.50"></text></g><g><title>CoreFoundation`CFSetGetCount (6 samples, 0.01%)</title><rect x="9.0787%" y="693" width="0.0115%" height="15" fill="rgb(253,21,26)" fg:x="4732" fg:w="6"/><text x="9.3287%" y="703.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (9 samples, 0.02%)</title><rect x="9.1094%" y="677" width="0.0173%" height="15" fill="rgb(245,139,43)" fg:x="4748" fg:w="9"/><text x="9.3594%" y="687.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (17 samples, 0.03%)</title><rect x="9.0960%" y="693" width="0.0326%" height="15" fill="rgb(252,170,7)" fg:x="4741" fg:w="17"/><text x="9.3460%" y="703.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (6 samples, 0.01%)</title><rect x="9.1535%" y="677" width="0.0115%" height="15" fill="rgb(231,118,14)" fg:x="4771" fg:w="6"/><text x="9.4035%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (7 samples, 0.01%)</title><rect x="9.1996%" y="645" width="0.0134%" height="15" fill="rgb(238,83,0)" fg:x="4795" fg:w="7"/><text x="9.4496%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (13 samples, 0.02%)</title><rect x="9.2168%" y="629" width="0.0249%" height="15" fill="rgb(221,39,39)" fg:x="4804" fg:w="13"/><text x="9.4668%" y="639.50"></text></g><g><title>libobjc.A.dylib`weak_unregister_no_lock (11 samples, 0.02%)</title><rect x="9.2207%" y="613" width="0.0211%" height="15" fill="rgb(222,119,46)" fg:x="4806" fg:w="11"/><text x="9.4707%" y="623.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (20 samples, 0.04%)</title><rect x="9.2130%" y="645" width="0.0384%" height="15" fill="rgb(222,165,49)" fg:x="4802" fg:w="20"/><text x="9.4630%" y="655.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (33 samples, 0.06%)</title><rect x="9.1957%" y="661" width="0.0633%" height="15" fill="rgb(219,113,52)" fg:x="4793" fg:w="33"/><text x="9.4457%" y="671.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverInvalidate (44 samples, 0.08%)</title><rect x="9.1823%" y="677" width="0.0844%" height="15" fill="rgb(214,7,15)" fg:x="4786" fg:w="44"/><text x="9.4323%" y="687.50"></text></g><g><title>CoreFoundation`_CFRelease (11 samples, 0.02%)</title><rect x="9.2744%" y="677" width="0.0211%" height="15" fill="rgb(235,32,4)" fg:x="4834" fg:w="11"/><text x="9.5244%" y="687.50"></text></g><g><title>AppKit`-[NSWindow _isKeyWindowIgnoringFocus] (10 samples, 0.02%)</title><rect x="9.3588%" y="581" width="0.0192%" height="15" fill="rgb(238,90,54)" fg:x="4878" fg:w="10"/><text x="9.6088%" y="591.50"></text></g><g><title>AppKit`-[NSWindow _allowsActiveInputContext] (17 samples, 0.03%)</title><rect x="9.3492%" y="597" width="0.0326%" height="15" fill="rgb(213,208,19)" fg:x="4873" fg:w="17"/><text x="9.5992%" y="607.50"></text></g><g><title>AppKit`-[NSWindow firstResponder] (18 samples, 0.03%)</title><rect x="9.3857%" y="597" width="0.0345%" height="15" fill="rgb(233,156,4)" fg:x="4892" fg:w="18"/><text x="9.6357%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (16 samples, 0.03%)</title><rect x="9.3895%" y="581" width="0.0307%" height="15" fill="rgb(207,194,5)" fg:x="4894" fg:w="16"/><text x="9.6395%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (16 samples, 0.03%)</title><rect x="9.3895%" y="565" width="0.0307%" height="15" fill="rgb(206,111,30)" fg:x="4894" fg:w="16"/><text x="9.6395%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_getAssociatedObject (9 samples, 0.02%)</title><rect x="9.4279%" y="597" width="0.0173%" height="15" fill="rgb(243,70,54)" fg:x="4914" fg:w="9"/><text x="9.6779%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (12 samples, 0.02%)</title><rect x="9.4547%" y="597" width="0.0230%" height="15" fill="rgb(242,28,8)" fg:x="4928" fg:w="12"/><text x="9.7047%" y="607.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (84 samples, 0.16%)</title><rect x="9.3281%" y="613" width="0.1612%" height="15" fill="rgb(219,106,18)" fg:x="4862" fg:w="84"/><text x="9.5781%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_retain (6 samples, 0.01%)</title><rect x="9.4778%" y="597" width="0.0115%" height="15" fill="rgb(244,222,10)" fg:x="4940" fg:w="6"/><text x="9.7278%" y="607.50"></text></g><g><title>AppKit`-[NSApplication keyWindow] (7 samples, 0.01%)</title><rect x="9.4912%" y="613" width="0.0134%" height="15" fill="rgb(236,179,52)" fg:x="4947" fg:w="7"/><text x="9.7412%" y="623.50"></text></g><g><title>CoreFoundation`CFEqual (8 samples, 0.02%)</title><rect x="9.5622%" y="501" width="0.0153%" height="15" fill="rgb(213,23,39)" fg:x="4984" fg:w="8"/><text x="9.8122%" y="511.50"></text></g><g><title>CoreFoundation`CFCachedStringEqual (10 samples, 0.02%)</title><rect x="9.5622%" y="517" width="0.0192%" height="15" fill="rgb(238,48,10)" fg:x="4984" fg:w="10"/><text x="9.8122%" y="527.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (17 samples, 0.03%)</title><rect x="9.5545%" y="549" width="0.0326%" height="15" fill="rgb(251,196,23)" fg:x="4980" fg:w="17"/><text x="9.8045%" y="559.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (17 samples, 0.03%)</title><rect x="9.5545%" y="533" width="0.0326%" height="15" fill="rgb(250,152,24)" fg:x="4980" fg:w="17"/><text x="9.8045%" y="543.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (21 samples, 0.04%)</title><rect x="9.5545%" y="565" width="0.0403%" height="15" fill="rgb(209,150,17)" fg:x="4980" fg:w="21"/><text x="9.8045%" y="575.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (28 samples, 0.05%)</title><rect x="9.5545%" y="581" width="0.0537%" height="15" fill="rgb(234,202,34)" fg:x="4980" fg:w="28"/><text x="9.8045%" y="591.50"></text></g><g><title>CoreFoundation`-[NSArray makeObjectsPerformSelector:] (38 samples, 0.07%)</title><rect x="9.5411%" y="597" width="0.0729%" height="15" fill="rgb(253,148,53)" fg:x="4973" fg:w="38"/><text x="9.7911%" y="607.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (11 samples, 0.02%)</title><rect x="9.6332%" y="597" width="0.0211%" height="15" fill="rgb(218,129,16)" fg:x="5021" fg:w="11"/><text x="9.8832%" y="607.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _updateWindowsUsingCache] (108 samples, 0.21%)</title><rect x="9.5046%" y="613" width="0.2072%" height="15" fill="rgb(216,85,19)" fg:x="4954" fg:w="108"/><text x="9.7546%" y="623.50"></text></g><g><title>Foundation`-[NSConcreteNotification dealloc] (8 samples, 0.02%)</title><rect x="9.7406%" y="613" width="0.0153%" height="15" fill="rgb(235,228,7)" fg:x="5077" fg:w="8"/><text x="9.9906%" y="623.50"></text></g><g><title>CoreFoundation`CFEqual (12 samples, 0.02%)</title><rect x="9.8500%" y="533" width="0.0230%" height="15" fill="rgb(245,175,0)" fg:x="5134" fg:w="12"/><text x="10.1000%" y="543.50"></text></g><g><title>CoreFoundation`CFCachedStringEqual (18 samples, 0.03%)</title><rect x="9.8480%" y="549" width="0.0345%" height="15" fill="rgb(208,168,36)" fg:x="5133" fg:w="18"/><text x="10.0980%" y="559.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (36 samples, 0.07%)</title><rect x="9.8193%" y="565" width="0.0691%" height="15" fill="rgb(246,171,24)" fg:x="5118" fg:w="36"/><text x="10.0693%" y="575.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (50 samples, 0.10%)</title><rect x="9.8039%" y="581" width="0.0959%" height="15" fill="rgb(215,142,24)" fg:x="5110" fg:w="50"/><text x="10.0539%" y="591.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (76 samples, 0.15%)</title><rect x="9.7790%" y="597" width="0.1458%" height="15" fill="rgb(250,187,7)" fg:x="5097" fg:w="76"/><text x="10.0290%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (10 samples, 0.02%)</title><rect x="9.9421%" y="565" width="0.0192%" height="15" fill="rgb(228,66,33)" fg:x="5182" fg:w="10"/><text x="10.1921%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (8 samples, 0.02%)</title><rect x="9.9459%" y="549" width="0.0153%" height="15" fill="rgb(234,215,21)" fg:x="5184" fg:w="8"/><text x="10.1959%" y="559.50"></text></g><g><title>Foundation`NSAllocateObject (16 samples, 0.03%)</title><rect x="9.9363%" y="597" width="0.0307%" height="15" fill="rgb(222,191,20)" fg:x="5179" fg:w="16"/><text x="10.1863%" y="607.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (13 samples, 0.02%)</title><rect x="9.9421%" y="581" width="0.0249%" height="15" fill="rgb(245,79,54)" fg:x="5182" fg:w="13"/><text x="10.1921%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.02%)</title><rect x="9.9728%" y="597" width="0.0192%" height="15" fill="rgb(240,10,37)" fg:x="5198" fg:w="10"/><text x="10.2228%" y="607.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (123 samples, 0.24%)</title><rect x="9.7656%" y="613" width="0.2360%" height="15" fill="rgb(214,192,32)" fg:x="5090" fg:w="123"/><text x="10.0156%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (29 samples, 0.06%)</title><rect x="10.0188%" y="613" width="0.0556%" height="15" fill="rgb(209,36,54)" fg:x="5222" fg:w="29"/><text x="10.2688%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_retain (6 samples, 0.01%)</title><rect x="10.0744%" y="613" width="0.0115%" height="15" fill="rgb(220,10,11)" fg:x="5251" fg:w="6"/><text x="10.3244%" y="623.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (401 samples, 0.77%)</title><rect x="9.3185%" y="629" width="0.7693%" height="15" fill="rgb(221,106,17)" fg:x="4857" fg:w="401"/><text x="9.5685%" y="639.50"></text></g><g><title>CoreFoundation`CFArrayGetFirstIndexOfValue (6 samples, 0.01%)</title><rect x="10.1147%" y="613" width="0.0115%" height="15" fill="rgb(251,142,44)" fg:x="5272" fg:w="6"/><text x="10.3647%" y="623.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (8 samples, 0.02%)</title><rect x="10.1435%" y="581" width="0.0153%" height="15" fill="rgb(238,13,15)" fg:x="5287" fg:w="8"/><text x="10.3935%" y="591.50"></text></g><g><title>CoreFoundation`CFSetGetValue (9 samples, 0.02%)</title><rect x="10.1435%" y="597" width="0.0173%" height="15" fill="rgb(208,107,27)" fg:x="5287" fg:w="9"/><text x="10.3935%" y="607.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (13 samples, 0.02%)</title><rect x="10.1397%" y="613" width="0.0249%" height="15" fill="rgb(205,136,37)" fg:x="5285" fg:w="13"/><text x="10.3897%" y="623.50"></text></g><g><title>CoreFoundation`CFRunLoopRemoveObserver (40 samples, 0.08%)</title><rect x="10.1051%" y="629" width="0.0767%" height="15" fill="rgb(250,205,27)" fg:x="5267" fg:w="40"/><text x="10.3551%" y="639.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (12 samples, 0.02%)</title><rect x="10.1972%" y="597" width="0.0230%" height="15" fill="rgb(210,80,43)" fg:x="5315" fg:w="12"/><text x="10.4472%" y="607.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (11 samples, 0.02%)</title><rect x="10.1991%" y="581" width="0.0211%" height="15" fill="rgb(247,160,36)" fg:x="5316" fg:w="11"/><text x="10.4491%" y="591.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (16 samples, 0.03%)</title><rect x="10.1953%" y="613" width="0.0307%" height="15" fill="rgb(234,13,49)" fg:x="5314" fg:w="16"/><text x="10.4453%" y="623.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (25 samples, 0.05%)</title><rect x="10.1915%" y="629" width="0.0480%" height="15" fill="rgb(234,122,0)" fg:x="5312" fg:w="25"/><text x="10.4415%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (10 samples, 0.02%)</title><rect x="10.2394%" y="629" width="0.0192%" height="15" fill="rgb(207,146,38)" fg:x="5337" fg:w="10"/><text x="10.4894%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (26 samples, 0.05%)</title><rect x="10.2586%" y="629" width="0.0499%" height="15" fill="rgb(207,177,25)" fg:x="5347" fg:w="26"/><text x="10.5086%" y="639.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (525 samples, 1.01%)</title><rect x="9.3051%" y="645" width="1.0073%" height="15" fill="rgb(211,178,42)" fg:x="4850" fg:w="525"/><text x="9.5551%" y="655.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (8 samples, 0.02%)</title><rect x="10.3258%" y="565" width="0.0153%" height="15" fill="rgb(230,69,54)" fg:x="5382" fg:w="8"/><text x="10.5758%" y="575.50"></text></g><g><title>AppKit`__30-[_NSViewBackingLayer display]_block_invoke (7 samples, 0.01%)</title><rect x="10.3277%" y="549" width="0.0134%" height="15" fill="rgb(214,135,41)" fg:x="5383" fg:w="7"/><text x="10.5777%" y="559.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (7 samples, 0.01%)</title><rect x="10.3277%" y="533" width="0.0134%" height="15" fill="rgb(237,67,25)" fg:x="5383" fg:w="7"/><text x="10.5777%" y="543.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (7 samples, 0.01%)</title><rect x="10.3277%" y="517" width="0.0134%" height="15" fill="rgb(222,189,50)" fg:x="5383" fg:w="7"/><text x="10.5777%" y="527.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (12 samples, 0.02%)</title><rect x="10.3200%" y="597" width="0.0230%" height="15" fill="rgb(245,148,34)" fg:x="5379" fg:w="12"/><text x="10.5700%" y="607.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (9 samples, 0.02%)</title><rect x="10.3258%" y="581" width="0.0173%" height="15" fill="rgb(222,29,6)" fg:x="5382" fg:w="9"/><text x="10.5758%" y="591.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (17 samples, 0.03%)</title><rect x="10.3143%" y="613" width="0.0326%" height="15" fill="rgb(221,189,43)" fg:x="5376" fg:w="17"/><text x="10.5643%" y="623.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (22 samples, 0.04%)</title><rect x="10.3123%" y="645" width="0.0422%" height="15" fill="rgb(207,36,27)" fg:x="5375" fg:w="22"/><text x="10.5623%" y="655.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (21 samples, 0.04%)</title><rect x="10.3143%" y="629" width="0.0403%" height="15" fill="rgb(217,90,24)" fg:x="5376" fg:w="21"/><text x="10.5643%" y="639.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (561 samples, 1.08%)</title><rect x="9.3032%" y="661" width="1.0763%" height="15" fill="rgb(224,66,35)" fg:x="4849" fg:w="561"/><text x="9.5532%" y="671.50"></text></g><g><title>App`once_cell::sync::OnceCell&lt;T&gt;::get (6 samples, 0.01%)</title><rect x="10.4466%" y="437" width="0.0115%" height="15" fill="rgb(221,13,50)" fg:x="5445" fg:w="6"/><text x="10.6966%" y="447.50"></text></g><g><title>App`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (10 samples, 0.02%)</title><rect x="10.4409%" y="501" width="0.0192%" height="15" fill="rgb(236,68,49)" fg:x="5442" fg:w="10"/><text x="10.6909%" y="511.50"></text></g><g><title>App`once_cell::sync::Lazy&lt;T,F&gt;::force (10 samples, 0.02%)</title><rect x="10.4409%" y="485" width="0.0192%" height="15" fill="rgb(229,146,28)" fg:x="5442" fg:w="10"/><text x="10.6909%" y="495.50"></text></g><g><title>App`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (10 samples, 0.02%)</title><rect x="10.4409%" y="469" width="0.0192%" height="15" fill="rgb(225,31,38)" fg:x="5442" fg:w="10"/><text x="10.6909%" y="479.50"></text></g><g><title>App`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (10 samples, 0.02%)</title><rect x="10.4409%" y="453" width="0.0192%" height="15" fill="rgb(250,208,3)" fg:x="5442" fg:w="10"/><text x="10.6909%" y="463.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::get_control_flow_and_update_prev (8 samples, 0.02%)</title><rect x="10.4869%" y="501" width="0.0153%" height="15" fill="rgb(246,54,23)" fg:x="5466" fg:w="8"/><text x="10.7369%" y="511.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events::_{{closure}} (8 samples, 0.02%)</title><rect x="10.5234%" y="437" width="0.0153%" height="15" fill="rgb(243,76,11)" fg:x="5485" fg:w="8"/><text x="10.7734%" y="447.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event::_{{closure}} (19 samples, 0.04%)</title><rect x="10.5157%" y="453" width="0.0365%" height="15" fill="rgb(245,21,50)" fg:x="5481" fg:w="19"/><text x="10.7657%" y="463.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::_&lt;impl winit::event::Event&lt;Never&gt;&gt;::userify (6 samples, 0.01%)</title><rect x="10.5407%" y="437" width="0.0115%" height="15" fill="rgb(228,9,43)" fg:x="5494" fg:w="6"/><text x="10.7907%" y="447.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt;::with_callback (25 samples, 0.05%)</title><rect x="10.5138%" y="469" width="0.0480%" height="15" fill="rgb(208,100,47)" fg:x="5480" fg:w="25"/><text x="10.7638%" y="479.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (28 samples, 0.05%)</title><rect x="10.5100%" y="485" width="0.0537%" height="15" fill="rgb(232,26,8)" fg:x="5478" fg:w="28"/><text x="10.7600%" y="495.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (36 samples, 0.07%)</title><rect x="10.5080%" y="501" width="0.0691%" height="15" fill="rgb(216,166,38)" fg:x="5477" fg:w="36"/><text x="10.7580%" y="511.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::wakeup (81 samples, 0.16%)</title><rect x="10.4294%" y="517" width="0.1554%" height="15" fill="rgb(251,202,51)" fg:x="5436" fg:w="81"/><text x="10.6794%" y="527.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_begin_handler (109 samples, 0.21%)</title><rect x="10.3795%" y="661" width="0.2091%" height="15" fill="rgb(254,216,34)" fg:x="5410" fg:w="109"/><text x="10.6295%" y="671.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_handler (102 samples, 0.20%)</title><rect x="10.3929%" y="645" width="0.1957%" height="15" fill="rgb(251,32,27)" fg:x="5417" fg:w="102"/><text x="10.6429%" y="655.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::stop_app_on_panic (97 samples, 0.19%)</title><rect x="10.4025%" y="629" width="0.1861%" height="15" fill="rgb(208,127,28)" fg:x="5422" fg:w="97"/><text x="10.6525%" y="639.50"></text></g><g><title>App`std::panic::catch_unwind (93 samples, 0.18%)</title><rect x="10.4102%" y="613" width="0.1784%" height="15" fill="rgb(224,137,22)" fg:x="5426" fg:w="93"/><text x="10.6602%" y="623.50"></text></g><g><title>App`std::panicking::try (92 samples, 0.18%)</title><rect x="10.4121%" y="597" width="0.1765%" height="15" fill="rgb(254,70,32)" fg:x="5427" fg:w="92"/><text x="10.6621%" y="607.50"></text></g><g><title>App`__rust_try (92 samples, 0.18%)</title><rect x="10.4121%" y="581" width="0.1765%" height="15" fill="rgb(229,75,37)" fg:x="5427" fg:w="92"/><text x="10.6621%" y="591.50"></text></g><g><title>App`std::panicking::try::do_call (91 samples, 0.17%)</title><rect x="10.4140%" y="565" width="0.1746%" height="15" fill="rgb(252,64,23)" fg:x="5428" fg:w="91"/><text x="10.6640%" y="575.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_handler::_{{closure}} (91 samples, 0.17%)</title><rect x="10.4140%" y="549" width="0.1746%" height="15" fill="rgb(232,162,48)" fg:x="5428" fg:w="91"/><text x="10.6640%" y="559.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_begin_handler::_{{closure}} (89 samples, 0.17%)</title><rect x="10.4179%" y="533" width="0.1708%" height="15" fill="rgb(246,160,12)" fg:x="5430" fg:w="89"/><text x="10.6679%" y="543.50"></text></g><g><title>App`core::sync::atomic::AtomicPtr&lt;T&gt;::load (7 samples, 0.01%)</title><rect x="10.7210%" y="405" width="0.0134%" height="15" fill="rgb(247,166,0)" fg:x="5588" fg:w="7"/><text x="10.9710%" y="415.50"></text></g><g><title>App`core::sync::atomic::atomic_load (6 samples, 0.01%)</title><rect x="10.7229%" y="389" width="0.0115%" height="15" fill="rgb(249,219,21)" fg:x="5589" fg:w="6"/><text x="10.9729%" y="399.50"></text></g><g><title>App`once_cell::imp::OnceCell&lt;T&gt;::is_initialized (8 samples, 0.02%)</title><rect x="10.7210%" y="421" width="0.0153%" height="15" fill="rgb(205,209,3)" fg:x="5588" fg:w="8"/><text x="10.9710%" y="431.50"></text></g><g><title>App`once_cell::imp::OnceCell&lt;T&gt;::get_unchecked (8 samples, 0.02%)</title><rect x="10.7402%" y="405" width="0.0153%" height="15" fill="rgb(243,44,1)" fg:x="5598" fg:w="8"/><text x="10.9902%" y="415.50"></text></g><g><title>App`once_cell::sync::OnceCell&lt;T&gt;::get_or_init (29 samples, 0.06%)</title><rect x="10.7037%" y="469" width="0.0556%" height="15" fill="rgb(206,159,16)" fg:x="5579" fg:w="29"/><text x="10.9537%" y="479.50"></text></g><g><title>App`once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (27 samples, 0.05%)</title><rect x="10.7076%" y="453" width="0.0518%" height="15" fill="rgb(244,77,30)" fg:x="5581" fg:w="27"/><text x="10.9576%" y="463.50"></text></g><g><title>App`once_cell::sync::OnceCell&lt;T&gt;::get (23 samples, 0.04%)</title><rect x="10.7152%" y="437" width="0.0441%" height="15" fill="rgb(218,69,12)" fg:x="5585" fg:w="23"/><text x="10.9652%" y="447.50"></text></g><g><title>App`once_cell::sync::OnceCell&lt;T&gt;::get_unchecked (12 samples, 0.02%)</title><rect x="10.7363%" y="421" width="0.0230%" height="15" fill="rgb(212,87,7)" fg:x="5596" fg:w="12"/><text x="10.9863%" y="431.50"></text></g><g><title>App`once_cell::sync::Lazy&lt;T,F&gt;::force (31 samples, 0.06%)</title><rect x="10.7018%" y="485" width="0.0595%" height="15" fill="rgb(245,114,25)" fg:x="5578" fg:w="31"/><text x="10.9518%" y="495.50"></text></g><g><title>App`&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (37 samples, 0.07%)</title><rect x="10.6961%" y="501" width="0.0710%" height="15" fill="rgb(210,61,42)" fg:x="5575" fg:w="37"/><text x="10.9461%" y="511.50"></text></g><g><title>App`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::slice_ranges (6 samples, 0.01%)</title><rect x="10.8112%" y="437" width="0.0115%" height="15" fill="rgb(211,52,33)" fg:x="5635" fg:w="6"/><text x="11.0612%" y="447.50"></text></g><g><title>App`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="10.8093%" y="469" width="0.0269%" height="15" fill="rgb(234,58,33)" fg:x="5634" fg:w="14"/><text x="11.0593%" y="479.50"></text></g><g><title>App`alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::as_mut_slices (14 samples, 0.03%)</title><rect x="10.8093%" y="453" width="0.0269%" height="15" fill="rgb(220,115,36)" fg:x="5634" fg:w="14"/><text x="11.0593%" y="463.50"></text></g><g><title>App`core::slice::index::range (7 samples, 0.01%)</title><rect x="10.8227%" y="437" width="0.0134%" height="15" fill="rgb(243,153,54)" fg:x="5641" fg:w="7"/><text x="11.0727%" y="447.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::collections::vec_deque::into_iter::IntoIter&lt;winit::platform_impl::platform::event::EventWrapper&gt;&gt; (21 samples, 0.04%)</title><rect x="10.8073%" y="501" width="0.0403%" height="15" fill="rgb(251,47,18)" fg:x="5633" fg:w="21"/><text x="11.0573%" y="511.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::collections::vec_deque::VecDeque&lt;winit::platform_impl::platform::event::EventWrapper&gt;&gt; (21 samples, 0.04%)</title><rect x="10.8073%" y="485" width="0.0403%" height="15" fill="rgb(242,102,42)" fg:x="5633" fg:w="21"/><text x="11.0573%" y="495.50"></text></g><g><title>App`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="10.8553%" y="485" width="0.0211%" height="15" fill="rgb(234,31,38)" fg:x="5658" fg:w="11"/><text x="11.1053%" y="495.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;winit::window::WindowId,alloc::alloc::Global&gt;&gt; (6 samples, 0.01%)</title><rect x="10.8649%" y="469" width="0.0115%" height="15" fill="rgb(221,117,51)" fg:x="5663" fg:w="6"/><text x="11.1149%" y="479.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;winit::window::WindowId&gt;&gt; (12 samples, 0.02%)</title><rect x="10.8553%" y="501" width="0.0230%" height="15" fill="rgb(212,20,18)" fg:x="5658" fg:w="12"/><text x="11.1053%" y="511.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;objc2::rc::id::Id&lt;winit::platform_impl::platform::appkit::application::NSApplication,objc2::rc::ownership::Shared&gt;&gt; (9 samples, 0.02%)</title><rect x="10.8783%" y="501" width="0.0173%" height="15" fill="rgb(245,133,36)" fg:x="5670" fg:w="9"/><text x="11.1283%" y="511.50"></text></g><g><title>App`std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.03%)</title><rect x="10.9301%" y="453" width="0.0269%" height="15" fill="rgb(212,6,19)" fg:x="5697" fg:w="14"/><text x="11.1801%" y="463.50"></text></g><g><title>App`std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.02%)</title><rect x="10.9320%" y="437" width="0.0249%" height="15" fill="rgb(218,1,36)" fg:x="5698" fg:w="13"/><text x="11.1820%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (9 samples, 0.02%)</title><rect x="10.9762%" y="389" width="0.0173%" height="15" fill="rgb(246,84,54)" fg:x="5721" fg:w="9"/><text x="11.2262%" y="399.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (8 samples, 0.02%)</title><rect x="10.9781%" y="373" width="0.0153%" height="15" fill="rgb(242,110,6)" fg:x="5722" fg:w="8"/><text x="11.2281%" y="383.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (10 samples, 0.02%)</title><rect x="10.9762%" y="405" width="0.0192%" height="15" fill="rgb(214,47,5)" fg:x="5721" fg:w="10"/><text x="11.2262%" y="415.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (19 samples, 0.04%)</title><rect x="10.9666%" y="421" width="0.0365%" height="15" fill="rgb(218,159,25)" fg:x="5716" fg:w="19"/><text x="11.2166%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (7 samples, 0.01%)</title><rect x="11.0145%" y="421" width="0.0134%" height="15" fill="rgb(215,211,28)" fg:x="5741" fg:w="7"/><text x="11.2645%" y="431.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (37 samples, 0.07%)</title><rect x="10.9647%" y="437" width="0.0710%" height="15" fill="rgb(238,59,32)" fg:x="5715" fg:w="37"/><text x="11.2147%" y="447.50"></text></g><g><title>App`&lt;objc2::rc::autorelease::AutoreleasePool as core::ops::drop::Drop&gt;::drop (64 samples, 0.12%)</title><rect x="10.9263%" y="469" width="0.1228%" height="15" fill="rgb(226,82,3)" fg:x="5695" fg:w="64"/><text x="11.1763%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (47 samples, 0.09%)</title><rect x="10.9589%" y="453" width="0.0902%" height="15" fill="rgb(240,164,32)" fg:x="5712" fg:w="47"/><text x="11.2089%" y="463.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;objc2::rc::autorelease::AutoreleasePool&gt; (67 samples, 0.13%)</title><rect x="10.9263%" y="485" width="0.1285%" height="15" fill="rgb(232,46,7)" fg:x="5695" fg:w="67"/><text x="11.1763%" y="495.50"></text></g><g><title>App`std::thread::local::LocalKey&lt;T&gt;::with (20 samples, 0.04%)</title><rect x="11.0625%" y="469" width="0.0384%" height="15" fill="rgb(229,129,53)" fg:x="5766" fg:w="20"/><text x="11.3125%" y="479.50"></text></g><g><title>App`std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.04%)</title><rect x="11.0644%" y="453" width="0.0365%" height="15" fill="rgb(234,188,29)" fg:x="5767" fg:w="19"/><text x="11.3144%" y="463.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (9 samples, 0.02%)</title><rect x="11.0836%" y="437" width="0.0173%" height="15" fill="rgb(246,141,4)" fg:x="5777" fg:w="9"/><text x="11.3336%" y="447.50"></text></g><g><title>App`objc2::rc::autorelease::AutoreleasePool::new (26 samples, 0.05%)</title><rect x="11.0548%" y="485" width="0.0499%" height="15" fill="rgb(229,23,39)" fg:x="5762" fg:w="26"/><text x="11.3048%" y="495.50"></text></g><g><title>AppKit`+[_NSScreenConfiguration latestZeroScreenHeight] (6 samples, 0.01%)</title><rect x="11.2160%" y="325" width="0.0115%" height="15" fill="rgb(206,12,3)" fg:x="5846" fg:w="6"/><text x="11.4660%" y="335.50"></text></g><g><title>AppKit`-[NSEvent window] (16 samples, 0.03%)</title><rect x="11.2275%" y="325" width="0.0307%" height="15" fill="rgb(252,226,20)" fg:x="5852" fg:w="16"/><text x="11.4775%" y="335.50"></text></g><g><title>SkyLight`CGSEventSourceForID (7 samples, 0.01%)</title><rect x="11.2889%" y="309" width="0.0134%" height="15" fill="rgb(216,123,35)" fg:x="5884" fg:w="7"/><text x="11.5389%" y="319.50"></text></g><g><title>SkyLight`SLEventCreate (31 samples, 0.06%)</title><rect x="11.2659%" y="325" width="0.0595%" height="15" fill="rgb(212,68,40)" fg:x="5872" fg:w="31"/><text x="11.5159%" y="335.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (8 samples, 0.02%)</title><rect x="11.3426%" y="293" width="0.0153%" height="15" fill="rgb(254,125,32)" fg:x="5912" fg:w="8"/><text x="11.5926%" y="303.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (7 samples, 0.01%)</title><rect x="11.3445%" y="277" width="0.0134%" height="15" fill="rgb(253,97,22)" fg:x="5913" fg:w="7"/><text x="11.5945%" y="287.50"></text></g><g><title>SkyLight`SLEventRecordSetIntegerValue(SLSEventRecord*, CGEventField, long long) (18 samples, 0.03%)</title><rect x="11.3254%" y="325" width="0.0345%" height="15" fill="rgb(241,101,14)" fg:x="5903" fg:w="18"/><text x="11.5754%" y="335.50"></text></g><g><title>SkyLight`CGSEventAppendixCreate (10 samples, 0.02%)</title><rect x="11.3407%" y="309" width="0.0192%" height="15" fill="rgb(238,103,29)" fg:x="5911" fg:w="10"/><text x="11.5907%" y="319.50"></text></g><g><title>SkyLight`SLSMainConnectionID (8 samples, 0.02%)</title><rect x="11.3676%" y="325" width="0.0153%" height="15" fill="rgb(233,195,47)" fg:x="5925" fg:w="8"/><text x="11.6176%" y="335.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (15 samples, 0.03%)</title><rect x="11.3848%" y="293" width="0.0288%" height="15" fill="rgb(246,218,30)" fg:x="5934" fg:w="15"/><text x="11.6348%" y="303.50"></text></g><g><title>SkyLight`_SLEventCreate(SLSEventRecord*) (19 samples, 0.04%)</title><rect x="11.3829%" y="325" width="0.0365%" height="15" fill="rgb(219,145,47)" fg:x="5933" fg:w="19"/><text x="11.6329%" y="335.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (18 samples, 0.03%)</title><rect x="11.3848%" y="309" width="0.0345%" height="15" fill="rgb(243,12,26)" fg:x="5934" fg:w="18"/><text x="11.6348%" y="319.50"></text></g><g><title>AppKit`-[NSEvent CGEvent] (128 samples, 0.25%)</title><rect x="11.1815%" y="341" width="0.2456%" height="15" fill="rgb(214,87,16)" fg:x="5828" fg:w="128"/><text x="11.4315%" y="351.50"></text></g><g><title>HIToolbox`CreateEventWithCGEvent (21 samples, 0.04%)</title><rect x="11.4347%" y="341" width="0.0403%" height="15" fill="rgb(208,99,42)" fg:x="5960" fg:w="21"/><text x="11.6847%" y="351.50"></text></g><g><title>AppKit`-[NSEvent _eventRefInternal] (208 samples, 0.40%)</title><rect x="11.1661%" y="357" width="0.3991%" height="15" fill="rgb(253,99,2)" fg:x="5820" fg:w="208"/><text x="11.4161%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (23 samples, 0.04%)</title><rect x="11.5210%" y="341" width="0.0441%" height="15" fill="rgb(220,168,23)" fg:x="6005" fg:w="23"/><text x="11.7710%" y="351.50"></text></g><g><title>CoreFoundation`CFRunLoopSourceSignal (6 samples, 0.01%)</title><rect x="11.5767%" y="357" width="0.0115%" height="15" fill="rgb(242,38,24)" fg:x="6034" fg:w="6"/><text x="11.8267%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (53 samples, 0.10%)</title><rect x="11.6035%" y="341" width="0.1017%" height="15" fill="rgb(225,182,9)" fg:x="6048" fg:w="53"/><text x="11.8535%" y="351.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (64 samples, 0.12%)</title><rect x="11.5882%" y="357" width="0.1228%" height="15" fill="rgb(243,178,37)" fg:x="6040" fg:w="64"/><text x="11.8382%" y="367.50"></text></g><g><title>HIToolbox`CreateEventWithCGEvent (6 samples, 0.01%)</title><rect x="11.7148%" y="357" width="0.0115%" height="15" fill="rgb(232,139,19)" fg:x="6106" fg:w="6"/><text x="11.9648%" y="367.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (340 samples, 0.65%)</title><rect x="11.7647%" y="341" width="0.6523%" height="15" fill="rgb(225,201,24)" fg:x="6132" fg:w="340"/><text x="12.0147%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (333 samples, 0.64%)</title><rect x="11.7781%" y="325" width="0.6389%" height="15" fill="rgb(221,47,46)" fg:x="6139" fg:w="333"/><text x="12.0281%" y="335.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (10 samples, 0.02%)</title><rect x="12.4266%" y="341" width="0.0192%" height="15" fill="rgb(249,23,13)" fg:x="6477" fg:w="10"/><text x="12.6766%" y="351.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (372 samples, 0.71%)</title><rect x="11.7474%" y="357" width="0.7137%" height="15" fill="rgb(219,9,5)" fg:x="6123" fg:w="372"/><text x="11.9974%" y="367.50"></text></g><g><title>AppKit`-[NSEvent _postAtStart:] (695 samples, 1.33%)</title><rect x="11.1469%" y="373" width="1.3334%" height="15" fill="rgb(254,171,16)" fg:x="5810" fg:w="695"/><text x="11.3969%" y="383.50"></text></g><g><title>AppKit`-[NSEvent type] (8 samples, 0.02%)</title><rect x="12.4803%" y="373" width="0.0153%" height="15" fill="rgb(230,171,20)" fg:x="6505" fg:w="8"/><text x="12.7303%" y="383.50"></text></g><g><title>App`&lt;(A,B) as objc2::message::MessageArguments&gt;::__invoke (736 samples, 1.41%)</title><rect x="11.1373%" y="389" width="1.4121%" height="15" fill="rgb(210,71,41)" fg:x="5805" fg:w="736"/><text x="11.3873%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.02%)</title><rect x="12.5341%" y="373" width="0.0153%" height="15" fill="rgb(206,173,20)" fg:x="6533" fg:w="8"/><text x="12.7841%" y="383.50"></text></g><g><title>App`objc2::message::conditional_try (743 samples, 1.43%)</title><rect x="11.1277%" y="421" width="1.4255%" height="15" fill="rgb(233,88,34)" fg:x="5800" fg:w="743"/><text x="11.3777%" y="431.50"></text></g><g><title>App`objc2::message::platform::send_unverified::_{{closure}} (741 samples, 1.42%)</title><rect x="11.1316%" y="405" width="1.4217%" height="15" fill="rgb(223,209,46)" fg:x="5802" fg:w="741"/><text x="11.3816%" y="415.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_message (748 samples, 1.44%)</title><rect x="11.1239%" y="453" width="1.4351%" height="15" fill="rgb(250,43,18)" fg:x="5798" fg:w="748"/><text x="11.3739%" y="463.50"></text></g><g><title>App`objc2::message::platform::send_unverified (748 samples, 1.44%)</title><rect x="11.1239%" y="437" width="1.4351%" height="15" fill="rgb(208,13,10)" fg:x="5798" fg:w="748"/><text x="11.3739%" y="447.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApplication::postEvent_atStart (751 samples, 1.44%)</title><rect x="11.1220%" y="469" width="1.4409%" height="15" fill="rgb(212,200,36)" fg:x="5797" fg:w="751"/><text x="11.3720%" y="479.50"></text></g><g><title>App`&lt;(A,) as objc2::message::MessageArguments&gt;::__invoke (6 samples, 0.01%)</title><rect x="12.5743%" y="405" width="0.0115%" height="15" fill="rgb(225,90,30)" fg:x="6554" fg:w="6"/><text x="12.8243%" y="415.50"></text></g><g><title>Foundation`NSKVOCopyPendingNotificationStack (9 samples, 0.02%)</title><rect x="12.6146%" y="341" width="0.0173%" height="15" fill="rgb(236,182,39)" fg:x="6575" fg:w="9"/><text x="12.8646%" y="351.50"></text></g><g><title>Foundation`NSKeyValueDidChangeWithPerThreadPendingNotifications (14 samples, 0.03%)</title><rect x="12.6089%" y="357" width="0.0269%" height="15" fill="rgb(212,144,35)" fg:x="6572" fg:w="14"/><text x="12.8589%" y="367.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (9 samples, 0.02%)</title><rect x="12.6588%" y="325" width="0.0173%" height="15" fill="rgb(228,63,44)" fg:x="6598" fg:w="9"/><text x="12.9088%" y="335.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (8 samples, 0.02%)</title><rect x="12.6607%" y="309" width="0.0153%" height="15" fill="rgb(228,109,6)" fg:x="6599" fg:w="8"/><text x="12.9107%" y="319.50"></text></g><g><title>Foundation`_NSKeyValueRetainedObservationInfoForObject (18 samples, 0.03%)</title><rect x="12.6492%" y="341" width="0.0345%" height="15" fill="rgb(238,117,24)" fg:x="6593" fg:w="18"/><text x="12.8992%" y="351.50"></text></g><g><title>Foundation`NSKeyValueWillChangeWithPerThreadPendingNotifications (35 samples, 0.07%)</title><rect x="12.6357%" y="357" width="0.0672%" height="15" fill="rgb(242,26,26)" fg:x="6586" fg:w="35"/><text x="12.8857%" y="367.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_recursive_lock_lock_with_options (6 samples, 0.01%)</title><rect x="12.7163%" y="357" width="0.0115%" height="15" fill="rgb(221,92,48)" fg:x="6628" fg:w="6"/><text x="12.9663%" y="367.50"></text></g><g><title>AppKit`-[NSApplication stop:] (73 samples, 0.14%)</title><rect x="12.5897%" y="373" width="0.1401%" height="15" fill="rgb(209,209,32)" fg:x="6562" fg:w="73"/><text x="12.8397%" y="383.50"></text></g><g><title>App`&lt;(A,) as objc2::message::MessageArguments&gt;::__invoke (77 samples, 0.15%)</title><rect x="12.5897%" y="389" width="0.1477%" height="15" fill="rgb(221,70,22)" fg:x="6562" fg:w="77"/><text x="12.8397%" y="399.50"></text></g><g><title>App`objc2::message::conditional_try (91 samples, 0.17%)</title><rect x="12.5743%" y="421" width="0.1746%" height="15" fill="rgb(248,145,5)" fg:x="6554" fg:w="91"/><text x="12.8243%" y="431.50"></text></g><g><title>App`objc2::message::platform::send_unverified::_{{closure}} (85 samples, 0.16%)</title><rect x="12.5859%" y="405" width="0.1631%" height="15" fill="rgb(226,116,26)" fg:x="6560" fg:w="85"/><text x="12.8359%" y="415.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_message (97 samples, 0.19%)</title><rect x="12.5724%" y="453" width="0.1861%" height="15" fill="rgb(244,5,17)" fg:x="6553" fg:w="97"/><text x="12.8224%" y="463.50"></text></g><g><title>App`objc2::message::platform::send_unverified (96 samples, 0.18%)</title><rect x="12.5743%" y="437" width="0.1842%" height="15" fill="rgb(252,159,33)" fg:x="6554" fg:w="96"/><text x="12.8243%" y="447.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApplication::stop (107 samples, 0.21%)</title><rect x="12.5628%" y="469" width="0.2053%" height="15" fill="rgb(206,71,0)" fg:x="6548" fg:w="107"/><text x="12.8128%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.02%)</title><rect x="12.8276%" y="261" width="0.0173%" height="15" fill="rgb(233,118,54)" fg:x="6686" fg:w="9"/><text x="13.0776%" y="271.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (14 samples, 0.03%)</title><rect x="12.8199%" y="325" width="0.0269%" height="15" fill="rgb(234,83,48)" fg:x="6682" fg:w="14"/><text x="13.0699%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (14 samples, 0.03%)</title><rect x="12.8199%" y="309" width="0.0269%" height="15" fill="rgb(228,3,54)" fg:x="6682" fg:w="14"/><text x="13.0699%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (12 samples, 0.02%)</title><rect x="12.8238%" y="293" width="0.0230%" height="15" fill="rgb(226,155,13)" fg:x="6684" fg:w="12"/><text x="13.0738%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.02%)</title><rect x="12.8238%" y="277" width="0.0230%" height="15" fill="rgb(241,28,37)" fg:x="6684" fg:w="12"/><text x="13.0738%" y="287.50"></text></g><g><title>AppKit`+[NSEvent otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:] (23 samples, 0.04%)</title><rect x="12.8084%" y="341" width="0.0441%" height="15" fill="rgb(233,93,10)" fg:x="6676" fg:w="23"/><text x="13.0584%" y="351.50"></text></g><g><title>App`&lt;(A,B,C,D,E,F,G,H,I) as objc2::message::MessageArguments&gt;::__invoke (38 samples, 0.07%)</title><rect x="12.7988%" y="357" width="0.0729%" height="15" fill="rgb(225,113,19)" fg:x="6671" fg:w="38"/><text x="13.0488%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (9 samples, 0.02%)</title><rect x="12.8813%" y="357" width="0.0173%" height="15" fill="rgb(241,2,18)" fg:x="6714" fg:w="9"/><text x="13.1313%" y="367.50"></text></g><g><title>App`objc2::message::conditional_try (60 samples, 0.12%)</title><rect x="12.7854%" y="389" width="0.1151%" height="15" fill="rgb(228,207,21)" fg:x="6664" fg:w="60"/><text x="13.0354%" y="399.50"></text></g><g><title>App`objc2::message::platform::send_unverified::_{{closure}} (56 samples, 0.11%)</title><rect x="12.7931%" y="373" width="0.1074%" height="15" fill="rgb(213,211,35)" fg:x="6668" fg:w="56"/><text x="13.0431%" y="383.50"></text></g><g><title>App`objc2::message::platform::send_unverified (61 samples, 0.12%)</title><rect x="12.7854%" y="405" width="0.1170%" height="15" fill="rgb(209,83,10)" fg:x="6664" fg:w="61"/><text x="13.0354%" y="415.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_message (65 samples, 0.12%)</title><rect x="12.7796%" y="421" width="0.1247%" height="15" fill="rgb(209,164,1)" fg:x="6661" fg:w="65"/><text x="13.0296%" y="431.50"></text></g><g><title>App`objc2::rc::id::Id&lt;T,O&gt;::retain_autoreleased (7 samples, 0.01%)</title><rect x="12.9101%" y="421" width="0.0134%" height="15" fill="rgb(213,184,43)" fg:x="6729" fg:w="7"/><text x="13.1601%" y="431.50"></text></g><g><title>App`&lt;objc2::__macro_helpers::RetainSemantics&lt;_,_,_,_&gt; as objc2::__macro_helpers::MsgSendId&lt;T,U,O&gt;&gt;::send_message_id (79 samples, 0.15%)</title><rect x="12.7758%" y="437" width="0.1516%" height="15" fill="rgb(231,61,34)" fg:x="6659" fg:w="79"/><text x="13.0258%" y="447.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::event::NSEvent::dummy (93 samples, 0.18%)</title><rect x="12.7681%" y="469" width="0.1784%" height="15" fill="rgb(235,75,3)" fg:x="6655" fg:w="93"/><text x="13.0181%" y="479.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::event::NSEvent::otherEventWithType (90 samples, 0.17%)</title><rect x="12.7739%" y="453" width="0.1727%" height="15" fill="rgb(220,106,47)" fg:x="6658" fg:w="90"/><text x="13.0239%" y="463.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::cleared::_{{closure}} (962 samples, 1.85%)</title><rect x="11.1066%" y="485" width="1.8457%" height="15" fill="rgb(210,196,33)" fg:x="5789" fg:w="962"/><text x="11.3566%" y="495.50">A..</text></g><g><title>App`objc2::rc::autorelease::autoreleasepool (1,062 samples, 2.04%)</title><rect x="10.9186%" y="501" width="2.0375%" height="15" fill="rgb(229,154,42)" fg:x="5691" fg:w="1062"/><text x="11.1686%" y="511.50">A..</text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::get_old_and_new_control_flow (6 samples, 0.01%)</title><rect x="12.9907%" y="501" width="0.0115%" height="15" fill="rgb(228,114,26)" fg:x="6771" fg:w="6"/><text x="13.2407%" y="511.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events::_{{closure}} (9 samples, 0.02%)</title><rect x="13.0233%" y="437" width="0.0173%" height="15" fill="rgb(208,144,1)" fg:x="6788" fg:w="9"/><text x="13.2733%" y="447.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event::_{{closure}} (24 samples, 0.05%)</title><rect x="13.0195%" y="453" width="0.0460%" height="15" fill="rgb(239,112,37)" fg:x="6786" fg:w="24"/><text x="13.2695%" y="463.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::_&lt;impl winit::event::Event&lt;Never&gt;&gt;::userify (13 samples, 0.02%)</title><rect x="13.0406%" y="437" width="0.0249%" height="15" fill="rgb(210,96,50)" fg:x="6797" fg:w="13"/><text x="13.2906%" y="447.50"></text></g><g><title>App`winit::event::Event&lt;T&gt;::map_nonuser_event (8 samples, 0.02%)</title><rect x="13.0502%" y="421" width="0.0153%" height="15" fill="rgb(222,178,2)" fg:x="6802" fg:w="8"/><text x="13.3002%" y="431.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt;::with_callback (33 samples, 0.06%)</title><rect x="13.0156%" y="469" width="0.0633%" height="15" fill="rgb(226,74,18)" fg:x="6784" fg:w="33"/><text x="13.2656%" y="479.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (36 samples, 0.07%)</title><rect x="13.0118%" y="485" width="0.0691%" height="15" fill="rgb(225,67,54)" fg:x="6782" fg:w="36"/><text x="13.2618%" y="495.50"></text></g><g><title>App`std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.01%)</title><rect x="13.0885%" y="485" width="0.0115%" height="15" fill="rgb(251,92,32)" fg:x="6822" fg:w="6"/><text x="13.3385%" y="495.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (55 samples, 0.11%)</title><rect x="13.0022%" y="501" width="0.1055%" height="15" fill="rgb(228,149,22)" fg:x="6777" fg:w="55"/><text x="13.2522%" y="511.50"></text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::read (7 samples, 0.01%)</title><rect x="13.1576%" y="389" width="0.0134%" height="15" fill="rgb(243,54,13)" fg:x="6858" fg:w="7"/><text x="13.4076%" y="399.50"></text></g><g><title>App`std::sync::mpmc::Receiver&lt;T&gt;::try_recv (39 samples, 0.07%)</title><rect x="13.1269%" y="421" width="0.0748%" height="15" fill="rgb(243,180,28)" fg:x="6842" fg:w="39"/><text x="13.3769%" y="431.50"></text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (32 samples, 0.06%)</title><rect x="13.1403%" y="405" width="0.0614%" height="15" fill="rgb(208,167,24)" fg:x="6849" fg:w="32"/><text x="13.3903%" y="415.50"></text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::start_recv (16 samples, 0.03%)</title><rect x="13.1710%" y="389" width="0.0307%" height="15" fill="rgb(245,73,45)" fg:x="6865" fg:w="16"/><text x="13.4210%" y="399.50"></text></g><g><title>App`core::sync::atomic::atomic_load (9 samples, 0.02%)</title><rect x="13.1845%" y="373" width="0.0173%" height="15" fill="rgb(237,203,48)" fg:x="6872" fg:w="9"/><text x="13.4345%" y="383.50"></text></g><g><title>App`&lt;std::sync::mpsc::TryIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.08%)</title><rect x="13.1231%" y="437" width="0.0825%" height="15" fill="rgb(211,197,16)" fg:x="6840" fg:w="43"/><text x="13.3731%" y="447.50"></text></g><g><title>App`glutin_window::to_static_event (6 samples, 0.01%)</title><rect x="13.2286%" y="421" width="0.0115%" height="15" fill="rgb(243,99,51)" fg:x="6895" fg:w="6"/><text x="13.4786%" y="431.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events::_{{closure}} (15 samples, 0.03%)</title><rect x="13.2132%" y="437" width="0.0288%" height="15" fill="rgb(215,123,29)" fg:x="6887" fg:w="15"/><text x="13.4632%" y="447.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_user_events::_{{closure}} (67 samples, 0.13%)</title><rect x="13.1192%" y="453" width="0.1285%" height="15" fill="rgb(239,186,37)" fg:x="6838" fg:w="67"/><text x="13.3692%" y="463.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_user_events (85 samples, 0.16%)</title><rect x="13.1135%" y="485" width="0.1631%" height="15" fill="rgb(252,136,39)" fg:x="6835" fg:w="85"/><text x="13.3635%" y="495.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt;::with_callback (84 samples, 0.16%)</title><rect x="13.1154%" y="469" width="0.1612%" height="15" fill="rgb(223,213,32)" fg:x="6836" fg:w="84"/><text x="13.3654%" y="479.50"></text></g><g><title>App`std::sync::mutex::MutexGuard&lt;T&gt;::new (7 samples, 0.01%)</title><rect x="13.2996%" y="469" width="0.0134%" height="15" fill="rgb(233,115,5)" fg:x="6932" fg:w="7"/><text x="13.5496%" y="479.50"></text></g><g><title>App`std::sync::mutex::Mutex&lt;T&gt;::lock (25 samples, 0.05%)</title><rect x="13.2900%" y="485" width="0.0480%" height="15" fill="rgb(207,226,44)" fg:x="6927" fg:w="25"/><text x="13.5400%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.02%)</title><rect x="13.3207%" y="469" width="0.0173%" height="15" fill="rgb(208,126,0)" fg:x="6943" fg:w="9"/><text x="13.5707%" y="479.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_user_events (128 samples, 0.25%)</title><rect x="13.1077%" y="501" width="0.2456%" height="15" fill="rgb(244,66,21)" fg:x="6832" fg:w="128"/><text x="13.3577%" y="511.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::should_exit (8 samples, 0.02%)</title><rect x="13.3610%" y="501" width="0.0153%" height="15" fill="rgb(222,97,12)" fg:x="6964" fg:w="8"/><text x="13.6110%" y="511.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::should_redraw (9 samples, 0.02%)</title><rect x="13.3763%" y="501" width="0.0173%" height="15" fill="rgb(219,213,19)" fg:x="6972" fg:w="9"/><text x="13.6263%" y="511.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::take_events (18 samples, 0.03%)</title><rect x="13.3936%" y="501" width="0.0345%" height="15" fill="rgb(252,169,30)" fg:x="6981" fg:w="18"/><text x="13.6436%" y="511.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::events (8 samples, 0.02%)</title><rect x="13.4128%" y="485" width="0.0153%" height="15" fill="rgb(206,32,51)" fg:x="6991" fg:w="8"/><text x="13.6628%" y="495.50"></text></g><g><title>App`std::sync::mutex::Mutex&lt;T&gt;::lock (7 samples, 0.01%)</title><rect x="13.4147%" y="469" width="0.0134%" height="15" fill="rgb(250,172,42)" fg:x="6992" fg:w="7"/><text x="13.6647%" y="479.50"></text></g><g><title>App`std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.02%)</title><rect x="13.4339%" y="485" width="0.0211%" height="15" fill="rgb(209,34,43)" fg:x="7002" fg:w="11"/><text x="13.6839%" y="495.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::update_start_time (15 samples, 0.03%)</title><rect x="13.4281%" y="501" width="0.0288%" height="15" fill="rgb(223,11,35)" fg:x="6999" fg:w="15"/><text x="13.6781%" y="511.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_message (21 samples, 0.04%)</title><rect x="13.4895%" y="453" width="0.0403%" height="15" fill="rgb(251,219,26)" fg:x="7031" fg:w="21"/><text x="13.7395%" y="463.50"></text></g><g><title>App`objc2::message::platform::send_unverified (19 samples, 0.04%)</title><rect x="13.4933%" y="437" width="0.0365%" height="15" fill="rgb(231,119,3)" fg:x="7033" fg:w="19"/><text x="13.7433%" y="447.50"></text></g><g><title>App`objc2::message::conditional_try (17 samples, 0.03%)</title><rect x="13.4972%" y="421" width="0.0326%" height="15" fill="rgb(216,97,11)" fg:x="7035" fg:w="17"/><text x="13.7472%" y="431.50"></text></g><g><title>App`objc2::message::platform::send_unverified::_{{closure}} (17 samples, 0.03%)</title><rect x="13.4972%" y="405" width="0.0326%" height="15" fill="rgb(223,59,9)" fg:x="7035" fg:w="17"/><text x="13.7472%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.02%)</title><rect x="13.5106%" y="389" width="0.0192%" height="15" fill="rgb(233,93,31)" fg:x="7042" fg:w="10"/><text x="13.7606%" y="399.50"></text></g><g><title>App`objc2::rc::id::Id&lt;T,O&gt;::retain_autoreleased (10 samples, 0.02%)</title><rect x="13.5394%" y="453" width="0.0192%" height="15" fill="rgb(239,81,33)" fg:x="7057" fg:w="10"/><text x="13.7894%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_retain (8 samples, 0.02%)</title><rect x="13.5643%" y="453" width="0.0153%" height="15" fill="rgb(213,120,34)" fg:x="7070" fg:w="8"/><text x="13.8143%" y="463.50"></text></g><g><title>App`&lt;objc2::__macro_helpers::RetainSemantics&lt;_,_,_,_&gt; as objc2::__macro_helpers::MsgSendId&lt;T,U,O&gt;&gt;::send_message_id (59 samples, 0.11%)</title><rect x="13.4722%" y="469" width="0.1132%" height="15" fill="rgb(243,49,53)" fg:x="7022" fg:w="59"/><text x="13.7222%" y="479.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::appkit::application::NSApplication as objc2::class_type::ClassType&gt;::class (9 samples, 0.02%)</title><rect x="13.5854%" y="469" width="0.0173%" height="15" fill="rgb(247,216,33)" fg:x="7081" fg:w="9"/><text x="13.8354%" y="479.50"></text></g><g><title>App`objc2::cache::CachedSel::get (13 samples, 0.02%)</title><rect x="13.6123%" y="469" width="0.0249%" height="15" fill="rgb(226,26,14)" fg:x="7095" fg:w="13"/><text x="13.8623%" y="479.50"></text></g><g><title>App`objc2::runtime::Sel::from_ptr (6 samples, 0.01%)</title><rect x="13.6257%" y="453" width="0.0115%" height="15" fill="rgb(215,49,53)" fg:x="7102" fg:w="6"/><text x="13.8757%" y="463.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApp (98 samples, 0.19%)</title><rect x="13.4569%" y="501" width="0.1880%" height="15" fill="rgb(245,162,40)" fg:x="7014" fg:w="98"/><text x="13.7069%" y="511.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApplication::shared (90 samples, 0.17%)</title><rect x="13.4722%" y="485" width="0.1727%" height="15" fill="rgb(229,68,17)" fg:x="7022" fg:w="90"/><text x="13.7222%" y="495.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::cleared (1,572 samples, 3.02%)</title><rect x="10.6462%" y="517" width="3.0160%" height="15" fill="rgb(213,182,10)" fg:x="5549" fg:w="1572"/><text x="10.8962%" y="527.50">App..</text></g><g><title>App`__rust_try (1,599 samples, 3.07%)</title><rect x="10.6116%" y="581" width="3.0678%" height="15" fill="rgb(245,125,30)" fg:x="5531" fg:w="1599"/><text x="10.8616%" y="591.50">App..</text></g><g><title>App`std::panicking::try::do_call (1,598 samples, 3.07%)</title><rect x="10.6136%" y="565" width="3.0659%" height="15" fill="rgb(232,202,2)" fg:x="5532" fg:w="1598"/><text x="10.8636%" y="575.50">App..</text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_handler::_{{closure}} (1,596 samples, 3.06%)</title><rect x="10.6174%" y="549" width="3.0620%" height="15" fill="rgb(237,140,51)" fg:x="5534" fg:w="1596"/><text x="10.8674%" y="559.50">App..</text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler::_{{closure}} (1,593 samples, 3.06%)</title><rect x="10.6232%" y="533" width="3.0563%" height="15" fill="rgb(236,157,25)" fg:x="5537" fg:w="1593"/><text x="10.8732%" y="543.50">App..</text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler (1,613 samples, 3.09%)</title><rect x="10.5886%" y="661" width="3.0947%" height="15" fill="rgb(219,209,0)" fg:x="5519" fg:w="1613"/><text x="10.8386%" y="671.50">App..</text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_handler (1,613 samples, 3.09%)</title><rect x="10.5886%" y="645" width="3.0947%" height="15" fill="rgb(240,116,54)" fg:x="5519" fg:w="1613"/><text x="10.8386%" y="655.50">App..</text></g><g><title>App`winit::platform_impl::platform::event_loop::stop_app_on_panic (1,605 samples, 3.08%)</title><rect x="10.6040%" y="629" width="3.0793%" height="15" fill="rgb(216,10,36)" fg:x="5527" fg:w="1605"/><text x="10.8540%" y="639.50">App..</text></g><g><title>App`std::panic::catch_unwind (1,603 samples, 3.08%)</title><rect x="10.6078%" y="613" width="3.0755%" height="15" fill="rgb(222,72,44)" fg:x="5529" fg:w="1603"/><text x="10.8578%" y="623.50">App..</text></g><g><title>App`std::panicking::try (1,602 samples, 3.07%)</title><rect x="10.6097%" y="597" width="3.0736%" height="15" fill="rgb(232,159,9)" fg:x="5530" fg:w="1602"/><text x="10.8597%" y="607.50">App..</text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (2,298 samples, 4.41%)</title><rect x="9.2974%" y="677" width="4.4089%" height="15" fill="rgb(210,39,32)" fg:x="4846" fg:w="2298"/><text x="9.5474%" y="687.50">CoreF..</text></g><g><title>CoreFoundation`__CFRunLoopPerCalloutARPEnd (6 samples, 0.01%)</title><rect x="13.7082%" y="677" width="0.0115%" height="15" fill="rgb(216,194,45)" fg:x="7145" fg:w="6"/><text x="13.9582%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (7 samples, 0.01%)</title><rect x="13.7408%" y="677" width="0.0134%" height="15" fill="rgb(218,18,35)" fg:x="7162" fg:w="7"/><text x="13.9908%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (6 samples, 0.01%)</title><rect x="13.7543%" y="677" width="0.0115%" height="15" fill="rgb(207,83,51)" fg:x="7169" fg:w="6"/><text x="14.0043%" y="687.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (2,422 samples, 4.65%)</title><rect x="9.1286%" y="693" width="4.6468%" height="15" fill="rgb(225,63,43)" fg:x="4758" fg:w="2422"/><text x="9.3786%" y="703.50">CoreF..</text></g><g><title>CoreFoundation`CFBasicHashApply (27 samples, 0.05%)</title><rect x="13.7869%" y="661" width="0.0518%" height="15" fill="rgb(207,57,36)" fg:x="7186" fg:w="27"/><text x="14.0369%" y="671.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (17 samples, 0.03%)</title><rect x="13.8061%" y="645" width="0.0326%" height="15" fill="rgb(216,99,33)" fg:x="7196" fg:w="17"/><text x="14.0561%" y="655.50"></text></g><g><title>CoreFoundation`__CFRunLoopCollectSources0 (17 samples, 0.03%)</title><rect x="13.8061%" y="629" width="0.0326%" height="15" fill="rgb(225,42,16)" fg:x="7196" fg:w="17"/><text x="14.0561%" y="639.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (29 samples, 0.06%)</title><rect x="13.7850%" y="677" width="0.0556%" height="15" fill="rgb(220,201,45)" fg:x="7185" fg:w="29"/><text x="14.0350%" y="687.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSources0 (37 samples, 0.07%)</title><rect x="13.7754%" y="693" width="0.0710%" height="15" fill="rgb(225,33,4)" fg:x="7180" fg:w="37"/><text x="14.0254%" y="703.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (17 samples, 0.03%)</title><rect x="13.8617%" y="677" width="0.0326%" height="15" fill="rgb(224,33,50)" fg:x="7225" fg:w="17"/><text x="14.1117%" y="687.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (9 samples, 0.02%)</title><rect x="13.8943%" y="677" width="0.0173%" height="15" fill="rgb(246,198,51)" fg:x="7242" fg:w="9"/><text x="14.1443%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="13.8982%" y="661" width="0.0134%" height="15" fill="rgb(205,22,4)" fg:x="7244" fg:w="7"/><text x="14.1482%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (7 samples, 0.01%)</title><rect x="13.8982%" y="645" width="0.0134%" height="15" fill="rgb(206,3,8)" fg:x="7244" fg:w="7"/><text x="14.1482%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.01%)</title><rect x="13.8982%" y="629" width="0.0134%" height="15" fill="rgb(251,23,15)" fg:x="7244" fg:w="7"/><text x="14.1482%" y="639.50"></text></g><g><title>CoreFoundation`_CFArrayCheckAndGetValueAtIndex (6 samples, 0.01%)</title><rect x="13.9385%" y="677" width="0.0115%" height="15" fill="rgb(252,88,28)" fg:x="7265" fg:w="6"/><text x="14.1885%" y="687.50"></text></g><g><title>CoreFoundation`CFRetain (6 samples, 0.01%)</title><rect x="14.4315%" y="661" width="0.0115%" height="15" fill="rgb(212,127,14)" fg:x="7522" fg:w="6"/><text x="14.6815%" y="671.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (10 samples, 0.02%)</title><rect x="14.4699%" y="661" width="0.0192%" height="15" fill="rgb(247,145,37)" fg:x="7542" fg:w="10"/><text x="14.7199%" y="671.50"></text></g><g><title>CoreFoundation`__CFArrayReleaseValues (6 samples, 0.01%)</title><rect x="14.5236%" y="629" width="0.0115%" height="15" fill="rgb(209,117,53)" fg:x="7570" fg:w="6"/><text x="14.7736%" y="639.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (18 samples, 0.03%)</title><rect x="14.5044%" y="645" width="0.0345%" height="15" fill="rgb(212,90,42)" fg:x="7560" fg:w="18"/><text x="14.7544%" y="655.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (15 samples, 0.03%)</title><rect x="14.5409%" y="645" width="0.0288%" height="15" fill="rgb(218,164,37)" fg:x="7579" fg:w="15"/><text x="14.7909%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (137 samples, 0.26%)</title><rect x="14.5908%" y="645" width="0.2628%" height="15" fill="rgb(246,65,34)" fg:x="7605" fg:w="137"/><text x="14.8408%" y="655.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (192 samples, 0.37%)</title><rect x="14.4891%" y="661" width="0.3684%" height="15" fill="rgb(231,100,33)" fg:x="7552" fg:w="192"/><text x="14.7391%" y="671.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (12 samples, 0.02%)</title><rect x="14.8632%" y="629" width="0.0230%" height="15" fill="rgb(228,126,14)" fg:x="7747" fg:w="12"/><text x="15.1132%" y="639.50"></text></g><g><title>CoreFoundation`CFSetGetValue (22 samples, 0.04%)</title><rect x="14.8613%" y="645" width="0.0422%" height="15" fill="rgb(215,173,21)" fg:x="7746" fg:w="22"/><text x="15.1113%" y="655.50"></text></g><g><title>CoreFoundation`__CFStringHash (8 samples, 0.02%)</title><rect x="14.8881%" y="629" width="0.0153%" height="15" fill="rgb(210,6,40)" fg:x="7760" fg:w="8"/><text x="15.1381%" y="639.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (28 samples, 0.05%)</title><rect x="14.8574%" y="661" width="0.0537%" height="15" fill="rgb(212,48,18)" fg:x="7744" fg:w="28"/><text x="15.1074%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (45 samples, 0.09%)</title><rect x="14.9342%" y="661" width="0.0863%" height="15" fill="rgb(230,214,11)" fg:x="7784" fg:w="45"/><text x="15.1842%" y="671.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (563 samples, 1.08%)</title><rect x="13.9596%" y="677" width="1.0802%" height="15" fill="rgb(254,105,39)" fg:x="7276" fg:w="563"/><text x="14.2096%" y="687.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (7 samples, 0.01%)</title><rect x="15.0397%" y="677" width="0.0134%" height="15" fill="rgb(245,158,5)" fg:x="7839" fg:w="7"/><text x="15.2897%" y="687.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (643 samples, 1.23%)</title><rect x="13.8464%" y="693" width="1.2336%" height="15" fill="rgb(249,208,11)" fg:x="7217" fg:w="643"/><text x="14.0964%" y="703.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (131 samples, 0.25%)</title><rect x="15.0896%" y="693" width="0.2513%" height="15" fill="rgb(210,39,28)" fg:x="7865" fg:w="131"/><text x="15.3396%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (125 samples, 0.24%)</title><rect x="15.1011%" y="677" width="0.2398%" height="15" fill="rgb(211,56,53)" fg:x="7871" fg:w="125"/><text x="15.3511%" y="687.50"></text></g><g><title>libdispatch.dylib`_dispatch_get_main_queue_port_4CF (9 samples, 0.02%)</title><rect x="15.3409%" y="693" width="0.0173%" height="15" fill="rgb(226,201,30)" fg:x="7996" fg:w="9"/><text x="15.5909%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_runloop_root_queue_get_port_4CF (7 samples, 0.01%)</title><rect x="15.3582%" y="693" width="0.0134%" height="15" fill="rgb(239,101,34)" fg:x="8005" fg:w="7"/><text x="15.6082%" y="703.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_revert (7 samples, 0.01%)</title><rect x="15.3755%" y="693" width="0.0134%" height="15" fill="rgb(226,209,5)" fg:x="8014" fg:w="7"/><text x="15.6255%" y="703.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (19 samples, 0.04%)</title><rect x="15.3889%" y="693" width="0.0365%" height="15" fill="rgb(250,105,47)" fg:x="8021" fg:w="19"/><text x="15.6389%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_extract_member_trap (35 samples, 0.07%)</title><rect x="15.4426%" y="693" width="0.0672%" height="15" fill="rgb(230,72,3)" fg:x="8049" fg:w="35"/><text x="15.6926%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (284 samples, 0.54%)</title><rect x="15.5098%" y="693" width="0.5449%" height="15" fill="rgb(232,218,39)" fg:x="8084" fg:w="284"/><text x="15.7598%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`voucher_mach_msg_revert (7 samples, 0.01%)</title><rect x="16.0623%" y="693" width="0.0134%" height="15" fill="rgb(248,166,6)" fg:x="8372" fg:w="7"/><text x="16.3123%" y="703.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (3,714 samples, 7.13%)</title><rect x="8.9693%" y="709" width="7.1256%" height="15" fill="rgb(247,89,20)" fg:x="4675" fg:w="3714"/><text x="9.2193%" y="719.50">CoreFounda..</text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.01%)</title><rect x="16.1141%" y="709" width="0.0134%" height="15" fill="rgb(248,130,54)" fg:x="8399" fg:w="7"/><text x="16.3641%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (10 samples, 0.02%)</title><rect x="16.1487%" y="709" width="0.0192%" height="15" fill="rgb(234,196,4)" fg:x="8417" fg:w="10"/><text x="16.3987%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.02%)</title><rect x="16.1506%" y="693" width="0.0173%" height="15" fill="rgb(250,143,31)" fg:x="8418" fg:w="9"/><text x="16.4006%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.02%)</title><rect x="16.1506%" y="677" width="0.0173%" height="15" fill="rgb(211,110,34)" fg:x="8418" fg:w="9"/><text x="16.4006%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.02%)</title><rect x="16.1525%" y="661" width="0.0153%" height="15" fill="rgb(215,124,48)" fg:x="8419" fg:w="8"/><text x="16.4025%" y="671.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (4,890 samples, 9.38%)</title><rect x="6.8320%" y="725" width="9.3818%" height="15" fill="rgb(216,46,13)" fg:x="3561" fg:w="4890"/><text x="7.0820%" y="735.50">CoreFoundatio..</text></g><g><title>CoreFoundation`CFStringCompareWithOptionsAndLocale (26 samples, 0.05%)</title><rect x="16.2139%" y="725" width="0.0499%" height="15" fill="rgb(205,184,25)" fg:x="8451" fg:w="26"/><text x="16.4639%" y="735.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (11 samples, 0.02%)</title><rect x="16.2427%" y="709" width="0.0211%" height="15" fill="rgb(228,1,10)" fg:x="8466" fg:w="11"/><text x="16.4927%" y="719.50"></text></g><g><title>CoreFoundation`CFStringGetLength (9 samples, 0.02%)</title><rect x="16.2638%" y="725" width="0.0173%" height="15" fill="rgb(213,116,27)" fg:x="8477" fg:w="9"/><text x="16.5138%" y="735.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (6 samples, 0.01%)</title><rect x="16.3635%" y="693" width="0.0115%" height="15" fill="rgb(241,95,50)" fg:x="8529" fg:w="6"/><text x="16.6135%" y="703.50"></text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (16 samples, 0.03%)</title><rect x="16.3789%" y="677" width="0.0307%" height="15" fill="rgb(238,48,32)" fg:x="8537" fg:w="16"/><text x="16.6289%" y="687.50"></text></g><g><title>HIToolbox`ReleaseEvent (6 samples, 0.01%)</title><rect x="16.3981%" y="661" width="0.0115%" height="15" fill="rgb(235,113,49)" fg:x="8547" fg:w="6"/><text x="16.6481%" y="671.50"></text></g><g><title>HIToolbox`PingEventQueueMachPort (18 samples, 0.03%)</title><rect x="16.4096%" y="677" width="0.0345%" height="15" fill="rgb(205,127,43)" fg:x="8553" fg:w="18"/><text x="16.6596%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (18 samples, 0.03%)</title><rect x="16.4096%" y="661" width="0.0345%" height="15" fill="rgb(250,162,2)" fg:x="8553" fg:w="18"/><text x="16.6596%" y="671.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (36 samples, 0.07%)</title><rect x="16.3770%" y="693" width="0.0691%" height="15" fill="rgb(220,13,41)" fg:x="8536" fg:w="36"/><text x="16.6270%" y="703.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (50 samples, 0.10%)</title><rect x="16.3559%" y="709" width="0.0959%" height="15" fill="rgb(249,221,25)" fg:x="8525" fg:w="50"/><text x="16.6059%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (6 samples, 0.01%)</title><rect x="16.4518%" y="709" width="0.0115%" height="15" fill="rgb(215,208,19)" fg:x="8575" fg:w="6"/><text x="16.7018%" y="719.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (78 samples, 0.15%)</title><rect x="16.3175%" y="725" width="0.1496%" height="15" fill="rgb(236,175,2)" fg:x="8505" fg:w="78"/><text x="16.5675%" y="735.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (5,058 samples, 9.70%)</title><rect x="6.7860%" y="741" width="9.7042%" height="15" fill="rgb(241,52,2)" fg:x="3537" fg:w="5058"/><text x="7.0360%" y="751.50">HIToolbox`RunC..</text></g><g><title>CoreFoundation`_CFRelease (12 samples, 0.02%)</title><rect x="16.4902%" y="725" width="0.0230%" height="15" fill="rgb(248,140,14)" fg:x="8595" fg:w="12"/><text x="16.7402%" y="735.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (12 samples, 0.02%)</title><rect x="16.4902%" y="709" width="0.0230%" height="15" fill="rgb(253,22,42)" fg:x="8595" fg:w="12"/><text x="16.7402%" y="719.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (12 samples, 0.02%)</title><rect x="16.4902%" y="693" width="0.0230%" height="15" fill="rgb(234,61,47)" fg:x="8595" fg:w="12"/><text x="16.7402%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (12 samples, 0.02%)</title><rect x="16.4902%" y="677" width="0.0230%" height="15" fill="rgb(208,226,15)" fg:x="8595" fg:w="12"/><text x="16.7402%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (12 samples, 0.02%)</title><rect x="16.4902%" y="661" width="0.0230%" height="15" fill="rgb(217,221,4)" fg:x="8595" fg:w="12"/><text x="16.7402%" y="671.50"></text></g><g><title>HIToolbox`_DropPendingBoost (13 samples, 0.02%)</title><rect x="16.4902%" y="741" width="0.0249%" height="15" fill="rgb(212,174,34)" fg:x="8595" fg:w="13"/><text x="16.7402%" y="751.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (5,242 samples, 10.06%)</title><rect x="6.5097%" y="757" width="10.0572%" height="15" fill="rgb(253,83,4)" fg:x="3393" fg:w="5242"/><text x="6.7597%" y="767.50">HIToolbox`Recei..</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (5,261 samples, 10.09%)</title><rect x="6.4771%" y="773" width="10.0936%" height="15" fill="rgb(250,195,49)" fg:x="3376" fg:w="5261"/><text x="6.7271%" y="783.50">HIToolbox`_Bloc..</text></g><g><title>AppKit`_DPSNextEvent (5,310 samples, 10.19%)</title><rect x="6.3869%" y="789" width="10.1876%" height="15" fill="rgb(241,192,25)" fg:x="3329" fg:w="5310"/><text x="6.6369%" y="799.50">AppKit`_DPSNext..</text></g><g><title>AppKit`_NSEventMarkCATransactionInputTime (6 samples, 0.01%)</title><rect x="16.5880%" y="789" width="0.0115%" height="15" fill="rgb(208,124,10)" fg:x="8646" fg:w="6"/><text x="16.8380%" y="799.50"></text></g><g><title>SkyLight`SLEventGetFlags (6 samples, 0.01%)</title><rect x="16.6878%" y="789" width="0.0115%" height="15" fill="rgb(222,33,0)" fg:x="8698" fg:w="6"/><text x="16.9378%" y="799.50"></text></g><g><title>SkyLight`SLEventGetIntegerValueField (7 samples, 0.01%)</title><rect x="16.6993%" y="789" width="0.0134%" height="15" fill="rgb(234,209,28)" fg:x="8704" fg:w="7"/><text x="16.9493%" y="799.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (7 samples, 0.01%)</title><rect x="16.7319%" y="789" width="0.0134%" height="15" fill="rgb(224,11,23)" fg:x="8721" fg:w="7"/><text x="16.9819%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (7 samples, 0.01%)</title><rect x="16.7319%" y="773" width="0.0134%" height="15" fill="rgb(232,99,1)" fg:x="8721" fg:w="7"/><text x="16.9819%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (6 samples, 0.01%)</title><rect x="16.7338%" y="757" width="0.0115%" height="15" fill="rgb(237,95,45)" fg:x="8722" fg:w="6"/><text x="16.9838%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.01%)</title><rect x="16.7338%" y="741" width="0.0115%" height="15" fill="rgb(208,109,11)" fg:x="8722" fg:w="6"/><text x="16.9838%" y="751.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (13 samples, 0.02%)</title><rect x="16.7530%" y="789" width="0.0249%" height="15" fill="rgb(216,190,48)" fg:x="8732" fg:w="13"/><text x="17.0030%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_release (7 samples, 0.01%)</title><rect x="16.7645%" y="773" width="0.0134%" height="15" fill="rgb(251,171,36)" fg:x="8738" fg:w="7"/><text x="17.0145%" y="783.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (53 samples, 0.10%)</title><rect x="16.7818%" y="789" width="0.1017%" height="15" fill="rgb(230,62,22)" fg:x="8747" fg:w="53"/><text x="17.0318%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (6 samples, 0.01%)</title><rect x="16.8835%" y="789" width="0.0115%" height="15" fill="rgb(225,114,35)" fg:x="8800" fg:w="6"/><text x="17.1335%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_release (6 samples, 0.01%)</title><rect x="16.9046%" y="789" width="0.0115%" height="15" fill="rgb(215,118,42)" fg:x="8811" fg:w="6"/><text x="17.1546%" y="799.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_is_enabled (7 samples, 0.01%)</title><rect x="16.9180%" y="789" width="0.0134%" height="15" fill="rgb(243,119,21)" fg:x="8818" fg:w="7"/><text x="17.1680%" y="799.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (6,723 samples, 12.90%)</title><rect x="4.0463%" y="805" width="12.8986%" height="15" fill="rgb(252,177,53)" fg:x="2109" fg:w="6723"/><text x="4.2963%" y="815.50">AppKit`-[NSApplicat..</text></g><g><title>AppKit`-[NSEvent dealloc] (6 samples, 0.01%)</title><rect x="16.9545%" y="805" width="0.0115%" height="15" fill="rgb(237,209,29)" fg:x="8837" fg:w="6"/><text x="17.2045%" y="815.50"></text></g><g><title>Foundation` (11 samples, 0.02%)</title><rect x="17.0005%" y="805" width="0.0211%" height="15" fill="rgb(212,65,23)" fg:x="8861" fg:w="11"/><text x="17.2505%" y="815.50"></text></g><g><title>Foundation`-[NSAutoreleasePool drain] (11 samples, 0.02%)</title><rect x="17.0235%" y="805" width="0.0211%" height="15" fill="rgb(230,222,46)" fg:x="8873" fg:w="11"/><text x="17.2735%" y="815.50"></text></g><g><title>Foundation`-[NSAutoreleasePool init] (6 samples, 0.01%)</title><rect x="17.0446%" y="805" width="0.0115%" height="15" fill="rgb(215,135,32)" fg:x="8884" fg:w="6"/><text x="17.2946%" y="815.50"></text></g><g><title>Foundation`NSKVOCopyPendingNotificationStack (7 samples, 0.01%)</title><rect x="17.0715%" y="805" width="0.0134%" height="15" fill="rgb(246,101,22)" fg:x="8898" fg:w="7"/><text x="17.3215%" y="815.50"></text></g><g><title>Foundation`NSKVOCopyPendingNotificationStack (15 samples, 0.03%)</title><rect x="17.1041%" y="789" width="0.0288%" height="15" fill="rgb(206,107,13)" fg:x="8915" fg:w="15"/><text x="17.3541%" y="799.50"></text></g><g><title>Foundation`NSKVOPendingPerThreadNotificationStack (10 samples, 0.02%)</title><rect x="17.1137%" y="773" width="0.0192%" height="15" fill="rgb(250,100,44)" fg:x="8920" fg:w="10"/><text x="17.3637%" y="783.50"></text></g><g><title>Foundation`NSKeyValueDidChangeWithPerThreadPendingNotifications (26 samples, 0.05%)</title><rect x="17.0849%" y="805" width="0.0499%" height="15" fill="rgb(231,147,38)" fg:x="8905" fg:w="26"/><text x="17.3349%" y="815.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (7 samples, 0.01%)</title><rect x="17.1521%" y="773" width="0.0134%" height="15" fill="rgb(229,8,40)" fg:x="8940" fg:w="7"/><text x="17.4021%" y="783.50"></text></g><g><title>Foundation`_NSKeyValueRetainedObservationInfoForObject (13 samples, 0.02%)</title><rect x="17.1463%" y="789" width="0.0249%" height="15" fill="rgb(221,135,30)" fg:x="8937" fg:w="13"/><text x="17.3963%" y="799.50"></text></g><g><title>Foundation`NSKeyValueWillChangeWithPerThreadPendingNotifications (28 samples, 0.05%)</title><rect x="17.1348%" y="805" width="0.0537%" height="15" fill="rgb(249,193,18)" fg:x="8931" fg:w="28"/><text x="17.3848%" y="815.50"></text></g><g><title>libobjc.A.dylib`objc_autorelease (8 samples, 0.02%)</title><rect x="17.2096%" y="805" width="0.0153%" height="15" fill="rgb(209,133,39)" fg:x="8970" fg:w="8"/><text x="17.4596%" y="815.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (51 samples, 0.10%)</title><rect x="17.2365%" y="805" width="0.0978%" height="15" fill="rgb(232,100,14)" fg:x="8984" fg:w="51"/><text x="17.4865%" y="815.50"></text></g><g><title>libobjc.A.dylib`objc_opt_new (6 samples, 0.01%)</title><rect x="17.3343%" y="805" width="0.0115%" height="15" fill="rgb(224,185,1)" fg:x="9035" fg:w="6"/><text x="17.5843%" y="815.50"></text></g><g><title>libobjc.A.dylib`objc_release (7 samples, 0.01%)</title><rect x="17.3458%" y="805" width="0.0134%" height="15" fill="rgb(223,139,8)" fg:x="9041" fg:w="7"/><text x="17.5958%" y="815.50"></text></g><g><title>AppKit`-[NSApplication run] (7,654 samples, 14.68%)</title><rect x="2.7052%" y="821" width="14.6848%" height="15" fill="rgb(232,213,38)" fg:x="1410" fg:w="7654"/><text x="2.9552%" y="831.50">AppKit`-[NSApplication..</text></g><g><title>libobjc.A.dylib`objc_msgSend (52 samples, 0.10%)</title><rect x="17.4686%" y="821" width="0.0998%" height="15" fill="rgb(207,94,22)" fg:x="9105" fg:w="52"/><text x="17.7186%" y="831.50"></text></g><g><title>App`&lt;() as objc2::message::MessageArguments&gt;::__invoke (7,759 samples, 14.89%)</title><rect x="2.6879%" y="837" width="14.8862%" height="15" fill="rgb(219,183,54)" fg:x="1401" fg:w="7759"/><text x="2.9379%" y="847.50">App`&lt;() as objc2::messa..</text></g><g><title>App`objc2::message::conditional_try (7,775 samples, 14.92%)</title><rect x="2.6611%" y="869" width="14.9169%" height="15" fill="rgb(216,185,54)" fg:x="1387" fg:w="7775"/><text x="2.9111%" y="879.50">App`objc2::message::con..</text></g><g><title>App`objc2::message::platform::send_unverified::_{{closure}} (7,770 samples, 14.91%)</title><rect x="2.6707%" y="853" width="14.9073%" height="15" fill="rgb(254,217,39)" fg:x="1392" fg:w="7770"/><text x="2.9207%" y="863.50">App`objc2::message::pla..</text></g><g><title>App`objc2::message::MessageReceiver::send_message (7,784 samples, 14.93%)</title><rect x="2.6496%" y="901" width="14.9342%" height="15" fill="rgb(240,178,23)" fg:x="1381" fg:w="7784"/><text x="2.8996%" y="911.50">App`objc2::message::Mes..</text></g><g><title>App`objc2::message::platform::send_unverified (7,780 samples, 14.93%)</title><rect x="2.6572%" y="885" width="14.9265%" height="15" fill="rgb(218,11,47)" fg:x="1385" fg:w="7780"/><text x="2.9072%" y="895.50">App`objc2::message::pla..</text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApplication::run (7,789 samples, 14.94%)</title><rect x="2.6438%" y="917" width="14.9438%" height="15" fill="rgb(218,51,51)" fg:x="1378" fg:w="7789"/><text x="2.8938%" y="927.50">App`winit::platform_imp..</text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return::_{{closure}} (8,175 samples, 15.68%)</title><rect x="1.9167%" y="933" width="15.6844%" height="15" fill="rgb(238,126,27)" fg:x="999" fg:w="8175"/><text x="2.1667%" y="943.50">App`winit::platform_impl..</text></g><g><title>App`&lt;winit::event_loop::EventLoop&lt;T&gt; as winit::platform::run_return::EventLoopExtRunReturn&gt;::run_return (8,282 samples, 15.89%)</title><rect x="1.7190%" y="981" width="15.8896%" height="15" fill="rgb(249,202,22)" fg:x="896" fg:w="8282"/><text x="1.9690%" y="991.50">App`&lt;winit::event_loop::..</text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return (8,273 samples, 15.87%)</title><rect x="1.7363%" y="965" width="15.8724%" height="15" fill="rgb(254,195,49)" fg:x="905" fg:w="8273"/><text x="1.9863%" y="975.50">App`winit::platform_impl..</text></g><g><title>App`objc2::rc::autorelease::autoreleasepool (8,247 samples, 15.82%)</title><rect x="1.7862%" y="949" width="15.8225%" height="15" fill="rgb(208,123,14)" fg:x="931" fg:w="8247"/><text x="2.0362%" y="959.50">App`objc2::rc::autorelea..</text></g><g><title>CoreFoundation`__CFRunLoopSourceDeallocate (8 samples, 0.02%)</title><rect x="17.6221%" y="917" width="0.0153%" height="15" fill="rgb(224,200,8)" fg:x="9185" fg:w="8"/><text x="17.8721%" y="927.50"></text></g><g><title>CoreFoundation`_CFRelease (14 samples, 0.03%)</title><rect x="17.6125%" y="933" width="0.0269%" height="15" fill="rgb(217,61,36)" fg:x="9180" fg:w="14"/><text x="17.8625%" y="943.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::event_loop::EventLoopProxy&lt;T&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.04%)</title><rect x="17.6087%" y="949" width="0.0384%" height="15" fill="rgb(206,35,45)" fg:x="9178" fg:w="20"/><text x="17.8587%" y="959.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;winit::event_loop::EventLoopProxy&lt;glutin_window::UserEvent&gt;&gt; (24 samples, 0.05%)</title><rect x="17.6087%" y="981" width="0.0460%" height="15" fill="rgb(217,65,33)" fg:x="9178" fg:w="24"/><text x="17.8587%" y="991.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;winit::platform_impl::platform::event_loop::EventLoopProxy&lt;glutin_window::UserEvent&gt;&gt; (24 samples, 0.05%)</title><rect x="17.6087%" y="965" width="0.0460%" height="15" fill="rgb(222,158,48)" fg:x="9178" fg:w="24"/><text x="17.8587%" y="975.50"></text></g><g><title>App`&lt;std::sync::mpsc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="17.6643%" y="949" width="0.0173%" height="15" fill="rgb(254,2,54)" fg:x="9207" fg:w="9"/><text x="17.9143%" y="959.50"></text></g><g><title>App`&lt;std::sync::mpmc::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (9 samples, 0.02%)</title><rect x="17.6643%" y="933" width="0.0173%" height="15" fill="rgb(250,143,38)" fg:x="9207" fg:w="9"/><text x="17.9143%" y="943.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (16 samples, 0.03%)</title><rect x="17.6950%" y="917" width="0.0307%" height="15" fill="rgb(248,25,0)" fg:x="9223" fg:w="16"/><text x="17.9450%" y="927.50"></text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (13 samples, 0.02%)</title><rect x="17.7449%" y="837" width="0.0249%" height="15" fill="rgb(206,152,27)" fg:x="9249" fg:w="13"/><text x="17.9949%" y="847.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (16 samples, 0.03%)</title><rect x="17.7411%" y="853" width="0.0307%" height="15" fill="rgb(240,77,30)" fg:x="9247" fg:w="16"/><text x="17.9911%" y="863.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (10 samples, 0.02%)</title><rect x="17.7775%" y="821" width="0.0192%" height="15" fill="rgb(231,5,3)" fg:x="9266" fg:w="10"/><text x="18.0275%" y="831.50"></text></g><g><title>CoreFoundation`CFSetGetValue (26 samples, 0.05%)</title><rect x="17.7756%" y="837" width="0.0499%" height="15" fill="rgb(207,226,32)" fg:x="9265" fg:w="26"/><text x="18.0256%" y="847.50"></text></g><g><title>CoreFoundation`__CFStringHash (10 samples, 0.02%)</title><rect x="17.8063%" y="821" width="0.0192%" height="15" fill="rgb(222,207,47)" fg:x="9281" fg:w="10"/><text x="18.0563%" y="831.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (33 samples, 0.06%)</title><rect x="17.7718%" y="853" width="0.0633%" height="15" fill="rgb(229,115,45)" fg:x="9263" fg:w="33"/><text x="18.0218%" y="863.50"></text></g><g><title>CoreFoundation`CFRunLoopAddSource (53 samples, 0.10%)</title><rect x="17.7392%" y="869" width="0.1017%" height="15" fill="rgb(224,191,6)" fg:x="9246" fg:w="53"/><text x="17.9892%" y="879.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (58 samples, 0.11%)</title><rect x="17.7315%" y="917" width="0.1113%" height="15" fill="rgb(230,227,24)" fg:x="9242" fg:w="58"/><text x="17.9815%" y="927.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (54 samples, 0.10%)</title><rect x="17.7392%" y="901" width="0.1036%" height="15" fill="rgb(228,80,19)" fg:x="9246" fg:w="54"/><text x="17.9892%" y="911.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (54 samples, 0.10%)</title><rect x="17.7392%" y="885" width="0.1036%" height="15" fill="rgb(247,229,0)" fg:x="9246" fg:w="54"/><text x="17.9892%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (7 samples, 0.01%)</title><rect x="17.8811%" y="837" width="0.0134%" height="15" fill="rgb(237,194,15)" fg:x="9320" fg:w="7"/><text x="18.1311%" y="847.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (14 samples, 0.03%)</title><rect x="17.8696%" y="885" width="0.0269%" height="15" fill="rgb(219,203,20)" fg:x="9314" fg:w="14"/><text x="18.1196%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (8 samples, 0.02%)</title><rect x="17.8811%" y="869" width="0.0153%" height="15" fill="rgb(234,128,8)" fg:x="9320" fg:w="8"/><text x="18.1311%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (8 samples, 0.02%)</title><rect x="17.8811%" y="853" width="0.0153%" height="15" fill="rgb(248,202,8)" fg:x="9320" fg:w="8"/><text x="18.1311%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="17.8965%" y="885" width="0.0115%" height="15" fill="rgb(206,104,37)" fg:x="9328" fg:w="6"/><text x="18.1465%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.01%)</title><rect x="17.8965%" y="869" width="0.0115%" height="15" fill="rgb(223,8,27)" fg:x="9328" fg:w="6"/><text x="18.1465%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (6 samples, 0.01%)</title><rect x="17.8965%" y="853" width="0.0115%" height="15" fill="rgb(216,217,28)" fg:x="9328" fg:w="6"/><text x="18.1465%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (6 samples, 0.01%)</title><rect x="17.8965%" y="837" width="0.0115%" height="15" fill="rgb(249,199,1)" fg:x="9328" fg:w="6"/><text x="18.1465%" y="847.50"></text></g><g><title>CoreFoundation`CFBasicHashCreateCopy (33 samples, 0.06%)</title><rect x="17.8466%" y="901" width="0.0633%" height="15" fill="rgb(240,85,17)" fg:x="9302" fg:w="33"/><text x="18.0966%" y="911.50"></text></g><g><title>CoreFoundation`CFSetCreateCopy (47 samples, 0.09%)</title><rect x="17.8428%" y="917" width="0.0902%" height="15" fill="rgb(206,108,45)" fg:x="9300" fg:w="47"/><text x="18.0928%" y="927.50"></text></g><g><title>libobjc.A.dylib`object_setClass (6 samples, 0.01%)</title><rect x="17.9214%" y="901" width="0.0115%" height="15" fill="rgb(245,210,41)" fg:x="9341" fg:w="6"/><text x="18.1714%" y="911.50"></text></g><g><title>CoreFoundation`__CFBasicHashDrain (7 samples, 0.01%)</title><rect x="17.9444%" y="901" width="0.0134%" height="15" fill="rgb(206,13,37)" fg:x="9353" fg:w="7"/><text x="18.1944%" y="911.50"></text></g><g><title>CoreFoundation`_CFRelease (22 samples, 0.04%)</title><rect x="17.9329%" y="917" width="0.0422%" height="15" fill="rgb(250,61,18)" fg:x="9347" fg:w="22"/><text x="18.1829%" y="927.50"></text></g><g><title>CoreFoundation`CFRunLoopAddSource (168 samples, 0.32%)</title><rect x="17.6873%" y="933" width="0.3223%" height="15" fill="rgb(235,172,48)" fg:x="9219" fg:w="168"/><text x="17.9373%" y="943.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (27 samples, 0.05%)</title><rect x="18.0212%" y="917" width="0.0518%" height="15" fill="rgb(249,201,17)" fg:x="9393" fg:w="27"/><text x="18.2712%" y="927.50"></text></g><g><title>CoreFoundation`CFRunLoopSourceCreate (33 samples, 0.06%)</title><rect x="18.0116%" y="933" width="0.0633%" height="15" fill="rgb(219,208,6)" fg:x="9388" fg:w="33"/><text x="18.2616%" y="943.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (12 samples, 0.02%)</title><rect x="18.0749%" y="933" width="0.0230%" height="15" fill="rgb(248,31,23)" fg:x="9421" fg:w="12"/><text x="18.3249%" y="943.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoopProxy&lt;T&gt;::new (227 samples, 0.44%)</title><rect x="17.6816%" y="949" width="0.4355%" height="15" fill="rgb(245,15,42)" fg:x="9216" fg:w="227"/><text x="17.9316%" y="959.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::create_proxy (243 samples, 0.47%)</title><rect x="17.6624%" y="965" width="0.4662%" height="15" fill="rgb(222,217,39)" fg:x="9206" fg:w="243"/><text x="17.9124%" y="975.50"></text></g><g><title>App`winit::event_loop::EventLoop&lt;T&gt;::create_proxy (246 samples, 0.47%)</title><rect x="17.6605%" y="981" width="0.4720%" height="15" fill="rgb(210,219,27)" fg:x="9205" fg:w="246"/><text x="17.9105%" y="991.50"></text></g><g><title>App`core::sync::atomic::atomic_compare_exchange_weak (8 samples, 0.02%)</title><rect x="18.1881%" y="885" width="0.0153%" height="15" fill="rgb(252,166,36)" fg:x="9480" fg:w="8"/><text x="18.4381%" y="895.50"></text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::start_send (21 samples, 0.04%)</title><rect x="18.1766%" y="901" width="0.0403%" height="15" fill="rgb(245,132,34)" fg:x="9474" fg:w="21"/><text x="18.4266%" y="911.50"></text></g><g><title>App`core::sync::atomic::atomic_load (7 samples, 0.01%)</title><rect x="18.2034%" y="885" width="0.0134%" height="15" fill="rgb(236,54,3)" fg:x="9488" fg:w="7"/><text x="18.4534%" y="895.50"></text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::write (8 samples, 0.02%)</title><rect x="18.2169%" y="901" width="0.0153%" height="15" fill="rgb(241,173,43)" fg:x="9495" fg:w="8"/><text x="18.4669%" y="911.50"></text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::send (42 samples, 0.08%)</title><rect x="18.1555%" y="917" width="0.0806%" height="15" fill="rgb(215,190,9)" fg:x="9463" fg:w="42"/><text x="18.4055%" y="927.50"></text></g><g><title>App`std::sync::mpmc::Sender&lt;T&gt;::send (50 samples, 0.10%)</title><rect x="18.1421%" y="933" width="0.0959%" height="15" fill="rgb(242,101,16)" fg:x="9456" fg:w="50"/><text x="18.3921%" y="943.50"></text></g><g><title>App`std::sync::mpsc::Sender&lt;T&gt;::send (54 samples, 0.10%)</title><rect x="18.1421%" y="949" width="0.1036%" height="15" fill="rgb(223,190,21)" fg:x="9456" fg:w="54"/><text x="18.3921%" y="959.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoopProxy&lt;T&gt;::send_event (66 samples, 0.13%)</title><rect x="18.1363%" y="965" width="0.1266%" height="15" fill="rgb(215,228,25)" fg:x="9453" fg:w="66"/><text x="18.3863%" y="975.50"></text></g><g><title>App`winit::event_loop::EventLoopProxy&lt;T&gt;::send_event (71 samples, 0.14%)</title><rect x="18.1325%" y="981" width="0.1362%" height="15" fill="rgb(225,36,22)" fg:x="9451" fg:w="71"/><text x="18.3825%" y="991.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events (8,638 samples, 16.57%)</title><rect x="1.7152%" y="997" width="16.5727%" height="15" fill="rgb(251,106,46)" fg:x="894" fg:w="8638"/><text x="1.9652%" y="1007.50">App`glutin_window::GlutinW..</text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::Window&gt;::poll_event (8,713 samples, 16.72%)</title><rect x="1.5886%" y="1029" width="16.7165%" height="15" fill="rgb(208,90,1)" fg:x="828" fg:w="8713"/><text x="1.8386%" y="1039.50">App`&lt;glutin_window::Glutin..</text></g><g><title>App`glutin_window::GlutinWindow::poll_event (8,699 samples, 16.69%)</title><rect x="1.6154%" y="1013" width="16.6897%" height="15" fill="rgb(243,10,4)" fg:x="842" fg:w="8699"/><text x="1.8654%" y="1023.50">App`glutin_window::GlutinW..</text></g><g><title>App`winit::window::Window::inner_size (11 samples, 0.02%)</title><rect x="18.3128%" y="1013" width="0.0211%" height="15" fill="rgb(212,137,27)" fg:x="9545" fg:w="11"/><text x="18.5628%" y="1023.50"></text></g><g><title>App`winit::platform_impl::platform::window::WinitWindow::inner_size (11 samples, 0.02%)</title><rect x="18.3128%" y="997" width="0.0211%" height="15" fill="rgb(231,220,49)" fg:x="9545" fg:w="11"/><text x="18.5628%" y="1007.50"></text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::Window&gt;::size (13 samples, 0.02%)</title><rect x="18.3109%" y="1029" width="0.0249%" height="15" fill="rgb(237,96,20)" fg:x="9544" fg:w="13"/><text x="18.5609%" y="1039.50"></text></g><g><title>App`&lt;objc2::rc::autorelease::AutoreleasePool as core::ops::drop::Drop&gt;::drop (10 samples, 0.02%)</title><rect x="18.3473%" y="933" width="0.0192%" height="15" fill="rgb(239,229,30)" fg:x="9563" fg:w="10"/><text x="18.5973%" y="943.50"></text></g><g><title>App`std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.02%)</title><rect x="18.3493%" y="917" width="0.0173%" height="15" fill="rgb(219,65,33)" fg:x="9564" fg:w="9"/><text x="18.5993%" y="927.50"></text></g><g><title>App`std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.02%)</title><rect x="18.3493%" y="901" width="0.0173%" height="15" fill="rgb(243,134,7)" fg:x="9564" fg:w="9"/><text x="18.5993%" y="911.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;objc2::rc::autorelease::AutoreleasePool&gt; (14 samples, 0.03%)</title><rect x="18.3473%" y="949" width="0.0269%" height="15" fill="rgb(216,177,54)" fg:x="9563" fg:w="14"/><text x="18.5973%" y="959.50"></text></g><g><title>CoreFoundation`__CFNumberHash (6 samples, 0.01%)</title><rect x="18.4183%" y="725" width="0.0115%" height="15" fill="rgb(211,160,20)" fg:x="9600" fg:w="6"/><text x="18.6683%" y="735.50"></text></g><g><title>Foundation`probeGC (9 samples, 0.02%)</title><rect x="18.4145%" y="741" width="0.0173%" height="15" fill="rgb(239,85,39)" fg:x="9598" fg:w="9"/><text x="18.6645%" y="751.50"></text></g><g><title>AppKit`+[NSCGLSurface surfaceWithID:] (13 samples, 0.02%)</title><rect x="18.4107%" y="773" width="0.0249%" height="15" fill="rgb(232,125,22)" fg:x="9596" fg:w="13"/><text x="18.6607%" y="783.50"></text></g><g><title>Foundation`-[NSConcreteMapTable objectForKey:] (12 samples, 0.02%)</title><rect x="18.4126%" y="757" width="0.0230%" height="15" fill="rgb(244,57,34)" fg:x="9597" fg:w="12"/><text x="18.6626%" y="767.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreateDataBuffer (14 samples, 0.03%)</title><rect x="18.4989%" y="677" width="0.0269%" height="15" fill="rgb(214,203,32)" fg:x="9642" fg:w="14"/><text x="18.7489%" y="687.50"></text></g><g><title>IOAccelerator`_IOAccelResourceAlloc (12 samples, 0.02%)</title><rect x="18.5027%" y="661" width="0.0230%" height="15" fill="rgb(207,58,43)" fg:x="9644" fg:w="12"/><text x="18.7527%" y="671.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (9 samples, 0.02%)</title><rect x="18.5085%" y="645" width="0.0173%" height="15" fill="rgb(215,193,15)" fg:x="9647" fg:w="9"/><text x="18.7585%" y="655.50"></text></g><g><title>IOKit`io_connect_method (301 samples, 0.58%)</title><rect x="18.5277%" y="645" width="0.5775%" height="15" fill="rgb(232,15,44)" fg:x="9657" fg:w="301"/><text x="18.7777%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (297 samples, 0.57%)</title><rect x="18.5354%" y="629" width="0.5698%" height="15" fill="rgb(212,3,48)" fg:x="9661" fg:w="297"/><text x="18.7854%" y="639.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (302 samples, 0.58%)</title><rect x="18.5277%" y="677" width="0.5794%" height="15" fill="rgb(218,128,7)" fg:x="9657" fg:w="302"/><text x="18.7777%" y="687.50"></text></g><g><title>IOKit`IOConnectCallMethod (302 samples, 0.58%)</title><rect x="18.5277%" y="661" width="0.5794%" height="15" fill="rgb(226,216,39)" fg:x="9657" fg:w="302"/><text x="18.7777%" y="671.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (327 samples, 0.63%)</title><rect x="18.4874%" y="693" width="0.6274%" height="15" fill="rgb(243,47,51)" fg:x="9636" fg:w="327"/><text x="18.7374%" y="703.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelCommandBuffer::getNew (332 samples, 0.64%)</title><rect x="18.4797%" y="725" width="0.6370%" height="15" fill="rgb(241,183,40)" fg:x="9632" fg:w="332"/><text x="18.7297%" y="735.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (330 samples, 0.63%)</title><rect x="18.4836%" y="709" width="0.6331%" height="15" fill="rgb(231,217,32)" fg:x="9634" fg:w="330"/><text x="18.7336%" y="719.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`intelSubmitCommands (335 samples, 0.64%)</title><rect x="18.4759%" y="741" width="0.6427%" height="15" fill="rgb(229,61,38)" fg:x="9630" fg:w="335"/><text x="18.7259%" y="751.50"></text></g><g><title>GLEngine`glBindFramebuffer_Exec (7 samples, 0.01%)</title><rect x="19.1301%" y="741" width="0.0134%" height="15" fill="rgb(225,210,5)" fg:x="9971" fg:w="7"/><text x="19.3801%" y="751.50"></text></g><g><title>GLEngine`glDrawArrays_Exec (7 samples, 0.01%)</title><rect x="19.1474%" y="741" width="0.0134%" height="15" fill="rgb(231,79,45)" fg:x="9980" fg:w="7"/><text x="19.3974%" y="751.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (7 samples, 0.01%)</title><rect x="19.1474%" y="725" width="0.0134%" height="15" fill="rgb(224,100,7)" fg:x="9980" fg:w="7"/><text x="19.3974%" y="735.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCore (7 samples, 0.01%)</title><rect x="19.1474%" y="709" width="0.0134%" height="15" fill="rgb(241,198,18)" fg:x="9980" fg:w="7"/><text x="19.3974%" y="719.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (7 samples, 0.01%)</title><rect x="19.1474%" y="693" width="0.0134%" height="15" fill="rgb(252,97,53)" fg:x="9980" fg:w="7"/><text x="19.3974%" y="703.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gpusLoadCurrentPipelinePrograms (7 samples, 0.01%)</title><rect x="19.1474%" y="677" width="0.0134%" height="15" fill="rgb(220,88,7)" fg:x="9980" fg:w="7"/><text x="19.3974%" y="687.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`intelUpdateCtxSysProgramCommon(GLDContextRec*, GLDProgramRec*, GLDPipelineProgramRec*, void*, ShaderInfoCacheRec*, unsigned int) (7 samples, 0.01%)</title><rect x="19.1474%" y="661" width="0.0134%" height="15" fill="rgb(213,176,14)" fg:x="9980" fg:w="7"/><text x="19.3974%" y="671.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`USC::IM_Shader::Compile (7 samples, 0.01%)</title><rect x="19.1474%" y="645" width="0.0134%" height="15" fill="rgb(246,73,7)" fg:x="9980" fg:w="7"/><text x="19.3974%" y="655.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`void updateBindingTable&lt;SGfx3dStateBindingTablePointers&gt;(GenContext*, unsigned int, SGfx3dStateBindingTablePointers&amp;) (8 samples, 0.02%)</title><rect x="19.2184%" y="677" width="0.0153%" height="15" fill="rgb(245,64,36)" fg:x="10017" fg:w="8"/><text x="19.4684%" y="687.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramPipeline (34 samples, 0.07%)</title><rect x="19.1723%" y="693" width="0.0652%" height="15" fill="rgb(245,80,10)" fg:x="9993" fg:w="34"/><text x="19.4223%" y="703.50"></text></g><g><title>GLEngine`gleBeginPrimitiveTCLFunc (39 samples, 0.07%)</title><rect x="19.1647%" y="725" width="0.0748%" height="15" fill="rgb(232,107,50)" fg:x="9989" fg:w="39"/><text x="19.4147%" y="735.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrIntelBeginPrimitiveBuffer (39 samples, 0.07%)</title><rect x="19.1647%" y="709" width="0.0748%" height="15" fill="rgb(253,3,0)" fg:x="9989" fg:w="39"/><text x="19.4147%" y="719.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (9 samples, 0.02%)</title><rect x="19.2452%" y="709" width="0.0173%" height="15" fill="rgb(212,99,53)" fg:x="10031" fg:w="9"/><text x="19.4952%" y="719.50"></text></g><g><title>GLEngine`gleUpdateDeferredStateFull (14 samples, 0.03%)</title><rect x="19.2663%" y="709" width="0.0269%" height="15" fill="rgb(249,111,54)" fg:x="10042" fg:w="14"/><text x="19.5163%" y="719.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrBindContextDrawFramebuffer (11 samples, 0.02%)</title><rect x="19.3105%" y="677" width="0.0211%" height="15" fill="rgb(249,55,30)" fg:x="10065" fg:w="11"/><text x="19.5605%" y="687.50"></text></g><g><title>GLEngine`gleUpdateDrawFramebufferState (25 samples, 0.05%)</title><rect x="19.2932%" y="709" width="0.0480%" height="15" fill="rgb(237,47,42)" fg:x="10056" fg:w="25"/><text x="19.5432%" y="719.50"></text></g><g><title>libGPUSupportMercury.dylib`gldUpdateDrawFramebuffer (17 samples, 0.03%)</title><rect x="19.3085%" y="693" width="0.0326%" height="15" fill="rgb(211,20,18)" fg:x="10064" fg:w="17"/><text x="19.5585%" y="703.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCore (55 samples, 0.11%)</title><rect x="19.2395%" y="725" width="0.1055%" height="15" fill="rgb(231,203,46)" fg:x="10028" fg:w="55"/><text x="19.4895%" y="735.50"></text></g><g><title>GLEngine`glDrawArrays_IMM_Exec (100 samples, 0.19%)</title><rect x="19.1608%" y="741" width="0.1919%" height="15" fill="rgb(237,142,3)" fg:x="9987" fg:w="100"/><text x="19.4108%" y="751.50"></text></g><g><title>IOKit`io_connect_method (30 samples, 0.06%)</title><rect x="19.4026%" y="661" width="0.0576%" height="15" fill="rgb(241,107,1)" fg:x="10113" fg:w="30"/><text x="19.6526%" y="671.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (30 samples, 0.06%)</title><rect x="19.4026%" y="645" width="0.0576%" height="15" fill="rgb(229,83,13)" fg:x="10113" fg:w="30"/><text x="19.6526%" y="655.50"></text></g><g><title>OpenGL`GLCGetParameter (40 samples, 0.08%)</title><rect x="19.3872%" y="725" width="0.0767%" height="15" fill="rgb(241,91,40)" fg:x="10105" fg:w="40"/><text x="19.6372%" y="735.50"></text></g><g><title>libGPUSupportMercury.dylib`gldGetInteger (38 samples, 0.07%)</title><rect x="19.3910%" y="709" width="0.0729%" height="15" fill="rgb(225,3,45)" fg:x="10107" fg:w="38"/><text x="19.6410%" y="719.50"></text></g><g><title>IOAccelerator`IOAccelDeviceGetSurfaceInfo (37 samples, 0.07%)</title><rect x="19.3930%" y="693" width="0.0710%" height="15" fill="rgb(244,223,14)" fg:x="10108" fg:w="37"/><text x="19.6430%" y="703.50"></text></g><g><title>IOKit`IOConnectCallMethod (32 samples, 0.06%)</title><rect x="19.4026%" y="677" width="0.0614%" height="15" fill="rgb(224,124,37)" fg:x="10113" fg:w="32"/><text x="19.6526%" y="687.50"></text></g><g><title>OpenGL`CGLGetParameter (43 samples, 0.08%)</title><rect x="19.3834%" y="741" width="0.0825%" height="15" fill="rgb(251,171,30)" fg:x="10103" fg:w="43"/><text x="19.6334%" y="751.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (533 samples, 1.02%)</title><rect x="18.4605%" y="757" width="1.0226%" height="15" fill="rgb(236,46,54)" fg:x="9622" fg:w="533"/><text x="18.7105%" y="767.50"></text></g><g><title>AppKit`is_surface_opaque (31 samples, 0.06%)</title><rect x="19.4927%" y="757" width="0.0595%" height="15" fill="rgb(245,213,5)" fg:x="10160" fg:w="31"/><text x="19.7427%" y="767.50"></text></g><g><title>SkyLight`SLSGetSurfaceOpacity (30 samples, 0.06%)</title><rect x="19.4946%" y="741" width="0.0576%" height="15" fill="rgb(230,144,27)" fg:x="10161" fg:w="30"/><text x="19.7446%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (25 samples, 0.05%)</title><rect x="19.5042%" y="725" width="0.0480%" height="15" fill="rgb(220,86,6)" fg:x="10166" fg:w="25"/><text x="19.7542%" y="735.50"></text></g><g><title>Foundation`hashProbe (9 samples, 0.02%)</title><rect x="19.5676%" y="741" width="0.0173%" height="15" fill="rgb(240,20,13)" fg:x="10199" fg:w="9"/><text x="19.8176%" y="751.50"></text></g><g><title>Foundation`-[NSConcreteHashTable addObject:] (15 samples, 0.03%)</title><rect x="19.5599%" y="757" width="0.0288%" height="15" fill="rgb(217,89,34)" fg:x="10195" fg:w="15"/><text x="19.8099%" y="767.50"></text></g><g><title>IOKit`IORegistryEntryGetRegistryEntryID (24 samples, 0.05%)</title><rect x="19.6059%" y="757" width="0.0460%" height="15" fill="rgb(229,13,5)" fg:x="10219" fg:w="24"/><text x="19.8559%" y="767.50"></text></g><g><title>IOKit`io_registry_entry_get_registry_entry_id (21 samples, 0.04%)</title><rect x="19.6117%" y="741" width="0.0403%" height="15" fill="rgb(244,67,35)" fg:x="10222" fg:w="21"/><text x="19.8617%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (21 samples, 0.04%)</title><rect x="19.6117%" y="725" width="0.0403%" height="15" fill="rgb(221,40,2)" fg:x="10222" fg:w="21"/><text x="19.8617%" y="735.50"></text></g><g><title>IOSurface`IOSurfaceClientDecrementUseCount (34 samples, 0.07%)</title><rect x="19.6712%" y="725" width="0.0652%" height="15" fill="rgb(237,157,21)" fg:x="10253" fg:w="34"/><text x="19.9212%" y="735.50"></text></g><g><title>IOKit`IOConnectCallMethod (34 samples, 0.07%)</title><rect x="19.6712%" y="709" width="0.0652%" height="15" fill="rgb(222,94,11)" fg:x="10253" fg:w="34"/><text x="19.9212%" y="719.50"></text></g><g><title>IOKit`io_connect_method (32 samples, 0.06%)</title><rect x="19.6750%" y="693" width="0.0614%" height="15" fill="rgb(249,113,6)" fg:x="10255" fg:w="32"/><text x="19.9250%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (32 samples, 0.06%)</title><rect x="19.6750%" y="677" width="0.0614%" height="15" fill="rgb(238,137,36)" fg:x="10255" fg:w="32"/><text x="19.9250%" y="687.50"></text></g><g><title>QuartzCore`release_image(_CAImageQueue*, unsigned long, CAImageQueueReleased*, bool) (39 samples, 0.07%)</title><rect x="19.6712%" y="741" width="0.0748%" height="15" fill="rgb(210,102,26)" fg:x="10253" fg:w="39"/><text x="19.9212%" y="751.50"></text></g><g><title>AppKit`__26-[NSCGLSurface flushRect:]_block_invoke (7 samples, 0.01%)</title><rect x="19.7479%" y="709" width="0.0134%" height="15" fill="rgb(218,30,30)" fg:x="10293" fg:w="7"/><text x="19.9979%" y="719.50"></text></g><g><title>AppKit`invoke_and_release_block (8 samples, 0.02%)</title><rect x="19.7479%" y="725" width="0.0153%" height="15" fill="rgb(214,67,26)" fg:x="10293" fg:w="8"/><text x="19.9979%" y="735.50"></text></g><g><title>QuartzCore`release_images(_CAImageQueue*, CAImageQueueReleased*) (17 samples, 0.03%)</title><rect x="19.7460%" y="741" width="0.0326%" height="15" fill="rgb(251,9,53)" fg:x="10292" fg:w="17"/><text x="19.9960%" y="751.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (63 samples, 0.12%)</title><rect x="19.6596%" y="757" width="0.1209%" height="15" fill="rgb(228,204,25)" fg:x="10247" fg:w="63"/><text x="19.9096%" y="767.50"></text></g><g><title>IOSurface`IOSurfaceClientIncrementUseCount (55 samples, 0.11%)</title><rect x="19.8055%" y="725" width="0.1055%" height="15" fill="rgb(207,153,8)" fg:x="10323" fg:w="55"/><text x="20.0555%" y="735.50"></text></g><g><title>IOKit`IOConnectCallMethod (54 samples, 0.10%)</title><rect x="19.8074%" y="709" width="0.1036%" height="15" fill="rgb(242,9,16)" fg:x="10324" fg:w="54"/><text x="20.0574%" y="719.50"></text></g><g><title>IOKit`io_connect_method (54 samples, 0.10%)</title><rect x="19.8074%" y="693" width="0.1036%" height="15" fill="rgb(217,211,10)" fg:x="10324" fg:w="54"/><text x="20.0574%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (53 samples, 0.10%)</title><rect x="19.8093%" y="677" width="0.1017%" height="15" fill="rgb(219,228,52)" fg:x="10325" fg:w="53"/><text x="20.0593%" y="687.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (56 samples, 0.11%)</title><rect x="19.9263%" y="725" width="0.1074%" height="15" fill="rgb(231,92,29)" fg:x="10386" fg:w="56"/><text x="20.1763%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (50 samples, 0.10%)</title><rect x="19.9378%" y="709" width="0.0959%" height="15" fill="rgb(232,8,23)" fg:x="10392" fg:w="50"/><text x="20.1878%" y="719.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (129 samples, 0.25%)</title><rect x="19.7920%" y="741" width="0.2475%" height="15" fill="rgb(216,211,34)" fg:x="10316" fg:w="129"/><text x="20.0420%" y="751.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage (136 samples, 0.26%)</title><rect x="19.7805%" y="757" width="0.2609%" height="15" fill="rgb(236,151,0)" fg:x="10310" fg:w="136"/><text x="20.0305%" y="767.50"></text></g><g><title>SkyLight`get_canonical_display_id(int) (28 samples, 0.05%)</title><rect x="20.0530%" y="741" width="0.0537%" height="15" fill="rgb(209,168,3)" fg:x="10452" fg:w="28"/><text x="20.3030%" y="751.50"></text></g><g><title>SkyLight`get_current_display_system_state() (28 samples, 0.05%)</title><rect x="20.0530%" y="725" width="0.0537%" height="15" fill="rgb(208,129,28)" fg:x="10452" fg:w="28"/><text x="20.3030%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (25 samples, 0.05%)</title><rect x="20.0587%" y="709" width="0.0480%" height="15" fill="rgb(229,78,22)" fg:x="10455" fg:w="25"/><text x="20.3087%" y="719.50"></text></g><g><title>SkyLight`SLSAcceleratorForDisplayAlias (67 samples, 0.13%)</title><rect x="20.0472%" y="757" width="0.1285%" height="15" fill="rgb(228,187,13)" fg:x="10449" fg:w="67"/><text x="20.2972%" y="767.50"></text></g><g><title>SkyLight`get_current_display_system_state() (36 samples, 0.07%)</title><rect x="20.1067%" y="741" width="0.0691%" height="15" fill="rgb(240,119,24)" fg:x="10480" fg:w="36"/><text x="20.3567%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (30 samples, 0.06%)</title><rect x="20.1182%" y="725" width="0.0576%" height="15" fill="rgb(209,194,42)" fg:x="10486" fg:w="30"/><text x="20.3682%" y="735.50"></text></g><g><title>SkyLight`get_current_display_system_state() (33 samples, 0.06%)</title><rect x="20.1777%" y="741" width="0.0633%" height="15" fill="rgb(247,200,46)" fg:x="10517" fg:w="33"/><text x="20.4277%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (30 samples, 0.06%)</title><rect x="20.1834%" y="725" width="0.0576%" height="15" fill="rgb(218,76,16)" fg:x="10520" fg:w="30"/><text x="20.4334%" y="735.50"></text></g><g><title>SkyLight`get_display_logging() (25 samples, 0.05%)</title><rect x="20.2410%" y="741" width="0.0480%" height="15" fill="rgb(225,21,48)" fg:x="10550" fg:w="25"/><text x="20.4910%" y="751.50"></text></g><g><title>SkyLight`get_current_display_system_state() (24 samples, 0.05%)</title><rect x="20.2429%" y="725" width="0.0460%" height="15" fill="rgb(239,223,50)" fg:x="10551" fg:w="24"/><text x="20.4929%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (20 samples, 0.04%)</title><rect x="20.2506%" y="709" width="0.0384%" height="15" fill="rgb(244,45,21)" fg:x="10555" fg:w="20"/><text x="20.5006%" y="719.50"></text></g><g><title>SkyLight`SLSGetDisplaysWithOpenGLDisplayMask (60 samples, 0.12%)</title><rect x="20.1757%" y="757" width="0.1151%" height="15" fill="rgb(232,33,43)" fg:x="10516" fg:w="60"/><text x="20.4257%" y="767.50"></text></g><g><title>SkyLight`SLSGetSurfaceBinding (37 samples, 0.07%)</title><rect x="20.2909%" y="757" width="0.0710%" height="15" fill="rgb(209,8,3)" fg:x="10576" fg:w="37"/><text x="20.5409%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (27 samples, 0.05%)</title><rect x="20.3100%" y="741" width="0.0518%" height="15" fill="rgb(214,25,53)" fg:x="10586" fg:w="27"/><text x="20.5600%" y="751.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (6 samples, 0.01%)</title><rect x="20.3714%" y="757" width="0.0115%" height="15" fill="rgb(254,186,54)" fg:x="10618" fg:w="6"/><text x="20.6214%" y="767.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (1,017 samples, 1.95%)</title><rect x="18.4356%" y="773" width="1.9512%" height="15" fill="rgb(208,174,49)" fg:x="9609" fg:w="1017"/><text x="18.6856%" y="783.50">A..</text></g><g><title>AppKit`-[NSCGLSurface synchronize] (6 samples, 0.01%)</title><rect x="20.3868%" y="773" width="0.0115%" height="15" fill="rgb(233,191,51)" fg:x="10626" fg:w="6"/><text x="20.6368%" y="783.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.02%)</title><rect x="20.4290%" y="773" width="0.0153%" height="15" fill="rgb(222,134,10)" fg:x="10648" fg:w="8"/><text x="20.6790%" y="783.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (1,068 samples, 2.05%)</title><rect x="18.4087%" y="789" width="2.0490%" height="15" fill="rgb(230,226,20)" fg:x="9595" fg:w="1068"/><text x="18.6587%" y="799.50">A..</text></g><g><title>IOAccelerator`IOAccelResourceCreateDataBuffer (7 samples, 0.01%)</title><rect x="20.4827%" y="709" width="0.0134%" height="15" fill="rgb(251,111,25)" fg:x="10676" fg:w="7"/><text x="20.7327%" y="719.50"></text></g><g><title>IOKit`io_connect_method (456 samples, 0.87%)</title><rect x="20.5057%" y="677" width="0.8749%" height="15" fill="rgb(224,40,46)" fg:x="10688" fg:w="456"/><text x="20.7557%" y="687.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (453 samples, 0.87%)</title><rect x="20.5115%" y="661" width="0.8691%" height="15" fill="rgb(236,108,47)" fg:x="10691" fg:w="453"/><text x="20.7615%" y="671.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (474 samples, 0.91%)</title><rect x="20.4731%" y="725" width="0.9094%" height="15" fill="rgb(234,93,0)" fg:x="10671" fg:w="474"/><text x="20.7231%" y="735.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (460 samples, 0.88%)</title><rect x="20.5000%" y="709" width="0.8825%" height="15" fill="rgb(224,213,32)" fg:x="10685" fg:w="460"/><text x="20.7500%" y="719.50"></text></g><g><title>IOKit`IOConnectCallMethod (460 samples, 0.88%)</title><rect x="20.5000%" y="693" width="0.8825%" height="15" fill="rgb(251,11,48)" fg:x="10685" fg:w="460"/><text x="20.7500%" y="703.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelCommandBuffer::getNew (481 samples, 0.92%)</title><rect x="20.4616%" y="757" width="0.9228%" height="15" fill="rgb(236,173,5)" fg:x="10665" fg:w="481"/><text x="20.7116%" y="767.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (481 samples, 0.92%)</title><rect x="20.4616%" y="741" width="0.9228%" height="15" fill="rgb(230,95,12)" fg:x="10665" fg:w="481"/><text x="20.7116%" y="751.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`intelSubmitCommands (483 samples, 0.93%)</title><rect x="20.4616%" y="773" width="0.9267%" height="15" fill="rgb(232,209,1)" fg:x="10665" fg:w="483"/><text x="20.7116%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (40 samples, 0.08%)</title><rect x="21.4075%" y="757" width="0.0767%" height="15" fill="rgb(232,6,1)" fg:x="11158" fg:w="40"/><text x="21.6575%" y="767.50"></text></g><g><title>SkyLight`SLSFlushSurfaceWithOptionsAndIndex (50 samples, 0.10%)</title><rect x="21.3902%" y="773" width="0.0959%" height="15" fill="rgb(210,224,50)" fg:x="11149" fg:w="50"/><text x="21.6402%" y="783.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gldPresentFramebufferData (538 samples, 1.03%)</title><rect x="20.4578%" y="789" width="1.0322%" height="15" fill="rgb(228,127,35)" fg:x="10663" fg:w="538"/><text x="20.7078%" y="799.50"></text></g><g><title>GLEngine`glSwap_Exec (1,612 samples, 3.09%)</title><rect x="18.4049%" y="805" width="3.0927%" height="15" fill="rgb(245,102,45)" fg:x="9593" fg:w="1612"/><text x="18.6549%" y="815.50">GLE..</text></g><g><title>App`&lt;() as objc2::message::MessageArguments&gt;::__invoke (1,625 samples, 3.12%)</title><rect x="18.3876%" y="853" width="3.1177%" height="15" fill="rgb(214,1,49)" fg:x="9584" fg:w="1625"/><text x="18.6376%" y="863.50">App..</text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (1,623 samples, 3.11%)</title><rect x="18.3915%" y="837" width="3.1138%" height="15" fill="rgb(226,163,40)" fg:x="9586" fg:w="1623"/><text x="18.6415%" y="847.50">App..</text></g><g><title>OpenGL`CGLFlushDrawable (1,620 samples, 3.11%)</title><rect x="18.3972%" y="821" width="3.1081%" height="15" fill="rgb(239,212,28)" fg:x="9589" fg:w="1620"/><text x="18.6472%" y="831.50">Ope..</text></g><g><title>App`objc2::message::MessageReceiver::send_message (1,629 samples, 3.13%)</title><rect x="18.3819%" y="917" width="3.1254%" height="15" fill="rgb(220,20,13)" fg:x="9581" fg:w="1629"/><text x="18.6319%" y="927.50">App..</text></g><g><title>App`objc2::message::platform::send_unverified (1,627 samples, 3.12%)</title><rect x="18.3857%" y="901" width="3.1215%" height="15" fill="rgb(210,164,35)" fg:x="9583" fg:w="1627"/><text x="18.6357%" y="911.50">App..</text></g><g><title>App`objc2::message::conditional_try (1,627 samples, 3.12%)</title><rect x="18.3857%" y="885" width="3.1215%" height="15" fill="rgb(248,109,41)" fg:x="9583" fg:w="1627"/><text x="18.6357%" y="895.50">App..</text></g><g><title>App`objc2::message::platform::send_unverified::_{{closure}} (1,627 samples, 3.12%)</title><rect x="18.3857%" y="869" width="3.1215%" height="15" fill="rgb(238,23,50)" fg:x="9583" fg:w="1627"/><text x="18.6357%" y="879.50">App..</text></g><g><title>App`glutin::api::cgl::context::ContextInner::flush_buffer::_{{closure}} (1,634 samples, 3.13%)</title><rect x="18.3742%" y="949" width="3.1350%" height="15" fill="rgb(211,48,49)" fg:x="9577" fg:w="1634"/><text x="18.6242%" y="959.50">App..</text></g><g><title>App`glutin::api::cgl::appkit::NSOpenGLContext::flushBuffer (1,633 samples, 3.13%)</title><rect x="18.3761%" y="933" width="3.1330%" height="15" fill="rgb(223,36,21)" fg:x="9578" fg:w="1633"/><text x="18.6261%" y="943.50">App..</text></g><g><title>App`glutin::api::cgl::context::ContextInner::flush_buffer (1,653 samples, 3.17%)</title><rect x="18.3416%" y="981" width="3.1714%" height="15" fill="rgb(207,123,46)" fg:x="9560" fg:w="1653"/><text x="18.5916%" y="991.50">App..</text></g><g><title>App`objc2::rc::autorelease::autoreleasepool (1,651 samples, 3.17%)</title><rect x="18.3454%" y="965" width="3.1676%" height="15" fill="rgb(240,218,32)" fg:x="9562" fg:w="1651"/><text x="18.5954%" y="975.50">App..</text></g><g><title>App`&lt;glutin::api::cgl::surface::Surface&lt;T&gt; as glutin::surface::GlSurface&lt;T&gt;&gt;::swap_buffers (1,655 samples, 3.18%)</title><rect x="18.3397%" y="997" width="3.1752%" height="15" fill="rgb(252,5,43)" fg:x="9559" fg:w="1655"/><text x="18.5897%" y="1007.50">App..</text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::Window&gt;::swap_buffers (1,658 samples, 3.18%)</title><rect x="18.3358%" y="1029" width="3.1810%" height="15" fill="rgb(252,84,19)" fg:x="9557" fg:w="1658"/><text x="18.5858%" y="1039.50">App..</text></g><g><title>App`&lt;glutin::surface::Surface&lt;T&gt; as glutin::surface::GlSurface&lt;T&gt;&gt;::swap_buffers (1,657 samples, 3.18%)</title><rect x="18.3377%" y="1013" width="3.1791%" height="15" fill="rgb(243,152,39)" fg:x="9558" fg:w="1657"/><text x="18.5877%" y="1023.50">App..</text></g><g><title>App`core::cmp::min (6 samples, 0.01%)</title><rect x="21.5360%" y="1029" width="0.0115%" height="15" fill="rgb(234,160,15)" fg:x="11225" fg:w="6"/><text x="21.7860%" y="1039.50"></text></g><g><title>App`core::cmp::Ord::min (6 samples, 0.01%)</title><rect x="21.5360%" y="1013" width="0.0115%" height="15" fill="rgb(237,34,20)" fg:x="11225" fg:w="6"/><text x="21.7860%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (94 samples, 0.18%)</title><rect x="21.5801%" y="949" width="0.1803%" height="15" fill="rgb(229,97,13)" fg:x="11248" fg:w="94"/><text x="21.8301%" y="959.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (92 samples, 0.18%)</title><rect x="21.5840%" y="933" width="0.1765%" height="15" fill="rgb(234,71,50)" fg:x="11250" fg:w="92"/><text x="21.8340%" y="943.50"></text></g><g><title>libsystem_c.dylib`nanosleep (97 samples, 0.19%)</title><rect x="21.5782%" y="965" width="0.1861%" height="15" fill="rgb(253,155,4)" fg:x="11247" fg:w="97"/><text x="21.8282%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (65 samples, 0.12%)</title><rect x="21.7662%" y="965" width="0.1247%" height="15" fill="rgb(222,185,37)" fg:x="11345" fg:w="65"/><text x="22.0162%" y="975.50"></text></g><g><title>App`std::thread::sleep (174 samples, 0.33%)</title><rect x="21.5744%" y="981" width="0.3338%" height="15" fill="rgb(251,177,13)" fg:x="11245" fg:w="174"/><text x="21.8244%" y="991.50"></text></g><g><title>App`spin_sleep::native_sleep (180 samples, 0.35%)</title><rect x="21.5705%" y="997" width="0.3453%" height="15" fill="rgb(250,179,40)" fg:x="11243" fg:w="180"/><text x="21.8205%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (23 samples, 0.04%)</title><rect x="21.9236%" y="997" width="0.0441%" height="15" fill="rgb(242,44,2)" fg:x="11427" fg:w="23"/><text x="22.1736%" y="1007.50"></text></g><g><title>App`spin_sleep::sleep (215 samples, 0.41%)</title><rect x="21.5571%" y="1029" width="0.4125%" height="15" fill="rgb(216,177,13)" fg:x="11236" fg:w="215"/><text x="21.8071%" y="1039.50"></text></g><g><title>App`spin_sleep::SpinSleeper::sleep (213 samples, 0.41%)</title><rect x="21.5610%" y="1013" width="0.4087%" height="15" fill="rgb(216,106,43)" fg:x="11238" fg:w="213"/><text x="21.8110%" y="1023.50"></text></g><g><title>App`event_loop::Events::next (10,648 samples, 20.43%)</title><rect x="1.5464%" y="1045" width="20.4290%" height="15" fill="rgb(216,183,2)" fg:x="806" fg:w="10648"/><text x="1.7964%" y="1055.50">App`event_loop::Events::next</text></g><g><title>App`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.03%)</title><rect x="21.9965%" y="997" width="0.0288%" height="15" fill="rgb(249,75,3)" fg:x="11465" fg:w="15"/><text x="22.2465%" y="1007.50"></text></g><g><title>App`&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (15 samples, 0.03%)</title><rect x="21.9965%" y="981" width="0.0288%" height="15" fill="rgb(219,67,39)" fg:x="11465" fg:w="15"/><text x="22.2465%" y="991.50"></text></g><g><title>App`image::dynimage::DynamicImage::to_rgba8 (17 samples, 0.03%)</title><rect x="21.9946%" y="1029" width="0.0326%" height="15" fill="rgb(253,228,2)" fg:x="11464" fg:w="17"/><text x="22.2446%" y="1039.50"></text></g><g><title>App`&lt;image::buffer_::ImageBuffer&lt;FromType,Container&gt; as image::buffer_::ConvertBuffer&lt;image::buffer_::ImageBuffer&lt;ToType,alloc::vec::Vec&lt;&lt;ToType as image::traits::Pixel&gt;::Subpixel&gt;&gt;&gt;&gt;::convert (17 samples, 0.03%)</title><rect x="21.9946%" y="1013" width="0.0326%" height="15" fill="rgb(235,138,27)" fg:x="11464" fg:w="17"/><text x="22.2446%" y="1023.50"></text></g><g><title>App`fdeflate::decompress::Decompressor::read_compressed (6 samples, 0.01%)</title><rect x="22.0368%" y="741" width="0.0115%" height="15" fill="rgb(236,97,51)" fg:x="11486" fg:w="6"/><text x="22.2868%" y="751.50"></text></g><g><title>App`fdeflate::decompress::Decompressor::read (10 samples, 0.02%)</title><rect x="22.0310%" y="757" width="0.0192%" height="15" fill="rgb(240,80,30)" fg:x="11483" fg:w="10"/><text x="22.2810%" y="767.50"></text></g><g><title>App`png::decoder::zlib::ZlibStream::decompress (16 samples, 0.03%)</title><rect x="22.0310%" y="773" width="0.0307%" height="15" fill="rgb(230,178,19)" fg:x="11483" fg:w="16"/><text x="22.2810%" y="783.50"></text></g><g><title>App`png::decoder::zlib::ZlibStream::prepare_vec_for_appending (6 samples, 0.01%)</title><rect x="22.0502%" y="757" width="0.0115%" height="15" fill="rgb(210,190,27)" fg:x="11493" fg:w="6"/><text x="22.3002%" y="767.50"></text></g><g><title>App`alloc::vec::Vec&lt;T,A&gt;::resize (6 samples, 0.01%)</title><rect x="22.0502%" y="741" width="0.0115%" height="15" fill="rgb(222,107,31)" fg:x="11493" fg:w="6"/><text x="22.3002%" y="751.50"></text></g><g><title>App`alloc::vec::Vec&lt;T,A&gt;::extend_with (6 samples, 0.01%)</title><rect x="22.0502%" y="725" width="0.0115%" height="15" fill="rgb(216,127,34)" fg:x="11493" fg:w="6"/><text x="22.3002%" y="735.50"></text></g><g><title>App`png::decoder::ReadDecoder&lt;R&gt;::decode_next (17 samples, 0.03%)</title><rect x="22.0310%" y="821" width="0.0326%" height="15" fill="rgb(234,116,52)" fg:x="11483" fg:w="17"/><text x="22.2810%" y="831.50"></text></g><g><title>App`png::decoder::stream::StreamingDecoder::update (17 samples, 0.03%)</title><rect x="22.0310%" y="805" width="0.0326%" height="15" fill="rgb(222,124,15)" fg:x="11483" fg:w="17"/><text x="22.2810%" y="815.50"></text></g><g><title>App`png::decoder::stream::StreamingDecoder::next_state (17 samples, 0.03%)</title><rect x="22.0310%" y="789" width="0.0326%" height="15" fill="rgb(231,179,28)" fg:x="11483" fg:w="17"/><text x="22.2810%" y="799.50"></text></g><g><title>App`&lt;image::io::free_functions::load_inner::LoadVisitor as image::io::free_functions::DecoderVisitor&gt;::visit_decoder (25 samples, 0.05%)</title><rect x="22.0272%" y="949" width="0.0480%" height="15" fill="rgb(226,93,45)" fg:x="11481" fg:w="25"/><text x="22.2772%" y="959.50"></text></g><g><title>App`image::dynimage::DynamicImage::from_decoder (25 samples, 0.05%)</title><rect x="22.0272%" y="933" width="0.0480%" height="15" fill="rgb(215,8,51)" fg:x="11481" fg:w="25"/><text x="22.2772%" y="943.50"></text></g><g><title>App`image::dynimage::decoder_to_image (25 samples, 0.05%)</title><rect x="22.0272%" y="917" width="0.0480%" height="15" fill="rgb(223,106,5)" fg:x="11481" fg:w="25"/><text x="22.2772%" y="927.50"></text></g><g><title>App`image::image::decoder_to_vec (25 samples, 0.05%)</title><rect x="22.0272%" y="901" width="0.0480%" height="15" fill="rgb(250,191,5)" fg:x="11481" fg:w="25"/><text x="22.2772%" y="911.50"></text></g><g><title>App`&lt;image::codecs::png::PngDecoder&lt;R&gt; as image::image::ImageDecoder&gt;::read_image (25 samples, 0.05%)</title><rect x="22.0272%" y="885" width="0.0480%" height="15" fill="rgb(242,132,44)" fg:x="11481" fg:w="25"/><text x="22.2772%" y="895.50"></text></g><g><title>App`png::decoder::Reader&lt;R&gt;::next_frame (25 samples, 0.05%)</title><rect x="22.0272%" y="869" width="0.0480%" height="15" fill="rgb(251,152,29)" fg:x="11481" fg:w="25"/><text x="22.2772%" y="879.50"></text></g><g><title>App`png::decoder::Reader&lt;R&gt;::next_interlaced_row_impl (25 samples, 0.05%)</title><rect x="22.0272%" y="853" width="0.0480%" height="15" fill="rgb(218,179,5)" fg:x="11481" fg:w="25"/><text x="22.2772%" y="863.50"></text></g><g><title>App`png::decoder::Reader&lt;R&gt;::next_raw_interlaced_row (25 samples, 0.05%)</title><rect x="22.0272%" y="837" width="0.0480%" height="15" fill="rgb(227,67,19)" fg:x="11481" fg:w="25"/><text x="22.2772%" y="847.50"></text></g><g><title>App`png::filter::unfilter (6 samples, 0.01%)</title><rect x="22.0636%" y="821" width="0.0115%" height="15" fill="rgb(233,119,31)" fg:x="11500" fg:w="6"/><text x="22.3136%" y="831.50"></text></g><g><title>App`image::dynimage::open (29 samples, 0.06%)</title><rect x="22.0272%" y="1029" width="0.0556%" height="15" fill="rgb(241,120,22)" fg:x="11481" fg:w="29"/><text x="22.2772%" y="1039.50"></text></g><g><title>App`image::io::free_functions::open_impl (29 samples, 0.06%)</title><rect x="22.0272%" y="1013" width="0.0556%" height="15" fill="rgb(224,102,30)" fg:x="11481" fg:w="29"/><text x="22.2772%" y="1023.50"></text></g><g><title>App`image::io::free_functions::load (29 samples, 0.06%)</title><rect x="22.0272%" y="997" width="0.0556%" height="15" fill="rgb(210,164,37)" fg:x="11481" fg:w="29"/><text x="22.2772%" y="1007.50"></text></g><g><title>App`image::io::free_functions::load_inner (29 samples, 0.06%)</title><rect x="22.0272%" y="981" width="0.0556%" height="15" fill="rgb(226,191,16)" fg:x="11481" fg:w="29"/><text x="22.2772%" y="991.50"></text></g><g><title>App`image::io::free_functions::load_decoder (29 samples, 0.06%)</title><rect x="22.0272%" y="965" width="0.0556%" height="15" fill="rgb(214,40,45)" fg:x="11481" fg:w="29"/><text x="22.2772%" y="975.50"></text></g><g><title>App`opengl_graphics::texture::Texture::from_path (50 samples, 0.10%)</title><rect x="21.9926%" y="1045" width="0.0959%" height="15" fill="rgb(244,29,26)" fg:x="11463" fg:w="50"/><text x="22.2426%" y="1055.50"></text></g><g><title>dyld`dyld4::APIs::dlsym (6 samples, 0.01%)</title><rect x="22.1346%" y="629" width="0.0115%" height="15" fill="rgb(216,16,5)" fg:x="11537" fg:w="6"/><text x="22.3846%" y="639.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (6 samples, 0.01%)</title><rect x="22.1346%" y="613" width="0.0115%" height="15" fill="rgb(249,76,35)" fg:x="11537" fg:w="6"/><text x="22.3846%" y="623.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (6 samples, 0.01%)</title><rect x="22.1346%" y="597" width="0.0115%" height="15" fill="rgb(207,11,44)" fg:x="11537" fg:w="6"/><text x="22.3846%" y="607.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (6 samples, 0.01%)</title><rect x="22.1346%" y="581" width="0.0115%" height="15" fill="rgb(228,190,49)" fg:x="11537" fg:w="6"/><text x="22.3846%" y="591.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (6 samples, 0.01%)</title><rect x="22.1346%" y="565" width="0.0115%" height="15" fill="rgb(214,173,12)" fg:x="11537" fg:w="6"/><text x="22.3846%" y="575.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (6 samples, 0.01%)</title><rect x="22.1346%" y="549" width="0.0115%" height="15" fill="rgb(218,26,35)" fg:x="11537" fg:w="6"/><text x="22.3846%" y="559.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (6 samples, 0.01%)</title><rect x="22.1346%" y="533" width="0.0115%" height="15" fill="rgb(220,200,19)" fg:x="11537" fg:w="6"/><text x="22.3846%" y="543.50"></text></g><g><title>OpenGL`0x00007ffa1f6d28f9 (15 samples, 0.03%)</title><rect x="22.1193%" y="709" width="0.0288%" height="15" fill="rgb(239,95,49)" fg:x="11529" fg:w="15"/><text x="22.3693%" y="719.50"></text></g><g><title>OpenGL`0x00007ffa1f6d2b46 (15 samples, 0.03%)</title><rect x="22.1193%" y="693" width="0.0288%" height="15" fill="rgb(235,85,53)" fg:x="11529" fg:w="15"/><text x="22.3693%" y="703.50"></text></g><g><title>OpenGL`0x00007ffa1f6d2c61 (15 samples, 0.03%)</title><rect x="22.1193%" y="677" width="0.0288%" height="15" fill="rgb(233,133,31)" fg:x="11529" fg:w="15"/><text x="22.3693%" y="687.50"></text></g><g><title>GLEngine`gliInitializeLibrary (15 samples, 0.03%)</title><rect x="22.1193%" y="661" width="0.0288%" height="15" fill="rgb(218,25,20)" fg:x="11529" fg:w="15"/><text x="22.3693%" y="671.50"></text></g><g><title>libGFXShared.dylib`gfxInitializeLibrary (15 samples, 0.03%)</title><rect x="22.1193%" y="645" width="0.0288%" height="15" fill="rgb(252,210,38)" fg:x="11529" fg:w="15"/><text x="22.3693%" y="655.50"></text></g><g><title>App`&lt;glutin::display::Display as glutin::display::GlDisplay&gt;::find_configs (16 samples, 0.03%)</title><rect x="22.1193%" y="965" width="0.0307%" height="15" fill="rgb(242,134,21)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="975.50"></text></g><g><title>App`glutin::api::cgl::config::_&lt;impl glutin::api::cgl::display::Display&gt;::find_configs (16 samples, 0.03%)</title><rect x="22.1193%" y="949" width="0.0307%" height="15" fill="rgb(213,28,48)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="959.50"></text></g><g><title>App`core::iter::traits::iterator::Iterator::find_map (16 samples, 0.03%)</title><rect x="22.1193%" y="933" width="0.0307%" height="15" fill="rgb(250,196,2)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="943.50"></text></g><g><title>App`core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.03%)</title><rect x="22.1193%" y="917" width="0.0307%" height="15" fill="rgb(227,5,17)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="927.50"></text></g><g><title>App`core::iter::traits::iterator::Iterator::find_map::check::_{{closure}} (16 samples, 0.03%)</title><rect x="22.1193%" y="901" width="0.0307%" height="15" fill="rgb(221,226,24)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="911.50"></text></g><g><title>App`glutin::api::cgl::config::_&lt;impl glutin::api::cgl::display::Display&gt;::find_configs::_{{closure}} (16 samples, 0.03%)</title><rect x="22.1193%" y="885" width="0.0307%" height="15" fill="rgb(211,5,48)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="895.50"></text></g><g><title>App`glutin::api::cgl::appkit::NSOpenGLPixelFormat::newWithAttributes (16 samples, 0.03%)</title><rect x="22.1193%" y="869" width="0.0307%" height="15" fill="rgb(219,150,6)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="879.50"></text></g><g><title>App`&lt;objc2::__macro_helpers::RetainSemantics&lt;_,_,_,_&gt; as objc2::__macro_helpers::MsgSendId&lt;core::option::Option&lt;objc2::rc::id::Id&lt;objc2::rc::allocated::Allocated&lt;T&gt;,O&gt;&gt;,T,O&gt;&gt;::send_message_id (16 samples, 0.03%)</title><rect x="22.1193%" y="853" width="0.0307%" height="15" fill="rgb(251,46,16)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="863.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_message (16 samples, 0.03%)</title><rect x="22.1193%" y="837" width="0.0307%" height="15" fill="rgb(220,204,40)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="847.50"></text></g><g><title>App`objc2::message::platform::send_unverified (16 samples, 0.03%)</title><rect x="22.1193%" y="821" width="0.0307%" height="15" fill="rgb(211,85,2)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="831.50"></text></g><g><title>App`objc2::message::conditional_try (16 samples, 0.03%)</title><rect x="22.1193%" y="805" width="0.0307%" height="15" fill="rgb(229,17,7)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="815.50"></text></g><g><title>App`objc2::message::platform::send_unverified::_{{closure}} (16 samples, 0.03%)</title><rect x="22.1193%" y="789" width="0.0307%" height="15" fill="rgb(239,72,28)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="799.50"></text></g><g><title>App`&lt;(A,) as objc2::message::MessageArguments&gt;::__invoke (16 samples, 0.03%)</title><rect x="22.1193%" y="773" width="0.0307%" height="15" fill="rgb(230,47,54)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="783.50"></text></g><g><title>AppKit`-[NSOpenGLPixelFormat initWithAttributes:] (16 samples, 0.03%)</title><rect x="22.1193%" y="757" width="0.0307%" height="15" fill="rgb(214,50,8)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="767.50"></text></g><g><title>OpenGL`CGLChoosePixelFormat (16 samples, 0.03%)</title><rect x="22.1193%" y="741" width="0.0307%" height="15" fill="rgb(216,198,43)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="751.50"></text></g><g><title>OpenGL`0x00007ffa1f6d9363 (16 samples, 0.03%)</title><rect x="22.1193%" y="725" width="0.0307%" height="15" fill="rgb(234,20,35)" fg:x="11529" fg:w="16"/><text x="22.3693%" y="735.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (8 samples, 0.02%)</title><rect x="22.1538%" y="661" width="0.0153%" height="15" fill="rgb(254,45,19)" fg:x="11547" fg:w="8"/><text x="22.4038%" y="671.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (7 samples, 0.01%)</title><rect x="22.1557%" y="645" width="0.0134%" height="15" fill="rgb(219,14,44)" fg:x="11548" fg:w="7"/><text x="22.4057%" y="655.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (7 samples, 0.01%)</title><rect x="22.1557%" y="629" width="0.0134%" height="15" fill="rgb(217,220,26)" fg:x="11548" fg:w="7"/><text x="22.4057%" y="639.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (10 samples, 0.02%)</title><rect x="22.1538%" y="677" width="0.0192%" height="15" fill="rgb(213,158,28)" fg:x="11547" fg:w="10"/><text x="22.4038%" y="687.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (7 samples, 0.01%)</title><rect x="22.1730%" y="677" width="0.0134%" height="15" fill="rgb(252,51,52)" fg:x="11557" fg:w="7"/><text x="22.4230%" y="687.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (7 samples, 0.01%)</title><rect x="22.1730%" y="661" width="0.0134%" height="15" fill="rgb(246,89,16)" fg:x="11557" fg:w="7"/><text x="22.4230%" y="671.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (7 samples, 0.01%)</title><rect x="22.1730%" y="645" width="0.0134%" height="15" fill="rgb(216,158,49)" fg:x="11557" fg:w="7"/><text x="22.4230%" y="655.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (18 samples, 0.03%)</title><rect x="22.1538%" y="693" width="0.0345%" height="15" fill="rgb(236,107,19)" fg:x="11547" fg:w="18"/><text x="22.4038%" y="703.50"></text></g><g><title>App`&lt;objc2::__macro_helpers::RetainSemantics&lt;_,_,_,_&gt; as objc2::__macro_helpers::MsgSendId&lt;core::option::Option&lt;objc2::rc::id::Id&lt;objc2::rc::allocated::Allocated&lt;T&gt;,O&gt;&gt;,T,O&gt;&gt;::send_message_id (21 samples, 0.04%)</title><rect x="22.1519%" y="837" width="0.0403%" height="15" fill="rgb(228,185,30)" fg:x="11546" fg:w="21"/><text x="22.4019%" y="847.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_message (21 samples, 0.04%)</title><rect x="22.1519%" y="821" width="0.0403%" height="15" fill="rgb(246,134,8)" fg:x="11546" fg:w="21"/><text x="22.4019%" y="831.50"></text></g><g><title>App`objc2::message::platform::send_unverified (21 samples, 0.04%)</title><rect x="22.1519%" y="805" width="0.0403%" height="15" fill="rgb(214,143,50)" fg:x="11546" fg:w="21"/><text x="22.4019%" y="815.50"></text></g><g><title>App`objc2::message::conditional_try (21 samples, 0.04%)</title><rect x="22.1519%" y="789" width="0.0403%" height="15" fill="rgb(228,75,8)" fg:x="11546" fg:w="21"/><text x="22.4019%" y="799.50"></text></g><g><title>App`objc2::message::platform::send_unverified::_{{closure}} (21 samples, 0.04%)</title><rect x="22.1519%" y="773" width="0.0403%" height="15" fill="rgb(207,175,4)" fg:x="11546" fg:w="21"/><text x="22.4019%" y="783.50"></text></g><g><title>App`&lt;(A,B,C,D) as objc2::message::MessageArguments&gt;::__invoke (21 samples, 0.04%)</title><rect x="22.1519%" y="757" width="0.0403%" height="15" fill="rgb(205,108,24)" fg:x="11546" fg:w="21"/><text x="22.4019%" y="767.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (21 samples, 0.04%)</title><rect x="22.1519%" y="741" width="0.0403%" height="15" fill="rgb(244,120,49)" fg:x="11546" fg:w="21"/><text x="22.4019%" y="751.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (21 samples, 0.04%)</title><rect x="22.1519%" y="725" width="0.0403%" height="15" fill="rgb(223,47,38)" fg:x="11546" fg:w="21"/><text x="22.4019%" y="735.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (20 samples, 0.04%)</title><rect x="22.1538%" y="709" width="0.0384%" height="15" fill="rgb(229,179,11)" fg:x="11547" fg:w="20"/><text x="22.4038%" y="719.50"></text></g><g><title>App`objc2::rc::autorelease::autoreleasepool (24 samples, 0.05%)</title><rect x="22.1500%" y="869" width="0.0460%" height="15" fill="rgb(231,122,1)" fg:x="11545" fg:w="24"/><text x="22.4000%" y="879.50"></text></g><g><title>App`winit::platform_impl::platform::window::WinitWindow::new::_{{closure}} (23 samples, 0.04%)</title><rect x="22.1519%" y="853" width="0.0441%" height="15" fill="rgb(245,119,9)" fg:x="11546" fg:w="23"/><text x="22.4019%" y="863.50"></text></g><g><title>App`glutin_window::GlutinWindow::from_raw (57 samples, 0.11%)</title><rect x="22.1001%" y="997" width="0.1094%" height="15" fill="rgb(241,163,25)" fg:x="11519" fg:w="57"/><text x="22.3501%" y="1007.50"></text></g><g><title>App`glutin_winit::DisplayBuilder::build (47 samples, 0.09%)</title><rect x="22.1193%" y="981" width="0.0902%" height="15" fill="rgb(217,214,3)" fg:x="11529" fg:w="47"/><text x="22.3693%" y="991.50"></text></g><g><title>App`glutin_winit::finalize_window (31 samples, 0.06%)</title><rect x="22.1500%" y="965" width="0.0595%" height="15" fill="rgb(240,86,28)" fg:x="11545" fg:w="31"/><text x="22.4000%" y="975.50"></text></g><g><title>App`winit::window::WindowBuilder::build (31 samples, 0.06%)</title><rect x="22.1500%" y="949" width="0.0595%" height="15" fill="rgb(215,47,9)" fg:x="11545" fg:w="31"/><text x="22.4000%" y="959.50"></text></g><g><title>App`winit::platform_impl::platform::Window::new (31 samples, 0.06%)</title><rect x="22.1500%" y="933" width="0.0595%" height="15" fill="rgb(252,25,45)" fg:x="11545" fg:w="31"/><text x="22.4000%" y="943.50"></text></g><g><title>App`objc2::rc::autorelease::autoreleasepool (31 samples, 0.06%)</title><rect x="22.1500%" y="917" width="0.0595%" height="15" fill="rgb(251,164,9)" fg:x="11545" fg:w="31"/><text x="22.4000%" y="927.50"></text></g><g><title>App`winit::platform_impl::platform::Window::new::_{{closure}} (31 samples, 0.06%)</title><rect x="22.1500%" y="901" width="0.0595%" height="15" fill="rgb(233,194,0)" fg:x="11545" fg:w="31"/><text x="22.4000%" y="911.50"></text></g><g><title>App`winit::platform_impl::platform::window::WinitWindow::new (31 samples, 0.06%)</title><rect x="22.1500%" y="885" width="0.0595%" height="15" fill="rgb(249,111,24)" fg:x="11545" fg:w="31"/><text x="22.4000%" y="895.50"></text></g><g><title>AppKit`-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (7 samples, 0.01%)</title><rect x="22.2133%" y="837" width="0.0134%" height="15" fill="rgb(250,223,3)" fg:x="11578" fg:w="7"/><text x="22.4633%" y="847.50"></text></g><g><title>AppKit`+[NSSystemAppearanceProxy systemProxy] (7 samples, 0.01%)</title><rect x="22.2133%" y="821" width="0.0134%" height="15" fill="rgb(236,178,37)" fg:x="11578" fg:w="7"/><text x="22.4633%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (7 samples, 0.01%)</title><rect x="22.2133%" y="805" width="0.0134%" height="15" fill="rgb(241,158,50)" fg:x="11578" fg:w="7"/><text x="22.4633%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (7 samples, 0.01%)</title><rect x="22.2133%" y="789" width="0.0134%" height="15" fill="rgb(213,121,41)" fg:x="11578" fg:w="7"/><text x="22.4633%" y="799.50"></text></g><g><title>AppKit`__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (7 samples, 0.01%)</title><rect x="22.2133%" y="773" width="0.0134%" height="15" fill="rgb(240,92,3)" fg:x="11578" fg:w="7"/><text x="22.4633%" y="783.50"></text></g><g><title>AppKit`-[NSSystemAppearanceProxy init] (7 samples, 0.01%)</title><rect x="22.2133%" y="757" width="0.0134%" height="15" fill="rgb(205,123,3)" fg:x="11578" fg:w="7"/><text x="22.4633%" y="767.50"></text></g><g><title>AppKit`-[NSApplication init] (21 samples, 0.04%)</title><rect x="22.2094%" y="853" width="0.0403%" height="15" fill="rgb(205,97,47)" fg:x="11576" fg:w="21"/><text x="22.4594%" y="863.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (22 samples, 0.04%)</title><rect x="22.2094%" y="869" width="0.0422%" height="15" fill="rgb(247,152,14)" fg:x="11576" fg:w="22"/><text x="22.4594%" y="879.50"></text></g><g><title>App`window::WindowSettings::build (82 samples, 0.16%)</title><rect x="22.1001%" y="1045" width="0.1573%" height="15" fill="rgb(248,195,53)" fg:x="11519" fg:w="82"/><text x="22.3501%" y="1055.50"></text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::BuildFromWindowSettings&gt;::build_from_window_settings (82 samples, 0.16%)</title><rect x="22.1001%" y="1029" width="0.1573%" height="15" fill="rgb(226,201,16)" fg:x="11519" fg:w="82"/><text x="22.3501%" y="1039.50"></text></g><g><title>App`glutin_window::GlutinWindow::new (82 samples, 0.16%)</title><rect x="22.1001%" y="1013" width="0.1573%" height="15" fill="rgb(205,98,0)" fg:x="11519" fg:w="82"/><text x="22.3501%" y="1023.50"></text></g><g><title>App`winit::event_loop::EventLoopBuilder&lt;T&gt;::build (25 samples, 0.05%)</title><rect x="22.2094%" y="997" width="0.0480%" height="15" fill="rgb(214,191,48)" fg:x="11576" fg:w="25"/><text x="22.4594%" y="1007.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (25 samples, 0.05%)</title><rect x="22.2094%" y="981" width="0.0480%" height="15" fill="rgb(237,112,39)" fg:x="11576" fg:w="25"/><text x="22.4594%" y="991.50"></text></g><g><title>App`&lt;objc2::__macro_helpers::RetainSemantics&lt;_,_,_,_&gt; as objc2::__macro_helpers::MsgSendId&lt;T,U,O&gt;&gt;::send_message_id (25 samples, 0.05%)</title><rect x="22.2094%" y="965" width="0.0480%" height="15" fill="rgb(247,203,27)" fg:x="11576" fg:w="25"/><text x="22.4594%" y="975.50"></text></g><g><title>App`objc2::message::MessageReceiver::send_message (25 samples, 0.05%)</title><rect x="22.2094%" y="949" width="0.0480%" height="15" fill="rgb(235,124,28)" fg:x="11576" fg:w="25"/><text x="22.4594%" y="959.50"></text></g><g><title>App`objc2::message::platform::send_unverified (25 samples, 0.05%)</title><rect x="22.2094%" y="933" width="0.0480%" height="15" fill="rgb(208,207,46)" fg:x="11576" fg:w="25"/><text x="22.4594%" y="943.50"></text></g><g><title>App`objc2::message::conditional_try (25 samples, 0.05%)</title><rect x="22.2094%" y="917" width="0.0480%" height="15" fill="rgb(234,176,4)" fg:x="11576" fg:w="25"/><text x="22.4594%" y="927.50"></text></g><g><title>App`objc2::message::platform::send_unverified::_{{closure}} (25 samples, 0.05%)</title><rect x="22.2094%" y="901" width="0.0480%" height="15" fill="rgb(230,133,28)" fg:x="11576" fg:w="25"/><text x="22.4594%" y="911.50"></text></g><g><title>App`&lt;() as objc2::message::MessageArguments&gt;::__invoke (25 samples, 0.05%)</title><rect x="22.2094%" y="885" width="0.0480%" height="15" fill="rgb(211,137,40)" fg:x="11576" fg:w="25"/><text x="22.4594%" y="895.50"></text></g><g><title>App`App::main (11,602 samples, 22.26%)</title><rect x="0.0000%" y="1061" width="22.2593%" height="15" fill="rgb(254,35,13)" fg:x="0" fg:w="11602"/><text x="0.2500%" y="1071.50">App`App::main</text></g><g><title>App`std::rt::lang_start::_{{closure}} (11,609 samples, 22.27%)</title><rect x="0.0000%" y="1109" width="22.2727%" height="15" fill="rgb(225,49,51)" fg:x="0" fg:w="11609"/><text x="0.2500%" y="1119.50">App`std::rt::lang_start::_{{closure..</text></g><g><title>App`std::sys_common::backtrace::__rust_begin_short_backtrace (11,609 samples, 22.27%)</title><rect x="0.0000%" y="1093" width="22.2727%" height="15" fill="rgb(251,10,15)" fg:x="0" fg:w="11609"/><text x="0.2500%" y="1103.50">App`std::sys_common::backtrace::__r..</text></g><g><title>App`core::ops::function::FnOnce::call_once (11,609 samples, 22.27%)</title><rect x="0.0000%" y="1077" width="22.2727%" height="15" fill="rgb(228,207,15)" fg:x="0" fg:w="11609"/><text x="0.2500%" y="1087.50">App`core::ops::function::FnOnce::ca..</text></g><g><title>App`main (11,610 samples, 22.27%)</title><rect x="0.0000%" y="1157" width="22.2747%" height="15" fill="rgb(241,99,19)" fg:x="0" fg:w="11610"/><text x="0.2500%" y="1167.50">App`main</text></g><g><title>App`std::rt::lang_start (11,610 samples, 22.27%)</title><rect x="0.0000%" y="1141" width="22.2747%" height="15" fill="rgb(207,104,49)" fg:x="0" fg:w="11610"/><text x="0.2500%" y="1151.50">App`std::rt::lang_start</text></g><g><title>App`std::rt::lang_start_internal (11,610 samples, 22.27%)</title><rect x="0.0000%" y="1125" width="22.2747%" height="15" fill="rgb(234,99,18)" fg:x="0" fg:w="11610"/><text x="0.2500%" y="1135.50">App`std::rt::lang_start_internal</text></g><g><title>dyld`start (11,629 samples, 22.31%)</title><rect x="0.0000%" y="1173" width="22.3111%" height="15" fill="rgb(213,191,49)" fg:x="0" fg:w="11629"/><text x="0.2500%" y="1183.50">dyld`start</text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::exit (19 samples, 0.04%)</title><rect x="22.2747%" y="1157" width="0.0365%" height="15" fill="rgb(210,226,19)" fg:x="11610" fg:w="19"/><text x="22.5247%" y="1167.50"></text></g><g><title>libsystem_kernel.dylib`__exit (18 samples, 0.03%)</title><rect x="22.2766%" y="1141" width="0.0345%" height="15" fill="rgb(229,97,18)" fg:x="11611" fg:w="18"/><text x="22.5266%" y="1151.50"></text></g><g><title>libobjc.A.dylib`getMethodNoSuper_nolock(objc_class*, objc_selector*) (12 samples, 0.02%)</title><rect x="22.3150%" y="1173" width="0.0230%" height="15" fill="rgb(211,167,15)" fg:x="11631" fg:w="12"/><text x="22.5650%" y="1183.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (436 samples, 0.84%)</title><rect x="22.3898%" y="1157" width="0.8365%" height="15" fill="rgb(210,169,34)" fg:x="11670" fg:w="436"/><text x="22.6398%" y="1167.50"></text></g><g><title>QuartzCore`CABackingStoreCollect (19 samples, 0.04%)</title><rect x="23.3836%" y="1061" width="0.0365%" height="15" fill="rgb(241,121,31)" fg:x="12188" fg:w="19"/><text x="23.6336%" y="1071.50"></text></g><g><title>QuartzCore`CABackingStoreCollect_(double, bool) (19 samples, 0.04%)</title><rect x="23.3836%" y="1045" width="0.0365%" height="15" fill="rgb(232,40,11)" fg:x="12188" fg:w="19"/><text x="23.6336%" y="1055.50"></text></g><g><title>QuartzCore`async_collect_callback(void*) (25 samples, 0.05%)</title><rect x="23.3817%" y="1077" width="0.0480%" height="15" fill="rgb(205,86,26)" fg:x="12187" fg:w="25"/><text x="23.6317%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (30 samples, 0.06%)</title><rect x="23.3817%" y="1093" width="0.0576%" height="15" fill="rgb(231,126,28)" fg:x="12187" fg:w="30"/><text x="23.6317%" y="1103.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.02%)</title><rect x="23.4412%" y="1077" width="0.0192%" height="15" fill="rgb(219,221,18)" fg:x="12218" fg:w="10"/><text x="23.6912%" y="1087.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.01%)</title><rect x="23.4488%" y="1061" width="0.0115%" height="15" fill="rgb(211,40,0)" fg:x="12222" fg:w="6"/><text x="23.6988%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_free_to_cache_limit (12 samples, 0.02%)</title><rect x="23.4392%" y="1093" width="0.0230%" height="15" fill="rgb(239,85,43)" fg:x="12217" fg:w="12"/><text x="23.6892%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (54 samples, 0.10%)</title><rect x="23.3644%" y="1109" width="0.1036%" height="15" fill="rgb(231,55,21)" fg:x="12178" fg:w="54"/><text x="23.6144%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (6 samples, 0.01%)</title><rect x="23.4719%" y="1109" width="0.0115%" height="15" fill="rgb(225,184,43)" fg:x="12234" fg:w="6"/><text x="23.7219%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (69 samples, 0.13%)</title><rect x="23.3548%" y="1125" width="0.1324%" height="15" fill="rgb(251,158,41)" fg:x="12173" fg:w="69"/><text x="23.6048%" y="1135.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (603 samples, 1.16%)</title><rect x="22.3399%" y="1173" width="1.1569%" height="15" fill="rgb(234,159,37)" fg:x="11644" fg:w="603"/><text x="22.5899%" y="1183.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (141 samples, 0.27%)</title><rect x="23.2263%" y="1157" width="0.2705%" height="15" fill="rgb(216,204,22)" fg:x="12106" fg:w="141"/><text x="23.4763%" y="1167.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (127 samples, 0.24%)</title><rect x="23.2531%" y="1141" width="0.2437%" height="15" fill="rgb(214,17,3)" fg:x="12120" fg:w="127"/><text x="23.5031%" y="1151.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (8 samples, 0.02%)</title><rect x="23.5582%" y="997" width="0.0153%" height="15" fill="rgb(212,111,17)" fg:x="12279" fg:w="8"/><text x="23.8082%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (6 samples, 0.01%)</title><rect x="23.5620%" y="981" width="0.0115%" height="15" fill="rgb(221,157,24)" fg:x="12281" fg:w="6"/><text x="23.8120%" y="991.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (12 samples, 0.02%)</title><rect x="23.5544%" y="1013" width="0.0230%" height="15" fill="rgb(252,16,13)" fg:x="12277" fg:w="12"/><text x="23.8044%" y="1023.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (9 samples, 0.02%)</title><rect x="23.6062%" y="949" width="0.0173%" height="15" fill="rgb(221,62,2)" fg:x="12304" fg:w="9"/><text x="23.8562%" y="959.50"></text></g><g><title>libsystem_c.dylib`snprintf (7 samples, 0.01%)</title><rect x="23.6100%" y="933" width="0.0134%" height="15" fill="rgb(247,87,22)" fg:x="12306" fg:w="7"/><text x="23.8600%" y="943.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (6 samples, 0.01%)</title><rect x="23.6119%" y="917" width="0.0115%" height="15" fill="rgb(215,73,9)" fg:x="12307" fg:w="6"/><text x="23.8619%" y="927.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (6 samples, 0.01%)</title><rect x="23.6119%" y="901" width="0.0115%" height="15" fill="rgb(207,175,33)" fg:x="12307" fg:w="6"/><text x="23.8619%" y="911.50"></text></g><g><title>libsystem_c.dylib`__v2printf (6 samples, 0.01%)</title><rect x="23.6119%" y="885" width="0.0115%" height="15" fill="rgb(243,129,54)" fg:x="12307" fg:w="6"/><text x="23.8619%" y="895.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (6 samples, 0.01%)</title><rect x="23.6119%" y="869" width="0.0115%" height="15" fill="rgb(227,119,45)" fg:x="12307" fg:w="6"/><text x="23.8619%" y="879.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (11 samples, 0.02%)</title><rect x="23.6062%" y="965" width="0.0211%" height="15" fill="rgb(205,109,36)" fg:x="12304" fg:w="11"/><text x="23.8562%" y="975.50"></text></g><g><title>SkyLight`CGSEventLogEvent (17 samples, 0.03%)</title><rect x="23.5966%" y="981" width="0.0326%" height="15" fill="rgb(205,6,39)" fg:x="12299" fg:w="17"/><text x="23.8466%" y="991.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (17 samples, 0.03%)</title><rect x="23.6388%" y="965" width="0.0326%" height="15" fill="rgb(221,32,16)" fg:x="12321" fg:w="17"/><text x="23.8888%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (16 samples, 0.03%)</title><rect x="23.6407%" y="949" width="0.0307%" height="15" fill="rgb(228,144,50)" fg:x="12322" fg:w="16"/><text x="23.8907%" y="959.50"></text></g><g><title>IOKit`IOHIDEventCreateWithBytes (11 samples, 0.02%)</title><rect x="23.6848%" y="917" width="0.0211%" height="15" fill="rgb(229,201,53)" fg:x="12345" fg:w="11"/><text x="23.9348%" y="927.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_18::__invoke (16 samples, 0.03%)</title><rect x="23.6848%" y="933" width="0.0307%" height="15" fill="rgb(249,153,27)" fg:x="12345" fg:w="16"/><text x="23.9348%" y="943.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_20::__invoke (9 samples, 0.02%)</title><rect x="23.7155%" y="933" width="0.0173%" height="15" fill="rgb(227,106,25)" fg:x="12361" fg:w="9"/><text x="23.9655%" y="943.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (30 samples, 0.06%)</title><rect x="23.6771%" y="949" width="0.0576%" height="15" fill="rgb(230,65,29)" fg:x="12341" fg:w="30"/><text x="23.9271%" y="959.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (34 samples, 0.07%)</title><rect x="23.6714%" y="965" width="0.0652%" height="15" fill="rgb(221,57,46)" fg:x="12338" fg:w="34"/><text x="23.9214%" y="975.50"></text></g><g><title>libdispatch.dylib`dispatch_async (7 samples, 0.01%)</title><rect x="23.7424%" y="965" width="0.0134%" height="15" fill="rgb(229,161,17)" fg:x="12375" fg:w="7"/><text x="23.9924%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (80 samples, 0.15%)</title><rect x="23.7577%" y="965" width="0.1535%" height="15" fill="rgb(222,213,11)" fg:x="12383" fg:w="80"/><text x="24.0077%" y="975.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (150 samples, 0.29%)</title><rect x="23.6292%" y="981" width="0.2878%" height="15" fill="rgb(235,35,13)" fg:x="12316" fg:w="150"/><text x="23.8792%" y="991.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (176 samples, 0.34%)</title><rect x="23.5889%" y="1013" width="0.3377%" height="15" fill="rgb(233,158,34)" fg:x="12295" fg:w="176"/><text x="23.8389%" y="1023.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (176 samples, 0.34%)</title><rect x="23.5889%" y="997" width="0.3377%" height="15" fill="rgb(215,151,48)" fg:x="12295" fg:w="176"/><text x="23.8389%" y="1007.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (207 samples, 0.40%)</title><rect x="23.5371%" y="1029" width="0.3971%" height="15" fill="rgb(229,84,14)" fg:x="12268" fg:w="207"/><text x="23.7871%" y="1039.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (213 samples, 0.41%)</title><rect x="23.5294%" y="1045" width="0.4087%" height="15" fill="rgb(229,68,14)" fg:x="12264" fg:w="213"/><text x="23.7794%" y="1055.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (218 samples, 0.42%)</title><rect x="23.5217%" y="1077" width="0.4182%" height="15" fill="rgb(243,106,26)" fg:x="12260" fg:w="218"/><text x="23.7717%" y="1087.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (218 samples, 0.42%)</title><rect x="23.5217%" y="1061" width="0.4182%" height="15" fill="rgb(206,45,38)" fg:x="12260" fg:w="218"/><text x="23.7717%" y="1071.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (224 samples, 0.43%)</title><rect x="23.5121%" y="1093" width="0.4298%" height="15" fill="rgb(226,6,15)" fg:x="12255" fg:w="224"/><text x="23.7621%" y="1103.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_adopt (10 samples, 0.02%)</title><rect x="23.9438%" y="1077" width="0.0192%" height="15" fill="rgb(232,22,54)" fg:x="12480" fg:w="10"/><text x="24.1938%" y="1087.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (49 samples, 0.09%)</title><rect x="23.9438%" y="1093" width="0.0940%" height="15" fill="rgb(229,222,32)" fg:x="12480" fg:w="49"/><text x="24.1938%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (36 samples, 0.07%)</title><rect x="23.9688%" y="1077" width="0.0691%" height="15" fill="rgb(228,62,29)" fg:x="12493" fg:w="36"/><text x="24.2188%" y="1087.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (283 samples, 0.54%)</title><rect x="23.5026%" y="1109" width="0.5430%" height="15" fill="rgb(251,103,34)" fg:x="12250" fg:w="283"/><text x="23.7526%" y="1119.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (289 samples, 0.55%)</title><rect x="23.4987%" y="1125" width="0.5545%" height="15" fill="rgb(233,12,30)" fg:x="12248" fg:w="289"/><text x="23.7487%" y="1135.50"></text></g><g><title>AppKit`_NSEventThread (291 samples, 0.56%)</title><rect x="23.4968%" y="1141" width="0.5583%" height="15" fill="rgb(238,52,0)" fg:x="12247" fg:w="291"/><text x="23.7468%" y="1151.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="24.0800%" y="869" width="0.0115%" height="15" fill="rgb(223,98,5)" fg:x="12551" fg:w="6"/><text x="24.3300%" y="879.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.01%)</title><rect x="24.0800%" y="853" width="0.0115%" height="15" fill="rgb(228,75,37)" fg:x="12551" fg:w="6"/><text x="24.3300%" y="863.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (6 samples, 0.01%)</title><rect x="24.0800%" y="837" width="0.0115%" height="15" fill="rgb(205,115,49)" fg:x="12551" fg:w="6"/><text x="24.3300%" y="847.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="24.0800%" y="821" width="0.0115%" height="15" fill="rgb(250,154,43)" fg:x="12551" fg:w="6"/><text x="24.3300%" y="831.50"></text></g><g><title>App`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.02%)</title><rect x="24.0800%" y="901" width="0.0211%" height="15" fill="rgb(226,43,29)" fg:x="12551" fg:w="11"/><text x="24.3300%" y="911.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.02%)</title><rect x="24.0800%" y="885" width="0.0211%" height="15" fill="rgb(249,228,39)" fg:x="12551" fg:w="11"/><text x="24.3300%" y="895.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (22 samples, 0.04%)</title><rect x="24.0628%" y="917" width="0.0422%" height="15" fill="rgb(216,79,43)" fg:x="12542" fg:w="22"/><text x="24.3128%" y="927.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::is_check (10 samples, 0.02%)</title><rect x="24.1683%" y="885" width="0.0192%" height="15" fill="rgb(228,95,12)" fg:x="12597" fg:w="10"/><text x="24.4183%" y="895.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.01%)</title><rect x="24.1990%" y="869" width="0.0115%" height="15" fill="rgb(249,221,15)" fg:x="12613" fg:w="6"/><text x="24.4490%" y="879.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (6 samples, 0.01%)</title><rect x="24.1990%" y="853" width="0.0115%" height="15" fill="rgb(233,34,13)" fg:x="12613" fg:w="6"/><text x="24.4490%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::board_state_numbers (13 samples, 0.02%)</title><rect x="24.1875%" y="885" width="0.0249%" height="15" fill="rgb(214,103,39)" fg:x="12607" fg:w="13"/><text x="24.4375%" y="895.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (19 samples, 0.04%)</title><rect x="24.2546%" y="677" width="0.0365%" height="15" fill="rgb(251,126,39)" fg:x="12642" fg:w="19"/><text x="24.5046%" y="687.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (18 samples, 0.03%)</title><rect x="24.2566%" y="661" width="0.0345%" height="15" fill="rgb(214,216,36)" fg:x="12643" fg:w="18"/><text x="24.5066%" y="671.50"></text></g><g><title> N]&gt;::try_from (18 samples, 0.03%)</title><rect x="24.2566%" y="645" width="0.0345%" height="15" fill="rgb(220,221,8)" fg:x="12643" fg:w="18"/><text x="24.5066%" y="655.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (16 samples, 0.03%)</title><rect x="24.2604%" y="629" width="0.0307%" height="15" fill="rgb(240,216,3)" fg:x="12645" fg:w="16"/><text x="24.5104%" y="639.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (41 samples, 0.08%)</title><rect x="24.2489%" y="693" width="0.0787%" height="15" fill="rgb(232,218,17)" fg:x="12639" fg:w="41"/><text x="24.4989%" y="703.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.02%)</title><rect x="24.3084%" y="677" width="0.0192%" height="15" fill="rgb(229,163,45)" fg:x="12670" fg:w="10"/><text x="24.5584%" y="687.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.02%)</title><rect x="24.3103%" y="661" width="0.0173%" height="15" fill="rgb(231,110,42)" fg:x="12671" fg:w="9"/><text x="24.5603%" y="671.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.02%)</title><rect x="24.3122%" y="645" width="0.0153%" height="15" fill="rgb(208,170,48)" fg:x="12672" fg:w="8"/><text x="24.5622%" y="655.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (6 samples, 0.01%)</title><rect x="24.3275%" y="693" width="0.0115%" height="15" fill="rgb(239,116,25)" fg:x="12680" fg:w="6"/><text x="24.5775%" y="703.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (10 samples, 0.02%)</title><rect x="24.3391%" y="693" width="0.0192%" height="15" fill="rgb(219,200,50)" fg:x="12686" fg:w="10"/><text x="24.5891%" y="703.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (72 samples, 0.14%)</title><rect x="24.2239%" y="789" width="0.1381%" height="15" fill="rgb(245,200,0)" fg:x="12626" fg:w="72"/><text x="24.4739%" y="799.50"></text></g><g><title> N]&gt;::hash (72 samples, 0.14%)</title><rect x="24.2239%" y="773" width="0.1381%" height="15" fill="rgb(245,119,33)" fg:x="12626" fg:w="72"/><text x="24.4739%" y="783.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (68 samples, 0.13%)</title><rect x="24.2316%" y="757" width="0.1305%" height="15" fill="rgb(231,125,12)" fg:x="12630" fg:w="68"/><text x="24.4816%" y="767.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (68 samples, 0.13%)</title><rect x="24.2316%" y="741" width="0.1305%" height="15" fill="rgb(216,96,41)" fg:x="12630" fg:w="68"/><text x="24.4816%" y="751.50"></text></g><g><title>App`fxhash::write (68 samples, 0.13%)</title><rect x="24.2316%" y="725" width="0.1305%" height="15" fill="rgb(248,43,45)" fg:x="12630" fg:w="68"/><text x="24.4816%" y="735.50"></text></g><g><title>App`fxhash::write64 (67 samples, 0.13%)</title><rect x="24.2335%" y="709" width="0.1285%" height="15" fill="rgb(217,222,7)" fg:x="12631" fg:w="67"/><text x="24.4835%" y="719.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (77 samples, 0.15%)</title><rect x="24.2182%" y="853" width="0.1477%" height="15" fill="rgb(233,28,6)" fg:x="12623" fg:w="77"/><text x="24.4682%" y="863.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (75 samples, 0.14%)</title><rect x="24.2220%" y="837" width="0.1439%" height="15" fill="rgb(231,218,15)" fg:x="12625" fg:w="75"/><text x="24.4720%" y="847.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (75 samples, 0.14%)</title><rect x="24.2220%" y="821" width="0.1439%" height="15" fill="rgb(226,171,48)" fg:x="12625" fg:w="75"/><text x="24.4720%" y="831.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (74 samples, 0.14%)</title><rect x="24.2239%" y="805" width="0.1420%" height="15" fill="rgb(235,201,9)" fg:x="12626" fg:w="74"/><text x="24.4739%" y="815.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (8 samples, 0.02%)</title><rect x="24.3870%" y="821" width="0.0153%" height="15" fill="rgb(217,80,15)" fg:x="12711" fg:w="8"/><text x="24.6370%" y="831.50"></text></g><g><title>App`hashbrown::map::equivalent_key::_{{closure}} (8 samples, 0.02%)</title><rect x="24.3870%" y="805" width="0.0153%" height="15" fill="rgb(219,152,8)" fg:x="12711" fg:w="8"/><text x="24.6370%" y="815.50"></text></g><g><title>App`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (8 samples, 0.02%)</title><rect x="24.3870%" y="789" width="0.0153%" height="15" fill="rgb(243,107,38)" fg:x="12711" fg:w="8"/><text x="24.6370%" y="799.50"></text></g><g><title>App`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (8 samples, 0.02%)</title><rect x="24.3870%" y="773" width="0.0153%" height="15" fill="rgb(231,17,5)" fg:x="12711" fg:w="8"/><text x="24.6370%" y="783.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="24.3870%" y="757" width="0.0153%" height="15" fill="rgb(209,25,54)" fg:x="12711" fg:w="8"/><text x="24.6370%" y="767.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (8 samples, 0.02%)</title><rect x="24.3870%" y="741" width="0.0153%" height="15" fill="rgb(219,0,2)" fg:x="12711" fg:w="8"/><text x="24.6370%" y="751.50"></text></g><g><title> N]&gt; for [A (8 samples, 0.02%)</title><rect x="24.3870%" y="725" width="0.0153%" height="15" fill="rgb(246,9,5)" fg:x="12711" fg:w="8"/><text x="24.6370%" y="735.50"></text></g><g><title> N]&gt;::eq (8 samples, 0.02%)</title><rect x="24.3870%" y="709" width="0.0153%" height="15" fill="rgb(226,159,4)" fg:x="12711" fg:w="8"/><text x="24.6370%" y="719.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (8 samples, 0.02%)</title><rect x="24.3870%" y="693" width="0.0153%" height="15" fill="rgb(219,175,34)" fg:x="12711" fg:w="8"/><text x="24.6370%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (8 samples, 0.02%)</title><rect x="24.3870%" y="677" width="0.0153%" height="15" fill="rgb(236,10,46)" fg:x="12711" fg:w="8"/><text x="24.6370%" y="687.50"></text></g><g><title>App`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (108 samples, 0.21%)</title><rect x="24.2143%" y="885" width="0.2072%" height="15" fill="rgb(240,211,16)" fg:x="12621" fg:w="108"/><text x="24.4643%" y="895.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (107 samples, 0.21%)</title><rect x="24.2163%" y="869" width="0.2053%" height="15" fill="rgb(205,3,43)" fg:x="12622" fg:w="107"/><text x="24.4663%" y="879.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::get (29 samples, 0.06%)</title><rect x="24.3659%" y="853" width="0.0556%" height="15" fill="rgb(245,7,22)" fg:x="12700" fg:w="29"/><text x="24.6159%" y="863.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find (29 samples, 0.06%)</title><rect x="24.3659%" y="837" width="0.0556%" height="15" fill="rgb(239,132,32)" fg:x="12700" fg:w="29"/><text x="24.6159%" y="847.50"></text></g><g><title>App`hashbrown::raw::sse2::Group::match_byte (10 samples, 0.02%)</title><rect x="24.4024%" y="821" width="0.0192%" height="15" fill="rgb(228,202,34)" fg:x="12719" fg:w="10"/><text x="24.6524%" y="831.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (148 samples, 0.28%)</title><rect x="24.1414%" y="901" width="0.2839%" height="15" fill="rgb(254,200,22)" fg:x="12583" fg:w="148"/><text x="24.3914%" y="911.50"></text></g><g><title>App`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.02%)</title><rect x="24.5405%" y="885" width="0.0211%" height="15" fill="rgb(219,10,39)" fg:x="12791" fg:w="11"/><text x="24.7905%" y="895.50"></text></g><g><title>App`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (10 samples, 0.02%)</title><rect x="24.5616%" y="885" width="0.0192%" height="15" fill="rgb(226,210,39)" fg:x="12802" fg:w="10"/><text x="24.8116%" y="895.50"></text></g><g><title>App`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.02%)</title><rect x="24.5616%" y="869" width="0.0192%" height="15" fill="rgb(208,219,16)" fg:x="12802" fg:w="10"/><text x="24.8116%" y="879.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.02%)</title><rect x="24.5654%" y="853" width="0.0153%" height="15" fill="rgb(216,158,51)" fg:x="12804" fg:w="8"/><text x="24.8154%" y="863.50"></text></g><g><title>App`alloc::alloc::Global::alloc_impl (7 samples, 0.01%)</title><rect x="24.6134%" y="821" width="0.0134%" height="15" fill="rgb(233,14,44)" fg:x="12829" fg:w="7"/><text x="24.8634%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.01%)</title><rect x="24.6134%" y="805" width="0.0134%" height="15" fill="rgb(237,97,39)" fg:x="12829" fg:w="7"/><text x="24.8634%" y="815.50"></text></g><g><title>App`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="24.6134%" y="837" width="0.0153%" height="15" fill="rgb(218,198,43)" fg:x="12829" fg:w="8"/><text x="24.8634%" y="847.50"></text></g><g><title>App`alloc::vec::Vec&lt;T&gt;::with_capacity (11 samples, 0.02%)</title><rect x="24.6096%" y="869" width="0.0211%" height="15" fill="rgb(231,104,20)" fg:x="12827" fg:w="11"/><text x="24.8596%" y="879.50"></text></g><g><title>App`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.02%)</title><rect x="24.6096%" y="853" width="0.0211%" height="15" fill="rgb(254,36,13)" fg:x="12827" fg:w="11"/><text x="24.8596%" y="863.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (22 samples, 0.04%)</title><rect x="24.5904%" y="885" width="0.0422%" height="15" fill="rgb(248,14,50)" fg:x="12817" fg:w="22"/><text x="24.8404%" y="895.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::evaluate (6 samples, 0.01%)</title><rect x="24.6345%" y="885" width="0.0115%" height="15" fill="rgb(217,107,29)" fg:x="12840" fg:w="6"/><text x="24.8845%" y="895.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (9 samples, 0.02%)</title><rect x="24.9779%" y="853" width="0.0173%" height="15" fill="rgb(251,169,33)" fg:x="13019" fg:w="9"/><text x="25.2279%" y="863.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::is_check (87 samples, 0.17%)</title><rect x="24.8494%" y="869" width="0.1669%" height="15" fill="rgb(217,108,32)" fg:x="12952" fg:w="87"/><text x="25.0994%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="24.9971%" y="853" width="0.0192%" height="15" fill="rgb(219,66,42)" fg:x="13029" fg:w="10"/><text x="25.2471%" y="863.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (24 samples, 0.05%)</title><rect x="25.1257%" y="837" width="0.0460%" height="15" fill="rgb(206,180,7)" fg:x="13096" fg:w="24"/><text x="25.3757%" y="847.50"></text></g><g><title>App`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (7 samples, 0.01%)</title><rect x="25.1583%" y="821" width="0.0134%" height="15" fill="rgb(208,226,31)" fg:x="13113" fg:w="7"/><text x="25.4083%" y="831.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (28 samples, 0.05%)</title><rect x="25.1199%" y="853" width="0.0537%" height="15" fill="rgb(218,26,49)" fg:x="13093" fg:w="28"/><text x="25.3699%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::board_state_numbers (91 samples, 0.17%)</title><rect x="25.0163%" y="869" width="0.1746%" height="15" fill="rgb(233,197,48)" fg:x="13039" fg:w="91"/><text x="25.2663%" y="879.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_usize (16 samples, 0.03%)</title><rect x="25.2580%" y="725" width="0.0307%" height="15" fill="rgb(252,181,51)" fg:x="13165" fg:w="16"/><text x="25.5080%" y="735.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (14 samples, 0.03%)</title><rect x="25.2619%" y="709" width="0.0269%" height="15" fill="rgb(253,90,19)" fg:x="13167" fg:w="14"/><text x="25.5119%" y="719.50"></text></g><g><title>App`core::hash::Hasher::write_length_prefix (20 samples, 0.04%)</title><rect x="25.2542%" y="741" width="0.0384%" height="15" fill="rgb(215,171,30)" fg:x="13163" fg:w="20"/><text x="25.5042%" y="751.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (69 samples, 0.13%)</title><rect x="25.5017%" y="645" width="0.1324%" height="15" fill="rgb(214,222,9)" fg:x="13292" fg:w="69"/><text x="25.7517%" y="655.50"></text></g><g><title> N]&gt;::try_from (69 samples, 0.13%)</title><rect x="25.5017%" y="629" width="0.1324%" height="15" fill="rgb(223,3,22)" fg:x="13292" fg:w="69"/><text x="25.7517%" y="639.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (54 samples, 0.10%)</title><rect x="25.5305%" y="613" width="0.1036%" height="15" fill="rgb(225,196,46)" fg:x="13307" fg:w="54"/><text x="25.7805%" y="623.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (13 samples, 0.02%)</title><rect x="25.6091%" y="597" width="0.0249%" height="15" fill="rgb(209,110,37)" fg:x="13348" fg:w="13"/><text x="25.8591%" y="607.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (13 samples, 0.02%)</title><rect x="25.6091%" y="581" width="0.0249%" height="15" fill="rgb(249,89,12)" fg:x="13348" fg:w="13"/><text x="25.8591%" y="591.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (76 samples, 0.15%)</title><rect x="25.4998%" y="661" width="0.1458%" height="15" fill="rgb(226,27,33)" fg:x="13291" fg:w="76"/><text x="25.7498%" y="671.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (6 samples, 0.01%)</title><rect x="25.6341%" y="645" width="0.0115%" height="15" fill="rgb(213,82,22)" fg:x="13361" fg:w="6"/><text x="25.8841%" y="655.50"></text></g><g><title>App`core::num::_&lt;impl u64&gt;::from_le_bytes (18 samples, 0.03%)</title><rect x="25.6552%" y="661" width="0.0345%" height="15" fill="rgb(248,140,0)" fg:x="13372" fg:w="18"/><text x="25.9052%" y="671.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::unwrap (8 samples, 0.02%)</title><rect x="25.6897%" y="661" width="0.0153%" height="15" fill="rgb(228,106,3)" fg:x="13390" fg:w="8"/><text x="25.9397%" y="671.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (210 samples, 0.40%)</title><rect x="25.4192%" y="677" width="0.4029%" height="15" fill="rgb(209,23,37)" fg:x="13249" fg:w="210"/><text x="25.6692%" y="687.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (61 samples, 0.12%)</title><rect x="25.7051%" y="661" width="0.1170%" height="15" fill="rgb(241,93,50)" fg:x="13398" fg:w="61"/><text x="25.9551%" y="671.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (45 samples, 0.09%)</title><rect x="25.7358%" y="645" width="0.0863%" height="15" fill="rgb(253,46,43)" fg:x="13414" fg:w="45"/><text x="25.9858%" y="655.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (33 samples, 0.06%)</title><rect x="25.7588%" y="629" width="0.0633%" height="15" fill="rgb(226,206,43)" fg:x="13426" fg:w="33"/><text x="26.0088%" y="639.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.01%)</title><rect x="25.8221%" y="677" width="0.0134%" height="15" fill="rgb(217,54,7)" fg:x="13459" fg:w="7"/><text x="26.0721%" y="687.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (10 samples, 0.02%)</title><rect x="25.8355%" y="677" width="0.0192%" height="15" fill="rgb(223,5,52)" fg:x="13466" fg:w="10"/><text x="26.0855%" y="687.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (46 samples, 0.09%)</title><rect x="25.8605%" y="677" width="0.0883%" height="15" fill="rgb(206,52,46)" fg:x="13479" fg:w="46"/><text x="26.1105%" y="687.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (340 samples, 0.65%)</title><rect x="25.3060%" y="725" width="0.6523%" height="15" fill="rgb(253,136,11)" fg:x="13190" fg:w="340"/><text x="25.5560%" y="735.50"></text></g><g><title>App`fxhash::write (330 samples, 0.63%)</title><rect x="25.3252%" y="709" width="0.6331%" height="15" fill="rgb(208,106,33)" fg:x="13200" fg:w="330"/><text x="25.5752%" y="719.50"></text></g><g><title>App`fxhash::write64 (318 samples, 0.61%)</title><rect x="25.3482%" y="693" width="0.6101%" height="15" fill="rgb(206,54,4)" fg:x="13212" fg:w="318"/><text x="25.5982%" y="703.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (374 samples, 0.72%)</title><rect x="25.2427%" y="773" width="0.7175%" height="15" fill="rgb(213,3,15)" fg:x="13157" fg:w="374"/><text x="25.4927%" y="783.50"></text></g><g><title> N]&gt;::hash (374 samples, 0.72%)</title><rect x="25.2427%" y="757" width="0.7175%" height="15" fill="rgb(252,211,39)" fg:x="13157" fg:w="374"/><text x="25.4927%" y="767.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (348 samples, 0.67%)</title><rect x="25.2926%" y="741" width="0.6677%" height="15" fill="rgb(223,6,36)" fg:x="13183" fg:w="348"/><text x="25.5426%" y="751.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (380 samples, 0.73%)</title><rect x="25.2389%" y="789" width="0.7291%" height="15" fill="rgb(252,169,45)" fg:x="13155" fg:w="380"/><text x="25.4889%" y="799.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (395 samples, 0.76%)</title><rect x="25.2120%" y="837" width="0.7578%" height="15" fill="rgb(212,48,26)" fg:x="13141" fg:w="395"/><text x="25.4620%" y="847.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (387 samples, 0.74%)</title><rect x="25.2274%" y="821" width="0.7425%" height="15" fill="rgb(251,102,48)" fg:x="13149" fg:w="387"/><text x="25.4774%" y="831.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (384 samples, 0.74%)</title><rect x="25.2331%" y="805" width="0.7367%" height="15" fill="rgb(243,208,16)" fg:x="13152" fg:w="384"/><text x="25.4831%" y="815.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_loadu_si128 (42 samples, 0.08%)</title><rect x="26.0025%" y="805" width="0.0806%" height="15" fill="rgb(219,96,24)" fg:x="13553" fg:w="42"/><text x="26.2525%" y="815.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (19 samples, 0.04%)</title><rect x="26.0907%" y="677" width="0.0365%" height="15" fill="rgb(219,33,29)" fg:x="13599" fg:w="19"/><text x="26.3407%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (17 samples, 0.03%)</title><rect x="26.0945%" y="661" width="0.0326%" height="15" fill="rgb(223,176,5)" fg:x="13601" fg:w="17"/><text x="26.3445%" y="671.50"></text></g><g><title>App`hashbrown::map::equivalent_key::_{{closure}} (22 samples, 0.04%)</title><rect x="26.0869%" y="789" width="0.0422%" height="15" fill="rgb(228,140,14)" fg:x="13597" fg:w="22"/><text x="26.3369%" y="799.50"></text></g><g><title>App`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (22 samples, 0.04%)</title><rect x="26.0869%" y="773" width="0.0422%" height="15" fill="rgb(217,179,31)" fg:x="13597" fg:w="22"/><text x="26.3369%" y="783.50"></text></g><g><title>App`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (21 samples, 0.04%)</title><rect x="26.0888%" y="757" width="0.0403%" height="15" fill="rgb(230,9,30)" fg:x="13598" fg:w="21"/><text x="26.3388%" y="767.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (21 samples, 0.04%)</title><rect x="26.0888%" y="741" width="0.0403%" height="15" fill="rgb(230,136,20)" fg:x="13598" fg:w="21"/><text x="26.3388%" y="751.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (20 samples, 0.04%)</title><rect x="26.0907%" y="725" width="0.0384%" height="15" fill="rgb(215,210,22)" fg:x="13599" fg:w="20"/><text x="26.3407%" y="735.50"></text></g><g><title> N]&gt; for [A (20 samples, 0.04%)</title><rect x="26.0907%" y="709" width="0.0384%" height="15" fill="rgb(218,43,5)" fg:x="13599" fg:w="20"/><text x="26.3407%" y="719.50"></text></g><g><title> N]&gt;::eq (20 samples, 0.04%)</title><rect x="26.0907%" y="693" width="0.0384%" height="15" fill="rgb(216,11,5)" fg:x="13599" fg:w="20"/><text x="26.3407%" y="703.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (23 samples, 0.04%)</title><rect x="26.0869%" y="805" width="0.0441%" height="15" fill="rgb(209,82,29)" fg:x="13597" fg:w="23"/><text x="26.3369%" y="815.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (10 samples, 0.02%)</title><rect x="26.1463%" y="789" width="0.0192%" height="15" fill="rgb(244,115,12)" fg:x="13628" fg:w="10"/><text x="26.3963%" y="799.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_movemask_epi8 (26 samples, 0.05%)</title><rect x="26.1655%" y="789" width="0.0499%" height="15" fill="rgb(222,82,18)" fg:x="13638" fg:w="26"/><text x="26.4155%" y="799.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find (144 samples, 0.28%)</title><rect x="25.9737%" y="821" width="0.2763%" height="15" fill="rgb(249,227,8)" fg:x="13538" fg:w="144"/><text x="26.2237%" y="831.50"></text></g><g><title>App`hashbrown::raw::sse2::Group::match_byte (62 samples, 0.12%)</title><rect x="26.1310%" y="805" width="0.1190%" height="15" fill="rgb(253,141,45)" fg:x="13620" fg:w="62"/><text x="26.3810%" y="815.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_set1_epi8 (18 samples, 0.03%)</title><rect x="26.2154%" y="789" width="0.0345%" height="15" fill="rgb(234,184,4)" fg:x="13664" fg:w="18"/><text x="26.4654%" y="799.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (545 samples, 1.05%)</title><rect x="25.2062%" y="853" width="1.0456%" height="15" fill="rgb(218,194,23)" fg:x="13138" fg:w="545"/><text x="25.4562%" y="863.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::get (147 samples, 0.28%)</title><rect x="25.9698%" y="837" width="0.2820%" height="15" fill="rgb(235,66,41)" fg:x="13536" fg:w="147"/><text x="26.2198%" y="847.50"></text></g><g><title>App`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (547 samples, 1.05%)</title><rect x="25.2043%" y="869" width="1.0495%" height="15" fill="rgb(245,217,1)" fg:x="13137" fg:w="547"/><text x="25.4543%" y="879.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (842 samples, 1.62%)</title><rect x="24.6499%" y="885" width="1.6154%" height="15" fill="rgb(229,91,1)" fg:x="12848" fg:w="842"/><text x="24.8999%" y="895.50"></text></g><g><title>App`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (32 samples, 0.06%)</title><rect x="26.6548%" y="869" width="0.0614%" height="15" fill="rgb(207,101,30)" fg:x="13893" fg:w="32"/><text x="26.9048%" y="879.50"></text></g><g><title>App`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (16 samples, 0.03%)</title><rect x="26.6855%" y="853" width="0.0307%" height="15" fill="rgb(223,82,49)" fg:x="13909" fg:w="16"/><text x="26.9355%" y="863.50"></text></g><g><title>App`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.06%)</title><rect x="26.7162%" y="869" width="0.0595%" height="15" fill="rgb(218,167,17)" fg:x="13925" fg:w="31"/><text x="26.9662%" y="879.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (9 samples, 0.02%)</title><rect x="26.8102%" y="709" width="0.0173%" height="15" fill="rgb(208,103,14)" fg:x="13974" fg:w="9"/><text x="27.0602%" y="719.50"></text></g><g><title>App`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (12 samples, 0.02%)</title><rect x="26.8063%" y="805" width="0.0230%" height="15" fill="rgb(238,20,8)" fg:x="13972" fg:w="12"/><text x="27.0563%" y="815.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (11 samples, 0.02%)</title><rect x="26.8083%" y="789" width="0.0211%" height="15" fill="rgb(218,80,54)" fg:x="13973" fg:w="11"/><text x="27.0583%" y="799.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (11 samples, 0.02%)</title><rect x="26.8083%" y="773" width="0.0211%" height="15" fill="rgb(240,144,17)" fg:x="13973" fg:w="11"/><text x="27.0583%" y="783.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (11 samples, 0.02%)</title><rect x="26.8083%" y="757" width="0.0211%" height="15" fill="rgb(245,27,50)" fg:x="13973" fg:w="11"/><text x="27.0583%" y="767.50"></text></g><g><title> N]&gt; for [A (11 samples, 0.02%)</title><rect x="26.8083%" y="741" width="0.0211%" height="15" fill="rgb(251,51,7)" fg:x="13973" fg:w="11"/><text x="27.0583%" y="751.50"></text></g><g><title> N]&gt;::eq (11 samples, 0.02%)</title><rect x="26.8083%" y="725" width="0.0211%" height="15" fill="rgb(245,217,29)" fg:x="13973" fg:w="11"/><text x="27.0583%" y="735.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 0.05%)</title><rect x="26.7833%" y="837" width="0.0480%" height="15" fill="rgb(221,176,29)" fg:x="13960" fg:w="25"/><text x="27.0333%" y="847.50"></text></g><g><title>App`core::iter::adapters::map::map_fold::_{{closure}} (15 samples, 0.03%)</title><rect x="26.8025%" y="821" width="0.0288%" height="15" fill="rgb(212,180,24)" fg:x="13970" fg:w="15"/><text x="27.0525%" y="831.50"></text></g><g><title>App`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (30 samples, 0.06%)</title><rect x="26.7756%" y="869" width="0.0576%" height="15" fill="rgb(254,24,2)" fg:x="13956" fg:w="30"/><text x="27.0256%" y="879.50"></text></g><g><title>App`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.05%)</title><rect x="26.7814%" y="853" width="0.0518%" height="15" fill="rgb(230,100,2)" fg:x="13959" fg:w="27"/><text x="27.0314%" y="863.50"></text></g><g><title>App`alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.02%)</title><rect x="26.9387%" y="853" width="0.0230%" height="15" fill="rgb(219,142,25)" fg:x="14041" fg:w="12"/><text x="27.1887%" y="863.50"></text></g><g><title>App`alloc::alloc::Global::alloc_impl (37 samples, 0.07%)</title><rect x="26.9694%" y="805" width="0.0710%" height="15" fill="rgb(240,73,43)" fg:x="14057" fg:w="37"/><text x="27.2194%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.05%)</title><rect x="26.9867%" y="789" width="0.0537%" height="15" fill="rgb(214,114,15)" fg:x="14066" fg:w="28"/><text x="27.2367%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.04%)</title><rect x="26.9982%" y="773" width="0.0422%" height="15" fill="rgb(207,130,4)" fg:x="14072" fg:w="22"/><text x="27.2482%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (20 samples, 0.04%)</title><rect x="27.0020%" y="757" width="0.0384%" height="15" fill="rgb(221,25,40)" fg:x="14074" fg:w="20"/><text x="27.2520%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (10 samples, 0.02%)</title><rect x="27.0212%" y="741" width="0.0192%" height="15" fill="rgb(241,184,7)" fg:x="14084" fg:w="10"/><text x="27.2712%" y="751.50"></text></g><g><title>App`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (38 samples, 0.07%)</title><rect x="26.9694%" y="821" width="0.0729%" height="15" fill="rgb(235,159,4)" fg:x="14057" fg:w="38"/><text x="27.2194%" y="831.50"></text></g><g><title>App`alloc::vec::Vec&lt;T&gt;::with_capacity (47 samples, 0.09%)</title><rect x="26.9617%" y="853" width="0.0902%" height="15" fill="rgb(214,87,48)" fg:x="14053" fg:w="47"/><text x="27.2117%" y="863.50"></text></g><g><title>App`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (46 samples, 0.09%)</title><rect x="26.9637%" y="837" width="0.0883%" height="15" fill="rgb(246,198,24)" fg:x="14054" fg:w="46"/><text x="27.2137%" y="847.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (15 samples, 0.03%)</title><rect x="27.0577%" y="837" width="0.0288%" height="15" fill="rgb(209,66,40)" fg:x="14103" fg:w="15"/><text x="27.3077%" y="847.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (121 samples, 0.23%)</title><rect x="26.8562%" y="869" width="0.2321%" height="15" fill="rgb(233,147,39)" fg:x="13998" fg:w="121"/><text x="27.1062%" y="879.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (19 samples, 0.04%)</title><rect x="27.0519%" y="853" width="0.0365%" height="15" fill="rgb(231,145,52)" fg:x="14100" fg:w="19"/><text x="27.3019%" y="863.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::rook_score (9 samples, 0.02%)</title><rect x="27.1018%" y="853" width="0.0173%" height="15" fill="rgb(206,20,26)" fg:x="14126" fg:w="9"/><text x="27.3518%" y="863.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::evaluate (16 samples, 0.03%)</title><rect x="27.0941%" y="869" width="0.0307%" height="15" fill="rgb(238,220,4)" fg:x="14122" fg:w="16"/><text x="27.3441%" y="879.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::target (8 samples, 0.02%)</title><rect x="27.9325%" y="853" width="0.0153%" height="15" fill="rgb(252,195,42)" fg:x="14559" fg:w="8"/><text x="28.1825%" y="863.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::bishop_placement_score (24 samples, 0.05%)</title><rect x="27.9479%" y="853" width="0.0460%" height="15" fill="rgb(209,10,6)" fg:x="14567" fg:w="24"/><text x="28.1979%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::piece_bb (15 samples, 0.03%)</title><rect x="28.3604%" y="837" width="0.0288%" height="15" fill="rgb(229,3,52)" fg:x="14782" fg:w="15"/><text x="28.6104%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="28.3661%" y="821" width="0.0230%" height="15" fill="rgb(253,49,37)" fg:x="14785" fg:w="12"/><text x="28.6161%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (25 samples, 0.05%)</title><rect x="28.3968%" y="837" width="0.0480%" height="15" fill="rgb(240,103,49)" fg:x="14801" fg:w="25"/><text x="28.6468%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (32 samples, 0.06%)</title><rect x="28.4448%" y="837" width="0.0614%" height="15" fill="rgb(250,182,30)" fg:x="14826" fg:w="32"/><text x="28.6948%" y="847.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::is_check (304 samples, 0.58%)</title><rect x="27.9939%" y="853" width="0.5832%" height="15" fill="rgb(248,8,30)" fg:x="14591" fg:w="304"/><text x="28.2439%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (33 samples, 0.06%)</title><rect x="28.5139%" y="837" width="0.0633%" height="15" fill="rgb(237,120,30)" fg:x="14862" fg:w="33"/><text x="28.7639%" y="847.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::pawn_placement_score (13 samples, 0.02%)</title><rect x="28.5868%" y="853" width="0.0249%" height="15" fill="rgb(221,146,34)" fg:x="14900" fg:w="13"/><text x="28.8368%" y="863.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.02%)</title><rect x="28.9321%" y="837" width="0.0173%" height="15" fill="rgb(242,55,13)" fg:x="15080" fg:w="9"/><text x="29.1821%" y="847.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (81 samples, 0.16%)</title><rect x="28.9762%" y="821" width="0.1554%" height="15" fill="rgb(242,112,31)" fg:x="15103" fg:w="81"/><text x="29.2262%" y="831.50"></text></g><g><title>App`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (9 samples, 0.02%)</title><rect x="29.1144%" y="805" width="0.0173%" height="15" fill="rgb(249,192,27)" fg:x="15175" fg:w="9"/><text x="29.3644%" y="815.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (98 samples, 0.19%)</title><rect x="28.9494%" y="837" width="0.1880%" height="15" fill="rgb(208,204,44)" fg:x="15089" fg:w="98"/><text x="29.1994%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (17 samples, 0.03%)</title><rect x="29.1374%" y="837" width="0.0326%" height="15" fill="rgb(208,93,54)" fg:x="15187" fg:w="17"/><text x="29.3874%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="29.1700%" y="837" width="0.0230%" height="15" fill="rgb(242,1,31)" fg:x="15204" fg:w="12"/><text x="29.4200%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::board_state_numbers (310 samples, 0.59%)</title><rect x="28.6117%" y="853" width="0.5948%" height="15" fill="rgb(241,83,25)" fg:x="14913" fg:w="310"/><text x="28.8617%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="29.1930%" y="837" width="0.0134%" height="15" fill="rgb(205,169,50)" fg:x="15216" fg:w="7"/><text x="29.4430%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::white_to_move (6 samples, 0.01%)</title><rect x="29.2084%" y="853" width="0.0115%" height="15" fill="rgb(239,186,37)" fg:x="15224" fg:w="6"/><text x="29.4584%" y="863.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (6 samples, 0.01%)</title><rect x="29.2257%" y="853" width="0.0115%" height="15" fill="rgb(205,221,10)" fg:x="15233" fg:w="6"/><text x="29.4757%" y="863.50"></text></g><g><title>App`&lt;App::game_manager::board2::ChessMove as core::hash::Hash&gt;::hash (38 samples, 0.07%)</title><rect x="29.3523%" y="773" width="0.0729%" height="15" fill="rgb(218,196,15)" fg:x="15299" fg:w="38"/><text x="29.6023%" y="783.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u16&gt;::hash (33 samples, 0.06%)</title><rect x="29.3619%" y="757" width="0.0633%" height="15" fill="rgb(218,196,35)" fg:x="15304" fg:w="33"/><text x="29.6119%" y="767.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u16 (22 samples, 0.04%)</title><rect x="29.3830%" y="741" width="0.0422%" height="15" fill="rgb(233,63,24)" fg:x="15315" fg:w="22"/><text x="29.6330%" y="751.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (15 samples, 0.03%)</title><rect x="29.3964%" y="725" width="0.0288%" height="15" fill="rgb(225,8,4)" fg:x="15322" fg:w="15"/><text x="29.6464%" y="735.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_usize (68 samples, 0.13%)</title><rect x="29.5230%" y="709" width="0.1305%" height="15" fill="rgb(234,105,35)" fg:x="15388" fg:w="68"/><text x="29.7730%" y="719.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (56 samples, 0.11%)</title><rect x="29.5461%" y="693" width="0.1074%" height="15" fill="rgb(236,21,32)" fg:x="15400" fg:w="56"/><text x="29.7961%" y="703.50"></text></g><g><title>App`core::hash::Hasher::write_length_prefix (83 samples, 0.16%)</title><rect x="29.5058%" y="725" width="0.1592%" height="15" fill="rgb(228,109,6)" fg:x="15379" fg:w="83"/><text x="29.7558%" y="735.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (6 samples, 0.01%)</title><rect x="29.6535%" y="709" width="0.0115%" height="15" fill="rgb(229,215,31)" fg:x="15456" fg:w="6"/><text x="29.9035%" y="719.50"></text></g><g><title>App`fxhash::write (7 samples, 0.01%)</title><rect x="29.7130%" y="693" width="0.0134%" height="15" fill="rgb(221,52,54)" fg:x="15487" fg:w="7"/><text x="29.9630%" y="703.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (12 samples, 0.02%)</title><rect x="29.7322%" y="677" width="0.0230%" height="15" fill="rgb(252,129,43)" fg:x="15497" fg:w="12"/><text x="29.9822%" y="687.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (10 samples, 0.02%)</title><rect x="29.7571%" y="677" width="0.0192%" height="15" fill="rgb(248,183,27)" fg:x="15510" fg:w="10"/><text x="30.0071%" y="687.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (7 samples, 0.01%)</title><rect x="29.7763%" y="677" width="0.0134%" height="15" fill="rgb(250,0,22)" fg:x="15520" fg:w="7"/><text x="30.0263%" y="687.50"></text></g><g><title>App`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (7 samples, 0.01%)</title><rect x="29.7897%" y="677" width="0.0134%" height="15" fill="rgb(213,166,10)" fg:x="15527" fg:w="7"/><text x="30.0397%" y="687.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (10 samples, 0.02%)</title><rect x="30.1274%" y="661" width="0.0192%" height="15" fill="rgb(207,163,36)" fg:x="15703" fg:w="10"/><text x="30.3774%" y="671.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (6 samples, 0.01%)</title><rect x="30.5054%" y="597" width="0.0115%" height="15" fill="rgb(208,122,22)" fg:x="15900" fg:w="6"/><text x="30.7554%" y="607.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (6 samples, 0.01%)</title><rect x="30.5054%" y="581" width="0.0115%" height="15" fill="rgb(207,104,49)" fg:x="15900" fg:w="6"/><text x="30.7554%" y="591.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (350 samples, 0.67%)</title><rect x="30.3845%" y="629" width="0.6715%" height="15" fill="rgb(248,211,50)" fg:x="15837" fg:w="350"/><text x="30.6345%" y="639.50"></text></g><g><title> N]&gt;::try_from (350 samples, 0.67%)</title><rect x="30.3845%" y="613" width="0.6715%" height="15" fill="rgb(217,13,45)" fg:x="15837" fg:w="350"/><text x="30.6345%" y="623.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (281 samples, 0.54%)</title><rect x="30.5169%" y="597" width="0.5391%" height="15" fill="rgb(211,216,49)" fg:x="15906" fg:w="281"/><text x="30.7669%" y="607.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (79 samples, 0.15%)</title><rect x="30.9044%" y="581" width="0.1516%" height="15" fill="rgb(221,58,53)" fg:x="16108" fg:w="79"/><text x="31.1544%" y="591.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (79 samples, 0.15%)</title><rect x="30.9044%" y="565" width="0.1516%" height="15" fill="rgb(220,112,41)" fg:x="16108" fg:w="79"/><text x="31.1544%" y="575.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (381 samples, 0.73%)</title><rect x="30.3461%" y="645" width="0.7310%" height="15" fill="rgb(236,38,28)" fg:x="15817" fg:w="381"/><text x="30.5961%" y="655.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (11 samples, 0.02%)</title><rect x="31.0560%" y="629" width="0.0211%" height="15" fill="rgb(227,195,22)" fg:x="16187" fg:w="11"/><text x="31.3060%" y="639.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.02%)</title><rect x="31.0771%" y="645" width="0.0192%" height="15" fill="rgb(214,55,33)" fg:x="16198" fg:w="10"/><text x="31.3271%" y="655.50"></text></g><g><title>App`core::num::_&lt;impl u64&gt;::from_le_bytes (89 samples, 0.17%)</title><rect x="31.1059%" y="645" width="0.1708%" height="15" fill="rgb(248,80,13)" fg:x="16213" fg:w="89"/><text x="31.3559%" y="655.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::unwrap (37 samples, 0.07%)</title><rect x="31.2766%" y="645" width="0.0710%" height="15" fill="rgb(238,52,6)" fg:x="16302" fg:w="37"/><text x="31.5266%" y="655.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (9 samples, 0.02%)</title><rect x="31.4186%" y="629" width="0.0173%" height="15" fill="rgb(224,198,47)" fg:x="16376" fg:w="9"/><text x="31.6686%" y="639.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (910 samples, 1.75%)</title><rect x="30.1466%" y="661" width="1.7459%" height="15" fill="rgb(233,171,20)" fg:x="15713" fg:w="910"/><text x="30.3966%" y="671.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (284 samples, 0.54%)</title><rect x="31.3476%" y="645" width="0.5449%" height="15" fill="rgb(241,30,25)" fg:x="16339" fg:w="284"/><text x="31.5976%" y="655.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (238 samples, 0.46%)</title><rect x="31.4359%" y="629" width="0.4566%" height="15" fill="rgb(207,171,38)" fg:x="16385" fg:w="238"/><text x="31.6859%" y="639.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (185 samples, 0.35%)</title><rect x="31.5375%" y="613" width="0.3549%" height="15" fill="rgb(234,70,1)" fg:x="16438" fg:w="185"/><text x="31.7875%" y="623.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.05%)</title><rect x="31.8925%" y="661" width="0.0537%" height="15" fill="rgb(232,178,18)" fg:x="16623" fg:w="28"/><text x="32.1425%" y="671.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (109 samples, 0.21%)</title><rect x="31.9462%" y="661" width="0.2091%" height="15" fill="rgb(241,78,40)" fg:x="16651" fg:w="109"/><text x="32.1962%" y="671.50"></text></g><g><title>App`&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (18 samples, 0.03%)</title><rect x="32.1208%" y="645" width="0.0345%" height="15" fill="rgb(222,35,25)" fg:x="16742" fg:w="18"/><text x="32.3708%" y="655.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::unwrap (10 samples, 0.02%)</title><rect x="32.1592%" y="661" width="0.0192%" height="15" fill="rgb(207,92,16)" fg:x="16762" fg:w="10"/><text x="32.4092%" y="671.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (167 samples, 0.32%)</title><rect x="32.1784%" y="661" width="0.3204%" height="15" fill="rgb(216,59,51)" fg:x="16772" fg:w="167"/><text x="32.4284%" y="671.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (9 samples, 0.02%)</title><rect x="32.4988%" y="661" width="0.0173%" height="15" fill="rgb(213,80,28)" fg:x="16939" fg:w="9"/><text x="32.7488%" y="671.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (1,504 samples, 2.89%)</title><rect x="29.6996%" y="709" width="2.8855%" height="15" fill="rgb(220,93,7)" fg:x="15480" fg:w="1504"/><text x="29.9496%" y="719.50">Ap..</text></g><g><title>App`fxhash::write (1,487 samples, 2.85%)</title><rect x="29.7322%" y="693" width="2.8529%" height="15" fill="rgb(225,24,44)" fg:x="15497" fg:w="1487"/><text x="29.9822%" y="703.50">Ap..</text></g><g><title>App`fxhash::write64 (1,450 samples, 2.78%)</title><rect x="29.8032%" y="677" width="2.7819%" height="15" fill="rgb(243,74,40)" fg:x="15534" fg:w="1450"/><text x="30.0532%" y="687.50">Ap..</text></g><g><title>App`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (36 samples, 0.07%)</title><rect x="32.5160%" y="661" width="0.0691%" height="15" fill="rgb(228,39,7)" fg:x="16948" fg:w="36"/><text x="32.7660%" y="671.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (1,637 samples, 3.14%)</title><rect x="29.4501%" y="757" width="3.1407%" height="15" fill="rgb(227,79,8)" fg:x="15350" fg:w="1637"/><text x="29.7001%" y="767.50">App..</text></g><g><title> N]&gt;::hash (1,637 samples, 3.14%)</title><rect x="29.4501%" y="741" width="3.1407%" height="15" fill="rgb(236,58,11)" fg:x="15350" fg:w="1637"/><text x="29.7001%" y="751.50"> N]..</text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (1,525 samples, 2.93%)</title><rect x="29.6650%" y="725" width="2.9258%" height="15" fill="rgb(249,63,35)" fg:x="15462" fg:w="1525"/><text x="29.9150%" y="735.50">Ap..</text></g><g><title>App`core::hash::Hasher::write_length_prefix (7 samples, 0.01%)</title><rect x="32.5908%" y="757" width="0.0134%" height="15" fill="rgb(252,114,16)" fg:x="16987" fg:w="7"/><text x="32.8408%" y="767.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (1,685 samples, 3.23%)</title><rect x="29.4252%" y="773" width="3.2328%" height="15" fill="rgb(254,151,24)" fg:x="15337" fg:w="1685"/><text x="29.6752%" y="783.50">App..</text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash (26 samples, 0.05%)</title><rect x="32.6081%" y="757" width="0.0499%" height="15" fill="rgb(253,54,39)" fg:x="16996" fg:w="26"/><text x="32.8581%" y="767.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u8 (22 samples, 0.04%)</title><rect x="32.6158%" y="741" width="0.0422%" height="15" fill="rgb(243,25,45)" fg:x="17000" fg:w="22"/><text x="32.8658%" y="751.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (17 samples, 0.03%)</title><rect x="32.6254%" y="725" width="0.0326%" height="15" fill="rgb(234,134,9)" fg:x="17005" fg:w="17"/><text x="32.8754%" y="735.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (6 samples, 0.01%)</title><rect x="32.6580%" y="773" width="0.0115%" height="15" fill="rgb(227,166,31)" fg:x="17022" fg:w="6"/><text x="32.9080%" y="783.50"></text></g><g><title> N]&gt;::hash (6 samples, 0.01%)</title><rect x="32.6580%" y="757" width="0.0115%" height="15" fill="rgb(245,143,41)" fg:x="17022" fg:w="6"/><text x="32.9080%" y="767.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (1,768 samples, 3.39%)</title><rect x="29.2813%" y="821" width="3.3920%" height="15" fill="rgb(238,181,32)" fg:x="15262" fg:w="1768"/><text x="29.5313%" y="831.50">App..</text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (1,743 samples, 3.34%)</title><rect x="29.3293%" y="805" width="3.3441%" height="15" fill="rgb(224,113,18)" fg:x="15287" fg:w="1743"/><text x="29.5793%" y="815.50">App..</text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (1,736 samples, 3.33%)</title><rect x="29.3427%" y="789" width="3.3306%" height="15" fill="rgb(240,229,28)" fg:x="15294" fg:w="1736"/><text x="29.5927%" y="799.50">App..</text></g><g><title>App`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.03%)</title><rect x="32.8556%" y="789" width="0.0326%" height="15" fill="rgb(250,185,3)" fg:x="17125" fg:w="17"/><text x="33.1056%" y="799.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_loadu_si128 (241 samples, 0.46%)</title><rect x="32.8978%" y="789" width="0.4624%" height="15" fill="rgb(212,59,25)" fg:x="17147" fg:w="241"/><text x="33.1478%" y="799.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (50 samples, 0.10%)</title><rect x="33.3813%" y="661" width="0.0959%" height="15" fill="rgb(221,87,20)" fg:x="17399" fg:w="50"/><text x="33.6313%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (49 samples, 0.09%)</title><rect x="33.3832%" y="645" width="0.0940%" height="15" fill="rgb(213,74,28)" fg:x="17400" fg:w="49"/><text x="33.6332%" y="655.50"></text></g><g><title>App`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (56 samples, 0.11%)</title><rect x="33.3775%" y="757" width="0.1074%" height="15" fill="rgb(224,132,34)" fg:x="17397" fg:w="56"/><text x="33.6275%" y="767.50"></text></g><g><title>App`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (54 samples, 0.10%)</title><rect x="33.3813%" y="741" width="0.1036%" height="15" fill="rgb(222,101,24)" fg:x="17399" fg:w="54"/><text x="33.6313%" y="751.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (54 samples, 0.10%)</title><rect x="33.3813%" y="725" width="0.1036%" height="15" fill="rgb(254,142,4)" fg:x="17399" fg:w="54"/><text x="33.6313%" y="735.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (54 samples, 0.10%)</title><rect x="33.3813%" y="709" width="0.1036%" height="15" fill="rgb(230,229,49)" fg:x="17399" fg:w="54"/><text x="33.6313%" y="719.50"></text></g><g><title> N]&gt; for [A (54 samples, 0.10%)</title><rect x="33.3813%" y="693" width="0.1036%" height="15" fill="rgb(238,70,47)" fg:x="17399" fg:w="54"/><text x="33.6313%" y="703.50"></text></g><g><title> N]&gt;::eq (54 samples, 0.10%)</title><rect x="33.3813%" y="677" width="0.1036%" height="15" fill="rgb(231,160,17)" fg:x="17399" fg:w="54"/><text x="33.6313%" y="687.50"></text></g><g><title>App`hashbrown::map::equivalent_key::_{{closure}} (57 samples, 0.11%)</title><rect x="33.3775%" y="773" width="0.1094%" height="15" fill="rgb(218,68,53)" fg:x="17397" fg:w="57"/><text x="33.6275%" y="783.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (63 samples, 0.12%)</title><rect x="33.3698%" y="789" width="0.1209%" height="15" fill="rgb(236,111,10)" fg:x="17393" fg:w="63"/><text x="33.6198%" y="799.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (22 samples, 0.04%)</title><rect x="33.5770%" y="773" width="0.0422%" height="15" fill="rgb(224,34,41)" fg:x="17501" fg:w="22"/><text x="33.8270%" y="783.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_movemask_epi8 (103 samples, 0.20%)</title><rect x="33.6192%" y="773" width="0.1976%" height="15" fill="rgb(241,118,19)" fg:x="17523" fg:w="103"/><text x="33.8692%" y="783.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find (669 samples, 1.28%)</title><rect x="32.6925%" y="805" width="1.2835%" height="15" fill="rgb(238,129,25)" fg:x="17040" fg:w="669"/><text x="32.9425%" y="815.50"></text></g><g><title>App`hashbrown::raw::sse2::Group::match_byte (253 samples, 0.49%)</title><rect x="33.4907%" y="789" width="0.4854%" height="15" fill="rgb(238,22,31)" fg:x="17456" fg:w="253"/><text x="33.7407%" y="799.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_set1_epi8 (83 samples, 0.16%)</title><rect x="33.8168%" y="773" width="0.1592%" height="15" fill="rgb(222,174,48)" fg:x="17626" fg:w="83"/><text x="34.0668%" y="783.50"></text></g><g><title>App`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2,469 samples, 4.74%)</title><rect x="29.2410%" y="853" width="4.7370%" height="15" fill="rgb(206,152,40)" fg:x="15241" fg:w="2469"/><text x="29.4910%" y="863.50">App`st..</text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2,461 samples, 4.72%)</title><rect x="29.2564%" y="837" width="4.7216%" height="15" fill="rgb(218,99,54)" fg:x="15249" fg:w="2461"/><text x="29.5064%" y="847.50">App`ha..</text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::get (677 samples, 1.30%)</title><rect x="32.6791%" y="821" width="1.2989%" height="15" fill="rgb(220,174,26)" fg:x="17033" fg:w="677"/><text x="32.9291%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (43 samples, 0.08%)</title><rect x="33.9895%" y="853" width="0.0825%" height="15" fill="rgb(245,116,9)" fg:x="17716" fg:w="43"/><text x="34.2395%" y="863.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (3,616 samples, 6.94%)</title><rect x="27.1363%" y="869" width="6.9376%" height="15" fill="rgb(209,72,35)" fg:x="14144" fg:w="3616"/><text x="27.3863%" y="879.50">App`App::..</text></g><g><title>App`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.03%)</title><rect x="34.5842%" y="853" width="0.0345%" height="15" fill="rgb(226,126,21)" fg:x="18026" fg:w="18"/><text x="34.8342%" y="863.50"></text></g><g><title>App`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (57 samples, 0.11%)</title><rect x="34.6207%" y="853" width="0.1094%" height="15" fill="rgb(227,192,1)" fg:x="18045" fg:w="57"/><text x="34.8707%" y="863.50"></text></g><g><title>App`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (22 samples, 0.04%)</title><rect x="34.6878%" y="837" width="0.0422%" height="15" fill="rgb(237,180,29)" fg:x="18080" fg:w="22"/><text x="34.9378%" y="847.50"></text></g><g><title>App`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.06%)</title><rect x="34.7301%" y="853" width="0.0614%" height="15" fill="rgb(230,197,35)" fg:x="18102" fg:w="32"/><text x="34.9801%" y="863.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (57 samples, 0.11%)</title><rect x="35.1656%" y="693" width="0.1094%" height="15" fill="rgb(246,193,31)" fg:x="18329" fg:w="57"/><text x="35.4156%" y="703.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (37 samples, 0.07%)</title><rect x="35.2039%" y="677" width="0.0710%" height="15" fill="rgb(241,36,4)" fg:x="18349" fg:w="37"/><text x="35.4539%" y="687.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (95 samples, 0.18%)</title><rect x="35.1099%" y="757" width="0.1823%" height="15" fill="rgb(241,130,17)" fg:x="18300" fg:w="95"/><text x="35.3599%" y="767.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (76 samples, 0.15%)</title><rect x="35.1464%" y="741" width="0.1458%" height="15" fill="rgb(206,137,32)" fg:x="18319" fg:w="76"/><text x="35.3964%" y="751.50"></text></g><g><title> N]&gt; for [A (76 samples, 0.15%)</title><rect x="35.1464%" y="725" width="0.1458%" height="15" fill="rgb(237,228,51)" fg:x="18319" fg:w="76"/><text x="35.3964%" y="735.50"></text></g><g><title> N]&gt;::eq (76 samples, 0.15%)</title><rect x="35.1464%" y="709" width="0.1458%" height="15" fill="rgb(243,6,42)" fg:x="18319" fg:w="76"/><text x="35.3964%" y="719.50"></text></g><g><title>App`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (144 samples, 0.28%)</title><rect x="35.0274%" y="789" width="0.2763%" height="15" fill="rgb(251,74,28)" fg:x="18257" fg:w="144"/><text x="35.2774%" y="799.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (119 samples, 0.23%)</title><rect x="35.0754%" y="773" width="0.2283%" height="15" fill="rgb(218,20,49)" fg:x="18282" fg:w="119"/><text x="35.3254%" y="783.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (6 samples, 0.01%)</title><rect x="35.2922%" y="757" width="0.0115%" height="15" fill="rgb(238,28,14)" fg:x="18395" fg:w="6"/><text x="35.5422%" y="767.50"></text></g><g><title> N]&gt; for [A (6 samples, 0.01%)</title><rect x="35.2922%" y="741" width="0.0115%" height="15" fill="rgb(229,40,46)" fg:x="18395" fg:w="6"/><text x="35.5422%" y="751.50"></text></g><g><title> N]&gt;::eq (6 samples, 0.01%)</title><rect x="35.2922%" y="725" width="0.0115%" height="15" fill="rgb(244,195,20)" fg:x="18395" fg:w="6"/><text x="35.5422%" y="735.50"></text></g><g><title>App`&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (12 samples, 0.02%)</title><rect x="35.3037%" y="789" width="0.0230%" height="15" fill="rgb(253,56,35)" fg:x="18401" fg:w="12"/><text x="35.5537%" y="799.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (272 samples, 0.52%)</title><rect x="34.8164%" y="821" width="0.5219%" height="15" fill="rgb(210,149,44)" fg:x="18147" fg:w="272"/><text x="35.0664%" y="831.50"></text></g><g><title>App`core::iter::adapters::map::map_fold::_{{closure}} (208 samples, 0.40%)</title><rect x="34.9392%" y="805" width="0.3991%" height="15" fill="rgb(240,135,12)" fg:x="18211" fg:w="208"/><text x="35.1892%" y="815.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (6 samples, 0.01%)</title><rect x="35.3267%" y="789" width="0.0115%" height="15" fill="rgb(251,24,50)" fg:x="18413" fg:w="6"/><text x="35.5767%" y="799.50"></text></g><g><title>App`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (278 samples, 0.53%)</title><rect x="34.8106%" y="837" width="0.5334%" height="15" fill="rgb(243,200,47)" fg:x="18144" fg:w="278"/><text x="35.0606%" y="847.50"></text></g><g><title>App`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (289 samples, 0.55%)</title><rect x="34.7934%" y="853" width="0.5545%" height="15" fill="rgb(224,166,26)" fg:x="18135" fg:w="289"/><text x="35.0434%" y="863.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::flag (6 samples, 0.01%)</title><rect x="35.3632%" y="853" width="0.0115%" height="15" fill="rgb(233,0,47)" fg:x="18432" fg:w="6"/><text x="35.6132%" y="863.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::origin (6 samples, 0.01%)</title><rect x="35.3766%" y="853" width="0.0115%" height="15" fill="rgb(253,80,5)" fg:x="18439" fg:w="6"/><text x="35.6266%" y="863.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::target (8 samples, 0.02%)</title><rect x="35.3881%" y="853" width="0.0153%" height="15" fill="rgb(214,133,25)" fg:x="18445" fg:w="8"/><text x="35.6381%" y="863.50"></text></g><g><title>App`alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 0.04%)</title><rect x="35.5013%" y="837" width="0.0441%" height="15" fill="rgb(209,27,14)" fg:x="18504" fg:w="23"/><text x="35.7513%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (38 samples, 0.07%)</title><rect x="35.5896%" y="757" width="0.0729%" height="15" fill="rgb(219,102,51)" fg:x="18550" fg:w="38"/><text x="35.8396%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (37 samples, 0.07%)</title><rect x="35.5915%" y="741" width="0.0710%" height="15" fill="rgb(237,18,16)" fg:x="18551" fg:w="37"/><text x="35.8415%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.04%)</title><rect x="35.6260%" y="725" width="0.0365%" height="15" fill="rgb(241,85,17)" fg:x="18569" fg:w="19"/><text x="35.8760%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (45 samples, 0.09%)</title><rect x="35.5781%" y="773" width="0.0863%" height="15" fill="rgb(236,90,42)" fg:x="18544" fg:w="45"/><text x="35.8281%" y="783.50"></text></g><g><title>App`alloc::alloc::Global::alloc_impl (56 samples, 0.11%)</title><rect x="35.5627%" y="789" width="0.1074%" height="15" fill="rgb(249,57,21)" fg:x="18536" fg:w="56"/><text x="35.8127%" y="799.50"></text></g><g><title>App`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (61 samples, 0.12%)</title><rect x="35.5608%" y="805" width="0.1170%" height="15" fill="rgb(243,12,36)" fg:x="18535" fg:w="61"/><text x="35.8108%" y="815.50"></text></g><g><title>App`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (76 samples, 0.15%)</title><rect x="35.5493%" y="821" width="0.1458%" height="15" fill="rgb(253,128,47)" fg:x="18529" fg:w="76"/><text x="35.7993%" y="831.50"></text></g><g><title>App`alloc::vec::Vec&lt;T&gt;::with_capacity (79 samples, 0.15%)</title><rect x="35.5455%" y="837" width="0.1516%" height="15" fill="rgb(207,33,20)" fg:x="18527" fg:w="79"/><text x="35.7955%" y="847.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (20 samples, 0.04%)</title><rect x="35.7009%" y="821" width="0.0384%" height="15" fill="rgb(233,215,35)" fg:x="18608" fg:w="20"/><text x="35.9509%" y="831.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (179 samples, 0.34%)</title><rect x="35.4035%" y="853" width="0.3434%" height="15" fill="rgb(249,188,52)" fg:x="18453" fg:w="179"/><text x="35.6535%" y="863.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (26 samples, 0.05%)</title><rect x="35.6970%" y="837" width="0.0499%" height="15" fill="rgb(225,12,32)" fg:x="18606" fg:w="26"/><text x="35.9470%" y="847.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::bishop_placement_score (19 samples, 0.04%)</title><rect x="35.8294%" y="837" width="0.0365%" height="15" fill="rgb(247,98,14)" fg:x="18675" fg:w="19"/><text x="36.0794%" y="847.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::knight_placement_score (7 samples, 0.01%)</title><rect x="35.8659%" y="837" width="0.0134%" height="15" fill="rgb(247,219,48)" fg:x="18694" fg:w="7"/><text x="36.1159%" y="847.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::pawn_placement_score (22 samples, 0.04%)</title><rect x="35.8793%" y="837" width="0.0422%" height="15" fill="rgb(253,60,48)" fg:x="18701" fg:w="22"/><text x="36.1293%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (7 samples, 0.01%)</title><rect x="36.0347%" y="821" width="0.0134%" height="15" fill="rgb(245,15,52)" fg:x="18782" fg:w="7"/><text x="36.2847%" y="831.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::rook_score (90 samples, 0.17%)</title><rect x="35.9215%" y="837" width="0.1727%" height="15" fill="rgb(220,133,28)" fg:x="18723" fg:w="90"/><text x="36.1715%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.05%)</title><rect x="36.0481%" y="821" width="0.0460%" height="15" fill="rgb(217,180,4)" fg:x="18789" fg:w="24"/><text x="36.2981%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::piece_count (33 samples, 0.06%)</title><rect x="36.1018%" y="837" width="0.0633%" height="15" fill="rgb(251,24,1)" fg:x="18817" fg:w="33"/><text x="36.3518%" y="847.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::evaluate (228 samples, 0.44%)</title><rect x="35.7584%" y="853" width="0.4374%" height="15" fill="rgb(212,185,49)" fg:x="18638" fg:w="228"/><text x="36.0084%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="36.1824%" y="837" width="0.0134%" height="15" fill="rgb(215,175,22)" fg:x="18859" fg:w="7"/><text x="36.4324%" y="847.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::origin (9 samples, 0.02%)</title><rect x="37.4775%" y="837" width="0.0173%" height="15" fill="rgb(250,205,14)" fg:x="19534" fg:w="9"/><text x="37.7275%" y="847.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::target (15 samples, 0.03%)</title><rect x="37.4966%" y="837" width="0.0288%" height="15" fill="rgb(225,211,22)" fg:x="19544" fg:w="15"/><text x="37.7466%" y="847.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::bishop_placement_score (27 samples, 0.05%)</title><rect x="37.5254%" y="837" width="0.0518%" height="15" fill="rgb(251,179,42)" fg:x="19559" fg:w="27"/><text x="37.7754%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::piece_bb (34 samples, 0.07%)</title><rect x="38.2813%" y="821" width="0.0652%" height="15" fill="rgb(208,216,51)" fg:x="19953" fg:w="34"/><text x="38.5313%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (29 samples, 0.06%)</title><rect x="38.2909%" y="805" width="0.0556%" height="15" fill="rgb(235,36,11)" fg:x="19958" fg:w="29"/><text x="38.5409%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::piece_mask (7 samples, 0.01%)</title><rect x="38.3466%" y="821" width="0.0134%" height="15" fill="rgb(213,189,28)" fg:x="19987" fg:w="7"/><text x="38.5966%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::white_to_move (7 samples, 0.01%)</title><rect x="38.3600%" y="821" width="0.0134%" height="15" fill="rgb(227,203,42)" fg:x="19994" fg:w="7"/><text x="38.6100%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (29 samples, 0.06%)</title><rect x="38.3734%" y="821" width="0.0556%" height="15" fill="rgb(244,72,36)" fg:x="20001" fg:w="29"/><text x="38.6234%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (51 samples, 0.10%)</title><rect x="38.4291%" y="821" width="0.0978%" height="15" fill="rgb(213,53,17)" fg:x="20030" fg:w="51"/><text x="38.6791%" y="831.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::is_check (562 samples, 1.08%)</title><rect x="37.5772%" y="837" width="1.0782%" height="15" fill="rgb(207,167,3)" fg:x="19586" fg:w="562"/><text x="37.8272%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (61 samples, 0.12%)</title><rect x="38.5384%" y="821" width="0.1170%" height="15" fill="rgb(216,98,30)" fg:x="20087" fg:w="61"/><text x="38.7884%" y="831.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::knight_placement_score (7 samples, 0.01%)</title><rect x="38.6555%" y="837" width="0.0134%" height="15" fill="rgb(236,123,15)" fg:x="20148" fg:w="7"/><text x="38.9055%" y="847.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::pawn_placement_score (24 samples, 0.05%)</title><rect x="38.6689%" y="837" width="0.0460%" height="15" fill="rgb(248,81,50)" fg:x="20155" fg:w="24"/><text x="38.9189%" y="847.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (10 samples, 0.02%)</title><rect x="39.3174%" y="821" width="0.0192%" height="15" fill="rgb(214,120,4)" fg:x="20493" fg:w="10"/><text x="39.5674%" y="831.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (135 samples, 0.26%)</title><rect x="39.3884%" y="805" width="0.2590%" height="15" fill="rgb(208,179,34)" fg:x="20530" fg:w="135"/><text x="39.6384%" y="815.50"></text></g><g><title>App`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (10 samples, 0.02%)</title><rect x="39.6282%" y="789" width="0.0192%" height="15" fill="rgb(227,140,7)" fg:x="20655" fg:w="10"/><text x="39.8782%" y="799.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (166 samples, 0.32%)</title><rect x="39.3366%" y="821" width="0.3185%" height="15" fill="rgb(214,22,6)" fg:x="20503" fg:w="166"/><text x="39.5866%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="39.6550%" y="821" width="0.0249%" height="15" fill="rgb(207,137,27)" fg:x="20669" fg:w="13"/><text x="39.9050%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.03%)</title><rect x="39.6800%" y="821" width="0.0307%" height="15" fill="rgb(210,8,46)" fg:x="20682" fg:w="16"/><text x="39.9300%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::board_state_numbers (523 samples, 1.00%)</title><rect x="38.7149%" y="837" width="1.0034%" height="15" fill="rgb(240,16,54)" fg:x="20179" fg:w="523"/><text x="38.9649%" y="847.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (15 samples, 0.03%)</title><rect x="39.7548%" y="837" width="0.0288%" height="15" fill="rgb(211,209,29)" fg:x="20721" fg:w="15"/><text x="40.0048%" y="847.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u16 (21 samples, 0.04%)</title><rect x="39.9927%" y="725" width="0.0403%" height="15" fill="rgb(226,228,24)" fg:x="20845" fg:w="21"/><text x="40.2427%" y="735.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (17 samples, 0.03%)</title><rect x="40.0004%" y="709" width="0.0326%" height="15" fill="rgb(222,84,9)" fg:x="20849" fg:w="17"/><text x="40.2504%" y="719.50"></text></g><g><title>App`&lt;App::game_manager::board2::ChessMove as core::hash::Hash&gt;::hash (36 samples, 0.07%)</title><rect x="39.9658%" y="757" width="0.0691%" height="15" fill="rgb(234,203,30)" fg:x="20831" fg:w="36"/><text x="40.2158%" y="767.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u16&gt;::hash (29 samples, 0.06%)</title><rect x="39.9793%" y="741" width="0.0556%" height="15" fill="rgb(238,109,14)" fg:x="20838" fg:w="29"/><text x="40.2293%" y="751.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_usize (8 samples, 0.02%)</title><rect x="40.1213%" y="709" width="0.0153%" height="15" fill="rgb(233,206,34)" fg:x="20912" fg:w="8"/><text x="40.3713%" y="719.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_usize (74 samples, 0.14%)</title><rect x="40.1577%" y="693" width="0.1420%" height="15" fill="rgb(220,167,47)" fg:x="20931" fg:w="74"/><text x="40.4077%" y="703.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (60 samples, 0.12%)</title><rect x="40.1846%" y="677" width="0.1151%" height="15" fill="rgb(238,105,10)" fg:x="20945" fg:w="60"/><text x="40.4346%" y="687.50"></text></g><g><title>App`&lt;usize as core::ops::bit::BitXor&gt;::bitxor (8 samples, 0.02%)</title><rect x="40.2843%" y="661" width="0.0153%" height="15" fill="rgb(213,227,17)" fg:x="20997" fg:w="8"/><text x="40.5343%" y="671.50"></text></g><g><title>App`core::hash::Hasher::write_length_prefix (89 samples, 0.17%)</title><rect x="40.1366%" y="709" width="0.1708%" height="15" fill="rgb(217,132,38)" fg:x="20920" fg:w="89"/><text x="40.3866%" y="719.50"></text></g><g><title>App`fxhash::write (14 samples, 0.03%)</title><rect x="40.4436%" y="677" width="0.0269%" height="15" fill="rgb(242,146,4)" fg:x="21080" fg:w="14"/><text x="40.6936%" y="687.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (11 samples, 0.02%)</title><rect x="40.4781%" y="661" width="0.0211%" height="15" fill="rgb(212,61,9)" fg:x="21098" fg:w="11"/><text x="40.7281%" y="671.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="40.4992%" y="661" width="0.0115%" height="15" fill="rgb(247,126,22)" fg:x="21109" fg:w="6"/><text x="40.7492%" y="671.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (11 samples, 0.02%)</title><rect x="40.5107%" y="661" width="0.0211%" height="15" fill="rgb(220,196,2)" fg:x="21115" fg:w="11"/><text x="40.7607%" y="671.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (14 samples, 0.03%)</title><rect x="40.5318%" y="661" width="0.0269%" height="15" fill="rgb(208,46,4)" fg:x="21126" fg:w="14"/><text x="40.7818%" y="671.50"></text></g><g><title>App`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (9 samples, 0.02%)</title><rect x="40.5587%" y="661" width="0.0173%" height="15" fill="rgb(252,104,46)" fg:x="21140" fg:w="9"/><text x="40.8087%" y="671.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (18 samples, 0.03%)</title><rect x="41.0614%" y="645" width="0.0345%" height="15" fill="rgb(237,152,48)" fg:x="21402" fg:w="18"/><text x="41.3114%" y="655.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (7 samples, 0.01%)</title><rect x="41.8748%" y="581" width="0.0134%" height="15" fill="rgb(221,59,37)" fg:x="21826" fg:w="7"/><text x="42.1248%" y="591.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (7 samples, 0.01%)</title><rect x="41.8748%" y="565" width="0.0134%" height="15" fill="rgb(209,202,51)" fg:x="21826" fg:w="7"/><text x="42.1248%" y="575.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (596 samples, 1.14%)</title><rect x="41.6350%" y="613" width="1.1435%" height="15" fill="rgb(228,81,30)" fg:x="21701" fg:w="596"/><text x="41.8850%" y="623.50"></text></g><g><title> N]&gt;::try_from (596 samples, 1.14%)</title><rect x="41.6350%" y="597" width="1.1435%" height="15" fill="rgb(227,42,39)" fg:x="21701" fg:w="596"/><text x="41.8850%" y="607.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (464 samples, 0.89%)</title><rect x="41.8883%" y="581" width="0.8902%" height="15" fill="rgb(221,26,2)" fg:x="21833" fg:w="464"/><text x="42.1383%" y="591.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (130 samples, 0.25%)</title><rect x="42.5291%" y="565" width="0.2494%" height="15" fill="rgb(254,61,31)" fg:x="22167" fg:w="130"/><text x="42.7791%" y="575.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (130 samples, 0.25%)</title><rect x="42.5291%" y="549" width="0.2494%" height="15" fill="rgb(222,173,38)" fg:x="22167" fg:w="130"/><text x="42.7791%" y="559.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (672 samples, 1.29%)</title><rect x="41.5448%" y="629" width="1.2893%" height="15" fill="rgb(218,50,12)" fg:x="21654" fg:w="672"/><text x="41.7948%" y="639.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (29 samples, 0.06%)</title><rect x="42.7785%" y="613" width="0.0556%" height="15" fill="rgb(223,88,40)" fg:x="22297" fg:w="29"/><text x="43.0285%" y="623.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (21 samples, 0.04%)</title><rect x="42.8341%" y="629" width="0.0403%" height="15" fill="rgb(237,54,19)" fg:x="22326" fg:w="21"/><text x="43.0841%" y="639.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (16 samples, 0.03%)</title><rect x="42.8744%" y="629" width="0.0307%" height="15" fill="rgb(251,129,25)" fg:x="22347" fg:w="16"/><text x="43.1244%" y="639.50"></text></g><g><title> N]&gt;::try_from (16 samples, 0.03%)</title><rect x="42.8744%" y="613" width="0.0307%" height="15" fill="rgb(238,97,19)" fg:x="22347" fg:w="16"/><text x="43.1244%" y="623.50"></text></g><g><title>App`core::num::_&lt;impl u64&gt;::from_le_bytes (163 samples, 0.31%)</title><rect x="42.9051%" y="629" width="0.3127%" height="15" fill="rgb(240,169,18)" fg:x="22363" fg:w="163"/><text x="43.1551%" y="639.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::unwrap (58 samples, 0.11%)</title><rect x="43.2178%" y="629" width="0.1113%" height="15" fill="rgb(230,187,49)" fg:x="22526" fg:w="58"/><text x="43.4678%" y="639.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (17 samples, 0.03%)</title><rect x="43.4481%" y="613" width="0.0326%" height="15" fill="rgb(209,44,26)" fg:x="22646" fg:w="17"/><text x="43.6981%" y="623.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (1,653 samples, 3.17%)</title><rect x="41.0959%" y="645" width="3.1714%" height="15" fill="rgb(244,0,6)" fg:x="21420" fg:w="1653"/><text x="41.3459%" y="655.50">App..</text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (489 samples, 0.94%)</title><rect x="43.3291%" y="629" width="0.9382%" height="15" fill="rgb(248,18,21)" fg:x="22584" fg:w="489"/><text x="43.5791%" y="639.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (410 samples, 0.79%)</title><rect x="43.4807%" y="613" width="0.7866%" height="15" fill="rgb(245,180,19)" fg:x="22663" fg:w="410"/><text x="43.7307%" y="623.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (329 samples, 0.63%)</title><rect x="43.6361%" y="597" width="0.6312%" height="15" fill="rgb(252,118,36)" fg:x="22744" fg:w="329"/><text x="43.8861%" y="607.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (63 samples, 0.12%)</title><rect x="44.2673%" y="645" width="0.1209%" height="15" fill="rgb(210,224,19)" fg:x="23073" fg:w="63"/><text x="44.5173%" y="655.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (133 samples, 0.26%)</title><rect x="44.3920%" y="645" width="0.2552%" height="15" fill="rgb(218,30,24)" fg:x="23138" fg:w="133"/><text x="44.6420%" y="655.50"></text></g><g><title>App`&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (28 samples, 0.05%)</title><rect x="44.5935%" y="629" width="0.0537%" height="15" fill="rgb(219,75,50)" fg:x="23243" fg:w="28"/><text x="44.8435%" y="639.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::unwrap (15 samples, 0.03%)</title><rect x="44.6568%" y="645" width="0.0288%" height="15" fill="rgb(234,72,50)" fg:x="23276" fg:w="15"/><text x="44.9068%" y="655.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (339 samples, 0.65%)</title><rect x="44.6855%" y="645" width="0.6504%" height="15" fill="rgb(219,100,48)" fg:x="23291" fg:w="339"/><text x="44.9355%" y="655.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (14 samples, 0.03%)</title><rect x="45.3359%" y="645" width="0.0269%" height="15" fill="rgb(253,5,41)" fg:x="23630" fg:w="14"/><text x="45.5859%" y="655.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (2,634 samples, 5.05%)</title><rect x="40.4110%" y="693" width="5.0535%" height="15" fill="rgb(247,181,11)" fg:x="21063" fg:w="2634"/><text x="40.6610%" y="703.50">App`&lt;f..</text></g><g><title>App`fxhash::write (2,599 samples, 4.99%)</title><rect x="40.4781%" y="677" width="4.9864%" height="15" fill="rgb(222,223,25)" fg:x="21098" fg:w="2599"/><text x="40.7281%" y="687.50">App`fx..</text></g><g><title>App`fxhash::write64 (2,548 samples, 4.89%)</title><rect x="40.5760%" y="661" width="4.8885%" height="15" fill="rgb(214,198,28)" fg:x="21149" fg:w="2548"/><text x="40.8260%" y="671.50">App`fx..</text></g><g><title>App`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (53 samples, 0.10%)</title><rect x="45.3628%" y="645" width="0.1017%" height="15" fill="rgb(230,46,43)" fg:x="23644" fg:w="53"/><text x="45.6128%" y="655.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (2,822 samples, 5.41%)</title><rect x="40.0637%" y="741" width="5.4142%" height="15" fill="rgb(233,65,53)" fg:x="20882" fg:w="2822"/><text x="40.3137%" y="751.50">App`cor..</text></g><g><title> N]&gt;::hash (2,822 samples, 5.41%)</title><rect x="40.0637%" y="725" width="5.4142%" height="15" fill="rgb(221,121,27)" fg:x="20882" fg:w="2822"/><text x="40.3137%" y="735.50"> N]&gt;::h..</text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (2,695 samples, 5.17%)</title><rect x="40.3074%" y="709" width="5.1706%" height="15" fill="rgb(247,70,47)" fg:x="21009" fg:w="2695"/><text x="40.5574%" y="719.50">App`co..</text></g><g><title>App`fxhash::write (7 samples, 0.01%)</title><rect x="45.4645%" y="693" width="0.0134%" height="15" fill="rgb(228,85,35)" fg:x="23697" fg:w="7"/><text x="45.7145%" y="703.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (6 samples, 0.01%)</title><rect x="45.4875%" y="741" width="0.0115%" height="15" fill="rgb(209,50,18)" fg:x="23709" fg:w="6"/><text x="45.7375%" y="751.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (2,880 samples, 5.53%)</title><rect x="40.0349%" y="757" width="5.5255%" height="15" fill="rgb(250,19,35)" fg:x="20867" fg:w="2880"/><text x="40.2849%" y="767.50">App`&lt;Ap..</text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash (32 samples, 0.06%)</title><rect x="45.4990%" y="741" width="0.0614%" height="15" fill="rgb(253,107,29)" fg:x="23715" fg:w="32"/><text x="45.7490%" y="751.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u8 (23 samples, 0.04%)</title><rect x="45.5163%" y="725" width="0.0441%" height="15" fill="rgb(252,179,29)" fg:x="23724" fg:w="23"/><text x="45.7663%" y="735.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (20 samples, 0.04%)</title><rect x="45.5220%" y="709" width="0.0384%" height="15" fill="rgb(238,194,6)" fg:x="23727" fg:w="20"/><text x="45.7720%" y="719.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (10 samples, 0.02%)</title><rect x="45.5604%" y="757" width="0.0192%" height="15" fill="rgb(238,164,29)" fg:x="23747" fg:w="10"/><text x="45.8104%" y="767.50"></text></g><g><title> N]&gt;::hash (10 samples, 0.02%)</title><rect x="45.5604%" y="741" width="0.0192%" height="15" fill="rgb(224,25,9)" fg:x="23747" fg:w="10"/><text x="45.8104%" y="751.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,951 samples, 5.66%)</title><rect x="39.9256%" y="789" width="5.6617%" height="15" fill="rgb(244,153,23)" fg:x="20810" fg:w="2951"/><text x="40.1756%" y="799.50">App`cor..</text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (2,938 samples, 5.64%)</title><rect x="39.9505%" y="773" width="5.6368%" height="15" fill="rgb(212,203,14)" fg:x="20823" fg:w="2938"/><text x="40.2005%" y="783.50">App`cor..</text></g><g><title>App`core::hash::BuildHasher::hash_one (2,982 samples, 5.72%)</title><rect x="39.8680%" y="805" width="5.7212%" height="15" fill="rgb(220,164,20)" fg:x="20780" fg:w="2982"/><text x="40.1180%" y="815.50">App`cor..</text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.01%)</title><rect x="45.5930%" y="805" width="0.0115%" height="15" fill="rgb(222,203,48)" fg:x="23764" fg:w="6"/><text x="45.8430%" y="815.50"></text></g><g><title>App`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.07%)</title><rect x="45.9115%" y="773" width="0.0691%" height="15" fill="rgb(215,159,22)" fg:x="23930" fg:w="36"/><text x="46.1615%" y="783.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_loadu_si128 (449 samples, 0.86%)</title><rect x="45.9825%" y="773" width="0.8614%" height="15" fill="rgb(216,183,47)" fg:x="23967" fg:w="449"/><text x="46.2325%" y="783.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_set1_epi8 (6 samples, 0.01%)</title><rect x="46.8478%" y="773" width="0.0115%" height="15" fill="rgb(229,195,25)" fg:x="24418" fg:w="6"/><text x="47.0978%" y="783.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (95 samples, 0.18%)</title><rect x="46.8938%" y="645" width="0.1823%" height="15" fill="rgb(224,132,51)" fg:x="24442" fg:w="95"/><text x="47.1438%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (92 samples, 0.18%)</title><rect x="46.8996%" y="629" width="0.1765%" height="15" fill="rgb(240,63,7)" fg:x="24445" fg:w="92"/><text x="47.1496%" y="639.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (101 samples, 0.19%)</title><rect x="46.8881%" y="709" width="0.1938%" height="15" fill="rgb(249,182,41)" fg:x="24439" fg:w="101"/><text x="47.1381%" y="719.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (100 samples, 0.19%)</title><rect x="46.8900%" y="693" width="0.1919%" height="15" fill="rgb(243,47,26)" fg:x="24440" fg:w="100"/><text x="47.1400%" y="703.50"></text></g><g><title> N]&gt; for [A (100 samples, 0.19%)</title><rect x="46.8900%" y="677" width="0.1919%" height="15" fill="rgb(233,48,2)" fg:x="24440" fg:w="100"/><text x="47.1400%" y="687.50"></text></g><g><title> N]&gt;::eq (100 samples, 0.19%)</title><rect x="46.8900%" y="661" width="0.1919%" height="15" fill="rgb(244,165,34)" fg:x="24440" fg:w="100"/><text x="47.1400%" y="671.50"></text></g><g><title>App`hashbrown::map::equivalent_key::_{{closure}} (111 samples, 0.21%)</title><rect x="46.8708%" y="757" width="0.2130%" height="15" fill="rgb(207,89,7)" fg:x="24430" fg:w="111"/><text x="47.1208%" y="767.50"></text></g><g><title>App`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (111 samples, 0.21%)</title><rect x="46.8708%" y="741" width="0.2130%" height="15" fill="rgb(244,117,36)" fg:x="24430" fg:w="111"/><text x="47.1208%" y="751.50"></text></g><g><title>App`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (108 samples, 0.21%)</title><rect x="46.8766%" y="725" width="0.2072%" height="15" fill="rgb(226,144,34)" fg:x="24433" fg:w="108"/><text x="47.1266%" y="735.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (119 samples, 0.23%)</title><rect x="46.8612%" y="773" width="0.2283%" height="15" fill="rgb(213,23,19)" fg:x="24425" fg:w="119"/><text x="47.1112%" y="783.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (70 samples, 0.13%)</title><rect x="47.2507%" y="757" width="0.1343%" height="15" fill="rgb(217,75,12)" fg:x="24628" fg:w="70"/><text x="47.5007%" y="767.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_movemask_epi8 (169 samples, 0.32%)</title><rect x="47.3850%" y="757" width="0.3242%" height="15" fill="rgb(224,159,17)" fg:x="24698" fg:w="169"/><text x="47.6350%" y="767.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find (1,213 samples, 2.33%)</title><rect x="45.6372%" y="789" width="2.3272%" height="15" fill="rgb(217,118,1)" fg:x="23787" fg:w="1213"/><text x="45.8872%" y="799.50">A..</text></g><g><title>App`hashbrown::raw::sse2::Group::match_byte (456 samples, 0.87%)</title><rect x="47.0895%" y="773" width="0.8749%" height="15" fill="rgb(232,180,48)" fg:x="24544" fg:w="456"/><text x="47.3395%" y="783.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_set1_epi8 (133 samples, 0.26%)</title><rect x="47.7092%" y="757" width="0.2552%" height="15" fill="rgb(230,27,33)" fg:x="24867" fg:w="133"/><text x="47.9592%" y="767.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4,259 samples, 8.17%)</title><rect x="39.8047%" y="821" width="8.1712%" height="15" fill="rgb(205,31,21)" fg:x="20747" fg:w="4259"/><text x="40.0547%" y="831.50">App`hashbro..</text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::get (1,236 samples, 2.37%)</title><rect x="45.6045%" y="805" width="2.3714%" height="15" fill="rgb(253,59,4)" fg:x="23770" fg:w="1236"/><text x="45.8545%" y="815.50">Ap..</text></g><g><title>App`hashbrown::raw::sse2::Group::match_byte (6 samples, 0.01%)</title><rect x="47.9644%" y="789" width="0.0115%" height="15" fill="rgb(224,201,9)" fg:x="25000" fg:w="6"/><text x="48.2144%" y="799.50"></text></g><g><title>App`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4,268 samples, 8.19%)</title><rect x="39.7913%" y="837" width="8.1885%" height="15" fill="rgb(229,206,30)" fg:x="20740" fg:w="4268"/><text x="40.0413%" y="847.50">App`std::co..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (53 samples, 0.10%)</title><rect x="47.9951%" y="837" width="0.1017%" height="15" fill="rgb(212,67,47)" fg:x="25016" fg:w="53"/><text x="48.2451%" y="847.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (6,199 samples, 11.89%)</title><rect x="36.2112%" y="853" width="11.8933%" height="15" fill="rgb(211,96,50)" fg:x="18874" fg:w="6199"/><text x="36.4612%" y="863.50">App`App::game_mana..</text></g><g><title>App`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (16 samples, 0.03%)</title><rect x="48.9275%" y="837" width="0.0307%" height="15" fill="rgb(252,114,18)" fg:x="25502" fg:w="16"/><text x="49.1775%" y="847.50"></text></g><g><title>App`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (33 samples, 0.06%)</title><rect x="48.9621%" y="837" width="0.0633%" height="15" fill="rgb(223,58,37)" fg:x="25520" fg:w="33"/><text x="49.2121%" y="847.50"></text></g><g><title>App`&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (11 samples, 0.02%)</title><rect x="49.0043%" y="821" width="0.0211%" height="15" fill="rgb(237,70,4)" fg:x="25542" fg:w="11"/><text x="49.2543%" y="831.50"></text></g><g><title>App`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.10%)</title><rect x="49.0254%" y="837" width="0.1017%" height="15" fill="rgb(244,85,46)" fg:x="25553" fg:w="53"/><text x="49.2754%" y="847.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (84 samples, 0.16%)</title><rect x="49.5050%" y="677" width="0.1612%" height="15" fill="rgb(223,39,52)" fg:x="25803" fg:w="84"/><text x="49.7550%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (49 samples, 0.09%)</title><rect x="49.5722%" y="661" width="0.0940%" height="15" fill="rgb(218,200,14)" fg:x="25838" fg:w="49"/><text x="49.8222%" y="671.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (124 samples, 0.24%)</title><rect x="49.4475%" y="741" width="0.2379%" height="15" fill="rgb(208,171,16)" fg:x="25773" fg:w="124"/><text x="49.6975%" y="751.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (104 samples, 0.20%)</title><rect x="49.4858%" y="725" width="0.1995%" height="15" fill="rgb(234,200,18)" fg:x="25793" fg:w="104"/><text x="49.7358%" y="735.50"></text></g><g><title> N]&gt; for [A (104 samples, 0.20%)</title><rect x="49.4858%" y="709" width="0.1995%" height="15" fill="rgb(228,45,11)" fg:x="25793" fg:w="104"/><text x="49.7358%" y="719.50"></text></g><g><title> N]&gt;::eq (104 samples, 0.20%)</title><rect x="49.4858%" y="693" width="0.1995%" height="15" fill="rgb(237,182,11)" fg:x="25793" fg:w="104"/><text x="49.7358%" y="703.50"></text></g><g><title>App`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (170 samples, 0.33%)</title><rect x="49.3688%" y="773" width="0.3262%" height="15" fill="rgb(241,175,49)" fg:x="25732" fg:w="170"/><text x="49.6188%" y="783.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (145 samples, 0.28%)</title><rect x="49.4168%" y="757" width="0.2782%" height="15" fill="rgb(247,38,35)" fg:x="25757" fg:w="145"/><text x="49.6668%" y="767.50"></text></g><g><title>App`&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (11 samples, 0.02%)</title><rect x="49.6949%" y="773" width="0.0211%" height="15" fill="rgb(228,39,49)" fg:x="25902" fg:w="11"/><text x="49.9449%" y="783.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (296 samples, 0.57%)</title><rect x="49.1501%" y="805" width="0.5679%" height="15" fill="rgb(226,101,26)" fg:x="25618" fg:w="296"/><text x="49.4001%" y="815.50"></text></g><g><title>App`core::iter::adapters::map::map_fold::_{{closure}} (232 samples, 0.45%)</title><rect x="49.2729%" y="789" width="0.4451%" height="15" fill="rgb(206,141,19)" fg:x="25682" fg:w="232"/><text x="49.5229%" y="799.50"></text></g><g><title>App`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (306 samples, 0.59%)</title><rect x="49.1405%" y="821" width="0.5871%" height="15" fill="rgb(211,200,13)" fg:x="25613" fg:w="306"/><text x="49.3905%" y="831.50"></text></g><g><title>App`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (314 samples, 0.60%)</title><rect x="49.1290%" y="837" width="0.6024%" height="15" fill="rgb(241,121,6)" fg:x="25607" fg:w="314"/><text x="49.3790%" y="847.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.02%)</title><rect x="49.7314%" y="837" width="0.0153%" height="15" fill="rgb(234,221,29)" fg:x="25921" fg:w="8"/><text x="49.9814%" y="847.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::flag (8 samples, 0.02%)</title><rect x="49.7525%" y="837" width="0.0153%" height="15" fill="rgb(229,136,5)" fg:x="25932" fg:w="8"/><text x="50.0025%" y="847.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::origin (6 samples, 0.01%)</title><rect x="49.7698%" y="837" width="0.0115%" height="15" fill="rgb(238,36,11)" fg:x="25941" fg:w="6"/><text x="50.0198%" y="847.50"></text></g><g><title>App`alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.03%)</title><rect x="49.8772%" y="821" width="0.0326%" height="15" fill="rgb(251,55,41)" fg:x="25997" fg:w="17"/><text x="50.1272%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (44 samples, 0.08%)</title><rect x="49.9444%" y="757" width="0.0844%" height="15" fill="rgb(242,34,40)" fg:x="26032" fg:w="44"/><text x="50.1944%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (34 samples, 0.07%)</title><rect x="49.9635%" y="741" width="0.0652%" height="15" fill="rgb(215,42,17)" fg:x="26042" fg:w="34"/><text x="50.2135%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (30 samples, 0.06%)</title><rect x="49.9712%" y="725" width="0.0576%" height="15" fill="rgb(207,44,46)" fg:x="26046" fg:w="30"/><text x="50.2212%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (12 samples, 0.02%)</title><rect x="50.0058%" y="709" width="0.0230%" height="15" fill="rgb(211,206,28)" fg:x="26064" fg:w="12"/><text x="50.2558%" y="719.50"></text></g><g><title>App`alloc::alloc::Global::alloc_impl (57 samples, 0.11%)</title><rect x="49.9213%" y="773" width="0.1094%" height="15" fill="rgb(237,167,16)" fg:x="26020" fg:w="57"/><text x="50.1713%" y="783.50"></text></g><g><title>App`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (59 samples, 0.11%)</title><rect x="49.9194%" y="789" width="0.1132%" height="15" fill="rgb(233,66,6)" fg:x="26019" fg:w="59"/><text x="50.1694%" y="799.50"></text></g><g><title>App`alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (70 samples, 0.13%)</title><rect x="49.9098%" y="805" width="0.1343%" height="15" fill="rgb(246,123,29)" fg:x="26014" fg:w="70"/><text x="50.1598%" y="815.50"></text></g><g><title>App`alloc::vec::Vec&lt;T&gt;::with_capacity (71 samples, 0.14%)</title><rect x="49.9098%" y="821" width="0.1362%" height="15" fill="rgb(209,62,40)" fg:x="26014" fg:w="71"/><text x="50.1598%" y="831.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (27 samples, 0.05%)</title><rect x="50.0537%" y="805" width="0.0518%" height="15" fill="rgb(218,4,25)" fg:x="26089" fg:w="27"/><text x="50.3037%" y="815.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (165 samples, 0.32%)</title><rect x="49.7909%" y="837" width="0.3166%" height="15" fill="rgb(253,91,49)" fg:x="25952" fg:w="165"/><text x="50.0409%" y="847.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (32 samples, 0.06%)</title><rect x="50.0460%" y="821" width="0.0614%" height="15" fill="rgb(228,155,29)" fg:x="26085" fg:w="32"/><text x="50.2960%" y="831.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::bishop_placement_score (26 samples, 0.05%)</title><rect x="50.2053%" y="821" width="0.0499%" height="15" fill="rgb(243,57,37)" fg:x="26168" fg:w="26"/><text x="50.4553%" y="831.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::knight_placement_score (7 samples, 0.01%)</title><rect x="50.2552%" y="821" width="0.0134%" height="15" fill="rgb(244,167,17)" fg:x="26194" fg:w="7"/><text x="50.5052%" y="831.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::pawn_placement_score (27 samples, 0.05%)</title><rect x="50.2686%" y="821" width="0.0518%" height="15" fill="rgb(207,181,38)" fg:x="26201" fg:w="27"/><text x="50.5186%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (13 samples, 0.02%)</title><rect x="50.4336%" y="805" width="0.0249%" height="15" fill="rgb(211,8,23)" fg:x="26287" fg:w="13"/><text x="50.6836%" y="815.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::rook_score (103 samples, 0.20%)</title><rect x="50.3204%" y="821" width="0.1976%" height="15" fill="rgb(235,11,44)" fg:x="26228" fg:w="103"/><text x="50.5704%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (31 samples, 0.06%)</title><rect x="50.4585%" y="805" width="0.0595%" height="15" fill="rgb(248,18,52)" fg:x="26300" fg:w="31"/><text x="50.7085%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::piece_count (54 samples, 0.10%)</title><rect x="50.5257%" y="821" width="0.1036%" height="15" fill="rgb(208,4,7)" fg:x="26335" fg:w="54"/><text x="50.7757%" y="831.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (7 samples, 0.01%)</title><rect x="50.6370%" y="821" width="0.0134%" height="15" fill="rgb(240,17,39)" fg:x="26393" fg:w="7"/><text x="50.8870%" y="831.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::evaluate (280 samples, 0.54%)</title><rect x="50.1228%" y="837" width="0.5372%" height="15" fill="rgb(207,170,3)" fg:x="26125" fg:w="280"/><text x="50.3728%" y="847.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::flag (7 samples, 0.01%)</title><rect x="51.9243%" y="821" width="0.0134%" height="15" fill="rgb(236,100,52)" fg:x="27064" fg:w="7"/><text x="52.1743%" y="831.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::target (7 samples, 0.01%)</title><rect x="51.9474%" y="821" width="0.0134%" height="15" fill="rgb(246,78,51)" fg:x="27076" fg:w="7"/><text x="52.1974%" y="831.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::bishop_placement_score (13 samples, 0.02%)</title><rect x="51.9608%" y="821" width="0.0249%" height="15" fill="rgb(211,17,15)" fg:x="27083" fg:w="13"/><text x="52.2108%" y="831.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::target (8 samples, 0.02%)</title><rect x="52.5709%" y="805" width="0.0153%" height="15" fill="rgb(209,59,46)" fg:x="27401" fg:w="8"/><text x="52.8209%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::piece_bb (25 samples, 0.05%)</title><rect x="52.5862%" y="805" width="0.0480%" height="15" fill="rgb(210,92,25)" fg:x="27409" fg:w="25"/><text x="52.8362%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.04%)</title><rect x="52.5958%" y="789" width="0.0384%" height="15" fill="rgb(238,174,52)" fg:x="27414" fg:w="20"/><text x="52.8458%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::white_to_move (6 samples, 0.01%)</title><rect x="52.6380%" y="805" width="0.0115%" height="15" fill="rgb(230,73,7)" fg:x="27436" fg:w="6"/><text x="52.8880%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (31 samples, 0.06%)</title><rect x="52.6496%" y="805" width="0.0595%" height="15" fill="rgb(243,124,40)" fg:x="27442" fg:w="31"/><text x="52.8996%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (56 samples, 0.11%)</title><rect x="52.7090%" y="805" width="0.1074%" height="15" fill="rgb(244,170,11)" fg:x="27473" fg:w="56"/><text x="52.9590%" y="815.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::is_check (494 samples, 0.95%)</title><rect x="51.9857%" y="821" width="0.9478%" height="15" fill="rgb(207,114,54)" fg:x="27096" fg:w="494"/><text x="52.2357%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (58 samples, 0.11%)</title><rect x="52.8222%" y="805" width="0.1113%" height="15" fill="rgb(205,42,20)" fg:x="27532" fg:w="58"/><text x="53.0722%" y="815.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::pawn_placement_score (20 samples, 0.04%)</title><rect x="52.9412%" y="821" width="0.0384%" height="15" fill="rgb(230,30,28)" fg:x="27594" fg:w="20"/><text x="53.1912%" y="831.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13 samples, 0.02%)</title><rect x="53.5609%" y="805" width="0.0249%" height="15" fill="rgb(205,73,54)" fg:x="27917" fg:w="13"/><text x="53.8109%" y="815.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (119 samples, 0.23%)</title><rect x="53.6472%" y="789" width="0.2283%" height="15" fill="rgb(254,227,23)" fg:x="27962" fg:w="119"/><text x="53.8972%" y="799.50"></text></g><g><title>App`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (14 samples, 0.03%)</title><rect x="53.8487%" y="773" width="0.0269%" height="15" fill="rgb(228,202,34)" fg:x="28067" fg:w="14"/><text x="54.0987%" y="783.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (155 samples, 0.30%)</title><rect x="53.5858%" y="805" width="0.2974%" height="15" fill="rgb(222,225,37)" fg:x="27930" fg:w="155"/><text x="53.8358%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (8 samples, 0.02%)</title><rect x="53.8832%" y="805" width="0.0153%" height="15" fill="rgb(221,14,54)" fg:x="28085" fg:w="8"/><text x="54.1332%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.04%)</title><rect x="53.8985%" y="805" width="0.0441%" height="15" fill="rgb(254,102,2)" fg:x="28093" fg:w="23"/><text x="54.1485%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::board_state_numbers (509 samples, 0.98%)</title><rect x="52.9795%" y="821" width="0.9766%" height="15" fill="rgb(232,104,17)" fg:x="27614" fg:w="509"/><text x="53.2295%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="53.9427%" y="805" width="0.0134%" height="15" fill="rgb(250,220,14)" fg:x="28116" fg:w="7"/><text x="54.1927%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::piece_mask (7 samples, 0.01%)</title><rect x="53.9599%" y="821" width="0.0134%" height="15" fill="rgb(241,158,9)" fg:x="28125" fg:w="7"/><text x="54.2099%" y="831.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (12 samples, 0.02%)</title><rect x="54.0002%" y="821" width="0.0230%" height="15" fill="rgb(246,9,43)" fg:x="28146" fg:w="12"/><text x="54.2502%" y="831.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="54.0386%" y="805" width="0.0134%" height="15" fill="rgb(206,73,33)" fg:x="28166" fg:w="7"/><text x="54.2886%" y="815.50"></text></g><g><title>App`&lt;core::hash::BuildHasherDefault&lt;H&gt; as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.01%)</title><rect x="54.0962%" y="789" width="0.0115%" height="15" fill="rgb(222,79,8)" fg:x="28196" fg:w="6"/><text x="54.3462%" y="799.50"></text></g><g><title>App`&lt;core::hash::BuildHasherDefault&lt;H&gt; as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.01%)</title><rect x="54.1614%" y="773" width="0.0115%" height="15" fill="rgb(234,8,54)" fg:x="28230" fg:w="6"/><text x="54.4114%" y="783.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u16 (6 samples, 0.01%)</title><rect x="54.2247%" y="725" width="0.0115%" height="15" fill="rgb(209,134,38)" fg:x="28263" fg:w="6"/><text x="54.4747%" y="735.50"></text></g><g><title>App`&lt;App::game_manager::board2::ChessMove as core::hash::Hash&gt;::hash (40 samples, 0.08%)</title><rect x="54.2170%" y="741" width="0.0767%" height="15" fill="rgb(230,127,29)" fg:x="28259" fg:w="40"/><text x="54.4670%" y="751.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u16&gt;::hash (30 samples, 0.06%)</title><rect x="54.2362%" y="725" width="0.0576%" height="15" fill="rgb(242,44,41)" fg:x="28269" fg:w="30"/><text x="54.4862%" y="735.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u16 (25 samples, 0.05%)</title><rect x="54.2458%" y="709" width="0.0480%" height="15" fill="rgb(222,56,43)" fg:x="28274" fg:w="25"/><text x="54.4958%" y="719.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (23 samples, 0.04%)</title><rect x="54.2496%" y="693" width="0.0441%" height="15" fill="rgb(238,39,47)" fg:x="28276" fg:w="23"/><text x="54.4996%" y="703.50"></text></g><g><title>App`&lt;usize as core::ops::bit::BitXor&gt;::bitxor (8 samples, 0.02%)</title><rect x="54.2784%" y="677" width="0.0153%" height="15" fill="rgb(226,79,43)" fg:x="28291" fg:w="8"/><text x="54.5284%" y="687.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="54.3955%" y="693" width="0.0115%" height="15" fill="rgb(242,105,53)" fg:x="28352" fg:w="6"/><text x="54.6455%" y="703.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_usize (6 samples, 0.01%)</title><rect x="54.4070%" y="693" width="0.0115%" height="15" fill="rgb(251,132,46)" fg:x="28358" fg:w="6"/><text x="54.6570%" y="703.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_usize (74 samples, 0.14%)</title><rect x="54.4262%" y="677" width="0.1420%" height="15" fill="rgb(231,77,14)" fg:x="28368" fg:w="74"/><text x="54.6762%" y="687.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (61 samples, 0.12%)</title><rect x="54.4511%" y="661" width="0.1170%" height="15" fill="rgb(240,135,9)" fg:x="28381" fg:w="61"/><text x="54.7011%" y="671.50"></text></g><g><title>App`&lt;usize as core::ops::bit::BitXor&gt;::bitxor (9 samples, 0.02%)</title><rect x="54.5509%" y="645" width="0.0173%" height="15" fill="rgb(248,109,14)" fg:x="28433" fg:w="9"/><text x="54.8009%" y="655.50"></text></g><g><title>App`core::hash::Hasher::write_length_prefix (84 samples, 0.16%)</title><rect x="54.4185%" y="693" width="0.1612%" height="15" fill="rgb(227,146,52)" fg:x="28364" fg:w="84"/><text x="54.6685%" y="703.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (6 samples, 0.01%)</title><rect x="54.5681%" y="677" width="0.0115%" height="15" fill="rgb(232,54,3)" fg:x="28442" fg:w="6"/><text x="54.8181%" y="687.50"></text></g><g><title>App`fxhash::write (12 samples, 0.02%)</title><rect x="54.6967%" y="661" width="0.0230%" height="15" fill="rgb(229,201,43)" fg:x="28509" fg:w="12"/><text x="54.9467%" y="671.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (16 samples, 0.03%)</title><rect x="54.7255%" y="645" width="0.0307%" height="15" fill="rgb(252,161,33)" fg:x="28524" fg:w="16"/><text x="54.9755%" y="655.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="54.7561%" y="645" width="0.0115%" height="15" fill="rgb(226,146,40)" fg:x="28540" fg:w="6"/><text x="55.0061%" y="655.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (16 samples, 0.03%)</title><rect x="54.7677%" y="645" width="0.0307%" height="15" fill="rgb(219,47,25)" fg:x="28546" fg:w="16"/><text x="55.0177%" y="655.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (22 samples, 0.04%)</title><rect x="54.7984%" y="645" width="0.0422%" height="15" fill="rgb(250,135,13)" fg:x="28562" fg:w="22"/><text x="55.0484%" y="655.50"></text></g><g><title>App`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (12 samples, 0.02%)</title><rect x="54.8406%" y="645" width="0.0230%" height="15" fill="rgb(219,229,18)" fg:x="28584" fg:w="12"/><text x="55.0906%" y="655.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (10 samples, 0.02%)</title><rect x="55.2684%" y="629" width="0.0192%" height="15" fill="rgb(217,152,27)" fg:x="28807" fg:w="10"/><text x="55.5184%" y="639.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (9 samples, 0.02%)</title><rect x="55.9380%" y="565" width="0.0173%" height="15" fill="rgb(225,71,47)" fg:x="29156" fg:w="9"/><text x="56.1880%" y="575.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (9 samples, 0.02%)</title><rect x="55.9380%" y="549" width="0.0173%" height="15" fill="rgb(220,139,14)" fg:x="29156" fg:w="9"/><text x="56.1880%" y="559.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (565 samples, 1.08%)</title><rect x="55.7212%" y="597" width="1.0840%" height="15" fill="rgb(247,54,32)" fg:x="29043" fg:w="565"/><text x="55.9712%" y="607.50"></text></g><g><title> N]&gt;::try_from (565 samples, 1.08%)</title><rect x="55.7212%" y="581" width="1.0840%" height="15" fill="rgb(252,131,39)" fg:x="29043" fg:w="565"/><text x="55.9712%" y="591.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (443 samples, 0.85%)</title><rect x="55.9553%" y="565" width="0.8499%" height="15" fill="rgb(210,108,39)" fg:x="29165" fg:w="443"/><text x="56.2053%" y="575.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (121 samples, 0.23%)</title><rect x="56.5730%" y="549" width="0.2321%" height="15" fill="rgb(205,23,29)" fg:x="29487" fg:w="121"/><text x="56.8230%" y="559.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (121 samples, 0.23%)</title><rect x="56.5730%" y="533" width="0.2321%" height="15" fill="rgb(246,139,46)" fg:x="29487" fg:w="121"/><text x="56.8230%" y="543.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (630 samples, 1.21%)</title><rect x="55.6387%" y="613" width="1.2087%" height="15" fill="rgb(250,81,26)" fg:x="29000" fg:w="630"/><text x="55.8887%" y="623.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (22 samples, 0.04%)</title><rect x="56.8052%" y="597" width="0.0422%" height="15" fill="rgb(214,104,7)" fg:x="29608" fg:w="22"/><text x="57.0552%" y="607.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (16 samples, 0.03%)</title><rect x="56.8474%" y="613" width="0.0307%" height="15" fill="rgb(233,189,8)" fg:x="29630" fg:w="16"/><text x="57.0974%" y="623.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (9 samples, 0.02%)</title><rect x="56.8781%" y="613" width="0.0173%" height="15" fill="rgb(228,141,17)" fg:x="29646" fg:w="9"/><text x="57.1281%" y="623.50"></text></g><g><title> N]&gt;::try_from (9 samples, 0.02%)</title><rect x="56.8781%" y="597" width="0.0173%" height="15" fill="rgb(247,157,1)" fg:x="29646" fg:w="9"/><text x="57.1281%" y="607.50"></text></g><g><title>App`core::num::_&lt;impl u64&gt;::from_le_bytes (134 samples, 0.26%)</title><rect x="56.8954%" y="613" width="0.2571%" height="15" fill="rgb(249,225,5)" fg:x="29655" fg:w="134"/><text x="57.1454%" y="623.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::unwrap (61 samples, 0.12%)</title><rect x="57.1525%" y="613" width="0.1170%" height="15" fill="rgb(242,55,13)" fg:x="29789" fg:w="61"/><text x="57.4025%" y="623.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (13 samples, 0.02%)</title><rect x="57.3520%" y="597" width="0.0249%" height="15" fill="rgb(230,49,50)" fg:x="29893" fg:w="13"/><text x="57.6020%" y="607.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (1,451 samples, 2.78%)</title><rect x="55.2876%" y="629" width="2.7839%" height="15" fill="rgb(241,111,38)" fg:x="28817" fg:w="1451"/><text x="55.5376%" y="639.50">Ap..</text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (418 samples, 0.80%)</title><rect x="57.2695%" y="613" width="0.8020%" height="15" fill="rgb(252,155,4)" fg:x="29850" fg:w="418"/><text x="57.5195%" y="623.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (362 samples, 0.69%)</title><rect x="57.3769%" y="597" width="0.6945%" height="15" fill="rgb(212,69,32)" fg:x="29906" fg:w="362"/><text x="57.6269%" y="607.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (288 samples, 0.55%)</title><rect x="57.5189%" y="581" width="0.5525%" height="15" fill="rgb(243,107,47)" fg:x="29980" fg:w="288"/><text x="57.7689%" y="591.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.10%)</title><rect x="58.0714%" y="629" width="0.0959%" height="15" fill="rgb(247,130,12)" fg:x="30268" fg:w="50"/><text x="58.3214%" y="639.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (159 samples, 0.31%)</title><rect x="58.1674%" y="629" width="0.3051%" height="15" fill="rgb(233,74,16)" fg:x="30318" fg:w="159"/><text x="58.4174%" y="639.50"></text></g><g><title>App`&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (27 samples, 0.05%)</title><rect x="58.4206%" y="613" width="0.0518%" height="15" fill="rgb(208,58,18)" fg:x="30450" fg:w="27"/><text x="58.6706%" y="623.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::unwrap (18 samples, 0.03%)</title><rect x="58.4782%" y="629" width="0.0345%" height="15" fill="rgb(242,225,1)" fg:x="30480" fg:w="18"/><text x="58.7282%" y="639.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (271 samples, 0.52%)</title><rect x="58.5127%" y="629" width="0.5199%" height="15" fill="rgb(249,39,40)" fg:x="30498" fg:w="271"/><text x="58.7627%" y="639.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (19 samples, 0.04%)</title><rect x="59.0327%" y="629" width="0.0365%" height="15" fill="rgb(207,72,44)" fg:x="30769" fg:w="19"/><text x="59.2827%" y="639.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (2,351 samples, 4.51%)</title><rect x="54.6679%" y="677" width="4.5106%" height="15" fill="rgb(215,193,12)" fg:x="28494" fg:w="2351"/><text x="54.9179%" y="687.50">App`&lt;..</text></g><g><title>App`fxhash::write (2,321 samples, 4.45%)</title><rect x="54.7255%" y="661" width="4.4530%" height="15" fill="rgb(248,41,39)" fg:x="28524" fg:w="2321"/><text x="54.9755%" y="671.50">App`f..</text></g><g><title>App`fxhash::write64 (2,249 samples, 4.31%)</title><rect x="54.8636%" y="645" width="4.3149%" height="15" fill="rgb(253,85,4)" fg:x="28596" fg:w="2249"/><text x="55.1136%" y="655.50">App`f..</text></g><g><title>App`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (57 samples, 0.11%)</title><rect x="59.0691%" y="629" width="0.1094%" height="15" fill="rgb(243,70,31)" fg:x="30788" fg:w="57"/><text x="59.3191%" y="639.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (2,536 samples, 4.87%)</title><rect x="54.3226%" y="725" width="4.8655%" height="15" fill="rgb(253,195,26)" fg:x="28314" fg:w="2536"/><text x="54.5726%" y="735.50">App`co..</text></g><g><title> N]&gt;::hash (2,536 samples, 4.87%)</title><rect x="54.3226%" y="709" width="4.8655%" height="15" fill="rgb(243,42,11)" fg:x="28314" fg:w="2536"/><text x="54.5726%" y="719.50"> N]&gt;::..</text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (2,402 samples, 4.61%)</title><rect x="54.5796%" y="693" width="4.6084%" height="15" fill="rgb(239,66,17)" fg:x="28448" fg:w="2402"/><text x="54.8296%" y="703.50">App`c..</text></g><g><title>App`core::hash::Hasher::write_length_prefix (11 samples, 0.02%)</title><rect x="59.1881%" y="725" width="0.0211%" height="15" fill="rgb(217,132,21)" fg:x="30850" fg:w="11"/><text x="59.4381%" y="735.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u8 (32 samples, 0.06%)</title><rect x="59.2188%" y="709" width="0.0614%" height="15" fill="rgb(252,202,21)" fg:x="30866" fg:w="32"/><text x="59.4688%" y="719.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (23 samples, 0.04%)</title><rect x="59.2360%" y="693" width="0.0441%" height="15" fill="rgb(233,98,36)" fg:x="30875" fg:w="23"/><text x="59.4860%" y="703.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (2,600 samples, 4.99%)</title><rect x="54.2938%" y="741" width="4.9883%" height="15" fill="rgb(216,153,54)" fg:x="28299" fg:w="2600"/><text x="54.5438%" y="751.50">App`&lt;A..</text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash (38 samples, 0.07%)</title><rect x="59.2092%" y="725" width="0.0729%" height="15" fill="rgb(250,99,7)" fg:x="30861" fg:w="38"/><text x="59.4592%" y="735.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (7 samples, 0.01%)</title><rect x="59.2821%" y="741" width="0.0134%" height="15" fill="rgb(207,56,50)" fg:x="30899" fg:w="7"/><text x="59.5321%" y="751.50"></text></g><g><title> N]&gt;::hash (7 samples, 0.01%)</title><rect x="59.2821%" y="725" width="0.0134%" height="15" fill="rgb(244,61,34)" fg:x="30899" fg:w="7"/><text x="59.5321%" y="735.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (2,670 samples, 5.12%)</title><rect x="54.1787%" y="773" width="5.1226%" height="15" fill="rgb(241,50,38)" fg:x="28239" fg:w="2670"/><text x="54.4287%" y="783.50">App`co..</text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (2,657 samples, 5.10%)</title><rect x="54.2036%" y="757" width="5.0977%" height="15" fill="rgb(212,166,30)" fg:x="28252" fg:w="2657"/><text x="54.4536%" y="767.50">App`co..</text></g><g><title>App`core::hash::BuildHasher::hash_one (2,712 samples, 5.20%)</title><rect x="54.1077%" y="789" width="5.2032%" height="15" fill="rgb(249,127,32)" fg:x="28202" fg:w="2712"/><text x="54.3577%" y="799.50">App`co..</text></g><g><title>App`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.07%)</title><rect x="59.5967%" y="757" width="0.0672%" height="15" fill="rgb(209,103,0)" fg:x="31063" fg:w="35"/><text x="59.8467%" y="767.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_loadu_si128 (399 samples, 0.77%)</title><rect x="59.6715%" y="757" width="0.7655%" height="15" fill="rgb(238,209,51)" fg:x="31102" fg:w="399"/><text x="59.9215%" y="767.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (108 samples, 0.21%)</title><rect x="60.4965%" y="629" width="0.2072%" height="15" fill="rgb(237,56,23)" fg:x="31532" fg:w="108"/><text x="60.7465%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (106 samples, 0.20%)</title><rect x="60.5004%" y="613" width="0.2034%" height="15" fill="rgb(215,153,46)" fg:x="31534" fg:w="106"/><text x="60.7504%" y="623.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (120 samples, 0.23%)</title><rect x="60.4793%" y="693" width="0.2302%" height="15" fill="rgb(224,49,31)" fg:x="31523" fg:w="120"/><text x="60.7293%" y="703.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (114 samples, 0.22%)</title><rect x="60.4908%" y="677" width="0.2187%" height="15" fill="rgb(250,18,42)" fg:x="31529" fg:w="114"/><text x="60.7408%" y="687.50"></text></g><g><title> N]&gt; for [A (114 samples, 0.22%)</title><rect x="60.4908%" y="661" width="0.2187%" height="15" fill="rgb(215,176,39)" fg:x="31529" fg:w="114"/><text x="60.7408%" y="671.50"></text></g><g><title> N]&gt;::eq (114 samples, 0.22%)</title><rect x="60.4908%" y="645" width="0.2187%" height="15" fill="rgb(223,77,29)" fg:x="31529" fg:w="114"/><text x="60.7408%" y="655.50"></text></g><g><title>App`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (130 samples, 0.25%)</title><rect x="60.4639%" y="725" width="0.2494%" height="15" fill="rgb(234,94,52)" fg:x="31515" fg:w="130"/><text x="60.7139%" y="735.50"></text></g><g><title>App`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (126 samples, 0.24%)</title><rect x="60.4716%" y="709" width="0.2417%" height="15" fill="rgb(220,154,50)" fg:x="31519" fg:w="126"/><text x="60.7216%" y="719.50"></text></g><g><title>App`hashbrown::map::equivalent_key::_{{closure}} (132 samples, 0.25%)</title><rect x="60.4620%" y="741" width="0.2533%" height="15" fill="rgb(212,11,10)" fg:x="31514" fg:w="132"/><text x="60.7120%" y="751.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find::_{{closure}} (141 samples, 0.27%)</title><rect x="60.4505%" y="757" width="0.2705%" height="15" fill="rgb(205,166,19)" fg:x="31508" fg:w="141"/><text x="60.7005%" y="767.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (72 samples, 0.14%)</title><rect x="60.8553%" y="741" width="0.1381%" height="15" fill="rgb(244,198,16)" fg:x="31719" fg:w="72"/><text x="61.1053%" y="751.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_movemask_epi8 (162 samples, 0.31%)</title><rect x="60.9934%" y="741" width="0.3108%" height="15" fill="rgb(219,69,12)" fg:x="31791" fg:w="162"/><text x="61.2434%" y="751.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find (1,181 samples, 2.27%)</title><rect x="59.3415%" y="773" width="2.2658%" height="15" fill="rgb(245,30,7)" fg:x="30930" fg:w="1181"/><text x="59.5915%" y="783.50">A..</text></g><g><title>App`hashbrown::raw::sse2::Group::match_byte (462 samples, 0.89%)</title><rect x="60.7210%" y="757" width="0.8864%" height="15" fill="rgb(218,221,48)" fg:x="31649" fg:w="462"/><text x="60.9710%" y="767.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_set1_epi8 (158 samples, 0.30%)</title><rect x="61.3042%" y="741" width="0.3031%" height="15" fill="rgb(216,66,15)" fg:x="31953" fg:w="158"/><text x="61.5542%" y="751.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3,940 samples, 7.56%)</title><rect x="54.0520%" y="805" width="7.5592%" height="15" fill="rgb(226,122,50)" fg:x="28173" fg:w="3940"/><text x="54.3020%" y="815.50">App`hashbr..</text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::get (1,197 samples, 2.30%)</title><rect x="59.3147%" y="789" width="2.2965%" height="15" fill="rgb(239,156,16)" fg:x="30916" fg:w="1197"/><text x="59.5647%" y="799.50">A..</text></g><g><title>App`std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3,953 samples, 7.58%)</title><rect x="54.0309%" y="821" width="7.5841%" height="15" fill="rgb(224,27,38)" fg:x="28162" fg:w="3953"/><text x="54.2809%" y="831.50">App`std::c..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (61 samples, 0.12%)</title><rect x="61.6246%" y="821" width="0.1170%" height="15" fill="rgb(224,39,27)" fg:x="32120" fg:w="61"/><text x="61.8746%" y="831.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (5,771 samples, 11.07%)</title><rect x="50.6715%" y="837" width="11.0721%" height="15" fill="rgb(215,92,29)" fg:x="26411" fg:w="5771"/><text x="50.9215%" y="847.50">App`App::game_ma..</text></g><g><title>App`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.02%)</title><rect x="61.9067%" y="821" width="0.0249%" height="15" fill="rgb(207,159,16)" fg:x="32267" fg:w="13"/><text x="62.1567%" y="831.50"></text></g><g><title>App`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (6 samples, 0.01%)</title><rect x="62.3115%" y="773" width="0.0115%" height="15" fill="rgb(238,163,47)" fg:x="32478" fg:w="6"/><text x="62.5615%" y="783.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (19 samples, 0.04%)</title><rect x="62.8890%" y="709" width="0.0365%" height="15" fill="rgb(219,91,49)" fg:x="32779" fg:w="19"/><text x="63.1390%" y="719.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (184 samples, 0.35%)</title><rect x="62.9964%" y="661" width="0.3530%" height="15" fill="rgb(227,167,31)" fg:x="32835" fg:w="184"/><text x="63.2464%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (107 samples, 0.21%)</title><rect x="63.1442%" y="645" width="0.2053%" height="15" fill="rgb(234,80,54)" fg:x="32912" fg:w="107"/><text x="63.3942%" y="655.50"></text></g><g><title>App`DYLD-STUB$$memcmp (8 samples, 0.02%)</title><rect x="63.3494%" y="661" width="0.0153%" height="15" fill="rgb(212,114,2)" fg:x="33019" fg:w="8"/><text x="63.5994%" y="671.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memcmp (8 samples, 0.02%)</title><rect x="63.3648%" y="661" width="0.0153%" height="15" fill="rgb(234,50,24)" fg:x="33027" fg:w="8"/><text x="63.6148%" y="671.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (317 samples, 0.61%)</title><rect x="62.8027%" y="725" width="0.6082%" height="15" fill="rgb(221,68,8)" fg:x="32734" fg:w="317"/><text x="63.0527%" y="735.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (253 samples, 0.49%)</title><rect x="62.9254%" y="709" width="0.4854%" height="15" fill="rgb(254,180,31)" fg:x="32798" fg:w="253"/><text x="63.1754%" y="719.50"></text></g><g><title> N]&gt; for [A (253 samples, 0.49%)</title><rect x="62.9254%" y="693" width="0.4854%" height="15" fill="rgb(247,130,50)" fg:x="32798" fg:w="253"/><text x="63.1754%" y="703.50"></text></g><g><title> N]&gt;::eq (253 samples, 0.49%)</title><rect x="62.9254%" y="677" width="0.4854%" height="15" fill="rgb(211,109,4)" fg:x="32798" fg:w="253"/><text x="63.1754%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (16 samples, 0.03%)</title><rect x="63.3801%" y="661" width="0.0307%" height="15" fill="rgb(238,50,21)" fg:x="33035" fg:w="16"/><text x="63.6301%" y="671.50"></text></g><g><title>App`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::_{{closure}} (460 samples, 0.88%)</title><rect x="62.5494%" y="757" width="0.8825%" height="15" fill="rgb(225,57,45)" fg:x="32602" fg:w="460"/><text x="62.7994%" y="767.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (372 samples, 0.71%)</title><rect x="62.7182%" y="741" width="0.7137%" height="15" fill="rgb(209,196,50)" fg:x="32690" fg:w="372"/><text x="62.9682%" y="751.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (11 samples, 0.02%)</title><rect x="63.4108%" y="725" width="0.0211%" height="15" fill="rgb(242,140,13)" fg:x="33051" fg:w="11"/><text x="63.6608%" y="735.50"></text></g><g><title> N]&gt; for [A (11 samples, 0.02%)</title><rect x="63.4108%" y="709" width="0.0211%" height="15" fill="rgb(217,111,7)" fg:x="33051" fg:w="11"/><text x="63.6608%" y="719.50"></text></g><g><title> N]&gt;::eq (11 samples, 0.02%)</title><rect x="63.4108%" y="693" width="0.0211%" height="15" fill="rgb(253,193,51)" fg:x="33051" fg:w="11"/><text x="63.6608%" y="703.50"></text></g><g><title>App`&lt;usize as core::iter::traits::accum::Sum&gt;::sum::_{{closure}} (34 samples, 0.07%)</title><rect x="63.4319%" y="757" width="0.0652%" height="15" fill="rgb(252,70,29)" fg:x="33062" fg:w="34"/><text x="63.6819%" y="767.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (802 samples, 1.54%)</title><rect x="61.9834%" y="789" width="1.5387%" height="15" fill="rgb(232,127,12)" fg:x="32307" fg:w="802"/><text x="62.2334%" y="799.50"></text></g><g><title>App`core::iter::adapters::map::map_fold::_{{closure}} (620 samples, 1.19%)</title><rect x="62.3326%" y="773" width="1.1895%" height="15" fill="rgb(211,180,21)" fg:x="32489" fg:w="620"/><text x="62.5826%" y="783.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (13 samples, 0.02%)</title><rect x="63.4972%" y="757" width="0.0249%" height="15" fill="rgb(229,72,13)" fg:x="33096" fg:w="13"/><text x="63.7472%" y="767.50"></text></g><g><title>App`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (822 samples, 1.58%)</title><rect x="61.9527%" y="805" width="1.5771%" height="15" fill="rgb(240,211,49)" fg:x="32291" fg:w="822"/><text x="62.2027%" y="815.50"></text></g><g><title>App`&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (839 samples, 1.61%)</title><rect x="61.9316%" y="821" width="1.6097%" height="15" fill="rgb(219,149,40)" fg:x="32280" fg:w="839"/><text x="62.1816%" y="831.50"></text></g><g><title>App`core::iter::traits::iterator::Iterator::map (6 samples, 0.01%)</title><rect x="63.5298%" y="805" width="0.0115%" height="15" fill="rgb(210,127,46)" fg:x="33113" fg:w="6"/><text x="63.7798%" y="815.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::bishop_placement_score (76 samples, 0.15%)</title><rect x="63.8310%" y="805" width="0.1458%" height="15" fill="rgb(220,106,7)" fg:x="33270" fg:w="76"/><text x="64.0810%" y="815.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::knight_placement_score (16 samples, 0.03%)</title><rect x="63.9768%" y="805" width="0.0307%" height="15" fill="rgb(249,31,22)" fg:x="33346" fg:w="16"/><text x="64.2268%" y="815.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::pawn_placement_score (76 samples, 0.15%)</title><rect x="64.0075%" y="805" width="0.1458%" height="15" fill="rgb(253,1,49)" fg:x="33362" fg:w="76"/><text x="64.2575%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (56 samples, 0.11%)</title><rect x="64.4334%" y="789" width="0.1074%" height="15" fill="rgb(227,144,33)" fg:x="33584" fg:w="56"/><text x="64.6834%" y="799.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::rook_score (297 samples, 0.57%)</title><rect x="64.1533%" y="805" width="0.5698%" height="15" fill="rgb(249,163,44)" fg:x="33438" fg:w="297"/><text x="64.4033%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (95 samples, 0.18%)</title><rect x="64.5409%" y="789" width="0.1823%" height="15" fill="rgb(234,15,39)" fg:x="33640" fg:w="95"/><text x="64.7909%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::piece_bb (8 samples, 0.02%)</title><rect x="64.7231%" y="805" width="0.0153%" height="15" fill="rgb(207,66,16)" fg:x="33735" fg:w="8"/><text x="64.9731%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.01%)</title><rect x="64.7270%" y="789" width="0.0115%" height="15" fill="rgb(233,112,24)" fg:x="33737" fg:w="6"/><text x="64.9770%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::piece_count (150 samples, 0.29%)</title><rect x="64.7385%" y="805" width="0.2878%" height="15" fill="rgb(230,90,22)" fg:x="33743" fg:w="150"/><text x="64.9885%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (7 samples, 0.01%)</title><rect x="65.0320%" y="805" width="0.0134%" height="15" fill="rgb(229,61,13)" fg:x="33896" fg:w="7"/><text x="65.2820%" y="815.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (10 samples, 0.02%)</title><rect x="65.0512%" y="805" width="0.0192%" height="15" fill="rgb(225,57,24)" fg:x="33906" fg:w="10"/><text x="65.3012%" y="815.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::evaluate (809 samples, 1.55%)</title><rect x="63.5586%" y="821" width="1.5521%" height="15" fill="rgb(208,169,48)" fg:x="33128" fg:w="809"/><text x="63.8086%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.04%)</title><rect x="65.0704%" y="805" width="0.0403%" height="15" fill="rgb(244,218,51)" fg:x="33916" fg:w="21"/><text x="65.3204%" y="815.50"></text></g><g><title>App`&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (6 samples, 0.01%)</title><rect x="65.5251%" y="805" width="0.0115%" height="15" fill="rgb(214,148,10)" fg:x="34153" fg:w="6"/><text x="65.7751%" y="815.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (74 samples, 0.14%)</title><rect x="65.5596%" y="789" width="0.1420%" height="15" fill="rgb(225,174,27)" fg:x="34171" fg:w="74"/><text x="65.8096%" y="799.50"></text></g><g><title>App`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (10 samples, 0.02%)</title><rect x="65.6824%" y="773" width="0.0192%" height="15" fill="rgb(230,96,26)" fg:x="34235" fg:w="10"/><text x="65.9324%" y="783.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (87 samples, 0.17%)</title><rect x="65.5405%" y="805" width="0.1669%" height="15" fill="rgb(232,10,30)" fg:x="34161" fg:w="87"/><text x="65.7905%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (14 samples, 0.03%)</title><rect x="65.7074%" y="805" width="0.0269%" height="15" fill="rgb(222,8,50)" fg:x="34248" fg:w="14"/><text x="65.9574%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.05%)</title><rect x="65.7342%" y="805" width="0.0460%" height="15" fill="rgb(213,81,27)" fg:x="34262" fg:w="24"/><text x="65.9842%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::board_state_numbers (339 samples, 0.65%)</title><rect x="65.1318%" y="821" width="0.6504%" height="15" fill="rgb(245,50,10)" fg:x="33948" fg:w="339"/><text x="65.3818%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (7 samples, 0.01%)</title><rect x="65.9491%" y="741" width="0.0134%" height="15" fill="rgb(216,100,18)" fg:x="34374" fg:w="7"/><text x="66.1991%" y="751.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (20 samples, 0.04%)</title><rect x="65.9625%" y="741" width="0.0384%" height="15" fill="rgb(236,147,54)" fg:x="34381" fg:w="20"/><text x="66.2125%" y="751.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (68 samples, 0.13%)</title><rect x="65.9088%" y="757" width="0.1305%" height="15" fill="rgb(205,143,26)" fg:x="34353" fg:w="68"/><text x="66.1588%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.04%)</title><rect x="66.0009%" y="741" width="0.0384%" height="15" fill="rgb(236,26,9)" fg:x="34401" fg:w="20"/><text x="66.2509%" y="751.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (79 samples, 0.15%)</title><rect x="65.8973%" y="773" width="0.1516%" height="15" fill="rgb(221,165,53)" fg:x="34347" fg:w="79"/><text x="66.1473%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_evading_king_moves (92 samples, 0.18%)</title><rect x="65.8801%" y="789" width="0.1765%" height="15" fill="rgb(214,110,17)" fg:x="34338" fg:w="92"/><text x="66.1301%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (9 samples, 0.02%)</title><rect x="66.0623%" y="757" width="0.0173%" height="15" fill="rgb(237,197,12)" fg:x="34433" fg:w="9"/><text x="66.3123%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (11 samples, 0.02%)</title><rect x="66.0604%" y="773" width="0.0211%" height="15" fill="rgb(205,84,17)" fg:x="34432" fg:w="11"/><text x="66.3104%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (14 samples, 0.03%)</title><rect x="66.0566%" y="789" width="0.0269%" height="15" fill="rgb(237,18,45)" fg:x="34430" fg:w="14"/><text x="66.3066%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (9 samples, 0.02%)</title><rect x="66.1525%" y="757" width="0.0173%" height="15" fill="rgb(221,87,14)" fg:x="34480" fg:w="9"/><text x="66.4025%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (9 samples, 0.02%)</title><rect x="66.1698%" y="757" width="0.0173%" height="15" fill="rgb(238,186,15)" fg:x="34489" fg:w="9"/><text x="66.4198%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (35 samples, 0.07%)</title><rect x="66.1371%" y="773" width="0.0672%" height="15" fill="rgb(208,115,11)" fg:x="34472" fg:w="35"/><text x="66.3871%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (9 samples, 0.02%)</title><rect x="66.1870%" y="757" width="0.0173%" height="15" fill="rgb(254,175,0)" fg:x="34498" fg:w="9"/><text x="66.4370%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (12 samples, 0.02%)</title><rect x="66.2139%" y="757" width="0.0230%" height="15" fill="rgb(227,24,42)" fg:x="34512" fg:w="12"/><text x="66.4639%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (25 samples, 0.05%)</title><rect x="66.2043%" y="773" width="0.0480%" height="15" fill="rgb(223,211,37)" fg:x="34507" fg:w="25"/><text x="66.4543%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_mid_board (37 samples, 0.07%)</title><rect x="66.2618%" y="757" width="0.0710%" height="15" fill="rgb(235,49,27)" fg:x="34537" fg:w="37"/><text x="66.5118%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="66.3136%" y="741" width="0.0192%" height="15" fill="rgb(254,97,51)" fg:x="34564" fg:w="10"/><text x="66.5636%" y="751.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::add_no_alloc (11 samples, 0.02%)</title><rect x="66.4940%" y="725" width="0.0211%" height="15" fill="rgb(249,51,40)" fg:x="34658" fg:w="11"/><text x="66.7440%" y="735.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (38 samples, 0.07%)</title><rect x="66.4691%" y="741" width="0.0729%" height="15" fill="rgb(210,128,45)" fg:x="34645" fg:w="38"/><text x="66.7191%" y="751.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (14 samples, 0.03%)</title><rect x="66.5151%" y="725" width="0.0269%" height="15" fill="rgb(224,137,50)" fg:x="34669" fg:w="14"/><text x="66.7651%" y="735.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (9 samples, 0.02%)</title><rect x="66.5420%" y="741" width="0.0173%" height="15" fill="rgb(242,15,9)" fg:x="34683" fg:w="9"/><text x="66.7920%" y="751.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_on_2nd (140 samples, 0.27%)</title><rect x="66.3328%" y="757" width="0.2686%" height="15" fill="rgb(233,187,41)" fg:x="34574" fg:w="140"/><text x="66.5828%" y="767.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (22 samples, 0.04%)</title><rect x="66.5592%" y="741" width="0.0422%" height="15" fill="rgb(227,2,29)" fg:x="34692" fg:w="22"/><text x="66.8092%" y="751.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (186 samples, 0.36%)</title><rect x="66.2542%" y="773" width="0.3569%" height="15" fill="rgb(222,70,3)" fg:x="34533" fg:w="186"/><text x="66.5042%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (7 samples, 0.01%)</title><rect x="66.6379%" y="757" width="0.0134%" height="15" fill="rgb(213,11,42)" fg:x="34733" fg:w="7"/><text x="66.8879%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (22 samples, 0.04%)</title><rect x="66.6110%" y="773" width="0.0422%" height="15" fill="rgb(225,150,9)" fg:x="34719" fg:w="22"/><text x="66.8610%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (10 samples, 0.02%)</title><rect x="66.6647%" y="757" width="0.0192%" height="15" fill="rgb(230,162,45)" fg:x="34747" fg:w="10"/><text x="66.9147%" y="767.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::add_no_alloc (6 samples, 0.01%)</title><rect x="66.6724%" y="741" width="0.0115%" height="15" fill="rgb(222,14,52)" fg:x="34751" fg:w="6"/><text x="66.9224%" y="751.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (11 samples, 0.02%)</title><rect x="66.6839%" y="757" width="0.0211%" height="15" fill="rgb(254,198,14)" fg:x="34757" fg:w="11"/><text x="66.9339%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (29 samples, 0.06%)</title><rect x="66.6532%" y="773" width="0.0556%" height="15" fill="rgb(220,217,30)" fg:x="34741" fg:w="29"/><text x="66.9032%" y="783.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.02%)</title><rect x="66.7204%" y="757" width="0.0211%" height="15" fill="rgb(215,146,41)" fg:x="34776" fg:w="11"/><text x="66.9704%" y="767.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (15 samples, 0.03%)</title><rect x="66.7146%" y="773" width="0.0288%" height="15" fill="rgb(217,27,36)" fg:x="34773" fg:w="15"/><text x="66.9646%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (345 samples, 0.66%)</title><rect x="66.0834%" y="789" width="0.6619%" height="15" fill="rgb(219,218,39)" fg:x="34444" fg:w="345"/><text x="66.3334%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (29 samples, 0.06%)</title><rect x="66.7626%" y="773" width="0.0556%" height="15" fill="rgb(219,4,42)" fg:x="34798" fg:w="29"/><text x="67.0126%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="66.7952%" y="757" width="0.0230%" height="15" fill="rgb(249,119,36)" fg:x="34815" fg:w="12"/><text x="67.0452%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::num_checkers (42 samples, 0.08%)</title><rect x="66.7472%" y="789" width="0.0806%" height="15" fill="rgb(209,23,33)" fg:x="34790" fg:w="42"/><text x="66.9972%" y="799.50"></text></g><g><title>App`&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.02%)</title><rect x="66.9391%" y="773" width="0.0230%" height="15" fill="rgb(211,10,0)" fg:x="34890" fg:w="12"/><text x="67.1891%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (6 samples, 0.01%)</title><rect x="66.9679%" y="773" width="0.0115%" height="15" fill="rgb(208,99,37)" fg:x="34905" fg:w="6"/><text x="67.2179%" y="783.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;core::array::iter::IntoIter&lt;u64,4_usize&gt;&gt; (9 samples, 0.02%)</title><rect x="66.9832%" y="773" width="0.0173%" height="15" fill="rgb(213,132,31)" fg:x="34913" fg:w="9"/><text x="67.2332%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::update_pinned_pieces_and_check_line (103 samples, 0.20%)</title><rect x="66.8278%" y="789" width="0.1976%" height="15" fill="rgb(243,129,40)" fg:x="34832" fg:w="103"/><text x="67.0778%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="67.0005%" y="773" width="0.0249%" height="15" fill="rgb(210,66,33)" fg:x="34922" fg:w="13"/><text x="67.2505%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (630 samples, 1.21%)</title><rect x="65.8436%" y="805" width="1.2087%" height="15" fill="rgb(209,189,4)" fg:x="34319" fg:w="630"/><text x="66.0936%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.02%)</title><rect x="67.0370%" y="789" width="0.0153%" height="15" fill="rgb(214,107,37)" fg:x="34941" fg:w="8"/><text x="67.2870%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (8 samples, 0.02%)</title><rect x="67.0523%" y="805" width="0.0153%" height="15" fill="rgb(245,88,54)" fg:x="34949" fg:w="8"/><text x="67.3023%" y="815.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::add_no_alloc (45 samples, 0.09%)</title><rect x="67.2019%" y="773" width="0.0863%" height="15" fill="rgb(205,146,20)" fg:x="35027" fg:w="45"/><text x="67.4519%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (61 samples, 0.12%)</title><rect x="67.8811%" y="757" width="0.1170%" height="15" fill="rgb(220,161,25)" fg:x="35381" fg:w="61"/><text x="68.1311%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (116 samples, 0.22%)</title><rect x="67.9982%" y="757" width="0.2226%" height="15" fill="rgb(215,152,15)" fg:x="35442" fg:w="116"/><text x="68.2482%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (679 samples, 1.30%)</title><rect x="67.2883%" y="773" width="1.3027%" height="15" fill="rgb(233,192,44)" fg:x="35072" fg:w="679"/><text x="67.5383%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (193 samples, 0.37%)</title><rect x="68.2207%" y="757" width="0.3703%" height="15" fill="rgb(240,170,46)" fg:x="35558" fg:w="193"/><text x="68.4707%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (30 samples, 0.06%)</title><rect x="68.6025%" y="773" width="0.0576%" height="15" fill="rgb(207,104,33)" fg:x="35757" fg:w="30"/><text x="68.8525%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (822 samples, 1.58%)</title><rect x="67.1271%" y="789" width="1.5771%" height="15" fill="rgb(219,21,39)" fg:x="34988" fg:w="822"/><text x="67.3771%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.03%)</title><rect x="68.6754%" y="773" width="0.0288%" height="15" fill="rgb(214,133,29)" fg:x="35795" fg:w="15"/><text x="68.9254%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (879 samples, 1.69%)</title><rect x="67.0676%" y="805" width="1.6864%" height="15" fill="rgb(226,93,6)" fg:x="34957" fg:w="879"/><text x="67.3176%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.04%)</title><rect x="68.7138%" y="789" width="0.0403%" height="15" fill="rgb(252,222,34)" fg:x="35815" fg:w="21"/><text x="68.9638%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (39 samples, 0.07%)</title><rect x="69.0898%" y="773" width="0.0748%" height="15" fill="rgb(252,92,48)" fg:x="36011" fg:w="39"/><text x="69.3398%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (57 samples, 0.11%)</title><rect x="69.1647%" y="773" width="0.1094%" height="15" fill="rgb(245,223,24)" fg:x="36050" fg:w="57"/><text x="69.4147%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (320 samples, 0.61%)</title><rect x="68.8788%" y="789" width="0.6139%" height="15" fill="rgb(205,176,3)" fg:x="35901" fg:w="320"/><text x="69.1288%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (114 samples, 0.22%)</title><rect x="69.2740%" y="773" width="0.2187%" height="15" fill="rgb(235,151,15)" fg:x="36107" fg:w="114"/><text x="69.5240%" y="783.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (8 samples, 0.02%)</title><rect x="69.5023%" y="789" width="0.0153%" height="15" fill="rgb(237,209,11)" fg:x="36226" fg:w="8"/><text x="69.7523%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::num_checkers (408 samples, 0.78%)</title><rect x="68.7541%" y="805" width="0.7828%" height="15" fill="rgb(243,227,24)" fg:x="35836" fg:w="408"/><text x="69.0041%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="69.5177%" y="789" width="0.0192%" height="15" fill="rgb(239,193,16)" fg:x="36234" fg:w="10"/><text x="69.7677%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::game_state (1,966 samples, 3.77%)</title><rect x="65.7822%" y="821" width="3.7719%" height="15" fill="rgb(231,27,9)" fg:x="34287" fg:w="1966"/><text x="66.0322%" y="831.50">App`..</text></g><g><title>App`alloc::vec::Vec&lt;T,A&gt;::pop (42 samples, 0.08%)</title><rect x="69.5887%" y="821" width="0.0806%" height="15" fill="rgb(219,169,10)" fg:x="36271" fg:w="42"/><text x="69.8387%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.04%)</title><rect x="69.6309%" y="805" width="0.0384%" height="15" fill="rgb(244,229,43)" fg:x="36293" fg:w="20"/><text x="69.8809%" y="815.50"></text></g><g><title>App`alloc::vec::Vec&lt;T,A&gt;::push (41 samples, 0.08%)</title><rect x="69.6692%" y="821" width="0.0787%" height="15" fill="rgb(254,38,20)" fg:x="36313" fg:w="41"/><text x="69.9192%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.05%)</title><rect x="69.7019%" y="805" width="0.0460%" height="15" fill="rgb(250,47,30)" fg:x="36330" fg:w="24"/><text x="69.9519%" y="815.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.02%)</title><rect x="69.7479%" y="821" width="0.0192%" height="15" fill="rgb(224,124,36)" fg:x="36354" fg:w="10"/><text x="69.9979%" y="831.50"></text></g><g><title>App`core::iter::traits::iterator::Iterator::filter (6 samples, 0.01%)</title><rect x="69.7671%" y="821" width="0.0115%" height="15" fill="rgb(246,68,51)" fg:x="36364" fg:w="6"/><text x="70.0171%" y="831.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::iter (26 samples, 0.05%)</title><rect x="69.7844%" y="821" width="0.0499%" height="15" fill="rgb(253,43,49)" fg:x="36373" fg:w="26"/><text x="70.0344%" y="831.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (8 samples, 0.02%)</title><rect x="69.8342%" y="821" width="0.0153%" height="15" fill="rgb(219,54,36)" fg:x="36399" fg:w="8"/><text x="70.0842%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (26 samples, 0.05%)</title><rect x="69.8515%" y="821" width="0.0499%" height="15" fill="rgb(227,133,34)" fg:x="36408" fg:w="26"/><text x="70.1015%" y="831.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (4,251 samples, 8.16%)</title><rect x="61.7474%" y="837" width="8.1559%" height="15" fill="rgb(247,227,15)" fg:x="32184" fg:w="4251"/><text x="61.9974%" y="847.50">App`App::ga..</text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (31 samples, 0.06%)</title><rect x="70.0338%" y="821" width="0.0595%" height="15" fill="rgb(229,96,14)" fg:x="36503" fg:w="31"/><text x="70.2838%" y="831.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (28 samples, 0.05%)</title><rect x="70.0395%" y="805" width="0.0537%" height="15" fill="rgb(220,79,17)" fg:x="36506" fg:w="28"/><text x="70.2895%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="70.0990%" y="821" width="0.0192%" height="15" fill="rgb(205,131,53)" fg:x="36537" fg:w="10"/><text x="70.3490%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::board_state_numbers (115 samples, 0.22%)</title><rect x="69.9033%" y="837" width="0.2206%" height="15" fill="rgb(209,50,29)" fg:x="36435" fg:w="115"/><text x="70.1533%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (6 samples, 0.01%)</title><rect x="70.2026%" y="757" width="0.0115%" height="15" fill="rgb(245,86,46)" fg:x="36591" fg:w="6"/><text x="70.4526%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (17 samples, 0.03%)</title><rect x="70.1834%" y="773" width="0.0326%" height="15" fill="rgb(235,66,46)" fg:x="36581" fg:w="17"/><text x="70.4334%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (22 samples, 0.04%)</title><rect x="70.1815%" y="789" width="0.0422%" height="15" fill="rgb(232,148,31)" fg:x="36580" fg:w="22"/><text x="70.4315%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_evading_king_moves (28 samples, 0.05%)</title><rect x="70.1719%" y="805" width="0.0537%" height="15" fill="rgb(217,149,8)" fg:x="36575" fg:w="28"/><text x="70.4219%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (14 samples, 0.03%)</title><rect x="70.2256%" y="805" width="0.0269%" height="15" fill="rgb(209,183,11)" fg:x="36603" fg:w="14"/><text x="70.4756%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (11 samples, 0.02%)</title><rect x="70.2314%" y="789" width="0.0211%" height="15" fill="rgb(208,55,20)" fg:x="36606" fg:w="11"/><text x="70.4814%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (10 samples, 0.02%)</title><rect x="70.2333%" y="773" width="0.0192%" height="15" fill="rgb(218,39,14)" fg:x="36607" fg:w="10"/><text x="70.4833%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (8 samples, 0.02%)</title><rect x="70.2813%" y="789" width="0.0153%" height="15" fill="rgb(216,169,33)" fg:x="36632" fg:w="8"/><text x="70.5313%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (6 samples, 0.01%)</title><rect x="70.2985%" y="773" width="0.0115%" height="15" fill="rgb(233,80,24)" fg:x="36641" fg:w="6"/><text x="70.5485%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (9 samples, 0.02%)</title><rect x="70.2966%" y="789" width="0.0173%" height="15" fill="rgb(213,179,31)" fg:x="36640" fg:w="9"/><text x="70.5466%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_mid_board (7 samples, 0.01%)</title><rect x="70.3196%" y="773" width="0.0134%" height="15" fill="rgb(209,19,5)" fg:x="36652" fg:w="7"/><text x="70.5696%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (11 samples, 0.02%)</title><rect x="70.3791%" y="757" width="0.0211%" height="15" fill="rgb(219,18,35)" fg:x="36683" fg:w="11"/><text x="70.6291%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_on_2nd (44 samples, 0.08%)</title><rect x="70.3331%" y="773" width="0.0844%" height="15" fill="rgb(209,169,16)" fg:x="36659" fg:w="44"/><text x="70.5831%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="70.4041%" y="757" width="0.0134%" height="15" fill="rgb(245,90,51)" fg:x="36696" fg:w="7"/><text x="70.6541%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (58 samples, 0.11%)</title><rect x="70.3139%" y="789" width="0.1113%" height="15" fill="rgb(220,99,45)" fg:x="36649" fg:w="58"/><text x="70.5639%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (9 samples, 0.02%)</title><rect x="70.4271%" y="789" width="0.0173%" height="15" fill="rgb(249,89,25)" fg:x="36708" fg:w="9"/><text x="70.6771%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (6 samples, 0.01%)</title><rect x="70.4328%" y="773" width="0.0115%" height="15" fill="rgb(239,193,0)" fg:x="36711" fg:w="6"/><text x="70.6828%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (17 samples, 0.03%)</title><rect x="70.4443%" y="789" width="0.0326%" height="15" fill="rgb(231,126,1)" fg:x="36717" fg:w="17"/><text x="70.6943%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (8 samples, 0.02%)</title><rect x="70.4616%" y="773" width="0.0153%" height="15" fill="rgb(243,166,3)" fg:x="36726" fg:w="8"/><text x="70.7116%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (120 samples, 0.23%)</title><rect x="70.2544%" y="805" width="0.2302%" height="15" fill="rgb(223,22,34)" fg:x="36618" fg:w="120"/><text x="70.5044%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::num_checkers (9 samples, 0.02%)</title><rect x="70.4846%" y="805" width="0.0173%" height="15" fill="rgb(251,52,51)" fg:x="36738" fg:w="9"/><text x="70.7346%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (9 samples, 0.02%)</title><rect x="70.4846%" y="789" width="0.0173%" height="15" fill="rgb(221,165,28)" fg:x="36738" fg:w="9"/><text x="70.7346%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::update_pinned_pieces_and_check_line (37 samples, 0.07%)</title><rect x="70.5019%" y="805" width="0.0710%" height="15" fill="rgb(218,121,47)" fg:x="36747" fg:w="37"/><text x="70.7519%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (220 samples, 0.42%)</title><rect x="70.1604%" y="821" width="0.4221%" height="15" fill="rgb(209,120,9)" fg:x="36569" fg:w="220"/><text x="70.4104%" y="831.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::add_no_alloc (15 samples, 0.03%)</title><rect x="70.6247%" y="789" width="0.0288%" height="15" fill="rgb(236,68,12)" fg:x="36811" fg:w="15"/><text x="70.8747%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (29 samples, 0.06%)</title><rect x="70.8760%" y="773" width="0.0556%" height="15" fill="rgb(225,194,26)" fg:x="36942" fg:w="29"/><text x="71.1260%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (55 samples, 0.11%)</title><rect x="70.9317%" y="773" width="0.1055%" height="15" fill="rgb(231,84,39)" fg:x="36971" fg:w="55"/><text x="71.1817%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (289 samples, 0.55%)</title><rect x="70.6535%" y="789" width="0.5545%" height="15" fill="rgb(210,11,45)" fg:x="36826" fg:w="289"/><text x="70.9035%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (89 samples, 0.17%)</title><rect x="71.0372%" y="773" width="0.1708%" height="15" fill="rgb(224,54,52)" fg:x="37026" fg:w="89"/><text x="71.2872%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (7 samples, 0.01%)</title><rect x="71.2118%" y="789" width="0.0134%" height="15" fill="rgb(238,102,14)" fg:x="37117" fg:w="7"/><text x="71.4618%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (331 samples, 0.64%)</title><rect x="70.6017%" y="805" width="0.6350%" height="15" fill="rgb(243,160,52)" fg:x="36799" fg:w="331"/><text x="70.8517%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (345 samples, 0.66%)</title><rect x="70.5863%" y="821" width="0.6619%" height="15" fill="rgb(216,114,19)" fg:x="36791" fg:w="345"/><text x="70.8363%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.01%)</title><rect x="71.2367%" y="805" width="0.0115%" height="15" fill="rgb(244,166,37)" fg:x="37130" fg:w="6"/><text x="71.4867%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (15 samples, 0.03%)</title><rect x="71.3768%" y="789" width="0.0288%" height="15" fill="rgb(246,29,44)" fg:x="37203" fg:w="15"/><text x="71.6268%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (38 samples, 0.07%)</title><rect x="71.4055%" y="789" width="0.0729%" height="15" fill="rgb(215,56,53)" fg:x="37218" fg:w="38"/><text x="71.6555%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (150 samples, 0.29%)</title><rect x="71.2885%" y="805" width="0.2878%" height="15" fill="rgb(217,60,2)" fg:x="37157" fg:w="150"/><text x="71.5385%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (51 samples, 0.10%)</title><rect x="71.4785%" y="789" width="0.0978%" height="15" fill="rgb(207,26,24)" fg:x="37256" fg:w="51"/><text x="71.7285%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::num_checkers (174 samples, 0.33%)</title><rect x="71.2482%" y="821" width="0.3338%" height="15" fill="rgb(252,210,15)" fg:x="37136" fg:w="174"/><text x="71.4982%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::game_state (761 samples, 1.46%)</title><rect x="70.1239%" y="837" width="1.4600%" height="15" fill="rgb(253,209,26)" fg:x="36550" fg:w="761"/><text x="70.3739%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_castles (11 samples, 0.02%)</title><rect x="71.5993%" y="821" width="0.0211%" height="15" fill="rgb(238,170,14)" fg:x="37319" fg:w="11"/><text x="71.8493%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (7 samples, 0.01%)</title><rect x="71.6070%" y="805" width="0.0134%" height="15" fill="rgb(216,178,15)" fg:x="37323" fg:w="7"/><text x="71.8570%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="71.6070%" y="789" width="0.0134%" height="15" fill="rgb(250,197,2)" fg:x="37323" fg:w="7"/><text x="71.8570%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (32 samples, 0.06%)</title><rect x="71.6339%" y="789" width="0.0614%" height="15" fill="rgb(212,70,42)" fg:x="37337" fg:w="32"/><text x="71.8839%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="71.6722%" y="773" width="0.0230%" height="15" fill="rgb(227,213,9)" fg:x="37357" fg:w="12"/><text x="71.9222%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (36 samples, 0.07%)</title><rect x="71.6300%" y="805" width="0.0691%" height="15" fill="rgb(245,99,25)" fg:x="37335" fg:w="36"/><text x="71.8800%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (45 samples, 0.09%)</title><rect x="71.6204%" y="821" width="0.0863%" height="15" fill="rgb(250,82,29)" fg:x="37330" fg:w="45"/><text x="71.8704%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (10 samples, 0.02%)</title><rect x="71.7336%" y="789" width="0.0192%" height="15" fill="rgb(241,226,54)" fg:x="37389" fg:w="10"/><text x="71.9836%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (17 samples, 0.03%)</title><rect x="71.7336%" y="805" width="0.0326%" height="15" fill="rgb(221,99,41)" fg:x="37389" fg:w="17"/><text x="71.9836%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (7 samples, 0.01%)</title><rect x="71.7528%" y="789" width="0.0134%" height="15" fill="rgb(213,90,21)" fg:x="37399" fg:w="7"/><text x="72.0028%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (14 samples, 0.03%)</title><rect x="71.7739%" y="789" width="0.0269%" height="15" fill="rgb(205,208,24)" fg:x="37410" fg:w="14"/><text x="72.0239%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (24 samples, 0.05%)</title><rect x="71.7662%" y="805" width="0.0460%" height="15" fill="rgb(246,31,12)" fg:x="37406" fg:w="24"/><text x="72.0162%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_mid_board (7 samples, 0.01%)</title><rect x="71.8142%" y="789" width="0.0134%" height="15" fill="rgb(213,154,6)" fg:x="37431" fg:w="7"/><text x="72.0642%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (18 samples, 0.03%)</title><rect x="71.8814%" y="773" width="0.0345%" height="15" fill="rgb(222,163,29)" fg:x="37466" fg:w="18"/><text x="72.1314%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (8 samples, 0.02%)</title><rect x="71.9005%" y="757" width="0.0153%" height="15" fill="rgb(227,201,8)" fg:x="37476" fg:w="8"/><text x="72.1505%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (10 samples, 0.02%)</title><rect x="71.9159%" y="773" width="0.0192%" height="15" fill="rgb(233,9,32)" fg:x="37484" fg:w="10"/><text x="72.1659%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_on_2nd (72 samples, 0.14%)</title><rect x="71.8276%" y="789" width="0.1381%" height="15" fill="rgb(217,54,24)" fg:x="37438" fg:w="72"/><text x="72.0776%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.03%)</title><rect x="71.9351%" y="773" width="0.0307%" height="15" fill="rgb(235,192,0)" fg:x="37494" fg:w="16"/><text x="72.1851%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (86 samples, 0.16%)</title><rect x="71.8123%" y="805" width="0.1650%" height="15" fill="rgb(235,45,9)" fg:x="37430" fg:w="86"/><text x="72.0623%" y="815.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::add_no_alloc (6 samples, 0.01%)</title><rect x="71.9907%" y="773" width="0.0115%" height="15" fill="rgb(246,42,40)" fg:x="37523" fg:w="6"/><text x="72.2407%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (10 samples, 0.02%)</title><rect x="71.9888%" y="789" width="0.0192%" height="15" fill="rgb(248,111,24)" fg:x="37522" fg:w="10"/><text x="72.2388%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (21 samples, 0.04%)</title><rect x="71.9850%" y="805" width="0.0403%" height="15" fill="rgb(249,65,22)" fg:x="37520" fg:w="21"/><text x="72.2350%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (13 samples, 0.02%)</title><rect x="72.0310%" y="789" width="0.0249%" height="15" fill="rgb(238,111,51)" fg:x="37544" fg:w="13"/><text x="72.2810%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (18 samples, 0.03%)</title><rect x="72.0252%" y="805" width="0.0345%" height="15" fill="rgb(250,118,22)" fg:x="37541" fg:w="18"/><text x="72.2752%" y="815.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.02%)</title><rect x="72.0636%" y="805" width="0.0173%" height="15" fill="rgb(234,84,26)" fg:x="37561" fg:w="9"/><text x="72.3136%" y="815.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.01%)</title><rect x="72.0675%" y="789" width="0.0134%" height="15" fill="rgb(243,172,12)" fg:x="37563" fg:w="7"/><text x="72.3175%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (196 samples, 0.38%)</title><rect x="71.7068%" y="821" width="0.3760%" height="15" fill="rgb(236,150,49)" fg:x="37375" fg:w="196"/><text x="71.9568%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (11 samples, 0.02%)</title><rect x="72.0905%" y="805" width="0.0211%" height="15" fill="rgb(225,197,26)" fg:x="37575" fg:w="11"/><text x="72.3405%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.01%)</title><rect x="72.1001%" y="789" width="0.0115%" height="15" fill="rgb(214,17,42)" fg:x="37580" fg:w="6"/><text x="72.3501%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::num_checkers (16 samples, 0.03%)</title><rect x="72.0828%" y="821" width="0.0307%" height="15" fill="rgb(224,165,40)" fg:x="37571" fg:w="16"/><text x="72.3328%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (7 samples, 0.01%)</title><rect x="72.1653%" y="805" width="0.0134%" height="15" fill="rgb(246,100,4)" fg:x="37614" fg:w="7"/><text x="72.4153%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::update_pinned_pieces_and_check_line (41 samples, 0.08%)</title><rect x="72.1135%" y="821" width="0.0787%" height="15" fill="rgb(222,103,0)" fg:x="37587" fg:w="41"/><text x="72.3635%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (326 samples, 0.63%)</title><rect x="71.5840%" y="837" width="0.6255%" height="15" fill="rgb(227,189,26)" fg:x="37311" fg:w="326"/><text x="71.8340%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (302 samples, 0.58%)</title><rect x="72.2133%" y="837" width="0.5794%" height="15" fill="rgb(214,202,17)" fg:x="37639" fg:w="302"/><text x="72.4633%" y="847.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::new (2,119 samples, 4.07%)</title><rect x="72.8061%" y="821" width="4.0655%" height="15" fill="rgb(229,111,3)" fg:x="37948" fg:w="2119"/><text x="73.0561%" y="831.50">App`..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (52 samples, 0.10%)</title><rect x="76.7718%" y="805" width="0.0998%" height="15" fill="rgb(229,172,15)" fg:x="40015" fg:w="52"/><text x="77.0218%" y="815.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (37 samples, 0.07%)</title><rect x="77.0749%" y="789" width="0.0710%" height="15" fill="rgb(230,224,35)" fg:x="40173" fg:w="37"/><text x="77.3249%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move::_{{closure}} (145 samples, 0.28%)</title><rect x="76.8716%" y="821" width="0.2782%" height="15" fill="rgb(251,141,6)" fg:x="40067" fg:w="145"/><text x="77.1216%" y="831.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (39 samples, 0.07%)</title><rect x="77.0749%" y="805" width="0.0748%" height="15" fill="rgb(225,208,6)" fg:x="40173" fg:w="39"/><text x="77.3249%" y="815.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (10 samples, 0.02%)</title><rect x="77.1517%" y="821" width="0.0192%" height="15" fill="rgb(246,181,16)" fg:x="40213" fg:w="10"/><text x="77.4017%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (16 samples, 0.03%)</title><rect x="77.1766%" y="821" width="0.0307%" height="15" fill="rgb(227,129,36)" fg:x="40226" fg:w="16"/><text x="77.4266%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (79 samples, 0.15%)</title><rect x="77.2073%" y="821" width="0.1516%" height="15" fill="rgb(248,117,24)" fg:x="40242" fg:w="79"/><text x="77.4573%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (2,386 samples, 4.58%)</title><rect x="72.8023%" y="837" width="4.5777%" height="15" fill="rgb(214,185,35)" fg:x="37946" fg:w="2386"/><text x="73.0523%" y="847.50">App`A..</text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="77.3589%" y="821" width="0.0211%" height="15" fill="rgb(236,150,34)" fg:x="40321" fg:w="11"/><text x="77.6089%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::white_to_move (9 samples, 0.02%)</title><rect x="77.3838%" y="837" width="0.0173%" height="15" fill="rgb(243,228,27)" fg:x="40334" fg:w="9"/><text x="77.6338%" y="847.50"></text></g><g><title>App`DYLD-STUB$$memcpy (13 samples, 0.02%)</title><rect x="77.4011%" y="837" width="0.0249%" height="15" fill="rgb(245,77,44)" fg:x="40343" fg:w="13"/><text x="77.6511%" y="847.50"></text></g><g><title>App`core::slice::sort::merge_sort (32 samples, 0.06%)</title><rect x="77.4452%" y="805" width="0.0614%" height="15" fill="rgb(235,214,42)" fg:x="40366" fg:w="32"/><text x="77.6952%" y="815.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (15 samples, 0.03%)</title><rect x="77.5642%" y="757" width="0.0288%" height="15" fill="rgb(221,74,3)" fg:x="40428" fg:w="15"/><text x="77.8142%" y="767.50"></text></g><g><title>App`&lt;core::slice::sort::merge_sort::BufGuard&lt;T,ElemDeallocF&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.03%)</title><rect x="77.5642%" y="773" width="0.0307%" height="15" fill="rgb(206,121,29)" fg:x="40428" fg:w="16"/><text x="77.8142%" y="783.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;core::slice::sort::merge_sort::BufGuard&lt;App::game_manager::board2::ChessMove,alloc::slice::stable_sort&lt;App::game_manager::board2::ChessMove,alloc::slice::&lt;impl [App::game_manager::board2::ChessMove]&gt;::sort_by&lt;App::game_manager::bot2::Bot2::search::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt;&gt; (18 samples, 0.03%)</title><rect x="77.5642%" y="789" width="0.0345%" height="15" fill="rgb(249,131,53)" fg:x="40428" fg:w="18"/><text x="77.8142%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="77.6179%" y="741" width="0.0173%" height="15" fill="rgb(236,170,29)" fg:x="40456" fg:w="9"/><text x="77.8679%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (7 samples, 0.01%)</title><rect x="77.6217%" y="725" width="0.0134%" height="15" fill="rgb(247,96,15)" fg:x="40458" fg:w="7"/><text x="77.8717%" y="735.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (16 samples, 0.03%)</title><rect x="77.6083%" y="757" width="0.0307%" height="15" fill="rgb(211,210,7)" fg:x="40451" fg:w="16"/><text x="77.8583%" y="767.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;core::slice::sort::merge_sort::RunVec&lt;alloc::slice::stable_sort&lt;App::game_manager::board2::ChessMove,alloc::slice::&lt;impl [App::game_manager::board2::ChessMove]&gt;::sort_by&lt;App::game_manager::bot2::Bot2::search::{{closure}}&gt;::{{closure}}&gt;::{{closure}},alloc::slice::stable_sort&lt;App::game_manager::board2::ChessMove,alloc::slice::&lt;impl [App::game_manager::board2::ChessMove]&gt;::sort_by&lt;App::game_manager::bot2::Bot2::search::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt;&gt; (24 samples, 0.05%)</title><rect x="77.5987%" y="789" width="0.0460%" height="15" fill="rgb(240,88,50)" fg:x="40446" fg:w="24"/><text x="77.8487%" y="799.50"></text></g><g><title>App`&lt;core::slice::sort::merge_sort::RunVec&lt;RunAllocF,RunDeallocF&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.04%)</title><rect x="77.6006%" y="773" width="0.0441%" height="15" fill="rgb(209,229,26)" fg:x="40447" fg:w="23"/><text x="77.8506%" y="783.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (30 samples, 0.06%)</title><rect x="77.7004%" y="757" width="0.0576%" height="15" fill="rgb(210,68,23)" fg:x="40499" fg:w="30"/><text x="77.9504%" y="767.50"></text></g><g><title>App`core::cmp::impls::_&lt;impl core::cmp::Ord for i16&gt;::cmp (10 samples, 0.02%)</title><rect x="77.7388%" y="741" width="0.0192%" height="15" fill="rgb(229,180,13)" fg:x="40519" fg:w="10"/><text x="77.9888%" y="751.50"></text></g><g><title>App`core::slice::sort::find_streak (57 samples, 0.11%)</title><rect x="77.6563%" y="789" width="0.1094%" height="15" fill="rgb(236,53,44)" fg:x="40476" fg:w="57"/><text x="77.9063%" y="799.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (38 samples, 0.07%)</title><rect x="77.6927%" y="773" width="0.0729%" height="15" fill="rgb(244,214,29)" fg:x="40495" fg:w="38"/><text x="77.9427%" y="783.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (13 samples, 0.02%)</title><rect x="77.8040%" y="741" width="0.0249%" height="15" fill="rgb(220,75,29)" fg:x="40553" fg:w="13"/><text x="78.0540%" y="751.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (34 samples, 0.07%)</title><rect x="77.7656%" y="789" width="0.0652%" height="15" fill="rgb(214,183,37)" fg:x="40533" fg:w="34"/><text x="78.0156%" y="799.50"></text></g><g><title>App`core::slice::sort::insert_tail (27 samples, 0.05%)</title><rect x="77.7791%" y="773" width="0.0518%" height="15" fill="rgb(239,117,29)" fg:x="40540" fg:w="27"/><text x="78.0291%" y="783.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (21 samples, 0.04%)</title><rect x="77.7906%" y="757" width="0.0403%" height="15" fill="rgb(237,171,35)" fg:x="40546" fg:w="21"/><text x="78.0406%" y="767.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::promising_level (12 samples, 0.02%)</title><rect x="78.2146%" y="741" width="0.0230%" height="15" fill="rgb(229,178,53)" fg:x="40767" fg:w="12"/><text x="78.4646%" y="751.50"></text></g><g><title>App`core::cmp::Ordering::reverse (23 samples, 0.04%)</title><rect x="78.2376%" y="741" width="0.0441%" height="15" fill="rgb(210,102,19)" fg:x="40779" fg:w="23"/><text x="78.4876%" y="751.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (126 samples, 0.24%)</title><rect x="78.1340%" y="757" width="0.2417%" height="15" fill="rgb(235,127,22)" fg:x="40725" fg:w="126"/><text x="78.3840%" y="767.50"></text></g><g><title>App`core::cmp::impls::_&lt;impl core::cmp::Ord for i16&gt;::cmp (49 samples, 0.09%)</title><rect x="78.2817%" y="741" width="0.0940%" height="15" fill="rgb(244,31,31)" fg:x="40802" fg:w="49"/><text x="78.5317%" y="751.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (161 samples, 0.31%)</title><rect x="78.0764%" y="773" width="0.3089%" height="15" fill="rgb(231,43,21)" fg:x="40695" fg:w="161"/><text x="78.3264%" y="783.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;core::slice::sort::merge::MergeHole&lt;App::game_manager::board2::ChessMove&gt;&gt; (7 samples, 0.01%)</title><rect x="78.3853%" y="773" width="0.0134%" height="15" fill="rgb(217,131,35)" fg:x="40856" fg:w="7"/><text x="78.6353%" y="783.50"></text></g><g><title>App`core::slice::sort::merge (315 samples, 0.60%)</title><rect x="77.8309%" y="789" width="0.6044%" height="15" fill="rgb(221,149,4)" fg:x="40567" fg:w="315"/><text x="78.0809%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.04%)</title><rect x="78.3988%" y="773" width="0.0365%" height="15" fill="rgb(232,170,28)" fg:x="40863" fg:w="19"/><text x="78.6488%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.04%)</title><rect x="78.4563%" y="757" width="0.0384%" height="15" fill="rgb(238,56,10)" fg:x="40893" fg:w="20"/><text x="78.7063%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.03%)</title><rect x="78.4602%" y="741" width="0.0345%" height="15" fill="rgb(235,196,14)" fg:x="40895" fg:w="18"/><text x="78.7102%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.03%)</title><rect x="78.4602%" y="725" width="0.0345%" height="15" fill="rgb(216,45,48)" fg:x="40895" fg:w="18"/><text x="78.7102%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.02%)</title><rect x="78.4755%" y="709" width="0.0192%" height="15" fill="rgb(238,213,17)" fg:x="40903" fg:w="10"/><text x="78.7255%" y="719.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (33 samples, 0.06%)</title><rect x="78.4390%" y="773" width="0.0633%" height="15" fill="rgb(212,13,2)" fg:x="40884" fg:w="33"/><text x="78.6890%" y="783.50"></text></g><g><title>App`core::slice::sort::merge_sort::BufGuard&lt;T,ElemDeallocF&gt;::new (39 samples, 0.07%)</title><rect x="78.4352%" y="789" width="0.0748%" height="15" fill="rgb(240,114,20)" fg:x="40882" fg:w="39"/><text x="78.6852%" y="799.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (29 samples, 0.06%)</title><rect x="78.5158%" y="773" width="0.0556%" height="15" fill="rgb(228,41,40)" fg:x="40924" fg:w="29"/><text x="78.7658%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.04%)</title><rect x="78.5273%" y="757" width="0.0441%" height="15" fill="rgb(244,132,35)" fg:x="40930" fg:w="23"/><text x="78.7773%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.04%)</title><rect x="78.5331%" y="741" width="0.0384%" height="15" fill="rgb(253,189,4)" fg:x="40933" fg:w="20"/><text x="78.7831%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (20 samples, 0.04%)</title><rect x="78.5331%" y="725" width="0.0384%" height="15" fill="rgb(224,37,19)" fg:x="40933" fg:w="20"/><text x="78.7831%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (16 samples, 0.03%)</title><rect x="78.5407%" y="709" width="0.0307%" height="15" fill="rgb(235,223,18)" fg:x="40937" fg:w="16"/><text x="78.7907%" y="719.50"></text></g><g><title>App`core::slice::sort::merge_sort::RunVec&lt;RunAllocF,RunDeallocF&gt;::new (34 samples, 0.07%)</title><rect x="78.5100%" y="789" width="0.0652%" height="15" fill="rgb(235,163,25)" fg:x="40921" fg:w="34"/><text x="78.7600%" y="799.50"></text></g><g><title>App`core::slice::sort::merge_sort::collapse (17 samples, 0.03%)</title><rect x="78.5925%" y="789" width="0.0326%" height="15" fill="rgb(217,145,28)" fg:x="40964" fg:w="17"/><text x="78.8425%" y="799.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (9 samples, 0.02%)</title><rect x="78.6367%" y="773" width="0.0173%" height="15" fill="rgb(223,223,32)" fg:x="40987" fg:w="9"/><text x="78.8867%" y="783.50"></text></g><g><title>App`core::cmp::max_by (9 samples, 0.02%)</title><rect x="78.6616%" y="773" width="0.0173%" height="15" fill="rgb(227,189,39)" fg:x="41000" fg:w="9"/><text x="78.9116%" y="783.50"></text></g><g><title>App`core::cmp::min_by (17 samples, 0.03%)</title><rect x="78.6789%" y="773" width="0.0326%" height="15" fill="rgb(248,10,22)" fg:x="41009" fg:w="17"/><text x="78.9289%" y="783.50"></text></g><g><title>App`&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (36 samples, 0.07%)</title><rect x="78.7921%" y="757" width="0.0691%" height="15" fill="rgb(248,46,39)" fg:x="41068" fg:w="36"/><text x="79.0421%" y="767.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (18 samples, 0.03%)</title><rect x="78.8266%" y="741" width="0.0345%" height="15" fill="rgb(248,113,48)" fg:x="41086" fg:w="18"/><text x="79.0766%" y="751.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (20 samples, 0.04%)</title><rect x="79.0242%" y="741" width="0.0384%" height="15" fill="rgb(245,16,25)" fg:x="41189" fg:w="20"/><text x="79.2742%" y="751.50"></text></g><g><title>App`&lt;usize as core::iter::range::Step&gt;::backward_unchecked (6 samples, 0.01%)</title><rect x="79.0645%" y="741" width="0.0115%" height="15" fill="rgb(249,152,16)" fg:x="41210" fg:w="6"/><text x="79.3145%" y="751.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::promising_level (6 samples, 0.01%)</title><rect x="79.1432%" y="725" width="0.0115%" height="15" fill="rgb(250,16,1)" fg:x="41251" fg:w="6"/><text x="79.3932%" y="735.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::promising_level (14 samples, 0.03%)</title><rect x="79.2583%" y="709" width="0.0269%" height="15" fill="rgb(249,138,3)" fg:x="41311" fg:w="14"/><text x="79.5083%" y="719.50"></text></g><g><title>App`core::cmp::Ordering::reverse (23 samples, 0.04%)</title><rect x="79.2851%" y="709" width="0.0441%" height="15" fill="rgb(227,71,41)" fg:x="41325" fg:w="23"/><text x="79.5351%" y="719.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (145 samples, 0.28%)</title><rect x="79.1547%" y="725" width="0.2782%" height="15" fill="rgb(209,184,23)" fg:x="41257" fg:w="145"/><text x="79.4047%" y="735.50"></text></g><g><title>App`core::cmp::impls::_&lt;impl core::cmp::Ord for i16&gt;::cmp (54 samples, 0.10%)</title><rect x="79.3293%" y="709" width="0.1036%" height="15" fill="rgb(223,215,31)" fg:x="41348" fg:w="54"/><text x="79.5793%" y="719.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (188 samples, 0.36%)</title><rect x="79.0760%" y="741" width="0.3607%" height="15" fill="rgb(210,146,28)" fg:x="41216" fg:w="188"/><text x="79.3260%" y="751.50"></text></g><g><title>App`core::slice::sort::provide_sorted_batch (425 samples, 0.82%)</title><rect x="78.6251%" y="789" width="0.8154%" height="15" fill="rgb(209,183,41)" fg:x="40981" fg:w="425"/><text x="78.8751%" y="799.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (375 samples, 0.72%)</title><rect x="78.7211%" y="773" width="0.7195%" height="15" fill="rgb(209,224,45)" fg:x="41031" fg:w="375"/><text x="78.9711%" y="783.50"></text></g><g><title>App`core::slice::sort::insert_tail (301 samples, 0.58%)</title><rect x="78.8631%" y="757" width="0.5775%" height="15" fill="rgb(224,209,51)" fg:x="41105" fg:w="301"/><text x="79.1131%" y="767.50"></text></g><g><title>App`core::slice::sort::merge_sort (1,008 samples, 1.93%)</title><rect x="77.5200%" y="805" width="1.9339%" height="15" fill="rgb(223,17,39)" fg:x="40405" fg:w="1008"/><text x="77.7700%" y="815.50">A..</text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by (1,060 samples, 2.03%)</title><rect x="77.4280%" y="837" width="2.0337%" height="15" fill="rgb(234,204,37)" fg:x="40357" fg:w="1060"/><text x="77.6780%" y="847.50">A..</text></g><g><title>App`alloc::slice::stable_sort (1,059 samples, 2.03%)</title><rect x="77.4299%" y="821" width="2.0318%" height="15" fill="rgb(236,120,5)" fg:x="40358" fg:w="1059"/><text x="77.6799%" y="831.50">A..</text></g><g><title>App`alloc::vec::Vec&lt;T,A&gt;::pop (29 samples, 0.06%)</title><rect x="79.4636%" y="837" width="0.0556%" height="15" fill="rgb(248,97,27)" fg:x="41418" fg:w="29"/><text x="79.7136%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.03%)</title><rect x="79.4847%" y="821" width="0.0345%" height="15" fill="rgb(240,66,17)" fg:x="41429" fg:w="18"/><text x="79.7347%" y="831.50"></text></g><g><title>App`alloc::vec::Vec&lt;T,A&gt;::push (25 samples, 0.05%)</title><rect x="79.5192%" y="837" width="0.0480%" height="15" fill="rgb(210,79,3)" fg:x="41447" fg:w="25"/><text x="79.7692%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="79.5461%" y="821" width="0.0211%" height="15" fill="rgb(214,176,27)" fg:x="41461" fg:w="11"/><text x="79.7961%" y="831.50"></text></g><g><title>App`core::cmp::max (6 samples, 0.01%)</title><rect x="79.5691%" y="837" width="0.0115%" height="15" fill="rgb(235,185,3)" fg:x="41473" fg:w="6"/><text x="79.8191%" y="847.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (24 samples, 0.05%)</title><rect x="79.6017%" y="821" width="0.0460%" height="15" fill="rgb(227,24,12)" fg:x="41490" fg:w="24"/><text x="79.8517%" y="831.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (36 samples, 0.07%)</title><rect x="79.5806%" y="837" width="0.0691%" height="15" fill="rgb(252,169,48)" fg:x="41479" fg:w="36"/><text x="79.8306%" y="847.50"></text></g><g><title>App`alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (8 samples, 0.02%)</title><rect x="79.6689%" y="805" width="0.0153%" height="15" fill="rgb(212,65,1)" fg:x="41525" fg:w="8"/><text x="79.9189%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (6 samples, 0.01%)</title><rect x="79.7130%" y="709" width="0.0115%" height="15" fill="rgb(242,39,24)" fg:x="41548" fg:w="6"/><text x="79.9630%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.02%)</title><rect x="79.7245%" y="709" width="0.0249%" height="15" fill="rgb(249,32,23)" fg:x="41554" fg:w="13"/><text x="79.9745%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.02%)</title><rect x="79.7245%" y="693" width="0.0249%" height="15" fill="rgb(251,195,23)" fg:x="41554" fg:w="13"/><text x="79.9745%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.05%)</title><rect x="79.7034%" y="725" width="0.0480%" height="15" fill="rgb(236,174,8)" fg:x="41543" fg:w="25"/><text x="79.9534%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (28 samples, 0.05%)</title><rect x="79.7514%" y="725" width="0.0537%" height="15" fill="rgb(220,197,8)" fg:x="41568" fg:w="28"/><text x="80.0014%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (18 samples, 0.03%)</title><rect x="79.7705%" y="709" width="0.0345%" height="15" fill="rgb(240,108,37)" fg:x="41578" fg:w="18"/><text x="80.0205%" y="719.50"></text></g><g><title>App`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57 samples, 0.11%)</title><rect x="79.7015%" y="741" width="0.1094%" height="15" fill="rgb(232,176,24)" fg:x="41542" fg:w="57"/><text x="79.9515%" y="751.50"></text></g><g><title>App`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.13%)</title><rect x="79.7015%" y="757" width="0.1343%" height="15" fill="rgb(243,35,29)" fg:x="41542" fg:w="70"/><text x="79.9515%" y="767.50"></text></g><g><title>App`&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.16%)</title><rect x="79.6861%" y="789" width="0.1554%" height="15" fill="rgb(210,37,18)" fg:x="41534" fg:w="81"/><text x="79.9361%" y="799.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;App::game_manager::board2::ChessMove&gt;&gt; (78 samples, 0.15%)</title><rect x="79.6919%" y="773" width="0.1496%" height="15" fill="rgb(224,184,40)" fg:x="41537" fg:w="78"/><text x="79.9419%" y="783.50"></text></g><g><title>App`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.18%)</title><rect x="79.6650%" y="821" width="0.1803%" height="15" fill="rgb(236,39,29)" fg:x="41523" fg:w="94"/><text x="79.9150%" y="831.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;App::game_manager::board2::ChessMove,alloc::alloc::Global&gt;&gt; (84 samples, 0.16%)</title><rect x="79.6842%" y="805" width="0.1612%" height="15" fill="rgb(232,48,39)" fg:x="41533" fg:w="84"/><text x="79.9342%" y="815.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;App::game_manager::board2::ChessMove&gt;&gt; (98 samples, 0.19%)</title><rect x="79.6650%" y="837" width="0.1880%" height="15" fill="rgb(236,34,42)" fg:x="41523" fg:w="98"/><text x="79.9150%" y="847.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u16 (9 samples, 0.02%)</title><rect x="79.9739%" y="725" width="0.0173%" height="15" fill="rgb(243,106,37)" fg:x="41684" fg:w="9"/><text x="80.2239%" y="735.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (8 samples, 0.02%)</title><rect x="79.9758%" y="709" width="0.0153%" height="15" fill="rgb(218,96,6)" fg:x="41685" fg:w="8"/><text x="80.2258%" y="719.50"></text></g><g><title>App`&lt;App::game_manager::board2::ChessMove as core::hash::Hash&gt;::hash (12 samples, 0.02%)</title><rect x="79.9701%" y="757" width="0.0230%" height="15" fill="rgb(235,130,12)" fg:x="41682" fg:w="12"/><text x="80.2201%" y="767.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u16&gt;::hash (11 samples, 0.02%)</title><rect x="79.9720%" y="741" width="0.0211%" height="15" fill="rgb(231,95,0)" fg:x="41683" fg:w="11"/><text x="80.2220%" y="751.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_usize (23 samples, 0.04%)</title><rect x="80.0430%" y="693" width="0.0441%" height="15" fill="rgb(228,12,23)" fg:x="41720" fg:w="23"/><text x="80.2930%" y="703.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (20 samples, 0.04%)</title><rect x="80.0487%" y="677" width="0.0384%" height="15" fill="rgb(216,12,1)" fg:x="41723" fg:w="20"/><text x="80.2987%" y="687.50"></text></g><g><title>App`core::hash::Hasher::write_length_prefix (30 samples, 0.06%)</title><rect x="80.0372%" y="709" width="0.0576%" height="15" fill="rgb(219,59,3)" fg:x="41717" fg:w="30"/><text x="80.2872%" y="719.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (7 samples, 0.01%)</title><rect x="80.1255%" y="661" width="0.0134%" height="15" fill="rgb(215,208,46)" fg:x="41763" fg:w="7"/><text x="80.3755%" y="671.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (7 samples, 0.01%)</title><rect x="80.1408%" y="661" width="0.0134%" height="15" fill="rgb(254,224,29)" fg:x="41771" fg:w="7"/><text x="80.3908%" y="671.50"></text></g><g><title>App`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (6 samples, 0.01%)</title><rect x="80.1619%" y="661" width="0.0115%" height="15" fill="rgb(232,14,29)" fg:x="41782" fg:w="6"/><text x="80.4119%" y="671.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (6 samples, 0.01%)</title><rect x="80.3020%" y="645" width="0.0115%" height="15" fill="rgb(208,45,52)" fg:x="41855" fg:w="6"/><text x="80.5520%" y="655.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (131 samples, 0.25%)</title><rect x="80.3922%" y="613" width="0.2513%" height="15" fill="rgb(234,191,28)" fg:x="41902" fg:w="131"/><text x="80.6422%" y="623.50"></text></g><g><title> N]&gt;::try_from (131 samples, 0.25%)</title><rect x="80.3922%" y="597" width="0.2513%" height="15" fill="rgb(244,67,43)" fg:x="41902" fg:w="131"/><text x="80.6422%" y="607.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (101 samples, 0.19%)</title><rect x="80.4497%" y="581" width="0.1938%" height="15" fill="rgb(236,189,24)" fg:x="41932" fg:w="101"/><text x="80.6997%" y="591.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (35 samples, 0.07%)</title><rect x="80.5763%" y="565" width="0.0672%" height="15" fill="rgb(239,214,33)" fg:x="41998" fg:w="35"/><text x="80.8263%" y="575.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (35 samples, 0.07%)</title><rect x="80.5763%" y="549" width="0.0672%" height="15" fill="rgb(226,176,41)" fg:x="41998" fg:w="35"/><text x="80.8263%" y="559.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (142 samples, 0.27%)</title><rect x="80.3787%" y="629" width="0.2724%" height="15" fill="rgb(248,47,8)" fg:x="41895" fg:w="142"/><text x="80.6287%" y="639.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.02%)</title><rect x="80.6512%" y="629" width="0.0192%" height="15" fill="rgb(218,81,44)" fg:x="42037" fg:w="10"/><text x="80.9012%" y="639.50"></text></g><g><title>App`core::num::_&lt;impl u64&gt;::from_le_bytes (42 samples, 0.08%)</title><rect x="80.6723%" y="629" width="0.0806%" height="15" fill="rgb(213,98,6)" fg:x="42048" fg:w="42"/><text x="80.9223%" y="639.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::unwrap (11 samples, 0.02%)</title><rect x="80.7528%" y="629" width="0.0211%" height="15" fill="rgb(222,85,22)" fg:x="42090" fg:w="11"/><text x="81.0028%" y="639.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (355 samples, 0.68%)</title><rect x="80.3135%" y="645" width="0.6811%" height="15" fill="rgb(239,46,39)" fg:x="41861" fg:w="355"/><text x="80.5635%" y="655.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (115 samples, 0.22%)</title><rect x="80.7740%" y="629" width="0.2206%" height="15" fill="rgb(237,12,29)" fg:x="42101" fg:w="115"/><text x="81.0240%" y="639.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (97 samples, 0.19%)</title><rect x="80.8085%" y="613" width="0.1861%" height="15" fill="rgb(214,77,8)" fg:x="42119" fg:w="97"/><text x="81.0585%" y="623.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (72 samples, 0.14%)</title><rect x="80.8565%" y="597" width="0.1381%" height="15" fill="rgb(217,168,37)" fg:x="42144" fg:w="72"/><text x="81.1065%" y="607.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.03%)</title><rect x="80.9946%" y="645" width="0.0326%" height="15" fill="rgb(221,217,23)" fg:x="42216" fg:w="17"/><text x="81.2446%" y="655.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (41 samples, 0.08%)</title><rect x="81.0291%" y="645" width="0.0787%" height="15" fill="rgb(243,229,36)" fg:x="42234" fg:w="41"/><text x="81.2791%" y="655.50"></text></g><g><title>App`&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (6 samples, 0.01%)</title><rect x="81.0963%" y="629" width="0.0115%" height="15" fill="rgb(251,163,40)" fg:x="42269" fg:w="6"/><text x="81.3463%" y="639.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (66 samples, 0.13%)</title><rect x="81.1193%" y="645" width="0.1266%" height="15" fill="rgb(237,222,12)" fg:x="42281" fg:w="66"/><text x="81.3693%" y="655.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (659 samples, 1.26%)</title><rect x="80.0084%" y="741" width="1.2643%" height="15" fill="rgb(248,132,6)" fg:x="41702" fg:w="659"/><text x="80.2584%" y="751.50"></text></g><g><title> N]&gt;::hash (659 samples, 1.26%)</title><rect x="80.0084%" y="725" width="1.2643%" height="15" fill="rgb(227,167,50)" fg:x="41702" fg:w="659"/><text x="80.2584%" y="735.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (614 samples, 1.18%)</title><rect x="80.0948%" y="709" width="1.1780%" height="15" fill="rgb(242,84,37)" fg:x="41747" fg:w="614"/><text x="80.3448%" y="719.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (605 samples, 1.16%)</title><rect x="80.1120%" y="693" width="1.1607%" height="15" fill="rgb(212,4,50)" fg:x="41756" fg:w="605"/><text x="80.3620%" y="703.50"></text></g><g><title>App`fxhash::write (598 samples, 1.15%)</title><rect x="80.1255%" y="677" width="1.1473%" height="15" fill="rgb(230,228,32)" fg:x="41763" fg:w="598"/><text x="80.3755%" y="687.50"></text></g><g><title>App`fxhash::write64 (573 samples, 1.10%)</title><rect x="80.1734%" y="661" width="1.0993%" height="15" fill="rgb(248,217,23)" fg:x="41788" fg:w="573"/><text x="80.4234%" y="671.50"></text></g><g><title>App`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (13 samples, 0.02%)</title><rect x="81.2478%" y="645" width="0.0249%" height="15" fill="rgb(238,197,32)" fg:x="42348" fg:w="13"/><text x="81.4978%" y="655.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u8 (8 samples, 0.02%)</title><rect x="81.2785%" y="725" width="0.0153%" height="15" fill="rgb(236,106,1)" fg:x="42364" fg:w="8"/><text x="81.5285%" y="735.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (6 samples, 0.01%)</title><rect x="81.2824%" y="709" width="0.0115%" height="15" fill="rgb(219,228,13)" fg:x="42366" fg:w="6"/><text x="81.5324%" y="719.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (679 samples, 1.30%)</title><rect x="79.9931%" y="757" width="1.3027%" height="15" fill="rgb(238,30,35)" fg:x="41694" fg:w="679"/><text x="80.2431%" y="767.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash (10 samples, 0.02%)</title><rect x="81.2766%" y="741" width="0.0192%" height="15" fill="rgb(236,70,23)" fg:x="42363" fg:w="10"/><text x="81.5266%" y="751.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (6 samples, 0.01%)</title><rect x="81.2958%" y="757" width="0.0115%" height="15" fill="rgb(249,104,48)" fg:x="42373" fg:w="6"/><text x="81.5458%" y="767.50"></text></g><g><title> N]&gt;::hash (6 samples, 0.01%)</title><rect x="81.2958%" y="741" width="0.0115%" height="15" fill="rgb(254,117,50)" fg:x="42373" fg:w="6"/><text x="81.5458%" y="751.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (699 samples, 1.34%)</title><rect x="79.9682%" y="789" width="1.3411%" height="15" fill="rgb(223,152,4)" fg:x="41681" fg:w="699"/><text x="80.2182%" y="799.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (699 samples, 1.34%)</title><rect x="79.9682%" y="773" width="1.3411%" height="15" fill="rgb(245,6,2)" fg:x="41681" fg:w="699"/><text x="80.2182%" y="783.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (717 samples, 1.38%)</title><rect x="79.9375%" y="805" width="1.3756%" height="15" fill="rgb(249,150,24)" fg:x="41665" fg:w="717"/><text x="80.1875%" y="815.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (54 samples, 0.10%)</title><rect x="81.5433%" y="533" width="0.1036%" height="15" fill="rgb(228,185,42)" fg:x="42502" fg:w="54"/><text x="81.7933%" y="543.50"></text></g><g><title> N]&gt;::try_from (54 samples, 0.10%)</title><rect x="81.5433%" y="517" width="0.1036%" height="15" fill="rgb(226,39,33)" fg:x="42502" fg:w="54"/><text x="81.7933%" y="527.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (42 samples, 0.08%)</title><rect x="81.5663%" y="501" width="0.0806%" height="15" fill="rgb(221,166,19)" fg:x="42514" fg:w="42"/><text x="81.8163%" y="511.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (17 samples, 0.03%)</title><rect x="81.6143%" y="485" width="0.0326%" height="15" fill="rgb(209,109,2)" fg:x="42539" fg:w="17"/><text x="81.8643%" y="495.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (17 samples, 0.03%)</title><rect x="81.6143%" y="469" width="0.0326%" height="15" fill="rgb(252,216,26)" fg:x="42539" fg:w="17"/><text x="81.8643%" y="479.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (58 samples, 0.11%)</title><rect x="81.5375%" y="549" width="0.1113%" height="15" fill="rgb(227,173,36)" fg:x="42499" fg:w="58"/><text x="81.7875%" y="559.50"></text></g><g><title>App`core::num::_&lt;impl u64&gt;::from_le_bytes (8 samples, 0.02%)</title><rect x="81.6507%" y="549" width="0.0153%" height="15" fill="rgb(209,90,7)" fg:x="42558" fg:w="8"/><text x="81.9007%" y="559.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (131 samples, 0.25%)</title><rect x="81.5030%" y="565" width="0.2513%" height="15" fill="rgb(250,194,11)" fg:x="42481" fg:w="131"/><text x="81.7530%" y="575.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (41 samples, 0.08%)</title><rect x="81.6757%" y="549" width="0.0787%" height="15" fill="rgb(220,72,50)" fg:x="42571" fg:w="41"/><text x="81.9257%" y="559.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (36 samples, 0.07%)</title><rect x="81.6853%" y="533" width="0.0691%" height="15" fill="rgb(222,106,48)" fg:x="42576" fg:w="36"/><text x="81.9353%" y="543.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (31 samples, 0.06%)</title><rect x="81.6949%" y="517" width="0.0595%" height="15" fill="rgb(216,220,45)" fg:x="42581" fg:w="31"/><text x="81.9449%" y="527.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (22 samples, 0.04%)</title><rect x="81.7639%" y="565" width="0.0422%" height="15" fill="rgb(234,112,18)" fg:x="42617" fg:w="22"/><text x="82.0139%" y="575.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (24 samples, 0.05%)</title><rect x="81.8061%" y="565" width="0.0460%" height="15" fill="rgb(206,179,9)" fg:x="42639" fg:w="24"/><text x="82.0561%" y="575.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (223 samples, 0.43%)</title><rect x="81.4455%" y="613" width="0.4278%" height="15" fill="rgb(215,115,40)" fg:x="42451" fg:w="223"/><text x="81.6955%" y="623.50"></text></g><g><title>App`fxhash::write (216 samples, 0.41%)</title><rect x="81.4589%" y="597" width="0.4144%" height="15" fill="rgb(222,69,34)" fg:x="42458" fg:w="216"/><text x="81.7089%" y="607.50"></text></g><g><title>App`fxhash::write64 (214 samples, 0.41%)</title><rect x="81.4627%" y="581" width="0.4106%" height="15" fill="rgb(209,161,10)" fg:x="42460" fg:w="214"/><text x="81.7127%" y="591.50"></text></g><g><title>App`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (8 samples, 0.02%)</title><rect x="81.8579%" y="565" width="0.0153%" height="15" fill="rgb(217,6,38)" fg:x="42666" fg:w="8"/><text x="82.1079%" y="575.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (232 samples, 0.45%)</title><rect x="81.4301%" y="661" width="0.4451%" height="15" fill="rgb(229,229,48)" fg:x="42443" fg:w="232"/><text x="81.6801%" y="671.50"></text></g><g><title> N]&gt;::hash (232 samples, 0.45%)</title><rect x="81.4301%" y="645" width="0.4451%" height="15" fill="rgb(225,21,28)" fg:x="42443" fg:w="232"/><text x="81.6801%" y="655.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (228 samples, 0.44%)</title><rect x="81.4378%" y="629" width="0.4374%" height="15" fill="rgb(206,33,13)" fg:x="42447" fg:w="228"/><text x="81.6878%" y="639.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (237 samples, 0.45%)</title><rect x="81.4244%" y="677" width="0.4547%" height="15" fill="rgb(242,178,17)" fg:x="42440" fg:w="237"/><text x="81.6744%" y="687.50"></text></g><g><title>App`hashbrown::map::make_hasher::_{{closure}} (245 samples, 0.47%)</title><rect x="81.4109%" y="741" width="0.4701%" height="15" fill="rgb(220,162,5)" fg:x="42433" fg:w="245"/><text x="81.6609%" y="751.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (244 samples, 0.47%)</title><rect x="81.4128%" y="725" width="0.4681%" height="15" fill="rgb(210,33,43)" fg:x="42434" fg:w="244"/><text x="81.6628%" y="735.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (242 samples, 0.46%)</title><rect x="81.4167%" y="709" width="0.4643%" height="15" fill="rgb(216,116,54)" fg:x="42436" fg:w="242"/><text x="81.6667%" y="719.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (242 samples, 0.46%)</title><rect x="81.4167%" y="693" width="0.4643%" height="15" fill="rgb(249,92,24)" fg:x="42436" fg:w="242"/><text x="81.6667%" y="703.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (257 samples, 0.49%)</title><rect x="81.3937%" y="757" width="0.4931%" height="15" fill="rgb(231,189,14)" fg:x="42424" fg:w="257"/><text x="81.6437%" y="767.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_loadu_si128 (9 samples, 0.02%)</title><rect x="81.8963%" y="725" width="0.0173%" height="15" fill="rgb(230,8,41)" fg:x="42686" fg:w="9"/><text x="82.1463%" y="735.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (9 samples, 0.02%)</title><rect x="81.9136%" y="725" width="0.0173%" height="15" fill="rgb(249,7,27)" fg:x="42695" fg:w="9"/><text x="82.1636%" y="735.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (24 samples, 0.05%)</title><rect x="81.8867%" y="757" width="0.0460%" height="15" fill="rgb(232,86,5)" fg:x="42681" fg:w="24"/><text x="82.1367%" y="767.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (22 samples, 0.04%)</title><rect x="81.8906%" y="741" width="0.0422%" height="15" fill="rgb(224,175,18)" fg:x="42683" fg:w="22"/><text x="82.1406%" y="751.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (324 samples, 0.62%)</title><rect x="81.3725%" y="773" width="0.6216%" height="15" fill="rgb(220,129,12)" fg:x="42413" fg:w="324"/><text x="81.6225%" y="783.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (32 samples, 0.06%)</title><rect x="81.9328%" y="757" width="0.0614%" height="15" fill="rgb(210,19,36)" fg:x="42705" fg:w="32"/><text x="82.1828%" y="767.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (332 samples, 0.64%)</title><rect x="81.3610%" y="789" width="0.6370%" height="15" fill="rgb(219,96,14)" fg:x="42407" fg:w="332"/><text x="81.6110%" y="799.50"></text></g><g><title>App`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.04%)</title><rect x="82.0728%" y="773" width="0.0384%" height="15" fill="rgb(249,106,1)" fg:x="42778" fg:w="20"/><text x="82.3228%" y="783.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_loadu_si128 (32 samples, 0.06%)</title><rect x="82.1131%" y="773" width="0.0614%" height="15" fill="rgb(249,155,20)" fg:x="42799" fg:w="32"/><text x="82.3631%" y="783.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (21 samples, 0.04%)</title><rect x="82.2148%" y="645" width="0.0403%" height="15" fill="rgb(244,168,9)" fg:x="42852" fg:w="21"/><text x="82.4648%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (15 samples, 0.03%)</title><rect x="82.2263%" y="629" width="0.0288%" height="15" fill="rgb(216,23,50)" fg:x="42858" fg:w="15"/><text x="82.4763%" y="639.50"></text></g><g><title>App`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (28 samples, 0.05%)</title><rect x="82.2033%" y="741" width="0.0537%" height="15" fill="rgb(224,219,20)" fg:x="42846" fg:w="28"/><text x="82.4533%" y="751.50"></text></g><g><title>App`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (25 samples, 0.05%)</title><rect x="82.2090%" y="725" width="0.0480%" height="15" fill="rgb(222,156,15)" fg:x="42849" fg:w="25"/><text x="82.4590%" y="735.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (25 samples, 0.05%)</title><rect x="82.2090%" y="709" width="0.0480%" height="15" fill="rgb(231,97,17)" fg:x="42849" fg:w="25"/><text x="82.4590%" y="719.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (24 samples, 0.05%)</title><rect x="82.2110%" y="693" width="0.0460%" height="15" fill="rgb(218,70,48)" fg:x="42850" fg:w="24"/><text x="82.4610%" y="703.50"></text></g><g><title> N]&gt; for [A (24 samples, 0.05%)</title><rect x="82.2110%" y="677" width="0.0460%" height="15" fill="rgb(212,196,52)" fg:x="42850" fg:w="24"/><text x="82.4610%" y="687.50"></text></g><g><title> N]&gt;::eq (24 samples, 0.05%)</title><rect x="82.2110%" y="661" width="0.0460%" height="15" fill="rgb(243,203,18)" fg:x="42850" fg:w="24"/><text x="82.4610%" y="671.50"></text></g><g><title>App`hashbrown::map::equivalent_key::_{{closure}} (29 samples, 0.06%)</title><rect x="82.2033%" y="757" width="0.0556%" height="15" fill="rgb(252,125,41)" fg:x="42846" fg:w="29"/><text x="82.4533%" y="767.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (41 samples, 0.08%)</title><rect x="82.1841%" y="773" width="0.0787%" height="15" fill="rgb(223,180,33)" fg:x="42836" fg:w="41"/><text x="82.4341%" y="783.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (33 samples, 0.06%)</title><rect x="82.2628%" y="773" width="0.0633%" height="15" fill="rgb(254,159,46)" fg:x="42877" fg:w="33"/><text x="82.5128%" y="783.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_movemask_epi8 (17 samples, 0.03%)</title><rect x="82.2935%" y="757" width="0.0326%" height="15" fill="rgb(254,38,10)" fg:x="42893" fg:w="17"/><text x="82.5435%" y="767.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (12 samples, 0.02%)</title><rect x="82.3606%" y="757" width="0.0230%" height="15" fill="rgb(208,217,32)" fg:x="42928" fg:w="12"/><text x="82.6106%" y="767.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_movemask_epi8 (39 samples, 0.07%)</title><rect x="82.3836%" y="757" width="0.0748%" height="15" fill="rgb(221,120,13)" fg:x="42940" fg:w="39"/><text x="82.6336%" y="767.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (268 samples, 0.51%)</title><rect x="82.0018%" y="789" width="0.5142%" height="15" fill="rgb(246,54,52)" fg:x="42741" fg:w="268"/><text x="82.2518%" y="799.50"></text></g><g><title>App`hashbrown::raw::sse2::Group::match_byte (94 samples, 0.18%)</title><rect x="82.3357%" y="773" width="0.1803%" height="15" fill="rgb(242,34,25)" fg:x="42915" fg:w="94"/><text x="82.5857%" y="783.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_set1_epi8 (30 samples, 0.06%)</title><rect x="82.4585%" y="757" width="0.0576%" height="15" fill="rgb(247,209,9)" fg:x="42979" fg:w="30"/><text x="82.7085%" y="767.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (631 samples, 1.21%)</title><rect x="81.3188%" y="805" width="1.2106%" height="15" fill="rgb(228,71,26)" fg:x="42385" fg:w="631"/><text x="81.5688%" y="815.50"></text></g><g><title>App`hashbrown::raw::sse2::Group::match_byte (7 samples, 0.01%)</title><rect x="82.5160%" y="789" width="0.0134%" height="15" fill="rgb(222,145,49)" fg:x="43009" fg:w="7"/><text x="82.7660%" y="799.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (73 samples, 0.14%)</title><rect x="82.5295%" y="805" width="0.1401%" height="15" fill="rgb(218,121,17)" fg:x="43016" fg:w="73"/><text x="82.7795%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (53 samples, 0.10%)</title><rect x="82.5678%" y="789" width="0.1017%" height="15" fill="rgb(244,50,7)" fg:x="43036" fg:w="53"/><text x="82.8178%" y="799.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,463 samples, 2.81%)</title><rect x="79.8799%" y="821" width="2.8069%" height="15" fill="rgb(246,229,37)" fg:x="41635" fg:w="1463"/><text x="80.1299%" y="831.50">Ap..</text></g><g><title>App`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1,470 samples, 2.82%)</title><rect x="79.8722%" y="837" width="2.8203%" height="15" fill="rgb(225,18,5)" fg:x="41631" fg:w="1470"/><text x="80.1222%" y="847.50">Ap..</text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (21 samples, 0.04%)</title><rect x="82.6944%" y="837" width="0.0403%" height="15" fill="rgb(213,204,8)" fg:x="43102" fg:w="21"/><text x="82.9444%" y="847.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memset (6 samples, 0.01%)</title><rect x="82.7347%" y="837" width="0.0115%" height="15" fill="rgb(238,103,6)" fg:x="43123" fg:w="6"/><text x="82.9847%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (25 samples, 0.05%)</title><rect x="82.7482%" y="837" width="0.0480%" height="15" fill="rgb(222,25,35)" fg:x="43130" fg:w="25"/><text x="82.9982%" y="847.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (18,090 samples, 34.71%)</title><rect x="48.1044%" y="853" width="34.7070%" height="15" fill="rgb(213,203,35)" fg:x="25073" fg:w="18090"/><text x="48.3544%" y="863.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (8 samples, 0.02%)</title><rect x="82.7961%" y="837" width="0.0153%" height="15" fill="rgb(221,79,53)" fg:x="43155" fg:w="8"/><text x="83.0461%" y="847.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (26 samples, 0.05%)</title><rect x="82.9362%" y="837" width="0.0499%" height="15" fill="rgb(243,200,35)" fg:x="43228" fg:w="26"/><text x="83.1862%" y="847.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (23 samples, 0.04%)</title><rect x="82.9419%" y="821" width="0.0441%" height="15" fill="rgb(248,60,25)" fg:x="43231" fg:w="23"/><text x="83.1919%" y="831.50"></text></g><g><title>App`&lt;usize as core::iter::range::Step&gt;::forward_unchecked (7 samples, 0.01%)</title><rect x="82.9726%" y="805" width="0.0134%" height="15" fill="rgb(227,53,46)" fg:x="43247" fg:w="7"/><text x="83.2226%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::board_state_numbers (98 samples, 0.19%)</title><rect x="82.8115%" y="853" width="0.1880%" height="15" fill="rgb(216,120,32)" fg:x="43163" fg:w="98"/><text x="83.0615%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (6 samples, 0.01%)</title><rect x="83.0667%" y="773" width="0.0115%" height="15" fill="rgb(220,134,1)" fg:x="43296" fg:w="6"/><text x="83.3167%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (21 samples, 0.04%)</title><rect x="83.0532%" y="789" width="0.0403%" height="15" fill="rgb(237,168,5)" fg:x="43289" fg:w="21"/><text x="83.3032%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.02%)</title><rect x="83.0782%" y="773" width="0.0153%" height="15" fill="rgb(231,100,33)" fg:x="43302" fg:w="8"/><text x="83.3282%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_evading_king_moves (27 samples, 0.05%)</title><rect x="83.0436%" y="821" width="0.0518%" height="15" fill="rgb(236,177,47)" fg:x="43284" fg:w="27"/><text x="83.2936%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (24 samples, 0.05%)</title><rect x="83.0494%" y="805" width="0.0460%" height="15" fill="rgb(235,7,49)" fg:x="43287" fg:w="24"/><text x="83.2994%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (6 samples, 0.01%)</title><rect x="83.1376%" y="789" width="0.0115%" height="15" fill="rgb(232,119,22)" fg:x="43333" fg:w="6"/><text x="83.3876%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (18 samples, 0.03%)</title><rect x="83.1300%" y="805" width="0.0345%" height="15" fill="rgb(254,73,53)" fg:x="43329" fg:w="18"/><text x="83.3800%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (8 samples, 0.02%)</title><rect x="83.1492%" y="789" width="0.0153%" height="15" fill="rgb(251,35,20)" fg:x="43339" fg:w="8"/><text x="83.3992%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (11 samples, 0.02%)</title><rect x="83.1703%" y="789" width="0.0211%" height="15" fill="rgb(241,119,20)" fg:x="43350" fg:w="11"/><text x="83.4203%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (6 samples, 0.01%)</title><rect x="83.1914%" y="789" width="0.0115%" height="15" fill="rgb(207,102,14)" fg:x="43361" fg:w="6"/><text x="83.4414%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (21 samples, 0.04%)</title><rect x="83.1645%" y="805" width="0.0403%" height="15" fill="rgb(248,201,50)" fg:x="43347" fg:w="21"/><text x="83.4145%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_mid_board (12 samples, 0.02%)</title><rect x="83.2086%" y="789" width="0.0230%" height="15" fill="rgb(222,185,44)" fg:x="43370" fg:w="12"/><text x="83.4586%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (21 samples, 0.04%)</title><rect x="83.3046%" y="773" width="0.0403%" height="15" fill="rgb(218,107,18)" fg:x="43420" fg:w="21"/><text x="83.5546%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (10 samples, 0.02%)</title><rect x="83.3257%" y="757" width="0.0192%" height="15" fill="rgb(237,177,39)" fg:x="43431" fg:w="10"/><text x="83.5757%" y="767.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_on_2nd (77 samples, 0.15%)</title><rect x="83.2316%" y="789" width="0.1477%" height="15" fill="rgb(246,69,6)" fg:x="43382" fg:w="77"/><text x="83.4816%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.03%)</title><rect x="83.3506%" y="773" width="0.0288%" height="15" fill="rgb(234,208,37)" fg:x="43444" fg:w="15"/><text x="83.6006%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (95 samples, 0.18%)</title><rect x="83.2048%" y="805" width="0.1823%" height="15" fill="rgb(225,4,6)" fg:x="43368" fg:w="95"/><text x="83.4548%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (12 samples, 0.02%)</title><rect x="83.3871%" y="805" width="0.0230%" height="15" fill="rgb(233,45,0)" fg:x="43463" fg:w="12"/><text x="83.6371%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (14 samples, 0.03%)</title><rect x="83.4101%" y="805" width="0.0269%" height="15" fill="rgb(226,136,5)" fg:x="43475" fg:w="14"/><text x="83.6601%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (9 samples, 0.02%)</title><rect x="83.4197%" y="789" width="0.0173%" height="15" fill="rgb(211,91,47)" fg:x="43480" fg:w="9"/><text x="83.6697%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (183 samples, 0.35%)</title><rect x="83.1069%" y="821" width="0.3511%" height="15" fill="rgb(242,88,51)" fg:x="43317" fg:w="183"/><text x="83.3569%" y="831.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.02%)</title><rect x="83.4408%" y="805" width="0.0173%" height="15" fill="rgb(230,91,28)" fg:x="43491" fg:w="9"/><text x="83.6908%" y="815.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (8 samples, 0.02%)</title><rect x="83.4427%" y="789" width="0.0153%" height="15" fill="rgb(254,186,29)" fg:x="43492" fg:w="8"/><text x="83.6927%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (6 samples, 0.01%)</title><rect x="83.4811%" y="789" width="0.0115%" height="15" fill="rgb(238,6,4)" fg:x="43512" fg:w="6"/><text x="83.7311%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (28 samples, 0.05%)</title><rect x="83.4619%" y="805" width="0.0537%" height="15" fill="rgb(221,151,16)" fg:x="43502" fg:w="28"/><text x="83.7119%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="83.4964%" y="789" width="0.0192%" height="15" fill="rgb(251,143,52)" fg:x="43520" fg:w="10"/><text x="83.7464%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::num_checkers (31 samples, 0.06%)</title><rect x="83.4600%" y="821" width="0.0595%" height="15" fill="rgb(206,90,15)" fg:x="43501" fg:w="31"/><text x="83.7100%" y="831.50"></text></g><g><title>App`&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="83.5866%" y="805" width="0.0192%" height="15" fill="rgb(218,35,8)" fg:x="43567" fg:w="10"/><text x="83.8366%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (11 samples, 0.02%)</title><rect x="83.6077%" y="805" width="0.0211%" height="15" fill="rgb(239,215,6)" fg:x="43578" fg:w="11"/><text x="83.8577%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::update_pinned_pieces_and_check_line (69 samples, 0.13%)</title><rect x="83.5194%" y="821" width="0.1324%" height="15" fill="rgb(245,116,39)" fg:x="43532" fg:w="69"/><text x="83.7694%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.02%)</title><rect x="83.6365%" y="805" width="0.0153%" height="15" fill="rgb(242,65,28)" fg:x="43593" fg:w="8"/><text x="83.8865%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (333 samples, 0.64%)</title><rect x="83.0283%" y="837" width="0.6389%" height="15" fill="rgb(252,132,53)" fg:x="43276" fg:w="333"/><text x="83.2783%" y="847.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::add_no_alloc (6 samples, 0.01%)</title><rect x="83.7036%" y="805" width="0.0115%" height="15" fill="rgb(224,159,50)" fg:x="43628" fg:w="6"/><text x="83.9536%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (12 samples, 0.02%)</title><rect x="83.8418%" y="789" width="0.0230%" height="15" fill="rgb(224,93,4)" fg:x="43700" fg:w="12"/><text x="84.0918%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (29 samples, 0.06%)</title><rect x="83.8648%" y="789" width="0.0556%" height="15" fill="rgb(208,81,34)" fg:x="43712" fg:w="29"/><text x="84.1148%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (151 samples, 0.29%)</title><rect x="83.7151%" y="805" width="0.2897%" height="15" fill="rgb(233,92,54)" fg:x="43634" fg:w="151"/><text x="83.9651%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (44 samples, 0.08%)</title><rect x="83.9204%" y="789" width="0.0844%" height="15" fill="rgb(237,21,14)" fg:x="43741" fg:w="44"/><text x="84.1704%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (14 samples, 0.03%)</title><rect x="84.0048%" y="805" width="0.0269%" height="15" fill="rgb(249,128,51)" fg:x="43785" fg:w="14"/><text x="84.2548%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (184 samples, 0.35%)</title><rect x="83.6902%" y="821" width="0.3530%" height="15" fill="rgb(223,129,24)" fg:x="43621" fg:w="184"/><text x="83.9402%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (206 samples, 0.40%)</title><rect x="83.6710%" y="837" width="0.3952%" height="15" fill="rgb(231,168,25)" fg:x="43611" fg:w="206"/><text x="83.9210%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.02%)</title><rect x="84.0451%" y="821" width="0.0211%" height="15" fill="rgb(224,39,20)" fg:x="43806" fg:w="11"/><text x="84.2951%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (28 samples, 0.05%)</title><rect x="84.2178%" y="805" width="0.0537%" height="15" fill="rgb(225,152,53)" fg:x="43896" fg:w="28"/><text x="84.4678%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (28 samples, 0.05%)</title><rect x="84.2715%" y="805" width="0.0537%" height="15" fill="rgb(252,17,24)" fg:x="43924" fg:w="28"/><text x="84.5215%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (170 samples, 0.33%)</title><rect x="84.1104%" y="821" width="0.3262%" height="15" fill="rgb(250,114,30)" fg:x="43840" fg:w="170"/><text x="84.3604%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (58 samples, 0.11%)</title><rect x="84.3252%" y="805" width="0.1113%" height="15" fill="rgb(229,5,4)" fg:x="43952" fg:w="58"/><text x="84.5752%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::num_checkers (195 samples, 0.37%)</title><rect x="84.0662%" y="837" width="0.3741%" height="15" fill="rgb(225,176,49)" fg:x="43817" fg:w="195"/><text x="84.3162%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::game_state (752 samples, 1.44%)</title><rect x="82.9995%" y="853" width="1.4428%" height="15" fill="rgb(224,221,49)" fg:x="43261" fg:w="752"/><text x="83.2495%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (28 samples, 0.05%)</title><rect x="84.4710%" y="805" width="0.0537%" height="15" fill="rgb(253,169,27)" fg:x="44028" fg:w="28"/><text x="84.7210%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.02%)</title><rect x="84.5075%" y="789" width="0.0173%" height="15" fill="rgb(211,206,16)" fg:x="44047" fg:w="9"/><text x="84.7575%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (36 samples, 0.07%)</title><rect x="84.4615%" y="821" width="0.0691%" height="15" fill="rgb(244,87,35)" fg:x="44023" fg:w="36"/><text x="84.7115%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (41 samples, 0.08%)</title><rect x="84.4576%" y="837" width="0.0787%" height="15" fill="rgb(246,28,10)" fg:x="44021" fg:w="41"/><text x="84.7076%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (9 samples, 0.02%)</title><rect x="84.5747%" y="805" width="0.0173%" height="15" fill="rgb(229,12,44)" fg:x="44082" fg:w="9"/><text x="84.8247%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (7 samples, 0.01%)</title><rect x="84.5919%" y="805" width="0.0134%" height="15" fill="rgb(210,145,37)" fg:x="44091" fg:w="7"/><text x="84.8419%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (18 samples, 0.03%)</title><rect x="84.5727%" y="821" width="0.0345%" height="15" fill="rgb(227,112,52)" fg:x="44081" fg:w="18"/><text x="84.8227%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (6 samples, 0.01%)</title><rect x="84.6111%" y="805" width="0.0115%" height="15" fill="rgb(238,155,34)" fg:x="44101" fg:w="6"/><text x="84.8611%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (10 samples, 0.02%)</title><rect x="84.6073%" y="821" width="0.0192%" height="15" fill="rgb(239,226,36)" fg:x="44099" fg:w="10"/><text x="84.8573%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_mid_board (18 samples, 0.03%)</title><rect x="84.6284%" y="805" width="0.0345%" height="15" fill="rgb(230,16,23)" fg:x="44110" fg:w="18"/><text x="84.8784%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="84.6495%" y="789" width="0.0134%" height="15" fill="rgb(236,171,36)" fg:x="44121" fg:w="7"/><text x="84.8995%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (22 samples, 0.04%)</title><rect x="84.7205%" y="789" width="0.0422%" height="15" fill="rgb(221,22,14)" fg:x="44158" fg:w="22"/><text x="84.9705%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (8 samples, 0.02%)</title><rect x="84.7473%" y="773" width="0.0153%" height="15" fill="rgb(242,43,11)" fg:x="44172" fg:w="8"/><text x="84.9973%" y="783.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::pop_lsb (7 samples, 0.01%)</title><rect x="84.7627%" y="789" width="0.0134%" height="15" fill="rgb(232,69,23)" fg:x="44180" fg:w="7"/><text x="85.0127%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_on_2nd (77 samples, 0.15%)</title><rect x="84.6629%" y="805" width="0.1477%" height="15" fill="rgb(216,180,54)" fg:x="44128" fg:w="77"/><text x="84.9129%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.03%)</title><rect x="84.7761%" y="789" width="0.0345%" height="15" fill="rgb(216,5,24)" fg:x="44187" fg:w="18"/><text x="85.0261%" y="799.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (97 samples, 0.19%)</title><rect x="84.6284%" y="821" width="0.1861%" height="15" fill="rgb(225,89,9)" fg:x="44110" fg:w="97"/><text x="84.8784%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (8 samples, 0.02%)</title><rect x="84.8279%" y="805" width="0.0153%" height="15" fill="rgb(243,75,33)" fg:x="44214" fg:w="8"/><text x="85.0779%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (8 samples, 0.02%)</title><rect x="84.8452%" y="805" width="0.0153%" height="15" fill="rgb(247,141,45)" fg:x="44223" fg:w="8"/><text x="85.0952%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (23 samples, 0.04%)</title><rect x="84.8202%" y="821" width="0.0441%" height="15" fill="rgb(232,177,36)" fg:x="44210" fg:w="23"/><text x="85.0702%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (17 samples, 0.03%)</title><rect x="84.8759%" y="805" width="0.0326%" height="15" fill="rgb(219,125,36)" fg:x="44239" fg:w="17"/><text x="85.1259%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (27 samples, 0.05%)</title><rect x="84.8644%" y="821" width="0.0518%" height="15" fill="rgb(227,94,9)" fg:x="44233" fg:w="27"/><text x="85.1144%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (200 samples, 0.38%)</title><rect x="84.5420%" y="837" width="0.3837%" height="15" fill="rgb(240,34,52)" fg:x="44065" fg:w="200"/><text x="84.7920%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (13 samples, 0.02%)</title><rect x="84.9353%" y="821" width="0.0249%" height="15" fill="rgb(216,45,12)" fg:x="44270" fg:w="13"/><text x="85.1853%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::num_checkers (18 samples, 0.03%)</title><rect x="84.9277%" y="837" width="0.0345%" height="15" fill="rgb(246,21,19)" fg:x="44266" fg:w="18"/><text x="85.1777%" y="847.50"></text></g><g><title>App`&lt;core::array::iter::IntoIter&lt;T,_&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.01%)</title><rect x="85.0198%" y="821" width="0.0115%" height="15" fill="rgb(213,98,42)" fg:x="44314" fg:w="6"/><text x="85.2698%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::update_pinned_pieces_and_check_line (54 samples, 0.10%)</title><rect x="84.9622%" y="837" width="0.1036%" height="15" fill="rgb(250,136,47)" fg:x="44284" fg:w="54"/><text x="85.2122%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.02%)</title><rect x="85.0505%" y="821" width="0.0153%" height="15" fill="rgb(251,124,27)" fg:x="44330" fg:w="8"/><text x="85.3005%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (338 samples, 0.65%)</title><rect x="84.4423%" y="853" width="0.6485%" height="15" fill="rgb(229,180,14)" fg:x="44013" fg:w="338"/><text x="84.6923%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.01%)</title><rect x="85.0792%" y="837" width="0.0115%" height="15" fill="rgb(245,216,25)" fg:x="44345" fg:w="6"/><text x="85.3292%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (136 samples, 0.26%)</title><rect x="85.0965%" y="853" width="0.2609%" height="15" fill="rgb(251,43,5)" fg:x="44354" fg:w="136"/><text x="85.3465%" y="863.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::new (863 samples, 1.66%)</title><rect x="85.3613%" y="837" width="1.6557%" height="15" fill="rgb(250,128,24)" fg:x="44492" fg:w="863"/><text x="85.6113%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (34 samples, 0.07%)</title><rect x="86.9518%" y="821" width="0.0652%" height="15" fill="rgb(217,117,27)" fg:x="45321" fg:w="34"/><text x="87.2018%" y="831.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14 samples, 0.03%)</title><rect x="87.1014%" y="805" width="0.0269%" height="15" fill="rgb(245,147,4)" fg:x="45399" fg:w="14"/><text x="87.3514%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move::_{{closure}} (59 samples, 0.11%)</title><rect x="87.0170%" y="837" width="0.1132%" height="15" fill="rgb(242,201,35)" fg:x="45355" fg:w="59"/><text x="87.2670%" y="847.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (18 samples, 0.03%)</title><rect x="87.0957%" y="821" width="0.0345%" height="15" fill="rgb(218,181,1)" fg:x="45396" fg:w="18"/><text x="87.3457%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (6 samples, 0.01%)</title><rect x="87.1398%" y="837" width="0.0115%" height="15" fill="rgb(222,6,29)" fg:x="45419" fg:w="6"/><text x="87.3898%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (27 samples, 0.05%)</title><rect x="87.1513%" y="837" width="0.0518%" height="15" fill="rgb(208,186,3)" fg:x="45425" fg:w="27"/><text x="87.4013%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (965 samples, 1.85%)</title><rect x="85.3593%" y="853" width="1.8514%" height="15" fill="rgb(216,36,26)" fg:x="44491" fg:w="965"/><text x="85.6093%" y="863.50">A..</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::white_to_move (8 samples, 0.02%)</title><rect x="87.2146%" y="853" width="0.0153%" height="15" fill="rgb(248,201,23)" fg:x="45458" fg:w="8"/><text x="87.4646%" y="863.50"></text></g><g><title>App`core::slice::sort::merge_sort (34 samples, 0.07%)</title><rect x="87.2645%" y="821" width="0.0652%" height="15" fill="rgb(251,170,31)" fg:x="45484" fg:w="34"/><text x="87.5145%" y="831.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (7 samples, 0.01%)</title><rect x="87.3470%" y="805" width="0.0134%" height="15" fill="rgb(207,110,25)" fg:x="45527" fg:w="7"/><text x="87.5970%" y="815.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (7 samples, 0.01%)</title><rect x="87.3681%" y="805" width="0.0134%" height="15" fill="rgb(250,54,15)" fg:x="45538" fg:w="7"/><text x="87.6181%" y="815.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;core::slice::sort::merge_sort::BufGuard&lt;App::game_manager::board2::ChessMove,alloc::slice::stable_sort&lt;App::game_manager::board2::ChessMove,alloc::slice::&lt;impl [App::game_manager::board2::ChessMove]&gt;::sort_by&lt;App::game_manager::bot2::Bot2::search::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt;&gt; (13 samples, 0.02%)</title><rect x="87.3988%" y="805" width="0.0249%" height="15" fill="rgb(227,68,33)" fg:x="45554" fg:w="13"/><text x="87.6488%" y="815.50"></text></g><g><title>App`&lt;core::slice::sort::merge_sort::BufGuard&lt;T,ElemDeallocF&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="87.3988%" y="789" width="0.0249%" height="15" fill="rgb(238,34,41)" fg:x="45554" fg:w="13"/><text x="87.6488%" y="799.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (10 samples, 0.02%)</title><rect x="87.4046%" y="773" width="0.0192%" height="15" fill="rgb(220,11,15)" fg:x="45557" fg:w="10"/><text x="87.6546%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.02%)</title><rect x="87.4314%" y="757" width="0.0173%" height="15" fill="rgb(246,111,35)" fg:x="45571" fg:w="9"/><text x="87.6814%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.01%)</title><rect x="87.4372%" y="741" width="0.0115%" height="15" fill="rgb(209,88,53)" fg:x="45574" fg:w="6"/><text x="87.6872%" y="751.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (18 samples, 0.03%)</title><rect x="87.4276%" y="773" width="0.0345%" height="15" fill="rgb(231,185,47)" fg:x="45569" fg:w="18"/><text x="87.6776%" y="783.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;core::slice::sort::merge_sort::RunVec&lt;alloc::slice::stable_sort&lt;App::game_manager::board2::ChessMove,alloc::slice::&lt;impl [App::game_manager::board2::ChessMove]&gt;::sort_by&lt;App::game_manager::bot2::Bot2::search::{{closure}}&gt;::{{closure}}&gt;::{{closure}},alloc::slice::stable_sort&lt;App::game_manager::board2::ChessMove,alloc::slice::&lt;impl [App::game_manager::board2::ChessMove]&gt;::sort_by&lt;App::game_manager::bot2::Bot2::search::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt;&gt; (24 samples, 0.05%)</title><rect x="87.4237%" y="805" width="0.0460%" height="15" fill="rgb(233,154,1)" fg:x="45567" fg:w="24"/><text x="87.6737%" y="815.50"></text></g><g><title>App`&lt;core::slice::sort::merge_sort::RunVec&lt;RunAllocF,RunDeallocF&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.05%)</title><rect x="87.4237%" y="789" width="0.0460%" height="15" fill="rgb(225,15,46)" fg:x="45567" fg:w="24"/><text x="87.6737%" y="799.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::reverse (14 samples, 0.03%)</title><rect x="87.4698%" y="805" width="0.0269%" height="15" fill="rgb(211,135,41)" fg:x="45591" fg:w="14"/><text x="87.7198%" y="815.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::reverse::revswap (10 samples, 0.02%)</title><rect x="87.4775%" y="789" width="0.0192%" height="15" fill="rgb(208,54,0)" fg:x="45595" fg:w="10"/><text x="87.7275%" y="799.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (26 samples, 0.05%)</title><rect x="87.5446%" y="773" width="0.0499%" height="15" fill="rgb(244,136,14)" fg:x="45630" fg:w="26"/><text x="87.7946%" y="783.50"></text></g><g><title>App`core::cmp::impls::_&lt;impl core::cmp::Ord for i16&gt;::cmp (15 samples, 0.03%)</title><rect x="87.5657%" y="757" width="0.0288%" height="15" fill="rgb(241,56,14)" fg:x="45641" fg:w="15"/><text x="87.8157%" y="767.50"></text></g><g><title>App`core::slice::sort::find_streak (52 samples, 0.10%)</title><rect x="87.4966%" y="805" width="0.0998%" height="15" fill="rgb(205,80,24)" fg:x="45605" fg:w="52"/><text x="87.7466%" y="815.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (35 samples, 0.07%)</title><rect x="87.5293%" y="789" width="0.0672%" height="15" fill="rgb(220,57,4)" fg:x="45622" fg:w="35"/><text x="87.7793%" y="799.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (26 samples, 0.05%)</title><rect x="87.5983%" y="805" width="0.0499%" height="15" fill="rgb(226,193,50)" fg:x="45658" fg:w="26"/><text x="87.8483%" y="815.50"></text></g><g><title>App`core::slice::sort::insert_tail (20 samples, 0.04%)</title><rect x="87.6098%" y="789" width="0.0384%" height="15" fill="rgb(231,168,22)" fg:x="45664" fg:w="20"/><text x="87.8598%" y="799.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (11 samples, 0.02%)</title><rect x="87.6271%" y="773" width="0.0211%" height="15" fill="rgb(254,215,14)" fg:x="45673" fg:w="11"/><text x="87.8771%" y="783.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (8 samples, 0.02%)</title><rect x="87.6329%" y="757" width="0.0153%" height="15" fill="rgb(211,115,16)" fg:x="45676" fg:w="8"/><text x="87.8829%" y="767.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::promising_level (12 samples, 0.02%)</title><rect x="88.0818%" y="757" width="0.0230%" height="15" fill="rgb(236,210,16)" fg:x="45910" fg:w="12"/><text x="88.3318%" y="767.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (98 samples, 0.19%)</title><rect x="87.9916%" y="773" width="0.1880%" height="15" fill="rgb(221,94,12)" fg:x="45863" fg:w="98"/><text x="88.2416%" y="783.50"></text></g><g><title>App`core::cmp::impls::_&lt;impl core::cmp::Ord for i16&gt;::cmp (39 samples, 0.07%)</title><rect x="88.1048%" y="757" width="0.0748%" height="15" fill="rgb(235,218,49)" fg:x="45922" fg:w="39"/><text x="88.3548%" y="767.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (135 samples, 0.26%)</title><rect x="87.9245%" y="789" width="0.2590%" height="15" fill="rgb(217,114,14)" fg:x="45828" fg:w="135"/><text x="88.1745%" y="799.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;core::slice::sort::merge::MergeHole&lt;App::game_manager::board2::ChessMove&gt;&gt; (6 samples, 0.01%)</title><rect x="88.1835%" y="789" width="0.0115%" height="15" fill="rgb(216,145,22)" fg:x="45963" fg:w="6"/><text x="88.4335%" y="799.50"></text></g><g><title>App`core::slice::sort::merge (303 samples, 0.58%)</title><rect x="87.6482%" y="805" width="0.5813%" height="15" fill="rgb(217,112,39)" fg:x="45684" fg:w="303"/><text x="87.8982%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.03%)</title><rect x="88.1950%" y="789" width="0.0345%" height="15" fill="rgb(225,85,32)" fg:x="45969" fg:w="18"/><text x="88.4450%" y="799.50"></text></g><g><title>App`core::alloc::layout::Layout::array::inner (6 samples, 0.01%)</title><rect x="88.2430%" y="773" width="0.0115%" height="15" fill="rgb(245,209,47)" fg:x="45994" fg:w="6"/><text x="88.4930%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (31 samples, 0.06%)</title><rect x="88.2545%" y="773" width="0.0595%" height="15" fill="rgb(218,220,15)" fg:x="46000" fg:w="31"/><text x="88.5045%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (28 samples, 0.05%)</title><rect x="88.2602%" y="757" width="0.0537%" height="15" fill="rgb(222,202,31)" fg:x="46003" fg:w="28"/><text x="88.5102%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (26 samples, 0.05%)</title><rect x="88.2641%" y="741" width="0.0499%" height="15" fill="rgb(243,203,4)" fg:x="46005" fg:w="26"/><text x="88.5141%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (21 samples, 0.04%)</title><rect x="88.2737%" y="725" width="0.0403%" height="15" fill="rgb(237,92,17)" fg:x="46010" fg:w="21"/><text x="88.5237%" y="735.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (46 samples, 0.09%)</title><rect x="88.2315%" y="789" width="0.0883%" height="15" fill="rgb(231,119,7)" fg:x="45988" fg:w="46"/><text x="88.4815%" y="799.50"></text></g><g><title>App`core::slice::sort::merge_sort::BufGuard&lt;T,ElemDeallocF&gt;::new (49 samples, 0.09%)</title><rect x="88.2295%" y="805" width="0.0940%" height="15" fill="rgb(237,82,41)" fg:x="45987" fg:w="49"/><text x="88.4795%" y="815.50"></text></g><g><title>App`core::slice::sort::merge_sort::RunVec&lt;RunAllocF,RunDeallocF&gt;::new (26 samples, 0.05%)</title><rect x="88.3235%" y="805" width="0.0499%" height="15" fill="rgb(226,81,48)" fg:x="46036" fg:w="26"/><text x="88.5735%" y="815.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (23 samples, 0.04%)</title><rect x="88.3293%" y="789" width="0.0441%" height="15" fill="rgb(234,70,51)" fg:x="46039" fg:w="23"/><text x="88.5793%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.04%)</title><rect x="88.3351%" y="773" width="0.0384%" height="15" fill="rgb(251,86,4)" fg:x="46042" fg:w="20"/><text x="88.5851%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (20 samples, 0.04%)</title><rect x="88.3351%" y="757" width="0.0384%" height="15" fill="rgb(244,144,28)" fg:x="46042" fg:w="20"/><text x="88.5851%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.03%)</title><rect x="88.3389%" y="741" width="0.0345%" height="15" fill="rgb(232,161,39)" fg:x="46044" fg:w="18"/><text x="88.5889%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (10 samples, 0.02%)</title><rect x="88.3542%" y="725" width="0.0192%" height="15" fill="rgb(247,34,51)" fg:x="46052" fg:w="10"/><text x="88.6042%" y="735.50"></text></g><g><title>App`core::slice::sort::merge_sort::RunVec&lt;RunAllocF,RunDeallocF&gt;::push (6 samples, 0.01%)</title><rect x="88.3734%" y="805" width="0.0115%" height="15" fill="rgb(225,132,2)" fg:x="46062" fg:w="6"/><text x="88.6234%" y="815.50"></text></g><g><title>App`core::slice::sort::merge_sort::collapse (16 samples, 0.03%)</title><rect x="88.3907%" y="805" width="0.0307%" height="15" fill="rgb(209,159,44)" fg:x="46071" fg:w="16"/><text x="88.6407%" y="815.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.01%)</title><rect x="88.4406%" y="789" width="0.0115%" height="15" fill="rgb(251,214,1)" fg:x="46097" fg:w="6"/><text x="88.6906%" y="799.50"></text></g><g><title>App`core::cmp::max_by (11 samples, 0.02%)</title><rect x="88.4636%" y="789" width="0.0211%" height="15" fill="rgb(247,84,47)" fg:x="46109" fg:w="11"/><text x="88.7136%" y="799.50"></text></g><g><title>App`core::cmp::min_by (11 samples, 0.02%)</title><rect x="88.4847%" y="789" width="0.0211%" height="15" fill="rgb(240,111,43)" fg:x="46120" fg:w="11"/><text x="88.7347%" y="799.50"></text></g><g><title>App`&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (35 samples, 0.07%)</title><rect x="88.5864%" y="773" width="0.0672%" height="15" fill="rgb(215,214,35)" fg:x="46173" fg:w="35"/><text x="88.8364%" y="783.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (20 samples, 0.04%)</title><rect x="88.6152%" y="757" width="0.0384%" height="15" fill="rgb(248,207,23)" fg:x="46188" fg:w="20"/><text x="88.8652%" y="767.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (54 samples, 0.10%)</title><rect x="88.9087%" y="757" width="0.1036%" height="15" fill="rgb(214,186,4)" fg:x="46341" fg:w="54"/><text x="89.1587%" y="767.50"></text></g><g><title>App`&lt;usize as core::iter::range::Step&gt;::backward_unchecked (7 samples, 0.01%)</title><rect x="88.9989%" y="741" width="0.0134%" height="15" fill="rgb(220,133,22)" fg:x="46388" fg:w="7"/><text x="89.2489%" y="751.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::promising_level (7 samples, 0.01%)</title><rect x="89.1198%" y="741" width="0.0134%" height="15" fill="rgb(239,134,19)" fg:x="46451" fg:w="7"/><text x="89.3698%" y="751.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::promising_level (12 samples, 0.02%)</title><rect x="89.2521%" y="725" width="0.0230%" height="15" fill="rgb(250,140,9)" fg:x="46520" fg:w="12"/><text x="89.5021%" y="735.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (136 samples, 0.26%)</title><rect x="89.1332%" y="741" width="0.2609%" height="15" fill="rgb(225,59,14)" fg:x="46458" fg:w="136"/><text x="89.3832%" y="751.50"></text></g><g><title>App`core::cmp::impls::_&lt;impl core::cmp::Ord for i16&gt;::cmp (62 samples, 0.12%)</title><rect x="89.2752%" y="725" width="0.1190%" height="15" fill="rgb(214,152,51)" fg:x="46532" fg:w="62"/><text x="89.5252%" y="735.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (195 samples, 0.37%)</title><rect x="89.0257%" y="757" width="0.3741%" height="15" fill="rgb(251,227,43)" fg:x="46402" fg:w="195"/><text x="89.2757%" y="767.50"></text></g><g><title>App`core::slice::sort::provide_sorted_batch (513 samples, 0.98%)</title><rect x="88.4214%" y="805" width="0.9842%" height="15" fill="rgb(241,96,17)" fg:x="46087" fg:w="513"/><text x="88.6714%" y="815.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (463 samples, 0.89%)</title><rect x="88.5173%" y="789" width="0.8883%" height="15" fill="rgb(234,198,43)" fg:x="46137" fg:w="463"/><text x="88.7673%" y="799.50"></text></g><g><title>App`core::slice::sort::insert_tail (388 samples, 0.74%)</title><rect x="88.6612%" y="773" width="0.7444%" height="15" fill="rgb(220,108,29)" fg:x="46212" fg:w="388"/><text x="88.9112%" y="783.50"></text></g><g><title>App`alloc::slice::stable_sort (1,131 samples, 2.17%)</title><rect x="87.2453%" y="837" width="2.1699%" height="15" fill="rgb(226,163,33)" fg:x="45474" fg:w="1131"/><text x="87.4953%" y="847.50">A..</text></g><g><title>App`core::slice::sort::merge_sort (1,078 samples, 2.07%)</title><rect x="87.3470%" y="821" width="2.0682%" height="15" fill="rgb(205,194,45)" fg:x="45527" fg:w="1078"/><text x="87.5970%" y="831.50">A..</text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by (1,137 samples, 2.18%)</title><rect x="87.2376%" y="853" width="2.1814%" height="15" fill="rgb(206,143,44)" fg:x="45470" fg:w="1137"/><text x="87.4876%" y="863.50">A..</text></g><g><title>App`alloc::vec::Vec&lt;T,A&gt;::pop (21 samples, 0.04%)</title><rect x="89.4306%" y="853" width="0.0403%" height="15" fill="rgb(236,136,36)" fg:x="46613" fg:w="21"/><text x="89.6806%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.02%)</title><rect x="89.4536%" y="837" width="0.0173%" height="15" fill="rgb(249,172,42)" fg:x="46625" fg:w="9"/><text x="89.7036%" y="847.50"></text></g><g><title>App`alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.04%)</title><rect x="89.4709%" y="853" width="0.0365%" height="15" fill="rgb(216,139,23)" fg:x="46634" fg:w="19"/><text x="89.7209%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.02%)</title><rect x="89.4881%" y="837" width="0.0192%" height="15" fill="rgb(207,166,20)" fg:x="46643" fg:w="10"/><text x="89.7381%" y="847.50"></text></g><g><title>App`core::cmp::max_by (6 samples, 0.01%)</title><rect x="89.5131%" y="821" width="0.0115%" height="15" fill="rgb(210,209,22)" fg:x="46656" fg:w="6"/><text x="89.7631%" y="831.50"></text></g><g><title>App`core::cmp::max (7 samples, 0.01%)</title><rect x="89.5131%" y="853" width="0.0134%" height="15" fill="rgb(232,118,20)" fg:x="46656" fg:w="7"/><text x="89.7631%" y="863.50"></text></g><g><title>App`core::cmp::Ord::max (7 samples, 0.01%)</title><rect x="89.5131%" y="837" width="0.0134%" height="15" fill="rgb(238,113,42)" fg:x="46656" fg:w="7"/><text x="89.7631%" y="847.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (32 samples, 0.06%)</title><rect x="89.5514%" y="837" width="0.0614%" height="15" fill="rgb(231,42,5)" fg:x="46676" fg:w="32"/><text x="89.8014%" y="847.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (47 samples, 0.09%)</title><rect x="89.5265%" y="853" width="0.0902%" height="15" fill="rgb(243,166,24)" fg:x="46663" fg:w="47"/><text x="89.7765%" y="863.50"></text></g><g><title>App`alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (11 samples, 0.02%)</title><rect x="89.6282%" y="821" width="0.0211%" height="15" fill="rgb(237,226,12)" fg:x="46716" fg:w="11"/><text x="89.8782%" y="831.50"></text></g><g><title>App`core::iter::traits::exact_size::ExactSizeIterator::len (6 samples, 0.01%)</title><rect x="89.6378%" y="805" width="0.0115%" height="15" fill="rgb(229,133,24)" fg:x="46721" fg:w="6"/><text x="89.8878%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.02%)</title><rect x="89.6666%" y="725" width="0.0173%" height="15" fill="rgb(238,33,43)" fg:x="46736" fg:w="9"/><text x="89.9166%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.02%)</title><rect x="89.6666%" y="709" width="0.0173%" height="15" fill="rgb(227,59,38)" fg:x="46736" fg:w="9"/><text x="89.9166%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`free (15 samples, 0.03%)</title><rect x="89.6570%" y="741" width="0.0288%" height="15" fill="rgb(230,97,0)" fg:x="46731" fg:w="15"/><text x="89.9070%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.04%)</title><rect x="89.6857%" y="741" width="0.0422%" height="15" fill="rgb(250,173,50)" fg:x="46746" fg:w="22"/><text x="89.9357%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.02%)</title><rect x="89.7030%" y="725" width="0.0249%" height="15" fill="rgb(240,15,50)" fg:x="46755" fg:w="13"/><text x="89.9530%" y="735.50"></text></g><g><title>App`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (40 samples, 0.08%)</title><rect x="89.6570%" y="757" width="0.0767%" height="15" fill="rgb(221,93,22)" fg:x="46731" fg:w="40"/><text x="89.9070%" y="767.50"></text></g><g><title>App`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.12%)</title><rect x="89.6243%" y="837" width="0.1209%" height="15" fill="rgb(245,180,53)" fg:x="46714" fg:w="63"/><text x="89.8743%" y="847.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;App::game_manager::board2::ChessMove,alloc::alloc::Global&gt;&gt; (50 samples, 0.10%)</title><rect x="89.6493%" y="821" width="0.0959%" height="15" fill="rgb(231,88,51)" fg:x="46727" fg:w="50"/><text x="89.8993%" y="831.50"></text></g><g><title>App`&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (50 samples, 0.10%)</title><rect x="89.6493%" y="805" width="0.0959%" height="15" fill="rgb(240,58,21)" fg:x="46727" fg:w="50"/><text x="89.8993%" y="815.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;App::game_manager::board2::ChessMove&gt;&gt; (48 samples, 0.09%)</title><rect x="89.6531%" y="789" width="0.0921%" height="15" fill="rgb(237,21,10)" fg:x="46729" fg:w="48"/><text x="89.9031%" y="799.50"></text></g><g><title>App`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (47 samples, 0.09%)</title><rect x="89.6550%" y="773" width="0.0902%" height="15" fill="rgb(218,43,11)" fg:x="46730" fg:w="47"/><text x="89.9050%" y="783.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;App::game_manager::board2::ChessMove&gt;&gt; (65 samples, 0.12%)</title><rect x="89.6224%" y="853" width="0.1247%" height="15" fill="rgb(218,221,29)" fg:x="46713" fg:w="65"/><text x="89.8724%" y="863.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::iter (6 samples, 0.01%)</title><rect x="89.7471%" y="853" width="0.0115%" height="15" fill="rgb(214,118,42)" fg:x="46778" fg:w="6"/><text x="89.9971%" y="863.50"></text></g><g><title>App`&lt;App::game_manager::board2::ChessMove as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="89.8392%" y="773" width="0.0153%" height="15" fill="rgb(251,200,26)" fg:x="46826" fg:w="8"/><text x="90.0892%" y="783.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u16&gt;::hash (7 samples, 0.01%)</title><rect x="89.8411%" y="757" width="0.0134%" height="15" fill="rgb(237,101,39)" fg:x="46827" fg:w="7"/><text x="90.0911%" y="767.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_usize (18 samples, 0.03%)</title><rect x="89.8949%" y="709" width="0.0345%" height="15" fill="rgb(251,117,11)" fg:x="46855" fg:w="18"/><text x="90.1449%" y="719.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (17 samples, 0.03%)</title><rect x="89.8968%" y="693" width="0.0326%" height="15" fill="rgb(216,223,23)" fg:x="46856" fg:w="17"/><text x="90.1468%" y="703.50"></text></g><g><title>App`core::hash::Hasher::write_length_prefix (22 samples, 0.04%)</title><rect x="89.8891%" y="725" width="0.0422%" height="15" fill="rgb(251,54,12)" fg:x="46852" fg:w="22"/><text x="90.1391%" y="735.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (76 samples, 0.15%)</title><rect x="90.1366%" y="629" width="0.1458%" height="15" fill="rgb(254,176,54)" fg:x="46981" fg:w="76"/><text x="90.3866%" y="639.50"></text></g><g><title> N]&gt;::try_from (76 samples, 0.15%)</title><rect x="90.1366%" y="613" width="0.1458%" height="15" fill="rgb(210,32,8)" fg:x="46981" fg:w="76"/><text x="90.3866%" y="623.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (52 samples, 0.10%)</title><rect x="90.1826%" y="597" width="0.0998%" height="15" fill="rgb(235,52,38)" fg:x="47005" fg:w="52"/><text x="90.4326%" y="607.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (22 samples, 0.04%)</title><rect x="90.2402%" y="581" width="0.0422%" height="15" fill="rgb(231,4,44)" fg:x="47035" fg:w="22"/><text x="90.4902%" y="591.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (22 samples, 0.04%)</title><rect x="90.2402%" y="565" width="0.0422%" height="15" fill="rgb(249,2,32)" fg:x="47035" fg:w="22"/><text x="90.4902%" y="575.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (86 samples, 0.16%)</title><rect x="90.1308%" y="645" width="0.1650%" height="15" fill="rgb(224,65,26)" fg:x="46978" fg:w="86"/><text x="90.3808%" y="655.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (7 samples, 0.01%)</title><rect x="90.2824%" y="629" width="0.0134%" height="15" fill="rgb(250,73,40)" fg:x="47057" fg:w="7"/><text x="90.5324%" y="639.50"></text></g><g><title>App`core::num::_&lt;impl u64&gt;::from_le_bytes (27 samples, 0.05%)</title><rect x="90.3093%" y="645" width="0.0518%" height="15" fill="rgb(253,177,16)" fg:x="47071" fg:w="27"/><text x="90.5593%" y="655.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (226 samples, 0.43%)</title><rect x="90.0810%" y="661" width="0.4336%" height="15" fill="rgb(217,32,34)" fg:x="46952" fg:w="226"/><text x="90.3310%" y="671.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (75 samples, 0.14%)</title><rect x="90.3707%" y="645" width="0.1439%" height="15" fill="rgb(212,7,10)" fg:x="47103" fg:w="75"/><text x="90.6207%" y="655.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (64 samples, 0.12%)</title><rect x="90.3918%" y="629" width="0.1228%" height="15" fill="rgb(245,89,8)" fg:x="47114" fg:w="64"/><text x="90.6418%" y="639.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (51 samples, 0.10%)</title><rect x="90.4167%" y="613" width="0.0978%" height="15" fill="rgb(237,16,53)" fg:x="47127" fg:w="51"/><text x="90.6667%" y="623.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.02%)</title><rect x="90.5146%" y="661" width="0.0173%" height="15" fill="rgb(250,204,30)" fg:x="47178" fg:w="9"/><text x="90.7646%" y="671.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (24 samples, 0.05%)</title><rect x="90.5337%" y="661" width="0.0460%" height="15" fill="rgb(208,77,27)" fg:x="47188" fg:w="24"/><text x="90.7837%" y="671.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (42 samples, 0.08%)</title><rect x="90.5798%" y="661" width="0.0806%" height="15" fill="rgb(250,204,28)" fg:x="47212" fg:w="42"/><text x="90.8298%" y="671.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (429 samples, 0.82%)</title><rect x="89.8642%" y="757" width="0.8231%" height="15" fill="rgb(244,63,21)" fg:x="46839" fg:w="429"/><text x="90.1142%" y="767.50"></text></g><g><title> N]&gt;::hash (429 samples, 0.82%)</title><rect x="89.8642%" y="741" width="0.8231%" height="15" fill="rgb(236,85,44)" fg:x="46839" fg:w="429"/><text x="90.1142%" y="751.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (394 samples, 0.76%)</title><rect x="89.9313%" y="725" width="0.7559%" height="15" fill="rgb(215,98,4)" fg:x="46874" fg:w="394"/><text x="90.1813%" y="735.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (385 samples, 0.74%)</title><rect x="89.9486%" y="709" width="0.7387%" height="15" fill="rgb(235,38,11)" fg:x="46883" fg:w="385"/><text x="90.1986%" y="719.50"></text></g><g><title>App`fxhash::write (379 samples, 0.73%)</title><rect x="89.9601%" y="693" width="0.7271%" height="15" fill="rgb(254,186,25)" fg:x="46889" fg:w="379"/><text x="90.2101%" y="703.50"></text></g><g><title>App`fxhash::write64 (367 samples, 0.70%)</title><rect x="89.9831%" y="677" width="0.7041%" height="15" fill="rgb(225,55,31)" fg:x="46901" fg:w="367"/><text x="90.2331%" y="687.50"></text></g><g><title>App`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (12 samples, 0.02%)</title><rect x="90.6642%" y="661" width="0.0230%" height="15" fill="rgb(211,15,21)" fg:x="47256" fg:w="12"/><text x="90.9142%" y="671.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (447 samples, 0.86%)</title><rect x="89.8546%" y="773" width="0.8576%" height="15" fill="rgb(215,187,41)" fg:x="46834" fg:w="447"/><text x="90.1046%" y="783.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash (9 samples, 0.02%)</title><rect x="90.6949%" y="757" width="0.0173%" height="15" fill="rgb(248,69,32)" fg:x="47272" fg:w="9"/><text x="90.9449%" y="767.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u8 (7 samples, 0.01%)</title><rect x="90.6987%" y="741" width="0.0134%" height="15" fill="rgb(252,102,52)" fg:x="47274" fg:w="7"/><text x="90.9487%" y="751.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (6 samples, 0.01%)</title><rect x="90.7007%" y="725" width="0.0115%" height="15" fill="rgb(253,140,32)" fg:x="47275" fg:w="6"/><text x="90.9507%" y="735.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (466 samples, 0.89%)</title><rect x="89.8258%" y="805" width="0.8941%" height="15" fill="rgb(216,56,42)" fg:x="46819" fg:w="466"/><text x="90.0758%" y="815.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (462 samples, 0.89%)</title><rect x="89.8335%" y="789" width="0.8864%" height="15" fill="rgb(216,184,14)" fg:x="46823" fg:w="462"/><text x="90.0835%" y="799.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (477 samples, 0.92%)</title><rect x="89.8066%" y="821" width="0.9152%" height="15" fill="rgb(237,187,27)" fg:x="46809" fg:w="477"/><text x="90.0566%" y="831.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (17 samples, 0.03%)</title><rect x="90.7889%" y="773" width="0.0326%" height="15" fill="rgb(219,65,3)" fg:x="47321" fg:w="17"/><text x="91.0389%" y="783.50"></text></g><g><title>App`&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="90.7889%" y="757" width="0.0326%" height="15" fill="rgb(245,83,25)" fg:x="47321" fg:w="17"/><text x="91.0389%" y="767.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::_{{closure}} (17 samples, 0.03%)</title><rect x="90.7889%" y="741" width="0.0326%" height="15" fill="rgb(214,205,45)" fg:x="47321" fg:w="17"/><text x="91.0389%" y="751.50"></text></g><g><title>App`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (17 samples, 0.03%)</title><rect x="90.7889%" y="725" width="0.0326%" height="15" fill="rgb(241,20,18)" fg:x="47321" fg:w="17"/><text x="91.0389%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`madvise (17 samples, 0.03%)</title><rect x="90.7889%" y="709" width="0.0326%" height="15" fill="rgb(232,163,23)" fg:x="47321" fg:w="17"/><text x="91.0389%" y="719.50"></text></g><g><title>App`&lt;App::game_manager::board2::ChessMove as core::hash::Hash&gt;::hash (18 samples, 0.03%)</title><rect x="90.9117%" y="693" width="0.0345%" height="15" fill="rgb(214,5,46)" fg:x="47385" fg:w="18"/><text x="91.1617%" y="703.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u16&gt;::hash (15 samples, 0.03%)</title><rect x="90.9175%" y="677" width="0.0288%" height="15" fill="rgb(229,78,17)" fg:x="47388" fg:w="15"/><text x="91.1675%" y="687.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u16 (14 samples, 0.03%)</title><rect x="90.9194%" y="661" width="0.0269%" height="15" fill="rgb(248,89,10)" fg:x="47389" fg:w="14"/><text x="91.1694%" y="671.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (9 samples, 0.02%)</title><rect x="90.9290%" y="645" width="0.0173%" height="15" fill="rgb(248,54,15)" fg:x="47394" fg:w="9"/><text x="91.1790%" y="655.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_usize (34 samples, 0.07%)</title><rect x="90.9827%" y="629" width="0.0652%" height="15" fill="rgb(223,116,6)" fg:x="47422" fg:w="34"/><text x="91.2327%" y="639.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (28 samples, 0.05%)</title><rect x="90.9942%" y="613" width="0.0537%" height="15" fill="rgb(205,125,38)" fg:x="47428" fg:w="28"/><text x="91.2442%" y="623.50"></text></g><g><title>App`core::hash::Hasher::write_length_prefix (38 samples, 0.07%)</title><rect x="90.9808%" y="645" width="0.0729%" height="15" fill="rgb(251,78,38)" fg:x="47421" fg:w="38"/><text x="91.2308%" y="655.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (6 samples, 0.01%)</title><rect x="91.0901%" y="597" width="0.0115%" height="15" fill="rgb(253,78,28)" fg:x="47478" fg:w="6"/><text x="91.3401%" y="607.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (6 samples, 0.01%)</title><rect x="91.1112%" y="597" width="0.0115%" height="15" fill="rgb(209,120,3)" fg:x="47489" fg:w="6"/><text x="91.3612%" y="607.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (171 samples, 0.33%)</title><rect x="91.4048%" y="549" width="0.3281%" height="15" fill="rgb(238,229,9)" fg:x="47642" fg:w="171"/><text x="91.6548%" y="559.50"></text></g><g><title> N]&gt;::try_from (171 samples, 0.33%)</title><rect x="91.4048%" y="533" width="0.3281%" height="15" fill="rgb(253,159,18)" fg:x="47642" fg:w="171"/><text x="91.6548%" y="543.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (140 samples, 0.27%)</title><rect x="91.4643%" y="517" width="0.2686%" height="15" fill="rgb(244,42,34)" fg:x="47673" fg:w="140"/><text x="91.7143%" y="527.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (66 samples, 0.13%)</title><rect x="91.6062%" y="501" width="0.1266%" height="15" fill="rgb(224,8,7)" fg:x="47747" fg:w="66"/><text x="91.8562%" y="511.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (66 samples, 0.13%)</title><rect x="91.6062%" y="485" width="0.1266%" height="15" fill="rgb(210,201,45)" fg:x="47747" fg:w="66"/><text x="91.8562%" y="495.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (186 samples, 0.36%)</title><rect x="91.3894%" y="565" width="0.3569%" height="15" fill="rgb(252,185,21)" fg:x="47634" fg:w="186"/><text x="91.6394%" y="575.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (7 samples, 0.01%)</title><rect x="91.7329%" y="549" width="0.0134%" height="15" fill="rgb(223,131,1)" fg:x="47813" fg:w="7"/><text x="91.9829%" y="559.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (7 samples, 0.01%)</title><rect x="91.7520%" y="565" width="0.0134%" height="15" fill="rgb(245,141,16)" fg:x="47823" fg:w="7"/><text x="92.0020%" y="575.50"></text></g><g><title> N]&gt;::try_from (7 samples, 0.01%)</title><rect x="91.7520%" y="549" width="0.0134%" height="15" fill="rgb(229,55,45)" fg:x="47823" fg:w="7"/><text x="92.0020%" y="559.50"></text></g><g><title>App`core::num::_&lt;impl u64&gt;::from_le_bytes (30 samples, 0.06%)</title><rect x="91.7655%" y="565" width="0.0576%" height="15" fill="rgb(208,92,15)" fg:x="47830" fg:w="30"/><text x="92.0155%" y="575.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::unwrap (15 samples, 0.03%)</title><rect x="91.8230%" y="565" width="0.0288%" height="15" fill="rgb(234,185,47)" fg:x="47860" fg:w="15"/><text x="92.0730%" y="575.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (426 samples, 0.82%)</title><rect x="91.2705%" y="581" width="0.8173%" height="15" fill="rgb(253,104,50)" fg:x="47572" fg:w="426"/><text x="91.5205%" y="591.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (123 samples, 0.24%)</title><rect x="91.8518%" y="565" width="0.2360%" height="15" fill="rgb(205,70,7)" fg:x="47875" fg:w="123"/><text x="92.1018%" y="575.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (109 samples, 0.21%)</title><rect x="91.8787%" y="549" width="0.2091%" height="15" fill="rgb(240,178,43)" fg:x="47889" fg:w="109"/><text x="92.1287%" y="559.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (76 samples, 0.15%)</title><rect x="91.9420%" y="533" width="0.1458%" height="15" fill="rgb(214,112,2)" fg:x="47922" fg:w="76"/><text x="92.1920%" y="543.50"></text></g><g><title>App`&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.02%)</title><rect x="92.0878%" y="581" width="0.0249%" height="15" fill="rgb(206,46,17)" fg:x="47998" fg:w="13"/><text x="92.3378%" y="591.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (52 samples, 0.10%)</title><rect x="92.1147%" y="581" width="0.0998%" height="15" fill="rgb(225,220,16)" fg:x="48012" fg:w="52"/><text x="92.3647%" y="591.50"></text></g><g><title>App`&lt;u64 as core::ops::bit::BitXor&gt;::bitxor (7 samples, 0.01%)</title><rect x="92.2010%" y="565" width="0.0134%" height="15" fill="rgb(238,65,40)" fg:x="48057" fg:w="7"/><text x="92.4510%" y="575.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (90 samples, 0.17%)</title><rect x="92.2240%" y="581" width="0.1727%" height="15" fill="rgb(230,151,21)" fg:x="48069" fg:w="90"/><text x="92.4740%" y="591.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (6 samples, 0.01%)</title><rect x="92.3967%" y="581" width="0.0115%" height="15" fill="rgb(218,58,49)" fg:x="48159" fg:w="6"/><text x="92.6467%" y="591.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (714 samples, 1.37%)</title><rect x="91.0767%" y="629" width="1.3699%" height="15" fill="rgb(219,179,14)" fg:x="47471" fg:w="714"/><text x="91.3267%" y="639.50"></text></g><g><title>App`fxhash::write (707 samples, 1.36%)</title><rect x="91.0901%" y="613" width="1.3564%" height="15" fill="rgb(223,72,1)" fg:x="47478" fg:w="707"/><text x="91.3401%" y="623.50"></text></g><g><title>App`fxhash::write64 (688 samples, 1.32%)</title><rect x="91.1266%" y="597" width="1.3200%" height="15" fill="rgb(238,126,10)" fg:x="47497" fg:w="688"/><text x="91.3766%" y="607.50"></text></g><g><title>App`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (20 samples, 0.04%)</title><rect x="92.4082%" y="581" width="0.0384%" height="15" fill="rgb(224,206,38)" fg:x="48165" fg:w="20"/><text x="92.6582%" y="591.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (779 samples, 1.49%)</title><rect x="90.9539%" y="677" width="1.4946%" height="15" fill="rgb(212,201,54)" fg:x="47407" fg:w="779"/><text x="91.2039%" y="687.50"></text></g><g><title> N]&gt;::hash (779 samples, 1.49%)</title><rect x="90.9539%" y="661" width="1.4946%" height="15" fill="rgb(218,154,48)" fg:x="47407" fg:w="779"/><text x="91.2039%" y="671.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (727 samples, 1.39%)</title><rect x="91.0537%" y="645" width="1.3948%" height="15" fill="rgb(232,93,24)" fg:x="47459" fg:w="727"/><text x="91.3037%" y="655.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (799 samples, 1.53%)</title><rect x="90.9462%" y="693" width="1.5329%" height="15" fill="rgb(245,30,21)" fg:x="47403" fg:w="799"/><text x="91.1962%" y="703.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u8&gt;::hash (11 samples, 0.02%)</title><rect x="92.4581%" y="677" width="0.0211%" height="15" fill="rgb(242,148,29)" fg:x="48191" fg:w="11"/><text x="92.7081%" y="687.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u8 (10 samples, 0.02%)</title><rect x="92.4600%" y="661" width="0.0192%" height="15" fill="rgb(244,153,54)" fg:x="48192" fg:w="10"/><text x="92.7100%" y="671.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (8 samples, 0.02%)</title><rect x="92.4638%" y="645" width="0.0153%" height="15" fill="rgb(252,87,22)" fg:x="48194" fg:w="8"/><text x="92.7138%" y="655.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (822 samples, 1.58%)</title><rect x="90.9079%" y="725" width="1.5771%" height="15" fill="rgb(210,51,29)" fg:x="47383" fg:w="822"/><text x="91.1579%" y="735.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (821 samples, 1.58%)</title><rect x="90.9098%" y="709" width="1.5752%" height="15" fill="rgb(242,136,47)" fg:x="47384" fg:w="821"/><text x="91.1598%" y="719.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (841 samples, 1.61%)</title><rect x="90.8753%" y="741" width="1.6135%" height="15" fill="rgb(238,68,4)" fg:x="47366" fg:w="841"/><text x="91.1253%" y="751.50"></text></g><g><title>App`hashbrown::map::make_hasher::_{{closure}} (848 samples, 1.63%)</title><rect x="90.8637%" y="757" width="1.6270%" height="15" fill="rgb(242,161,30)" fg:x="47360" fg:w="848"/><text x="91.1137%" y="767.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (888 samples, 1.70%)</title><rect x="90.8215%" y="773" width="1.7037%" height="15" fill="rgb(218,58,44)" fg:x="47338" fg:w="888"/><text x="91.0715%" y="783.50"></text></g><g><title>App`hashbrown::raw::Bucket&lt;T&gt;::from_base_index (18 samples, 0.03%)</title><rect x="92.4907%" y="757" width="0.0345%" height="15" fill="rgb(252,125,32)" fg:x="48208" fg:w="18"/><text x="92.7407%" y="767.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_loadu_si128 (20 samples, 0.04%)</title><rect x="92.5578%" y="741" width="0.0384%" height="15" fill="rgb(219,178,0)" fg:x="48243" fg:w="20"/><text x="92.8078%" y="751.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (50 samples, 0.10%)</title><rect x="92.5962%" y="741" width="0.0959%" height="15" fill="rgb(213,152,7)" fg:x="48263" fg:w="50"/><text x="92.8462%" y="751.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_movemask_epi8 (30 samples, 0.06%)</title><rect x="92.6346%" y="725" width="0.0576%" height="15" fill="rgb(249,109,34)" fg:x="48283" fg:w="30"/><text x="92.8846%" y="735.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (95 samples, 0.18%)</title><rect x="92.5252%" y="773" width="0.1823%" height="15" fill="rgb(232,96,21)" fg:x="48226" fg:w="95"/><text x="92.7752%" y="783.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (86 samples, 0.16%)</title><rect x="92.5425%" y="757" width="0.1650%" height="15" fill="rgb(228,27,39)" fg:x="48235" fg:w="86"/><text x="92.7925%" y="767.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::fix_insert_slot (8 samples, 0.02%)</title><rect x="92.6921%" y="741" width="0.0153%" height="15" fill="rgb(211,182,52)" fg:x="48313" fg:w="8"/><text x="92.9421%" y="751.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1,080 samples, 2.07%)</title><rect x="90.7525%" y="789" width="2.0721%" height="15" fill="rgb(234,178,38)" fg:x="47302" fg:w="1080"/><text x="91.0025%" y="799.50">A..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (61 samples, 0.12%)</title><rect x="92.7075%" y="773" width="0.1170%" height="15" fill="rgb(221,111,3)" fg:x="48321" fg:w="61"/><text x="92.9575%" y="783.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1,089 samples, 2.09%)</title><rect x="90.7429%" y="805" width="2.0893%" height="15" fill="rgb(228,175,21)" fg:x="47297" fg:w="1089"/><text x="90.9929%" y="815.50">A..</text></g><g><title>App`core::core_arch::x86::sse2::_mm_loadu_si128 (26 samples, 0.05%)</title><rect x="92.9051%" y="789" width="0.0499%" height="15" fill="rgb(228,174,43)" fg:x="48424" fg:w="26"/><text x="93.1551%" y="799.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (7 samples, 0.01%)</title><rect x="92.9819%" y="661" width="0.0134%" height="15" fill="rgb(211,191,0)" fg:x="48464" fg:w="7"/><text x="93.2319%" y="671.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (13 samples, 0.02%)</title><rect x="92.9742%" y="725" width="0.0249%" height="15" fill="rgb(253,117,3)" fg:x="48460" fg:w="13"/><text x="93.2242%" y="735.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (10 samples, 0.02%)</title><rect x="92.9799%" y="709" width="0.0192%" height="15" fill="rgb(241,127,19)" fg:x="48463" fg:w="10"/><text x="93.2299%" y="719.50"></text></g><g><title> N]&gt; for [A (10 samples, 0.02%)</title><rect x="92.9799%" y="693" width="0.0192%" height="15" fill="rgb(218,103,12)" fg:x="48463" fg:w="10"/><text x="93.2299%" y="703.50"></text></g><g><title> N]&gt;::eq (10 samples, 0.02%)</title><rect x="92.9799%" y="677" width="0.0192%" height="15" fill="rgb(236,214,43)" fg:x="48463" fg:w="10"/><text x="93.2299%" y="687.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (22 samples, 0.04%)</title><rect x="92.9588%" y="789" width="0.0422%" height="15" fill="rgb(244,144,19)" fg:x="48452" fg:w="22"/><text x="93.2088%" y="799.50"></text></g><g><title>App`hashbrown::map::equivalent_key::_{{closure}} (17 samples, 0.03%)</title><rect x="92.9684%" y="773" width="0.0326%" height="15" fill="rgb(246,188,10)" fg:x="48457" fg:w="17"/><text x="93.2184%" y="783.50"></text></g><g><title>App`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (17 samples, 0.03%)</title><rect x="92.9684%" y="757" width="0.0326%" height="15" fill="rgb(212,193,33)" fg:x="48457" fg:w="17"/><text x="93.2184%" y="767.50"></text></g><g><title>App`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (15 samples, 0.03%)</title><rect x="92.9723%" y="741" width="0.0288%" height="15" fill="rgb(241,51,29)" fg:x="48459" fg:w="15"/><text x="93.2223%" y="751.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (25 samples, 0.05%)</title><rect x="93.0010%" y="789" width="0.0480%" height="15" fill="rgb(211,58,19)" fg:x="48474" fg:w="25"/><text x="93.2510%" y="799.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_movemask_epi8 (14 samples, 0.03%)</title><rect x="93.0221%" y="773" width="0.0269%" height="15" fill="rgb(229,111,26)" fg:x="48485" fg:w="14"/><text x="93.2721%" y="783.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_cmpeq_epi8 (6 samples, 0.01%)</title><rect x="93.0739%" y="773" width="0.0115%" height="15" fill="rgb(213,115,40)" fg:x="48512" fg:w="6"/><text x="93.3239%" y="783.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_movemask_epi8 (19 samples, 0.04%)</title><rect x="93.0855%" y="773" width="0.0365%" height="15" fill="rgb(209,56,44)" fg:x="48518" fg:w="19"/><text x="93.3355%" y="783.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (1,270 samples, 2.44%)</title><rect x="90.7237%" y="821" width="2.4366%" height="15" fill="rgb(230,108,32)" fg:x="47287" fg:w="1270"/><text x="90.9737%" y="831.50">Ap..</text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (169 samples, 0.32%)</title><rect x="92.8360%" y="805" width="0.3242%" height="15" fill="rgb(216,165,31)" fg:x="48388" fg:w="169"/><text x="93.0860%" y="815.50"></text></g><g><title>App`hashbrown::raw::sse2::Group::match_byte (58 samples, 0.11%)</title><rect x="93.0490%" y="789" width="0.1113%" height="15" fill="rgb(218,122,21)" fg:x="48499" fg:w="58"/><text x="93.2990%" y="799.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_set1_epi8 (20 samples, 0.04%)</title><rect x="93.1219%" y="773" width="0.0384%" height="15" fill="rgb(223,224,47)" fg:x="48537" fg:w="20"/><text x="93.3719%" y="783.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (49 samples, 0.09%)</title><rect x="93.1603%" y="821" width="0.0940%" height="15" fill="rgb(238,102,44)" fg:x="48557" fg:w="49"/><text x="93.4103%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (38 samples, 0.07%)</title><rect x="93.1814%" y="805" width="0.0729%" height="15" fill="rgb(236,46,40)" fg:x="48568" fg:w="38"/><text x="93.4314%" y="815.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,823 samples, 3.50%)</title><rect x="89.7644%" y="837" width="3.4976%" height="15" fill="rgb(247,202,50)" fg:x="46787" fg:w="1823"/><text x="90.0144%" y="847.50">App..</text></g><g><title>App`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1,824 samples, 3.50%)</title><rect x="89.7644%" y="853" width="3.4995%" height="15" fill="rgb(209,99,20)" fg:x="46787" fg:w="1824"/><text x="90.0144%" y="863.50">App..</text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (13 samples, 0.02%)</title><rect x="93.2677%" y="853" width="0.0249%" height="15" fill="rgb(252,27,34)" fg:x="48613" fg:w="13"/><text x="93.5177%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.03%)</title><rect x="93.2927%" y="853" width="0.0345%" height="15" fill="rgb(215,206,23)" fg:x="48626" fg:w="18"/><text x="93.5427%" y="863.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (30,886 samples, 59.26%)</title><rect x="34.0739%" y="869" width="59.2571%" height="15" fill="rgb(212,135,36)" fg:x="17760" fg:w="30886"/><text x="34.3239%" y="879.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::board_state_numbers (21 samples, 0.04%)</title><rect x="93.3310%" y="869" width="0.0403%" height="15" fill="rgb(240,189,1)" fg:x="48646" fg:w="21"/><text x="93.5810%" y="879.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (10 samples, 0.02%)</title><rect x="93.3943%" y="821" width="0.0192%" height="15" fill="rgb(242,56,20)" fg:x="48679" fg:w="10"/><text x="93.6443%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_on_2nd (9 samples, 0.02%)</title><rect x="93.3963%" y="805" width="0.0173%" height="15" fill="rgb(247,132,33)" fg:x="48680" fg:w="9"/><text x="93.6463%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (25 samples, 0.05%)</title><rect x="93.3867%" y="837" width="0.0480%" height="15" fill="rgb(208,149,11)" fg:x="48675" fg:w="25"/><text x="93.6367%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (6 samples, 0.01%)</title><rect x="93.4231%" y="821" width="0.0115%" height="15" fill="rgb(211,33,11)" fg:x="48694" fg:w="6"/><text x="93.6731%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (34 samples, 0.07%)</title><rect x="93.3752%" y="853" width="0.0652%" height="15" fill="rgb(221,29,38)" fg:x="48669" fg:w="34"/><text x="93.6252%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (6 samples, 0.01%)</title><rect x="93.4596%" y="805" width="0.0115%" height="15" fill="rgb(206,182,49)" fg:x="48713" fg:w="6"/><text x="93.7096%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (10 samples, 0.02%)</title><rect x="93.4711%" y="805" width="0.0192%" height="15" fill="rgb(216,140,1)" fg:x="48719" fg:w="10"/><text x="93.7211%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (34 samples, 0.07%)</title><rect x="93.4500%" y="821" width="0.0652%" height="15" fill="rgb(232,57,40)" fg:x="48708" fg:w="34"/><text x="93.7000%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="93.4903%" y="805" width="0.0249%" height="15" fill="rgb(224,186,18)" fg:x="48729" fg:w="13"/><text x="93.7403%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (39 samples, 0.07%)</title><rect x="93.4423%" y="837" width="0.0748%" height="15" fill="rgb(215,121,11)" fg:x="48704" fg:w="39"/><text x="93.6923%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (42 samples, 0.08%)</title><rect x="93.4404%" y="853" width="0.0806%" height="15" fill="rgb(245,147,10)" fg:x="48703" fg:w="42"/><text x="93.6904%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (9 samples, 0.02%)</title><rect x="93.5402%" y="821" width="0.0173%" height="15" fill="rgb(238,153,13)" fg:x="48755" fg:w="9"/><text x="93.7902%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (25 samples, 0.05%)</title><rect x="93.5267%" y="837" width="0.0480%" height="15" fill="rgb(233,108,0)" fg:x="48748" fg:w="25"/><text x="93.7767%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.02%)</title><rect x="93.5574%" y="821" width="0.0173%" height="15" fill="rgb(212,157,17)" fg:x="48764" fg:w="9"/><text x="93.8074%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::game_state (109 samples, 0.21%)</title><rect x="93.3713%" y="869" width="0.2091%" height="15" fill="rgb(225,213,38)" fg:x="48667" fg:w="109"/><text x="93.6213%" y="879.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::num_checkers (31 samples, 0.06%)</title><rect x="93.5210%" y="853" width="0.0595%" height="15" fill="rgb(248,16,11)" fg:x="48745" fg:w="31"/><text x="93.7710%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (15 samples, 0.03%)</title><rect x="93.6092%" y="821" width="0.0288%" height="15" fill="rgb(241,33,4)" fg:x="48791" fg:w="15"/><text x="93.8592%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (6 samples, 0.01%)</title><rect x="93.6265%" y="805" width="0.0115%" height="15" fill="rgb(222,26,43)" fg:x="48800" fg:w="6"/><text x="93.8765%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (19 samples, 0.04%)</title><rect x="93.6035%" y="853" width="0.0365%" height="15" fill="rgb(243,29,36)" fg:x="48788" fg:w="19"/><text x="93.8535%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_for_king (18 samples, 0.03%)</title><rect x="93.6054%" y="837" width="0.0345%" height="15" fill="rgb(241,9,27)" fg:x="48789" fg:w="18"/><text x="93.8554%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (7 samples, 0.01%)</title><rect x="93.6649%" y="821" width="0.0134%" height="15" fill="rgb(205,117,26)" fg:x="48820" fg:w="7"/><text x="93.9149%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::BishopMoves::mov_map (9 samples, 0.02%)</title><rect x="93.6783%" y="821" width="0.0173%" height="15" fill="rgb(209,80,39)" fg:x="48827" fg:w="9"/><text x="93.9283%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (19 samples, 0.04%)</title><rect x="93.6610%" y="837" width="0.0365%" height="15" fill="rgb(239,155,6)" fg:x="48818" fg:w="19"/><text x="93.9110%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (10 samples, 0.02%)</title><rect x="93.6994%" y="821" width="0.0192%" height="15" fill="rgb(212,104,12)" fg:x="48838" fg:w="10"/><text x="93.9494%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (15 samples, 0.03%)</title><rect x="93.6975%" y="837" width="0.0288%" height="15" fill="rgb(234,204,3)" fg:x="48837" fg:w="15"/><text x="93.9475%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_mid_board (16 samples, 0.03%)</title><rect x="93.7320%" y="821" width="0.0307%" height="15" fill="rgb(251,218,7)" fg:x="48855" fg:w="16"/><text x="93.9820%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (15 samples, 0.03%)</title><rect x="93.7972%" y="805" width="0.0288%" height="15" fill="rgb(221,81,32)" fg:x="48889" fg:w="15"/><text x="94.0472%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_on_2nd (44 samples, 0.08%)</title><rect x="93.7627%" y="821" width="0.0844%" height="15" fill="rgb(214,152,26)" fg:x="48871" fg:w="44"/><text x="94.0127%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="93.8337%" y="805" width="0.0134%" height="15" fill="rgb(223,22,3)" fg:x="48908" fg:w="7"/><text x="94.0837%" y="815.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (67 samples, 0.13%)</title><rect x="93.7263%" y="837" width="0.1285%" height="15" fill="rgb(207,174,7)" fg:x="48852" fg:w="67"/><text x="93.9763%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (8 samples, 0.02%)</title><rect x="93.8567%" y="837" width="0.0153%" height="15" fill="rgb(224,19,52)" fg:x="48920" fg:w="8"/><text x="94.1067%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (14 samples, 0.03%)</title><rect x="93.8721%" y="837" width="0.0269%" height="15" fill="rgb(228,24,14)" fg:x="48928" fg:w="14"/><text x="94.1221%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (12 samples, 0.02%)</title><rect x="93.8759%" y="821" width="0.0230%" height="15" fill="rgb(230,153,43)" fg:x="48930" fg:w="12"/><text x="94.1259%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (137 samples, 0.26%)</title><rect x="93.6399%" y="853" width="0.2628%" height="15" fill="rgb(231,106,12)" fg:x="48807" fg:w="137"/><text x="93.8899%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::num_checkers (11 samples, 0.02%)</title><rect x="93.9028%" y="853" width="0.0211%" height="15" fill="rgb(215,92,2)" fg:x="48944" fg:w="11"/><text x="94.1528%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (9 samples, 0.02%)</title><rect x="93.9066%" y="837" width="0.0173%" height="15" fill="rgb(249,143,25)" fg:x="48946" fg:w="9"/><text x="94.1566%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::bit_boards::RookMoves::mov_map (6 samples, 0.01%)</title><rect x="93.9642%" y="837" width="0.0115%" height="15" fill="rgb(252,7,35)" fg:x="48976" fg:w="6"/><text x="94.2142%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::update_pinned_pieces_and_check_line (30 samples, 0.06%)</title><rect x="93.9239%" y="853" width="0.0576%" height="15" fill="rgb(216,69,40)" fg:x="48955" fg:w="30"/><text x="94.1739%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (219 samples, 0.42%)</title><rect x="93.5804%" y="869" width="0.4202%" height="15" fill="rgb(240,36,33)" fg:x="48776" fg:w="219"/><text x="93.8304%" y="879.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (128 samples, 0.25%)</title><rect x="94.0064%" y="869" width="0.2456%" height="15" fill="rgb(231,128,14)" fg:x="48998" fg:w="128"/><text x="94.2564%" y="879.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::new (795 samples, 1.53%)</title><rect x="94.2558%" y="853" width="1.5253%" height="15" fill="rgb(245,143,14)" fg:x="49128" fg:w="795"/><text x="94.5058%" y="863.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (26 samples, 0.05%)</title><rect x="95.7312%" y="837" width="0.0499%" height="15" fill="rgb(222,130,28)" fg:x="49897" fg:w="26"/><text x="95.9812%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move::_{{closure}} (64 samples, 0.12%)</title><rect x="95.7811%" y="853" width="0.1228%" height="15" fill="rgb(212,10,48)" fg:x="49923" fg:w="64"/><text x="96.0311%" y="863.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (11 samples, 0.02%)</title><rect x="95.8827%" y="837" width="0.0211%" height="15" fill="rgb(254,118,45)" fg:x="49976" fg:w="11"/><text x="96.1327%" y="847.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (11 samples, 0.02%)</title><rect x="95.8827%" y="821" width="0.0211%" height="15" fill="rgb(228,6,45)" fg:x="49976" fg:w="11"/><text x="96.1327%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (27 samples, 0.05%)</title><rect x="95.9173%" y="853" width="0.0518%" height="15" fill="rgb(241,18,35)" fg:x="49994" fg:w="27"/><text x="96.1673%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (900 samples, 1.73%)</title><rect x="94.2558%" y="869" width="1.7267%" height="15" fill="rgb(227,214,53)" fg:x="49128" fg:w="900"/><text x="94.5058%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (7 samples, 0.01%)</title><rect x="95.9691%" y="853" width="0.0134%" height="15" fill="rgb(224,107,51)" fg:x="50021" fg:w="7"/><text x="96.2191%" y="863.50"></text></g><g><title>App`core::slice::sort::merge_sort (19 samples, 0.04%)</title><rect x="96.0132%" y="837" width="0.0365%" height="15" fill="rgb(248,60,28)" fg:x="50044" fg:w="19"/><text x="96.2632%" y="847.50"></text></g><g><title>App`&lt;core::slice::sort::merge_sort::BufGuard&lt;T,ElemDeallocF&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.01%)</title><rect x="96.0880%" y="805" width="0.0134%" height="15" fill="rgb(249,101,23)" fg:x="50083" fg:w="7"/><text x="96.3380%" y="815.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;core::slice::sort::merge_sort::BufGuard&lt;App::game_manager::board2::ChessMove,alloc::slice::stable_sort&lt;App::game_manager::board2::ChessMove,alloc::slice::&lt;impl [App::game_manager::board2::ChessMove]&gt;::sort_by&lt;App::game_manager::bot2::Bot2::search::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt;&gt; (8 samples, 0.02%)</title><rect x="96.0880%" y="821" width="0.0153%" height="15" fill="rgb(228,51,19)" fg:x="50083" fg:w="8"/><text x="96.3380%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`free (6 samples, 0.01%)</title><rect x="96.1168%" y="773" width="0.0115%" height="15" fill="rgb(213,20,6)" fg:x="50098" fg:w="6"/><text x="96.3668%" y="783.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (11 samples, 0.02%)</title><rect x="96.1110%" y="789" width="0.0211%" height="15" fill="rgb(212,124,10)" fg:x="50095" fg:w="11"/><text x="96.3610%" y="799.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;core::slice::sort::merge_sort::RunVec&lt;alloc::slice::stable_sort&lt;App::game_manager::board2::ChessMove,alloc::slice::&lt;impl [App::game_manager::board2::ChessMove]&gt;::sort_by&lt;App::game_manager::bot2::Bot2::search::{{closure}}&gt;::{{closure}}&gt;::{{closure}},alloc::slice::stable_sort&lt;App::game_manager::board2::ChessMove,alloc::slice::&lt;impl [App::game_manager::board2::ChessMove]&gt;::sort_by&lt;App::game_manager::bot2::Bot2::search::{{closure}}&gt;::{{closure}}&gt;::{{closure}}&gt;&gt; (18 samples, 0.03%)</title><rect x="96.1034%" y="821" width="0.0345%" height="15" fill="rgb(248,3,40)" fg:x="50091" fg:w="18"/><text x="96.3534%" y="831.50"></text></g><g><title>App`&lt;core::slice::sort::merge_sort::RunVec&lt;RunAllocF,RunDeallocF&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.03%)</title><rect x="96.1053%" y="805" width="0.0326%" height="15" fill="rgb(223,178,23)" fg:x="50092" fg:w="17"/><text x="96.3553%" y="815.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::reverse (8 samples, 0.02%)</title><rect x="96.1379%" y="821" width="0.0153%" height="15" fill="rgb(240,132,45)" fg:x="50109" fg:w="8"/><text x="96.3879%" y="831.50"></text></g><g><title>App`core::cmp::Ordering::reverse (6 samples, 0.01%)</title><rect x="96.1955%" y="773" width="0.0115%" height="15" fill="rgb(245,164,36)" fg:x="50139" fg:w="6"/><text x="96.4455%" y="783.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (23 samples, 0.04%)</title><rect x="96.1801%" y="789" width="0.0441%" height="15" fill="rgb(231,188,53)" fg:x="50131" fg:w="23"/><text x="96.4301%" y="799.50"></text></g><g><title>App`core::cmp::impls::_&lt;impl core::cmp::Ord for i16&gt;::cmp (9 samples, 0.02%)</title><rect x="96.2070%" y="773" width="0.0173%" height="15" fill="rgb(237,198,39)" fg:x="50145" fg:w="9"/><text x="96.4570%" y="783.50"></text></g><g><title>App`core::slice::sort::find_streak (39 samples, 0.07%)</title><rect x="96.1533%" y="821" width="0.0748%" height="15" fill="rgb(223,120,35)" fg:x="50117" fg:w="39"/><text x="96.4033%" y="831.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (33 samples, 0.06%)</title><rect x="96.1648%" y="805" width="0.0633%" height="15" fill="rgb(253,107,49)" fg:x="50123" fg:w="33"/><text x="96.4148%" y="815.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (16 samples, 0.03%)</title><rect x="96.2281%" y="821" width="0.0307%" height="15" fill="rgb(216,44,31)" fg:x="50156" fg:w="16"/><text x="96.4781%" y="831.50"></text></g><g><title>App`core::slice::sort::insert_tail (11 samples, 0.02%)</title><rect x="96.2377%" y="805" width="0.0211%" height="15" fill="rgb(253,87,21)" fg:x="50161" fg:w="11"/><text x="96.4877%" y="815.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (7 samples, 0.01%)</title><rect x="96.2453%" y="789" width="0.0134%" height="15" fill="rgb(226,18,2)" fg:x="50165" fg:w="7"/><text x="96.4953%" y="799.50"></text></g><g><title>App`core::cmp::Ordering::reverse (16 samples, 0.03%)</title><rect x="96.5485%" y="773" width="0.0307%" height="15" fill="rgb(216,8,46)" fg:x="50323" fg:w="16"/><text x="96.7985%" y="783.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (81 samples, 0.16%)</title><rect x="96.4852%" y="789" width="0.1554%" height="15" fill="rgb(226,140,39)" fg:x="50290" fg:w="81"/><text x="96.7352%" y="799.50"></text></g><g><title>App`core::cmp::impls::_&lt;impl core::cmp::Ord for i16&gt;::cmp (32 samples, 0.06%)</title><rect x="96.5792%" y="773" width="0.0614%" height="15" fill="rgb(221,194,54)" fg:x="50339" fg:w="32"/><text x="96.8292%" y="783.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (109 samples, 0.21%)</title><rect x="96.4410%" y="805" width="0.2091%" height="15" fill="rgb(213,92,11)" fg:x="50267" fg:w="109"/><text x="96.6910%" y="815.50"></text></g><g><title>App`core::slice::sort::merge (218 samples, 0.42%)</title><rect x="96.2588%" y="821" width="0.4182%" height="15" fill="rgb(229,162,46)" fg:x="50172" fg:w="218"/><text x="96.5088%" y="831.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.02%)</title><rect x="96.6598%" y="805" width="0.0173%" height="15" fill="rgb(214,111,36)" fg:x="50381" fg:w="9"/><text x="96.9098%" y="815.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (20 samples, 0.04%)</title><rect x="96.6789%" y="805" width="0.0384%" height="15" fill="rgb(207,6,21)" fg:x="50391" fg:w="20"/><text x="96.9289%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (15 samples, 0.03%)</title><rect x="96.6885%" y="789" width="0.0288%" height="15" fill="rgb(213,127,38)" fg:x="50396" fg:w="15"/><text x="96.9385%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.03%)</title><rect x="96.6905%" y="773" width="0.0269%" height="15" fill="rgb(238,118,32)" fg:x="50397" fg:w="14"/><text x="96.9405%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.03%)</title><rect x="96.6905%" y="757" width="0.0269%" height="15" fill="rgb(240,139,39)" fg:x="50397" fg:w="14"/><text x="96.9405%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.02%)</title><rect x="96.6924%" y="741" width="0.0249%" height="15" fill="rgb(235,10,37)" fg:x="50398" fg:w="13"/><text x="96.9424%" y="751.50"></text></g><g><title>App`core::slice::sort::merge_sort::BufGuard&lt;T,ElemDeallocF&gt;::new (22 samples, 0.04%)</title><rect x="96.6770%" y="821" width="0.0422%" height="15" fill="rgb(249,171,38)" fg:x="50390" fg:w="22"/><text x="96.9270%" y="831.50"></text></g><g><title>App`core::slice::sort::merge_sort::RunVec&lt;RunAllocF,RunDeallocF&gt;::new (11 samples, 0.02%)</title><rect x="96.7192%" y="821" width="0.0211%" height="15" fill="rgb(242,144,32)" fg:x="50412" fg:w="11"/><text x="96.9692%" y="831.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (10 samples, 0.02%)</title><rect x="96.7212%" y="805" width="0.0192%" height="15" fill="rgb(217,117,21)" fg:x="50413" fg:w="10"/><text x="96.9712%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.02%)</title><rect x="96.7231%" y="789" width="0.0173%" height="15" fill="rgb(249,87,1)" fg:x="50414" fg:w="9"/><text x="96.9731%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.02%)</title><rect x="96.7250%" y="773" width="0.0153%" height="15" fill="rgb(248,196,48)" fg:x="50415" fg:w="8"/><text x="96.9750%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.02%)</title><rect x="96.7250%" y="757" width="0.0153%" height="15" fill="rgb(251,206,33)" fg:x="50415" fg:w="8"/><text x="96.9750%" y="767.50"></text></g><g><title>App`core::slice::sort::merge_sort::collapse (8 samples, 0.02%)</title><rect x="96.7442%" y="821" width="0.0153%" height="15" fill="rgb(232,141,28)" fg:x="50425" fg:w="8"/><text x="96.9942%" y="831.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (6 samples, 0.01%)</title><rect x="96.7672%" y="805" width="0.0115%" height="15" fill="rgb(209,167,14)" fg:x="50437" fg:w="6"/><text x="97.0172%" y="815.50"></text></g><g><title>App`core::cmp::max_by (6 samples, 0.01%)</title><rect x="96.7806%" y="805" width="0.0115%" height="15" fill="rgb(225,11,50)" fg:x="50444" fg:w="6"/><text x="97.0306%" y="815.50"></text></g><g><title>App`core::cmp::min_by (8 samples, 0.02%)</title><rect x="96.7921%" y="805" width="0.0153%" height="15" fill="rgb(209,50,20)" fg:x="50450" fg:w="8"/><text x="97.0421%" y="815.50"></text></g><g><title>App`&lt;core::ops::range::RangeInclusive&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (33 samples, 0.06%)</title><rect x="96.8497%" y="789" width="0.0633%" height="15" fill="rgb(212,17,46)" fg:x="50480" fg:w="33"/><text x="97.0997%" y="799.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (19 samples, 0.04%)</title><rect x="96.8766%" y="773" width="0.0365%" height="15" fill="rgb(216,101,39)" fg:x="50494" fg:w="19"/><text x="97.1266%" y="783.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (17 samples, 0.03%)</title><rect x="97.0089%" y="773" width="0.0326%" height="15" fill="rgb(212,228,48)" fg:x="50563" fg:w="17"/><text x="97.2589%" y="783.50"></text></g><g><title>App`App::game_manager::board2::ChessMove::promising_level (8 samples, 0.02%)</title><rect x="97.1624%" y="741" width="0.0153%" height="15" fill="rgb(250,6,50)" fg:x="50643" fg:w="8"/><text x="97.4124%" y="751.50"></text></g><g><title>App`core::cmp::Ordering::reverse (18 samples, 0.03%)</title><rect x="97.1778%" y="741" width="0.0345%" height="15" fill="rgb(250,160,48)" fg:x="50651" fg:w="18"/><text x="97.4278%" y="751.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (92 samples, 0.18%)</title><rect x="97.1145%" y="757" width="0.1765%" height="15" fill="rgb(244,216,33)" fg:x="50618" fg:w="92"/><text x="97.3645%" y="767.50"></text></g><g><title>App`core::cmp::impls::_&lt;impl core::cmp::Ord for i16&gt;::cmp (41 samples, 0.08%)</title><rect x="97.2123%" y="741" width="0.0787%" height="15" fill="rgb(207,157,5)" fg:x="50669" fg:w="41"/><text x="97.4623%" y="751.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (127 samples, 0.24%)</title><rect x="97.0550%" y="773" width="0.2437%" height="15" fill="rgb(228,199,8)" fg:x="50587" fg:w="127"/><text x="97.3050%" y="783.50"></text></g><g><title>App`core::slice::sort::provide_sorted_batch (282 samples, 0.54%)</title><rect x="96.7595%" y="821" width="0.5410%" height="15" fill="rgb(227,80,20)" fg:x="50433" fg:w="282"/><text x="97.0095%" y="831.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (253 samples, 0.49%)</title><rect x="96.8152%" y="805" width="0.4854%" height="15" fill="rgb(222,9,33)" fg:x="50462" fg:w="253"/><text x="97.0652%" y="815.50"></text></g><g><title>App`core::slice::sort::insert_tail (198 samples, 0.38%)</title><rect x="96.9207%" y="789" width="0.3799%" height="15" fill="rgb(239,44,28)" fg:x="50517" fg:w="198"/><text x="97.1707%" y="799.50"></text></g><g><title>App`core::slice::sort::merge_sort (647 samples, 1.24%)</title><rect x="96.0612%" y="837" width="1.2413%" height="15" fill="rgb(249,187,43)" fg:x="50069" fg:w="647"/><text x="96.3112%" y="847.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by (682 samples, 1.31%)</title><rect x="95.9979%" y="869" width="1.3085%" height="15" fill="rgb(216,141,28)" fg:x="50036" fg:w="682"/><text x="96.2479%" y="879.50"></text></g><g><title>App`alloc::slice::stable_sort (681 samples, 1.31%)</title><rect x="95.9998%" y="853" width="1.3066%" height="15" fill="rgb(230,154,53)" fg:x="50037" fg:w="681"/><text x="96.2498%" y="863.50"></text></g><g><title>App`core::cmp::max (7 samples, 0.01%)</title><rect x="97.3236%" y="869" width="0.0134%" height="15" fill="rgb(227,82,4)" fg:x="50727" fg:w="7"/><text x="97.5736%" y="879.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (14 samples, 0.03%)</title><rect x="97.3504%" y="853" width="0.0269%" height="15" fill="rgb(220,107,16)" fg:x="50741" fg:w="14"/><text x="97.6004%" y="863.50"></text></g><g><title>App`core::iter::range::_&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (22 samples, 0.04%)</title><rect x="97.3370%" y="869" width="0.0422%" height="15" fill="rgb(207,187,2)" fg:x="50734" fg:w="22"/><text x="97.5870%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.02%)</title><rect x="97.3946%" y="757" width="0.0192%" height="15" fill="rgb(210,162,52)" fg:x="50764" fg:w="10"/><text x="97.6446%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (15 samples, 0.03%)</title><rect x="97.4138%" y="757" width="0.0288%" height="15" fill="rgb(217,216,49)" fg:x="50774" fg:w="15"/><text x="97.6638%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.01%)</title><rect x="97.4291%" y="741" width="0.0134%" height="15" fill="rgb(218,146,49)" fg:x="50782" fg:w="7"/><text x="97.6791%" y="751.50"></text></g><g><title>App`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (27 samples, 0.05%)</title><rect x="97.3946%" y="773" width="0.0518%" height="15" fill="rgb(216,55,40)" fg:x="50764" fg:w="27"/><text x="97.6446%" y="783.50"></text></g><g><title>App`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.07%)</title><rect x="97.3850%" y="853" width="0.0729%" height="15" fill="rgb(208,196,21)" fg:x="50759" fg:w="38"/><text x="97.6350%" y="863.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;App::game_manager::board2::ChessMove,alloc::alloc::Global&gt;&gt; (35 samples, 0.07%)</title><rect x="97.3907%" y="837" width="0.0672%" height="15" fill="rgb(242,117,42)" fg:x="50762" fg:w="35"/><text x="97.6407%" y="847.50"></text></g><g><title>App`&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.07%)</title><rect x="97.3907%" y="821" width="0.0672%" height="15" fill="rgb(210,11,23)" fg:x="50762" fg:w="35"/><text x="97.6407%" y="831.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;App::game_manager::board2::ChessMove&gt;&gt; (35 samples, 0.07%)</title><rect x="97.3907%" y="805" width="0.0672%" height="15" fill="rgb(217,110,2)" fg:x="50762" fg:w="35"/><text x="97.6407%" y="815.50"></text></g><g><title>App`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.07%)</title><rect x="97.3907%" y="789" width="0.0672%" height="15" fill="rgb(229,77,54)" fg:x="50762" fg:w="35"/><text x="97.6407%" y="799.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;App::game_manager::board2::ChessMove&gt;&gt; (39 samples, 0.07%)</title><rect x="97.3850%" y="869" width="0.0748%" height="15" fill="rgb(218,53,16)" fg:x="50759" fg:w="39"/><text x="97.6350%" y="879.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_usize (12 samples, 0.02%)</title><rect x="97.5078%" y="725" width="0.0230%" height="15" fill="rgb(215,38,13)" fg:x="50823" fg:w="12"/><text x="97.7578%" y="735.50"></text></g><g><title>App`&lt;usize as fxhash::HashWord&gt;::hash_word (6 samples, 0.01%)</title><rect x="97.5193%" y="709" width="0.0115%" height="15" fill="rgb(235,42,18)" fg:x="50829" fg:w="6"/><text x="97.7693%" y="719.50"></text></g><g><title>App`core::hash::Hasher::write_length_prefix (15 samples, 0.03%)</title><rect x="97.5059%" y="741" width="0.0288%" height="15" fill="rgb(219,66,54)" fg:x="50822" fg:w="15"/><text x="97.7559%" y="751.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (47 samples, 0.09%)</title><rect x="97.6267%" y="645" width="0.0902%" height="15" fill="rgb(222,205,4)" fg:x="50885" fg:w="47"/><text x="97.8767%" y="655.50"></text></g><g><title> N]&gt;::try_from (47 samples, 0.09%)</title><rect x="97.6267%" y="629" width="0.0902%" height="15" fill="rgb(227,213,46)" fg:x="50885" fg:w="47"/><text x="97.8767%" y="639.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (37 samples, 0.07%)</title><rect x="97.6459%" y="613" width="0.0710%" height="15" fill="rgb(250,145,42)" fg:x="50895" fg:w="37"/><text x="97.8959%" y="623.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (9 samples, 0.02%)</title><rect x="97.6996%" y="597" width="0.0173%" height="15" fill="rgb(219,15,2)" fg:x="50923" fg:w="9"/><text x="97.9496%" y="607.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (9 samples, 0.02%)</title><rect x="97.6996%" y="581" width="0.0173%" height="15" fill="rgb(231,181,52)" fg:x="50923" fg:w="9"/><text x="97.9496%" y="591.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (52 samples, 0.10%)</title><rect x="97.6210%" y="661" width="0.0998%" height="15" fill="rgb(235,1,42)" fg:x="50882" fg:w="52"/><text x="97.8710%" y="671.50"></text></g><g><title>App`core::num::_&lt;impl u64&gt;::from_le_bytes (11 samples, 0.02%)</title><rect x="97.7207%" y="661" width="0.0211%" height="15" fill="rgb(249,88,27)" fg:x="50934" fg:w="11"/><text x="97.9707%" y="671.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (117 samples, 0.22%)</title><rect x="97.6018%" y="677" width="0.2245%" height="15" fill="rgb(235,145,16)" fg:x="50872" fg:w="117"/><text x="97.8518%" y="687.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (40 samples, 0.08%)</title><rect x="97.7495%" y="661" width="0.0767%" height="15" fill="rgb(237,114,19)" fg:x="50949" fg:w="40"/><text x="97.9995%" y="671.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (32 samples, 0.06%)</title><rect x="97.7649%" y="645" width="0.0614%" height="15" fill="rgb(238,51,50)" fg:x="50957" fg:w="32"/><text x="98.0149%" y="655.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (27 samples, 0.05%)</title><rect x="97.7745%" y="629" width="0.0518%" height="15" fill="rgb(205,194,25)" fg:x="50962" fg:w="27"/><text x="98.0245%" y="639.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (16 samples, 0.03%)</title><rect x="97.8358%" y="677" width="0.0307%" height="15" fill="rgb(215,203,17)" fg:x="50994" fg:w="16"/><text x="98.0858%" y="687.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (26 samples, 0.05%)</title><rect x="97.8723%" y="677" width="0.0499%" height="15" fill="rgb(233,112,49)" fg:x="51013" fg:w="26"/><text x="98.1223%" y="687.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (208 samples, 0.40%)</title><rect x="97.5365%" y="725" width="0.3991%" height="15" fill="rgb(241,130,26)" fg:x="50838" fg:w="208"/><text x="97.7865%" y="735.50"></text></g><g><title>App`fxhash::write (208 samples, 0.40%)</title><rect x="97.5365%" y="709" width="0.3991%" height="15" fill="rgb(252,223,19)" fg:x="50838" fg:w="208"/><text x="97.7865%" y="719.50"></text></g><g><title>App`fxhash::write64 (199 samples, 0.38%)</title><rect x="97.5538%" y="693" width="0.3818%" height="15" fill="rgb(211,95,25)" fg:x="50847" fg:w="199"/><text x="97.8038%" y="703.50"></text></g><g><title>App`core::slice::iter::_&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (6 samples, 0.01%)</title><rect x="97.9241%" y="677" width="0.0115%" height="15" fill="rgb(251,182,27)" fg:x="51040" fg:w="6"/><text x="98.1741%" y="687.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (227 samples, 0.44%)</title><rect x="97.5020%" y="773" width="0.4355%" height="15" fill="rgb(238,24,4)" fg:x="50820" fg:w="227"/><text x="97.7520%" y="783.50"></text></g><g><title> N]&gt;::hash (227 samples, 0.44%)</title><rect x="97.5020%" y="757" width="0.4355%" height="15" fill="rgb(224,220,25)" fg:x="50820" fg:w="227"/><text x="97.7520%" y="767.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (210 samples, 0.40%)</title><rect x="97.5346%" y="741" width="0.4029%" height="15" fill="rgb(239,133,26)" fg:x="50837" fg:w="210"/><text x="97.7846%" y="751.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (243 samples, 0.47%)</title><rect x="97.4809%" y="837" width="0.4662%" height="15" fill="rgb(211,94,48)" fg:x="50809" fg:w="243"/><text x="97.7309%" y="847.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (241 samples, 0.46%)</title><rect x="97.4847%" y="821" width="0.4624%" height="15" fill="rgb(239,87,6)" fg:x="50811" fg:w="241"/><text x="97.7347%" y="831.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (239 samples, 0.46%)</title><rect x="97.4886%" y="805" width="0.4585%" height="15" fill="rgb(227,62,0)" fg:x="50813" fg:w="239"/><text x="97.7386%" y="815.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (235 samples, 0.45%)</title><rect x="97.4963%" y="789" width="0.4509%" height="15" fill="rgb(211,226,4)" fg:x="50817" fg:w="235"/><text x="97.7463%" y="799.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (43 samples, 0.08%)</title><rect x="98.1102%" y="565" width="0.0825%" height="15" fill="rgb(253,38,52)" fg:x="51137" fg:w="43"/><text x="98.3602%" y="575.50"></text></g><g><title> N]&gt;::try_from (43 samples, 0.08%)</title><rect x="98.1102%" y="549" width="0.0825%" height="15" fill="rgb(229,126,40)" fg:x="51137" fg:w="43"/><text x="98.3602%" y="559.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (33 samples, 0.06%)</title><rect x="98.1294%" y="533" width="0.0633%" height="15" fill="rgb(229,165,44)" fg:x="51147" fg:w="33"/><text x="98.3794%" y="543.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (13 samples, 0.02%)</title><rect x="98.1678%" y="517" width="0.0249%" height="15" fill="rgb(247,95,47)" fg:x="51167" fg:w="13"/><text x="98.4178%" y="527.50"></text></g><g><title> N]&gt;::try_from::_{{closure}} (13 samples, 0.02%)</title><rect x="98.1678%" y="501" width="0.0249%" height="15" fill="rgb(216,140,30)" fg:x="51167" fg:w="13"/><text x="98.4178%" y="511.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (46 samples, 0.09%)</title><rect x="98.1083%" y="581" width="0.0883%" height="15" fill="rgb(246,214,8)" fg:x="51136" fg:w="46"/><text x="98.3583%" y="591.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (88 samples, 0.17%)</title><rect x="98.0891%" y="597" width="0.1688%" height="15" fill="rgb(227,224,15)" fg:x="51126" fg:w="88"/><text x="98.3391%" y="607.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (23 samples, 0.04%)</title><rect x="98.2138%" y="581" width="0.0441%" height="15" fill="rgb(233,175,4)" fg:x="51191" fg:w="23"/><text x="98.4638%" y="591.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (20 samples, 0.04%)</title><rect x="98.2196%" y="565" width="0.0384%" height="15" fill="rgb(221,66,45)" fg:x="51194" fg:w="20"/><text x="98.4696%" y="575.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (16 samples, 0.03%)</title><rect x="98.2272%" y="549" width="0.0307%" height="15" fill="rgb(221,178,18)" fg:x="51198" fg:w="16"/><text x="98.4772%" y="559.50"></text></g><g><title>App`&lt;u64 as fxhash::HashWord&gt;::hash_word (7 samples, 0.01%)</title><rect x="98.2656%" y="597" width="0.0134%" height="15" fill="rgb(213,81,29)" fg:x="51218" fg:w="7"/><text x="98.5156%" y="607.50"></text></g><g><title>App`core::slice::_&lt;impl [T]&gt;::split_at (28 samples, 0.05%)</title><rect x="98.2790%" y="597" width="0.0537%" height="15" fill="rgb(220,89,49)" fg:x="51225" fg:w="28"/><text x="98.5290%" y="607.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (156 samples, 0.30%)</title><rect x="98.0411%" y="645" width="0.2993%" height="15" fill="rgb(227,60,33)" fg:x="51101" fg:w="156"/><text x="98.2911%" y="655.50"></text></g><g><title>App`fxhash::write (156 samples, 0.30%)</title><rect x="98.0411%" y="629" width="0.2993%" height="15" fill="rgb(205,113,12)" fg:x="51101" fg:w="156"/><text x="98.2911%" y="639.50"></text></g><g><title>App`fxhash::write64 (151 samples, 0.29%)</title><rect x="98.0507%" y="613" width="0.2897%" height="15" fill="rgb(211,32,1)" fg:x="51106" fg:w="151"/><text x="98.3007%" y="623.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (169 samples, 0.32%)</title><rect x="98.0181%" y="693" width="0.3242%" height="15" fill="rgb(246,2,12)" fg:x="51089" fg:w="169"/><text x="98.2681%" y="703.50"></text></g><g><title> N]&gt;::hash (169 samples, 0.32%)</title><rect x="98.0181%" y="677" width="0.3242%" height="15" fill="rgb(243,37,27)" fg:x="51089" fg:w="169"/><text x="98.2681%" y="687.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (160 samples, 0.31%)</title><rect x="98.0354%" y="661" width="0.3070%" height="15" fill="rgb(248,211,31)" fg:x="51098" fg:w="160"/><text x="98.2854%" y="671.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (171 samples, 0.33%)</title><rect x="98.0181%" y="709" width="0.3281%" height="15" fill="rgb(242,146,47)" fg:x="51089" fg:w="171"/><text x="98.2681%" y="719.50"></text></g><g><title>App`hashbrown::map::make_hasher::_{{closure}} (177 samples, 0.34%)</title><rect x="98.0085%" y="773" width="0.3396%" height="15" fill="rgb(206,70,20)" fg:x="51084" fg:w="177"/><text x="98.2585%" y="783.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (176 samples, 0.34%)</title><rect x="98.0104%" y="757" width="0.3377%" height="15" fill="rgb(215,10,51)" fg:x="51085" fg:w="176"/><text x="98.2604%" y="767.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (176 samples, 0.34%)</title><rect x="98.0104%" y="741" width="0.3377%" height="15" fill="rgb(243,178,53)" fg:x="51085" fg:w="176"/><text x="98.2604%" y="751.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (176 samples, 0.34%)</title><rect x="98.0104%" y="725" width="0.3377%" height="15" fill="rgb(233,221,20)" fg:x="51085" fg:w="176"/><text x="98.2604%" y="735.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (185 samples, 0.35%)</title><rect x="97.9989%" y="789" width="0.3549%" height="15" fill="rgb(218,95,35)" fg:x="51079" fg:w="185"/><text x="98.2489%" y="799.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (10 samples, 0.02%)</title><rect x="98.3673%" y="757" width="0.0192%" height="15" fill="rgb(229,13,5)" fg:x="51271" fg:w="10"/><text x="98.6173%" y="767.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (19 samples, 0.04%)</title><rect x="98.3539%" y="789" width="0.0365%" height="15" fill="rgb(252,164,30)" fg:x="51264" fg:w="19"/><text x="98.6039%" y="799.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (16 samples, 0.03%)</title><rect x="98.3596%" y="773" width="0.0307%" height="15" fill="rgb(232,68,36)" fg:x="51267" fg:w="16"/><text x="98.6096%" y="783.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (226 samples, 0.43%)</title><rect x="97.9797%" y="805" width="0.4336%" height="15" fill="rgb(219,59,54)" fg:x="51069" fg:w="226"/><text x="98.2297%" y="815.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="98.3903%" y="789" width="0.0230%" height="15" fill="rgb(250,92,33)" fg:x="51283" fg:w="12"/><text x="98.6403%" y="799.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (230 samples, 0.44%)</title><rect x="97.9740%" y="821" width="0.4413%" height="15" fill="rgb(229,162,54)" fg:x="51066" fg:w="230"/><text x="98.2240%" y="831.50"></text></g><g><title>App`&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.02%)</title><rect x="98.4383%" y="805" width="0.0192%" height="15" fill="rgb(244,114,52)" fg:x="51308" fg:w="10"/><text x="98.6883%" y="815.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_loadu_si128 (18 samples, 0.03%)</title><rect x="98.4613%" y="805" width="0.0345%" height="15" fill="rgb(212,211,43)" fg:x="51320" fg:w="18"/><text x="98.7113%" y="815.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (12 samples, 0.02%)</title><rect x="98.4978%" y="677" width="0.0230%" height="15" fill="rgb(226,147,8)" fg:x="51339" fg:w="12"/><text x="98.7478%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (9 samples, 0.02%)</title><rect x="98.5035%" y="661" width="0.0173%" height="15" fill="rgb(226,23,13)" fg:x="51342" fg:w="9"/><text x="98.7535%" y="671.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (13 samples, 0.02%)</title><rect x="98.4978%" y="741" width="0.0249%" height="15" fill="rgb(240,63,4)" fg:x="51339" fg:w="13"/><text x="98.7478%" y="751.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (13 samples, 0.02%)</title><rect x="98.4978%" y="725" width="0.0249%" height="15" fill="rgb(221,1,32)" fg:x="51339" fg:w="13"/><text x="98.7478%" y="735.50"></text></g><g><title> N]&gt; for [A (13 samples, 0.02%)</title><rect x="98.4978%" y="709" width="0.0249%" height="15" fill="rgb(242,117,10)" fg:x="51339" fg:w="13"/><text x="98.7478%" y="719.50"></text></g><g><title> N]&gt;::eq (13 samples, 0.02%)</title><rect x="98.4978%" y="693" width="0.0249%" height="15" fill="rgb(249,172,44)" fg:x="51339" fg:w="13"/><text x="98.7478%" y="703.50"></text></g><g><title>App`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (15 samples, 0.03%)</title><rect x="98.4958%" y="773" width="0.0288%" height="15" fill="rgb(244,46,45)" fg:x="51338" fg:w="15"/><text x="98.7458%" y="783.50"></text></g><g><title>App`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (14 samples, 0.03%)</title><rect x="98.4978%" y="757" width="0.0269%" height="15" fill="rgb(206,43,17)" fg:x="51339" fg:w="14"/><text x="98.7478%" y="767.50"></text></g><g><title>App`hashbrown::map::equivalent_key::_{{closure}} (16 samples, 0.03%)</title><rect x="98.4958%" y="789" width="0.0307%" height="15" fill="rgb(239,218,39)" fg:x="51338" fg:w="16"/><text x="98.7458%" y="799.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (18 samples, 0.03%)</title><rect x="98.4958%" y="805" width="0.0345%" height="15" fill="rgb(208,169,54)" fg:x="51338" fg:w="18"/><text x="98.7458%" y="815.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot_in_group (12 samples, 0.02%)</title><rect x="98.5304%" y="805" width="0.0230%" height="15" fill="rgb(247,25,42)" fg:x="51356" fg:w="12"/><text x="98.7804%" y="815.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_movemask_epi8 (16 samples, 0.03%)</title><rect x="98.5630%" y="789" width="0.0307%" height="15" fill="rgb(226,23,31)" fg:x="51373" fg:w="16"/><text x="98.8130%" y="799.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (103 samples, 0.20%)</title><rect x="98.4172%" y="821" width="0.1976%" height="15" fill="rgb(247,16,28)" fg:x="51297" fg:w="103"/><text x="98.6672%" y="831.50"></text></g><g><title>App`hashbrown::raw::sse2::Group::match_byte (32 samples, 0.06%)</title><rect x="98.5534%" y="805" width="0.0614%" height="15" fill="rgb(231,147,38)" fg:x="51368" fg:w="32"/><text x="98.8034%" y="815.50"></text></g><g><title>App`core::core_arch::x86::sse2::_mm_set1_epi8 (11 samples, 0.02%)</title><rect x="98.5937%" y="789" width="0.0211%" height="15" fill="rgb(253,81,48)" fg:x="51389" fg:w="11"/><text x="98.8437%" y="799.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (349 samples, 0.67%)</title><rect x="97.9510%" y="837" width="0.6696%" height="15" fill="rgb(249,222,43)" fg:x="51054" fg:w="349"/><text x="98.2010%" y="847.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::insert_in_slot (33 samples, 0.06%)</title><rect x="98.6205%" y="837" width="0.0633%" height="15" fill="rgb(221,3,27)" fg:x="51403" fg:w="33"/><text x="98.8705%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (28 samples, 0.05%)</title><rect x="98.6301%" y="821" width="0.0537%" height="15" fill="rgb(228,180,5)" fg:x="51408" fg:w="28"/><text x="98.8801%" y="831.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (636 samples, 1.22%)</title><rect x="97.4675%" y="853" width="1.2202%" height="15" fill="rgb(227,131,42)" fg:x="50802" fg:w="636"/><text x="97.7175%" y="863.50"></text></g><g><title>App`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (638 samples, 1.22%)</title><rect x="97.4656%" y="869" width="1.2241%" height="15" fill="rgb(212,3,39)" fg:x="50801" fg:w="638"/><text x="97.7156%" y="879.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (6 samples, 0.01%)</title><rect x="98.6896%" y="869" width="0.0115%" height="15" fill="rgb(226,45,5)" fg:x="51439" fg:w="6"/><text x="98.9396%" y="879.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (37,763 samples, 72.45%)</title><rect x="26.2653%" y="885" width="72.4512%" height="15" fill="rgb(215,167,45)" fg:x="13690" fg:w="37763"/><text x="26.5153%" y="895.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::board_state_numbers (7 samples, 0.01%)</title><rect x="98.7165%" y="885" width="0.0134%" height="15" fill="rgb(250,218,53)" fg:x="51453" fg:w="7"/><text x="98.9665%" y="895.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (10 samples, 0.02%)</title><rect x="98.7337%" y="853" width="0.0192%" height="15" fill="rgb(207,140,0)" fg:x="51462" fg:w="10"/><text x="98.9837%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (14 samples, 0.03%)</title><rect x="98.7318%" y="869" width="0.0269%" height="15" fill="rgb(238,133,51)" fg:x="51461" fg:w="14"/><text x="98.9818%" y="879.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (7 samples, 0.01%)</title><rect x="98.7587%" y="869" width="0.0134%" height="15" fill="rgb(218,203,53)" fg:x="51475" fg:w="7"/><text x="99.0087%" y="879.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::num_checkers (16 samples, 0.03%)</title><rect x="98.7721%" y="869" width="0.0307%" height="15" fill="rgb(226,184,25)" fg:x="51482" fg:w="16"/><text x="99.0221%" y="879.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (16 samples, 0.03%)</title><rect x="98.7721%" y="853" width="0.0307%" height="15" fill="rgb(231,121,21)" fg:x="51482" fg:w="16"/><text x="99.0221%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::game_state (39 samples, 0.07%)</title><rect x="98.7299%" y="885" width="0.0748%" height="15" fill="rgb(251,14,34)" fg:x="51460" fg:w="39"/><text x="98.9799%" y="895.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::generate_moves_target_masked (6 samples, 0.01%)</title><rect x="98.8604%" y="821" width="0.0115%" height="15" fill="rgb(249,193,11)" fg:x="51528" fg:w="6"/><text x="99.1104%" y="831.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (20 samples, 0.04%)</title><rect x="98.8431%" y="853" width="0.0384%" height="15" fill="rgb(220,172,37)" fg:x="51519" fg:w="20"/><text x="99.0931%" y="863.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_on_2nd (13 samples, 0.02%)</title><rect x="98.8565%" y="837" width="0.0249%" height="15" fill="rgb(231,229,43)" fg:x="51526" fg:w="13"/><text x="99.1065%" y="847.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (38 samples, 0.07%)</title><rect x="98.8182%" y="869" width="0.0729%" height="15" fill="rgb(250,161,5)" fg:x="51506" fg:w="38"/><text x="99.0682%" y="879.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::update_pinned_pieces_and_check_line (6 samples, 0.01%)</title><rect x="98.8949%" y="869" width="0.0115%" height="15" fill="rgb(218,225,18)" fg:x="51546" fg:w="6"/><text x="99.1449%" y="879.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (54 samples, 0.10%)</title><rect x="98.8047%" y="885" width="0.1036%" height="15" fill="rgb(245,45,42)" fg:x="51499" fg:w="54"/><text x="99.0547%" y="895.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (22 samples, 0.04%)</title><rect x="98.9083%" y="885" width="0.0422%" height="15" fill="rgb(211,115,1)" fg:x="51553" fg:w="22"/><text x="99.1583%" y="895.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::new (107 samples, 0.21%)</title><rect x="98.9544%" y="869" width="0.2053%" height="15" fill="rgb(248,133,52)" fg:x="51577" fg:w="107"/><text x="99.2044%" y="879.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move::_{{closure}} (7 samples, 0.01%)</title><rect x="99.1597%" y="869" width="0.0134%" height="15" fill="rgb(238,100,21)" fg:x="51684" fg:w="7"/><text x="99.4097%" y="879.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (121 samples, 0.23%)</title><rect x="98.9525%" y="885" width="0.2321%" height="15" fill="rgb(247,144,11)" fg:x="51576" fg:w="121"/><text x="99.2025%" y="895.50"></text></g><g><title>App`core::slice::sort::find_streak (6 samples, 0.01%)</title><rect x="99.2172%" y="837" width="0.0115%" height="15" fill="rgb(206,164,16)" fg:x="51714" fg:w="6"/><text x="99.4672%" y="847.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (18 samples, 0.03%)</title><rect x="99.2767%" y="821" width="0.0345%" height="15" fill="rgb(222,34,3)" fg:x="51745" fg:w="18"/><text x="99.5267%" y="831.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (12 samples, 0.02%)</title><rect x="99.2882%" y="805" width="0.0230%" height="15" fill="rgb(248,82,4)" fg:x="51751" fg:w="12"/><text x="99.5382%" y="815.50"></text></g><g><title>App`core::cmp::impls::_&lt;impl core::cmp::Ord for i16&gt;::cmp (9 samples, 0.02%)</title><rect x="99.2940%" y="789" width="0.0173%" height="15" fill="rgb(228,81,46)" fg:x="51754" fg:w="9"/><text x="99.5440%" y="799.50"></text></g><g><title>App`core::slice::sort::merge (42 samples, 0.08%)</title><rect x="99.2364%" y="837" width="0.0806%" height="15" fill="rgb(227,67,47)" fg:x="51724" fg:w="42"/><text x="99.4864%" y="847.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (6 samples, 0.01%)</title><rect x="99.3189%" y="821" width="0.0115%" height="15" fill="rgb(215,93,53)" fg:x="51767" fg:w="6"/><text x="99.5689%" y="831.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (6 samples, 0.01%)</title><rect x="99.3189%" y="805" width="0.0115%" height="15" fill="rgb(248,194,39)" fg:x="51767" fg:w="6"/><text x="99.5689%" y="815.50"></text></g><g><title>App`core::slice::sort::merge_sort::BufGuard&lt;T,ElemDeallocF&gt;::new (8 samples, 0.02%)</title><rect x="99.3170%" y="837" width="0.0153%" height="15" fill="rgb(215,5,19)" fg:x="51766" fg:w="8"/><text x="99.5670%" y="847.50"></text></g><g><title>App`core::slice::sort::merge_sort::RunVec&lt;RunAllocF,RunDeallocF&gt;::new (6 samples, 0.01%)</title><rect x="99.3323%" y="837" width="0.0115%" height="15" fill="rgb(226,215,51)" fg:x="51774" fg:w="6"/><text x="99.5823%" y="847.50"></text></g><g><title>App`alloc::slice::stable_sort::_{{closure}} (6 samples, 0.01%)</title><rect x="99.3323%" y="821" width="0.0115%" height="15" fill="rgb(225,56,26)" fg:x="51774" fg:w="6"/><text x="99.5823%" y="831.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (7 samples, 0.01%)</title><rect x="99.3918%" y="789" width="0.0134%" height="15" fill="rgb(222,75,29)" fg:x="51805" fg:w="7"/><text x="99.6418%" y="799.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (27 samples, 0.05%)</title><rect x="99.4110%" y="789" width="0.0518%" height="15" fill="rgb(236,139,6)" fg:x="51815" fg:w="27"/><text x="99.6610%" y="799.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search::_{{closure}} (22 samples, 0.04%)</title><rect x="99.4206%" y="773" width="0.0422%" height="15" fill="rgb(223,137,36)" fg:x="51820" fg:w="22"/><text x="99.6706%" y="783.50"></text></g><g><title>App`core::cmp::impls::_&lt;impl core::cmp::Ord for i16&gt;::cmp (13 samples, 0.02%)</title><rect x="99.4379%" y="757" width="0.0249%" height="15" fill="rgb(226,99,2)" fg:x="51829" fg:w="13"/><text x="99.6879%" y="767.50"></text></g><g><title>App`alloc::slice::stable_sort (146 samples, 0.28%)</title><rect x="99.1846%" y="869" width="0.2801%" height="15" fill="rgb(206,133,23)" fg:x="51697" fg:w="146"/><text x="99.4346%" y="879.50"></text></g><g><title>App`core::slice::sort::merge_sort (138 samples, 0.26%)</title><rect x="99.2000%" y="853" width="0.2648%" height="15" fill="rgb(243,173,15)" fg:x="51705" fg:w="138"/><text x="99.4500%" y="863.50"></text></g><g><title>App`core::slice::sort::provide_sorted_batch (63 samples, 0.12%)</title><rect x="99.3438%" y="837" width="0.1209%" height="15" fill="rgb(228,69,28)" fg:x="51780" fg:w="63"/><text x="99.5938%" y="847.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (59 samples, 0.11%)</title><rect x="99.3515%" y="821" width="0.1132%" height="15" fill="rgb(212,51,22)" fg:x="51784" fg:w="59"/><text x="99.6015%" y="831.50"></text></g><g><title>App`core::slice::sort::insert_tail (47 samples, 0.09%)</title><rect x="99.3745%" y="805" width="0.0902%" height="15" fill="rgb(227,113,0)" fg:x="51796" fg:w="47"/><text x="99.6245%" y="815.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by (147 samples, 0.28%)</title><rect x="99.1846%" y="885" width="0.2820%" height="15" fill="rgb(252,84,27)" fg:x="51697" fg:w="147"/><text x="99.4346%" y="895.50"></text></g><g><title>App`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.02%)</title><rect x="99.5012%" y="789" width="0.0153%" height="15" fill="rgb(223,145,39)" fg:x="51862" fg:w="8"/><text x="99.7512%" y="799.50"></text></g><g><title>App`&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.02%)</title><rect x="99.5012%" y="805" width="0.0173%" height="15" fill="rgb(239,219,30)" fg:x="51862" fg:w="9"/><text x="99.7512%" y="815.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;App::game_manager::board2::ChessMove&gt;&gt; (13 samples, 0.02%)</title><rect x="99.4954%" y="885" width="0.0249%" height="15" fill="rgb(224,196,39)" fg:x="51859" fg:w="13"/><text x="99.7454%" y="895.50"></text></g><g><title>App`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="99.4993%" y="869" width="0.0211%" height="15" fill="rgb(205,35,43)" fg:x="51861" fg:w="11"/><text x="99.7493%" y="879.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;App::game_manager::board2::ChessMove,alloc::alloc::Global&gt;&gt; (11 samples, 0.02%)</title><rect x="99.4993%" y="853" width="0.0211%" height="15" fill="rgb(228,201,21)" fg:x="51861" fg:w="11"/><text x="99.7493%" y="863.50"></text></g><g><title>App`&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.02%)</title><rect x="99.4993%" y="837" width="0.0211%" height="15" fill="rgb(237,118,16)" fg:x="51861" fg:w="11"/><text x="99.7493%" y="847.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;App::game_manager::board2::ChessMove&gt;&gt; (10 samples, 0.02%)</title><rect x="99.5012%" y="821" width="0.0192%" height="15" fill="rgb(241,17,19)" fg:x="51862" fg:w="10"/><text x="99.7512%" y="831.50"></text></g><g><title>App`core::array::_&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (12 samples, 0.02%)</title><rect x="99.5722%" y="661" width="0.0230%" height="15" fill="rgb(214,10,25)" fg:x="51899" fg:w="12"/><text x="99.8222%" y="671.50"></text></g><g><title> N]&gt;::try_from (12 samples, 0.02%)</title><rect x="99.5722%" y="645" width="0.0230%" height="15" fill="rgb(238,37,29)" fg:x="51899" fg:w="12"/><text x="99.8222%" y="655.50"></text></g><g><title>App`core::result::Result&lt;T,E&gt;::map (11 samples, 0.02%)</title><rect x="99.5741%" y="629" width="0.0211%" height="15" fill="rgb(253,83,25)" fg:x="51900" fg:w="11"/><text x="99.8241%" y="639.50"></text></g><g><title>App`&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (14 samples, 0.03%)</title><rect x="99.5722%" y="677" width="0.0269%" height="15" fill="rgb(234,192,12)" fg:x="51899" fg:w="14"/><text x="99.8222%" y="687.50"></text></g><g><title>App`&lt;byteorder::LittleEndian as byteorder::ByteOrder&gt;::read_u64 (37 samples, 0.07%)</title><rect x="99.5530%" y="693" width="0.0710%" height="15" fill="rgb(241,216,45)" fg:x="51889" fg:w="37"/><text x="99.8030%" y="703.50"></text></g><g><title>App`core::slice::index::_&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (12 samples, 0.02%)</title><rect x="99.6009%" y="677" width="0.0230%" height="15" fill="rgb(242,22,33)" fg:x="51914" fg:w="12"/><text x="99.8509%" y="687.50"></text></g><g><title>App`&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (8 samples, 0.02%)</title><rect x="99.6086%" y="661" width="0.0153%" height="15" fill="rgb(231,105,49)" fg:x="51918" fg:w="8"/><text x="99.8586%" y="671.50"></text></g><g><title>App`&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (6 samples, 0.01%)</title><rect x="99.6124%" y="645" width="0.0115%" height="15" fill="rgb(218,204,15)" fg:x="51920" fg:w="6"/><text x="99.8624%" y="655.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (60 samples, 0.12%)</title><rect x="99.5299%" y="805" width="0.1151%" height="15" fill="rgb(235,138,41)" fg:x="51877" fg:w="60"/><text x="99.7799%" y="815.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (60 samples, 0.12%)</title><rect x="99.5299%" y="789" width="0.1151%" height="15" fill="rgb(246,0,9)" fg:x="51877" fg:w="60"/><text x="99.7799%" y="799.50"></text></g><g><title> N]&gt;::hash (60 samples, 0.12%)</title><rect x="99.5299%" y="773" width="0.1151%" height="15" fill="rgb(210,74,4)" fg:x="51877" fg:w="60"/><text x="99.7799%" y="783.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (58 samples, 0.11%)</title><rect x="99.5338%" y="757" width="0.1113%" height="15" fill="rgb(250,60,41)" fg:x="51879" fg:w="58"/><text x="99.7838%" y="767.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (57 samples, 0.11%)</title><rect x="99.5357%" y="741" width="0.1094%" height="15" fill="rgb(220,115,12)" fg:x="51880" fg:w="57"/><text x="99.7857%" y="751.50"></text></g><g><title>App`fxhash::write (56 samples, 0.11%)</title><rect x="99.5376%" y="725" width="0.1074%" height="15" fill="rgb(237,100,13)" fg:x="51881" fg:w="56"/><text x="99.7876%" y="735.50"></text></g><g><title>App`fxhash::write64 (56 samples, 0.11%)</title><rect x="99.5376%" y="709" width="0.1074%" height="15" fill="rgb(213,55,26)" fg:x="51881" fg:w="56"/><text x="99.7876%" y="719.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (62 samples, 0.12%)</title><rect x="99.5280%" y="853" width="0.1190%" height="15" fill="rgb(216,17,4)" fg:x="51876" fg:w="62"/><text x="99.7780%" y="863.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (62 samples, 0.12%)</title><rect x="99.5280%" y="837" width="0.1190%" height="15" fill="rgb(220,153,47)" fg:x="51876" fg:w="62"/><text x="99.7780%" y="847.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (62 samples, 0.12%)</title><rect x="99.5280%" y="821" width="0.1190%" height="15" fill="rgb(215,131,9)" fg:x="51876" fg:w="62"/><text x="99.7780%" y="831.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (7 samples, 0.01%)</title><rect x="99.6489%" y="805" width="0.0134%" height="15" fill="rgb(233,46,42)" fg:x="51939" fg:w="7"/><text x="99.8989%" y="815.50"></text></g><g><title>App`hashbrown::map::make_hasher::_{{closure}} (7 samples, 0.01%)</title><rect x="99.6489%" y="789" width="0.0134%" height="15" fill="rgb(226,86,7)" fg:x="51939" fg:w="7"/><text x="99.8989%" y="799.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (7 samples, 0.01%)</title><rect x="99.6489%" y="773" width="0.0134%" height="15" fill="rgb(239,226,21)" fg:x="51939" fg:w="7"/><text x="99.8989%" y="783.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.01%)</title><rect x="99.6489%" y="757" width="0.0134%" height="15" fill="rgb(244,137,22)" fg:x="51939" fg:w="7"/><text x="99.8989%" y="767.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (7 samples, 0.01%)</title><rect x="99.6489%" y="741" width="0.0134%" height="15" fill="rgb(211,139,35)" fg:x="51939" fg:w="7"/><text x="99.8989%" y="751.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (7 samples, 0.01%)</title><rect x="99.6489%" y="725" width="0.0134%" height="15" fill="rgb(214,62,50)" fg:x="51939" fg:w="7"/><text x="99.8989%" y="735.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (7 samples, 0.01%)</title><rect x="99.6489%" y="709" width="0.0134%" height="15" fill="rgb(212,113,44)" fg:x="51939" fg:w="7"/><text x="99.8989%" y="719.50"></text></g><g><title> N]&gt;::hash (7 samples, 0.01%)</title><rect x="99.6489%" y="693" width="0.0134%" height="15" fill="rgb(226,150,43)" fg:x="51939" fg:w="7"/><text x="99.8989%" y="703.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (7 samples, 0.01%)</title><rect x="99.6489%" y="677" width="0.0134%" height="15" fill="rgb(250,71,37)" fg:x="51939" fg:w="7"/><text x="99.8989%" y="687.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (6 samples, 0.01%)</title><rect x="99.6508%" y="661" width="0.0115%" height="15" fill="rgb(219,76,19)" fg:x="51940" fg:w="6"/><text x="99.9008%" y="671.50"></text></g><g><title>App`fxhash::write (6 samples, 0.01%)</title><rect x="99.6508%" y="645" width="0.0115%" height="15" fill="rgb(250,39,11)" fg:x="51940" fg:w="6"/><text x="99.9008%" y="655.50"></text></g><g><title>App`fxhash::write64 (6 samples, 0.01%)</title><rect x="99.6508%" y="629" width="0.0115%" height="15" fill="rgb(230,64,31)" fg:x="51940" fg:w="6"/><text x="99.9008%" y="639.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="99.6489%" y="837" width="0.0153%" height="15" fill="rgb(208,222,23)" fg:x="51939" fg:w="8"/><text x="99.8989%" y="847.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.02%)</title><rect x="99.6489%" y="821" width="0.0153%" height="15" fill="rgb(227,125,18)" fg:x="51939" fg:w="8"/><text x="99.8989%" y="831.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::_{{closure}} (9 samples, 0.02%)</title><rect x="99.6738%" y="821" width="0.0173%" height="15" fill="rgb(234,210,9)" fg:x="51952" fg:w="9"/><text x="99.9238%" y="831.50"></text></g><g><title>App`hashbrown::map::equivalent_key::_{{closure}} (8 samples, 0.02%)</title><rect x="99.6758%" y="805" width="0.0153%" height="15" fill="rgb(217,127,24)" fg:x="51953" fg:w="8"/><text x="99.9258%" y="815.50"></text></g><g><title>App`&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (8 samples, 0.02%)</title><rect x="99.6758%" y="789" width="0.0153%" height="15" fill="rgb(239,141,48)" fg:x="51953" fg:w="8"/><text x="99.9258%" y="799.50"></text></g><g><title>App`core::tuple::_&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (8 samples, 0.02%)</title><rect x="99.6758%" y="773" width="0.0153%" height="15" fill="rgb(227,109,8)" fg:x="51953" fg:w="8"/><text x="99.9258%" y="783.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="99.6758%" y="757" width="0.0153%" height="15" fill="rgb(235,184,23)" fg:x="51953" fg:w="8"/><text x="99.9258%" y="767.50"></text></g><g><title>App`core::array::equality::_&lt;impl core::cmp::PartialEq&lt;[B (6 samples, 0.01%)</title><rect x="99.6796%" y="741" width="0.0115%" height="15" fill="rgb(227,226,48)" fg:x="51955" fg:w="6"/><text x="99.9296%" y="751.50"></text></g><g><title> N]&gt; for [A (6 samples, 0.01%)</title><rect x="99.6796%" y="725" width="0.0115%" height="15" fill="rgb(206,150,11)" fg:x="51955" fg:w="6"/><text x="99.9296%" y="735.50"></text></g><g><title> N]&gt;::eq (6 samples, 0.01%)</title><rect x="99.6796%" y="709" width="0.0115%" height="15" fill="rgb(254,2,33)" fg:x="51955" fg:w="6"/><text x="99.9296%" y="719.50"></text></g><g><title>App`&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (6 samples, 0.01%)</title><rect x="99.6796%" y="693" width="0.0115%" height="15" fill="rgb(243,160,20)" fg:x="51955" fg:w="6"/><text x="99.9296%" y="703.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (30 samples, 0.06%)</title><rect x="99.6470%" y="853" width="0.0576%" height="15" fill="rgb(218,208,30)" fg:x="51938" fg:w="30"/><text x="99.8970%" y="863.50"></text></g><g><title>App`hashbrown::raw::RawTableInner&lt;A&gt;::find_or_find_insert_slot_inner (21 samples, 0.04%)</title><rect x="99.6642%" y="837" width="0.0403%" height="15" fill="rgb(224,120,49)" fg:x="51947" fg:w="21"/><text x="99.9142%" y="847.50"></text></g><g><title>App`hashbrown::raw::sse2::Group::match_byte (7 samples, 0.01%)</title><rect x="99.6911%" y="821" width="0.0134%" height="15" fill="rgb(246,12,2)" fg:x="51961" fg:w="7"/><text x="99.9411%" y="831.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (100 samples, 0.19%)</title><rect x="99.5223%" y="869" width="0.1919%" height="15" fill="rgb(236,117,3)" fg:x="51873" fg:w="100"/><text x="99.7723%" y="879.50"></text></g><g><title>App`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (101 samples, 0.19%)</title><rect x="99.5223%" y="885" width="0.1938%" height="15" fill="rgb(216,128,52)" fg:x="51873" fg:w="101"/><text x="99.7723%" y="895.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (39,247 samples, 75.30%)</title><rect x="24.4254%" y="901" width="75.2983%" height="15" fill="rgb(246,145,19)" fg:x="12731" fg:w="39247"/><text x="24.6754%" y="911.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (7 samples, 0.01%)</title><rect x="99.7295%" y="901" width="0.0134%" height="15" fill="rgb(222,11,46)" fg:x="51981" fg:w="7"/><text x="99.9795%" y="911.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::new (34 samples, 0.07%)</title><rect x="99.7583%" y="885" width="0.0652%" height="15" fill="rgb(245,82,36)" fg:x="51996" fg:w="34"/><text x="100.0083%" y="895.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (46 samples, 0.09%)</title><rect x="99.7429%" y="901" width="0.0883%" height="15" fill="rgb(250,73,51)" fg:x="51988" fg:w="46"/><text x="99.9929%" y="911.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by::_{{closure}} (7 samples, 0.01%)</title><rect x="99.8504%" y="837" width="0.0134%" height="15" fill="rgb(221,189,23)" fg:x="52044" fg:w="7"/><text x="100.1004%" y="847.50"></text></g><g><title>App`core::slice::sort::merge (14 samples, 0.03%)</title><rect x="99.8408%" y="853" width="0.0269%" height="15" fill="rgb(210,33,7)" fg:x="52039" fg:w="14"/><text x="100.0908%" y="863.50"></text></g><g><title>App`alloc::slice::_&lt;impl [T]&gt;::sort_by (26 samples, 0.05%)</title><rect x="99.8350%" y="901" width="0.0499%" height="15" fill="rgb(210,107,22)" fg:x="52036" fg:w="26"/><text x="100.0850%" y="911.50"></text></g><g><title>App`alloc::slice::stable_sort (26 samples, 0.05%)</title><rect x="99.8350%" y="885" width="0.0499%" height="15" fill="rgb(222,116,37)" fg:x="52036" fg:w="26"/><text x="100.0850%" y="895.50"></text></g><g><title>App`core::slice::sort::merge_sort (26 samples, 0.05%)</title><rect x="99.8350%" y="869" width="0.0499%" height="15" fill="rgb(254,17,48)" fg:x="52036" fg:w="26"/><text x="100.0850%" y="879.50"></text></g><g><title>App`core::slice::sort::provide_sorted_batch (7 samples, 0.01%)</title><rect x="99.8715%" y="853" width="0.0134%" height="15" fill="rgb(224,36,32)" fg:x="52055" fg:w="7"/><text x="100.1215%" y="863.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (6 samples, 0.01%)</title><rect x="99.8906%" y="869" width="0.0115%" height="15" fill="rgb(232,90,46)" fg:x="52065" fg:w="6"/><text x="100.1406%" y="879.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.01%)</title><rect x="99.8906%" y="853" width="0.0115%" height="15" fill="rgb(241,66,40)" fg:x="52065" fg:w="6"/><text x="100.1406%" y="863.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (6 samples, 0.01%)</title><rect x="99.8906%" y="837" width="0.0115%" height="15" fill="rgb(249,184,29)" fg:x="52065" fg:w="6"/><text x="100.1406%" y="847.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (6 samples, 0.01%)</title><rect x="99.8906%" y="821" width="0.0115%" height="15" fill="rgb(231,181,1)" fg:x="52065" fg:w="6"/><text x="100.1406%" y="831.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (6 samples, 0.01%)</title><rect x="99.8906%" y="805" width="0.0115%" height="15" fill="rgb(224,94,2)" fg:x="52065" fg:w="6"/><text x="100.1406%" y="815.50"></text></g><g><title> N]&gt;::hash (6 samples, 0.01%)</title><rect x="99.8906%" y="789" width="0.0115%" height="15" fill="rgb(229,170,15)" fg:x="52065" fg:w="6"/><text x="100.1406%" y="799.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (6 samples, 0.01%)</title><rect x="99.8906%" y="773" width="0.0115%" height="15" fill="rgb(240,127,35)" fg:x="52065" fg:w="6"/><text x="100.1406%" y="783.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve (9 samples, 0.02%)</title><rect x="99.9041%" y="853" width="0.0173%" height="15" fill="rgb(248,196,34)" fg:x="52072" fg:w="9"/><text x="100.1541%" y="863.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (9 samples, 0.02%)</title><rect x="99.9041%" y="837" width="0.0173%" height="15" fill="rgb(236,137,7)" fg:x="52072" fg:w="9"/><text x="100.1541%" y="847.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::_{{closure}} (8 samples, 0.02%)</title><rect x="99.9060%" y="821" width="0.0153%" height="15" fill="rgb(235,127,16)" fg:x="52073" fg:w="8"/><text x="100.1560%" y="831.50"></text></g><g><title>App`hashbrown::map::make_hasher::_{{closure}} (8 samples, 0.02%)</title><rect x="99.9060%" y="805" width="0.0153%" height="15" fill="rgb(250,192,54)" fg:x="52073" fg:w="8"/><text x="100.1560%" y="815.50"></text></g><g><title>App`core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="99.9060%" y="789" width="0.0153%" height="15" fill="rgb(218,98,20)" fg:x="52073" fg:w="8"/><text x="100.1560%" y="799.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.01%)</title><rect x="99.9079%" y="773" width="0.0134%" height="15" fill="rgb(230,176,47)" fg:x="52074" fg:w="7"/><text x="100.1579%" y="783.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for (T,B)&gt;::hash (7 samples, 0.01%)</title><rect x="99.9079%" y="757" width="0.0134%" height="15" fill="rgb(244,2,33)" fg:x="52074" fg:w="7"/><text x="100.1579%" y="767.50"></text></g><g><title>App`&lt;App::game_manager::state_bitboard::BoardStateNumbers as core::hash::Hash&gt;::hash (7 samples, 0.01%)</title><rect x="99.9079%" y="741" width="0.0134%" height="15" fill="rgb(231,100,17)" fg:x="52074" fg:w="7"/><text x="100.1579%" y="751.50"></text></g><g><title>App`core::array::_&lt;impl core::hash::Hash for [T (7 samples, 0.01%)</title><rect x="99.9079%" y="725" width="0.0134%" height="15" fill="rgb(245,23,12)" fg:x="52074" fg:w="7"/><text x="100.1579%" y="735.50"></text></g><g><title> N]&gt;::hash (7 samples, 0.01%)</title><rect x="99.9079%" y="709" width="0.0134%" height="15" fill="rgb(249,55,22)" fg:x="52074" fg:w="7"/><text x="100.1579%" y="719.50"></text></g><g><title>App`core::hash::impls::_&lt;impl core::hash::Hash for u64&gt;::hash_slice (7 samples, 0.01%)</title><rect x="99.9079%" y="693" width="0.0134%" height="15" fill="rgb(207,134,9)" fg:x="52074" fg:w="7"/><text x="100.1579%" y="703.50"></text></g><g><title>App`&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write (7 samples, 0.01%)</title><rect x="99.9079%" y="677" width="0.0134%" height="15" fill="rgb(218,134,0)" fg:x="52074" fg:w="7"/><text x="100.1579%" y="687.50"></text></g><g><title>App`fxhash::write (7 samples, 0.01%)</title><rect x="99.9079%" y="661" width="0.0134%" height="15" fill="rgb(213,212,33)" fg:x="52074" fg:w="7"/><text x="100.1579%" y="671.50"></text></g><g><title>App`fxhash::write64 (7 samples, 0.01%)</title><rect x="99.9079%" y="645" width="0.0134%" height="15" fill="rgb(252,106,18)" fg:x="52074" fg:w="7"/><text x="100.1579%" y="655.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (15 samples, 0.03%)</title><rect x="99.9022%" y="869" width="0.0288%" height="15" fill="rgb(208,126,42)" fg:x="52071" fg:w="15"/><text x="100.1522%" y="879.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (24 samples, 0.05%)</title><rect x="99.8887%" y="885" width="0.0460%" height="15" fill="rgb(246,175,29)" fg:x="52064" fg:w="24"/><text x="100.1387%" y="895.50"></text></g><g><title>App`std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (25 samples, 0.05%)</title><rect x="99.8887%" y="901" width="0.0480%" height="15" fill="rgb(215,13,50)" fg:x="52064" fg:w="25"/><text x="100.1387%" y="911.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (39,526 samples, 75.83%)</title><rect x="24.1050%" y="917" width="75.8336%" height="15" fill="rgb(216,172,15)" fg:x="12564" fg:w="39526"/><text x="24.3550%" y="927.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (8 samples, 0.02%)</title><rect x="99.9386%" y="917" width="0.0153%" height="15" fill="rgb(212,103,13)" fg:x="52090" fg:w="8"/><text x="100.1886%" y="927.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::new (6 samples, 0.01%)</title><rect x="99.9424%" y="901" width="0.0115%" height="15" fill="rgb(231,171,36)" fg:x="52092" fg:w="6"/><text x="100.1924%" y="911.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (39,566 samples, 75.91%)</title><rect x="24.0589%" y="933" width="75.9104%" height="15" fill="rgb(250,123,20)" fg:x="12540" fg:w="39566"/><text x="24.3089%" y="943.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`&lt;App::game_manager::bot2::Bot2 as App::game_manager::bot::Bot&gt;::get_move (39,569 samples, 75.92%)</title><rect x="24.0551%" y="981" width="75.9161%" height="15" fill="rgb(212,53,50)" fg:x="12538" fg:w="39569"/><text x="24.3051%" y="991.50">App`&lt;App::game_manager::bot2::Bot2 as App::game_manager::bot::Bot&gt;::get_move</text></g><g><title>App`&lt;App::game_manager::bot2::Bot2 as App::game_manager::bot::Bot&gt;::get_move_bb (39,569 samples, 75.92%)</title><rect x="24.0551%" y="965" width="75.9161%" height="15" fill="rgb(243,54,12)" fg:x="12538" fg:w="39569"/><text x="24.3051%" y="975.50">App`&lt;App::game_manager::bot2::Bot2 as App::game_manager::bot::Bot&gt;::get_move_bb</text></g><g><title>App`App::game_manager::bot2::Bot2::search (39,569 samples, 75.92%)</title><rect x="24.0551%" y="949" width="75.9161%" height="15" fill="rgb(234,101,34)" fg:x="12538" fg:w="39569"/><text x="24.3051%" y="959.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`std::sys::unix::thread::Thread::new::thread_start (39,583 samples, 75.94%)</title><rect x="24.0551%" y="1141" width="75.9430%" height="15" fill="rgb(254,67,22)" fg:x="12538" fg:w="39583"/><text x="24.3051%" y="1151.50">App`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>App`core::ops::function::FnOnce::call_once{{vtable.shim}} (39,583 samples, 75.94%)</title><rect x="24.0551%" y="1125" width="75.9430%" height="15" fill="rgb(250,35,47)" fg:x="12538" fg:w="39583"/><text x="24.3051%" y="1135.50">App`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>App`std::thread::Builder::spawn_unchecked_::_{{closure}} (39,583 samples, 75.94%)</title><rect x="24.0551%" y="1109" width="75.9430%" height="15" fill="rgb(226,126,38)" fg:x="12538" fg:w="39583"/><text x="24.3051%" y="1119.50">App`std::thread::Builder::spawn_unchecked_::_{{closure}}</text></g><g><title>App`std::panicking::try (39,583 samples, 75.94%)</title><rect x="24.0551%" y="1093" width="75.9430%" height="15" fill="rgb(216,138,53)" fg:x="12538" fg:w="39583"/><text x="24.3051%" y="1103.50">App`std::panicking::try</text></g><g><title>App`__rust_try (39,583 samples, 75.94%)</title><rect x="24.0551%" y="1077" width="75.9430%" height="15" fill="rgb(246,199,43)" fg:x="12538" fg:w="39583"/><text x="24.3051%" y="1087.50">App`__rust_try</text></g><g><title>App`std::panicking::try::do_call (39,583 samples, 75.94%)</title><rect x="24.0551%" y="1061" width="75.9430%" height="15" fill="rgb(232,125,11)" fg:x="12538" fg:w="39583"/><text x="24.3051%" y="1071.50">App`std::panicking::try::do_call</text></g><g><title>App`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (39,583 samples, 75.94%)</title><rect x="24.0551%" y="1045" width="75.9430%" height="15" fill="rgb(218,219,45)" fg:x="12538" fg:w="39583"/><text x="24.3051%" y="1055.50">App`&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>App`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}} (39,583 samples, 75.94%)</title><rect x="24.0551%" y="1029" width="75.9430%" height="15" fill="rgb(216,102,54)" fg:x="12538" fg:w="39583"/><text x="24.3051%" y="1039.50">App`std::thread::Builder::spawn_unchecked_::_{{closure}}::_{{closure}}</text></g><g><title>App`std::sys_common::backtrace::__rust_begin_short_backtrace (39,583 samples, 75.94%)</title><rect x="24.0551%" y="1013" width="75.9430%" height="15" fill="rgb(250,228,7)" fg:x="12538" fg:w="39583"/><text x="24.3051%" y="1023.50">App`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>App`App::game_manager::GameManager::update::_{{closure}} (39,583 samples, 75.94%)</title><rect x="24.0551%" y="997" width="75.9430%" height="15" fill="rgb(226,125,25)" fg:x="12538" fg:w="39583"/><text x="24.3051%" y="1007.50">App`App::game_manager::GameManager::update::_{{closure}}</text></g><g><title>App`core::ptr::drop_in_place&lt;App::game_manager::bot2::Bot2&gt; (14 samples, 0.03%)</title><rect x="99.9712%" y="981" width="0.0269%" height="15" fill="rgb(224,165,27)" fg:x="52107" fg:w="14"/><text x="100.2212%" y="991.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;(App::game_manager::state_bitboard::BoardStateNumbers,App::game_manager::board2::ChessMove),i32,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (14 samples, 0.03%)</title><rect x="99.9712%" y="965" width="0.0269%" height="15" fill="rgb(233,86,3)" fg:x="52107" fg:w="14"/><text x="100.2212%" y="975.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;(App::game_manager::state_bitboard::BoardStateNumbers,App::game_manager::board2::ChessMove),i32,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (14 samples, 0.03%)</title><rect x="99.9712%" y="949" width="0.0269%" height="15" fill="rgb(228,116,20)" fg:x="52107" fg:w="14"/><text x="100.2212%" y="959.50"></text></g><g><title>App`core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;((App::game_manager::state_bitboard::BoardStateNumbers,App::game_manager::board2::ChessMove),i32)&gt;&gt; (14 samples, 0.03%)</title><rect x="99.9712%" y="933" width="0.0269%" height="15" fill="rgb(209,192,17)" fg:x="52107" fg:w="14"/><text x="100.2212%" y="943.50"></text></g><g><title>App`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.03%)</title><rect x="99.9712%" y="917" width="0.0269%" height="15" fill="rgb(224,88,34)" fg:x="52107" fg:w="14"/><text x="100.2212%" y="927.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (14 samples, 0.03%)</title><rect x="99.9712%" y="901" width="0.0269%" height="15" fill="rgb(233,38,6)" fg:x="52107" fg:w="14"/><text x="100.2212%" y="911.50"></text></g><g><title>App`&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.03%)</title><rect x="99.9712%" y="885" width="0.0269%" height="15" fill="rgb(212,59,30)" fg:x="52107" fg:w="14"/><text x="100.2212%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`madvise (14 samples, 0.03%)</title><rect x="99.9712%" y="869" width="0.0269%" height="15" fill="rgb(213,80,3)" fg:x="52107" fg:w="14"/><text x="100.2212%" y="879.50"></text></g><g><title>all (52,122 samples, 100%)</title><rect x="0.0000%" y="1189" width="100.0000%" height="15" fill="rgb(251,178,7)" fg:x="0" fg:w="52122"/><text x="0.2500%" y="1199.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (39,875 samples, 76.50%)</title><rect x="23.4968%" y="1173" width="76.5032%" height="15" fill="rgb(213,154,26)" fg:x="12247" fg:w="39875"/><text x="23.7468%" y="1183.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (39,875 samples, 76.50%)</title><rect x="23.4968%" y="1157" width="76.5032%" height="15" fill="rgb(238,165,49)" fg:x="12247" fg:w="39875"/><text x="23.7468%" y="1167.50">libsystem_pthread.dylib`_pthread_start</text></g></svg></svg>