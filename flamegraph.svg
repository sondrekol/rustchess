<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="726" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="709.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="709.00"> </text><svg id="frames" x="10" width="1180" total_samples="79086"><g><title>OpenGL`0x00007ffa1f6d28f9 (11 samples, 0.01%)</title><rect x="0.0455%" y="421" width="0.0139%" height="15" fill="rgb(227,0,7)" fg:x="36" fg:w="11"/><text x="0.2955%" y="431.50"></text></g><g><title>OpenGL`0x00007ffa1f6d2b46 (11 samples, 0.01%)</title><rect x="0.0455%" y="405" width="0.0139%" height="15" fill="rgb(217,0,24)" fg:x="36" fg:w="11"/><text x="0.2955%" y="415.50"></text></g><g><title>OpenGL`0x00007ffa1f6d2c61 (11 samples, 0.01%)</title><rect x="0.0455%" y="389" width="0.0139%" height="15" fill="rgb(221,193,54)" fg:x="36" fg:w="11"/><text x="0.2955%" y="399.50"></text></g><g><title>GLEngine`gliInitializeLibrary (11 samples, 0.01%)</title><rect x="0.0455%" y="373" width="0.0139%" height="15" fill="rgb(248,212,6)" fg:x="36" fg:w="11"/><text x="0.2955%" y="383.50"></text></g><g><title>libGFXShared.dylib`gfxInitializeLibrary (11 samples, 0.01%)</title><rect x="0.0455%" y="357" width="0.0139%" height="15" fill="rgb(208,68,35)" fg:x="36" fg:w="11"/><text x="0.2955%" y="367.50"></text></g><g><title>AppKit`-[NSOpenGLPixelFormat initWithAttributes:] (13 samples, 0.02%)</title><rect x="0.0455%" y="469" width="0.0164%" height="15" fill="rgb(232,128,0)" fg:x="36" fg:w="13"/><text x="0.2955%" y="479.50"></text></g><g><title>OpenGL`CGLChoosePixelFormat (13 samples, 0.02%)</title><rect x="0.0455%" y="453" width="0.0164%" height="15" fill="rgb(207,160,47)" fg:x="36" fg:w="13"/><text x="0.2955%" y="463.50"></text></g><g><title>OpenGL`0x00007ffa1f6d9363 (13 samples, 0.02%)</title><rect x="0.0455%" y="437" width="0.0164%" height="15" fill="rgb(228,23,34)" fg:x="36" fg:w="13"/><text x="0.2955%" y="447.50"></text></g><g><title>App`&lt;glutin::display::Display as glutin::display::GlDisplay&gt;::find_configs (14 samples, 0.02%)</title><rect x="0.0455%" y="501" width="0.0177%" height="15" fill="rgb(218,30,26)" fg:x="36" fg:w="14"/><text x="0.2955%" y="511.50"></text></g><g><title>App`glutin::api::cgl::config::_&lt;impl glutin::api::cgl::display::Display&gt;::find_configs (14 samples, 0.02%)</title><rect x="0.0455%" y="485" width="0.0177%" height="15" fill="rgb(220,122,19)" fg:x="36" fg:w="14"/><text x="0.2955%" y="495.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (8 samples, 0.01%)</title><rect x="0.0695%" y="357" width="0.0101%" height="15" fill="rgb(250,228,42)" fg:x="55" fg:w="8"/><text x="0.3195%" y="367.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (11 samples, 0.01%)</title><rect x="0.0670%" y="405" width="0.0139%" height="15" fill="rgb(240,193,28)" fg:x="53" fg:w="11"/><text x="0.3170%" y="415.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (9 samples, 0.01%)</title><rect x="0.0695%" y="389" width="0.0114%" height="15" fill="rgb(216,20,37)" fg:x="55" fg:w="9"/><text x="0.3195%" y="399.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (9 samples, 0.01%)</title><rect x="0.0695%" y="373" width="0.0114%" height="15" fill="rgb(206,188,39)" fg:x="55" fg:w="9"/><text x="0.3195%" y="383.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (13 samples, 0.02%)</title><rect x="0.0670%" y="421" width="0.0164%" height="15" fill="rgb(217,207,13)" fg:x="53" fg:w="13"/><text x="0.3170%" y="431.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (22 samples, 0.03%)</title><rect x="0.0670%" y="437" width="0.0278%" height="15" fill="rgb(231,73,38)" fg:x="53" fg:w="22"/><text x="0.3170%" y="447.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (9 samples, 0.01%)</title><rect x="0.0835%" y="421" width="0.0114%" height="15" fill="rgb(225,20,46)" fg:x="66" fg:w="9"/><text x="0.3335%" y="431.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (9 samples, 0.01%)</title><rect x="0.0835%" y="405" width="0.0114%" height="15" fill="rgb(210,31,41)" fg:x="66" fg:w="9"/><text x="0.3335%" y="415.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (9 samples, 0.01%)</title><rect x="0.0835%" y="389" width="0.0114%" height="15" fill="rgb(221,200,47)" fg:x="66" fg:w="9"/><text x="0.3335%" y="399.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (26 samples, 0.03%)</title><rect x="0.0645%" y="485" width="0.0329%" height="15" fill="rgb(226,26,5)" fg:x="51" fg:w="26"/><text x="0.3145%" y="495.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (26 samples, 0.03%)</title><rect x="0.0645%" y="469" width="0.0329%" height="15" fill="rgb(249,33,26)" fg:x="51" fg:w="26"/><text x="0.3145%" y="479.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (24 samples, 0.03%)</title><rect x="0.0670%" y="453" width="0.0303%" height="15" fill="rgb(235,183,28)" fg:x="53" fg:w="24"/><text x="0.3170%" y="463.50"></text></g><g><title>App`glutin_window::GlutinWindow::from_raw (56 samples, 0.07%)</title><rect x="0.0367%" y="533" width="0.0708%" height="15" fill="rgb(221,5,38)" fg:x="29" fg:w="56"/><text x="0.2867%" y="543.50"></text></g><g><title>App`glutin_winit::DisplayBuilder::build (49 samples, 0.06%)</title><rect x="0.0455%" y="517" width="0.0620%" height="15" fill="rgb(247,18,42)" fg:x="36" fg:w="49"/><text x="0.2955%" y="527.50"></text></g><g><title>App`winit::platform_impl::platform::window::WinitWindow::new (35 samples, 0.04%)</title><rect x="0.0632%" y="501" width="0.0443%" height="15" fill="rgb(241,131,45)" fg:x="50" fg:w="35"/><text x="0.3132%" y="511.50"></text></g><g><title>AppKit`_NSInitializeAppContext (10 samples, 0.01%)</title><rect x="0.1227%" y="485" width="0.0126%" height="15" fill="rgb(249,31,29)" fg:x="97" fg:w="10"/><text x="0.3727%" y="495.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (23 samples, 0.03%)</title><rect x="0.1075%" y="517" width="0.0291%" height="15" fill="rgb(225,111,53)" fg:x="85" fg:w="23"/><text x="0.3575%" y="527.50"></text></g><g><title>AppKit`-[NSApplication init] (23 samples, 0.03%)</title><rect x="0.1075%" y="501" width="0.0291%" height="15" fill="rgb(238,160,17)" fg:x="85" fg:w="23"/><text x="0.3575%" y="511.50"></text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::BuildFromWindowSettings&gt;::build_from_window_settings (83 samples, 0.10%)</title><rect x="0.0367%" y="565" width="0.1049%" height="15" fill="rgb(214,148,48)" fg:x="29" fg:w="83"/><text x="0.2867%" y="575.50"></text></g><g><title>App`glutin_window::GlutinWindow::new (83 samples, 0.10%)</title><rect x="0.0367%" y="549" width="0.1049%" height="15" fill="rgb(232,36,49)" fg:x="29" fg:w="83"/><text x="0.2867%" y="559.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (27 samples, 0.03%)</title><rect x="0.1075%" y="533" width="0.0341%" height="15" fill="rgb(209,103,24)" fg:x="85" fg:w="27"/><text x="0.3575%" y="543.50"></text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::send (18 samples, 0.02%)</title><rect x="0.3199%" y="501" width="0.0228%" height="15" fill="rgb(229,88,8)" fg:x="253" fg:w="18"/><text x="0.5699%" y="511.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (41 samples, 0.05%)</title><rect x="0.4185%" y="469" width="0.0518%" height="15" fill="rgb(213,181,19)" fg:x="331" fg:w="41"/><text x="0.6685%" y="479.50"></text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (46 samples, 0.06%)</title><rect x="0.5475%" y="389" width="0.0582%" height="15" fill="rgb(254,191,54)" fg:x="433" fg:w="46"/><text x="0.7975%" y="399.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (74 samples, 0.09%)</title><rect x="0.5159%" y="405" width="0.0936%" height="15" fill="rgb(241,83,37)" fg:x="408" fg:w="74"/><text x="0.7659%" y="415.50"></text></g><g><title>CoreFoundation`CFEqual (13 samples, 0.02%)</title><rect x="0.6487%" y="357" width="0.0164%" height="15" fill="rgb(233,36,39)" fg:x="513" fg:w="13"/><text x="0.8987%" y="367.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (35 samples, 0.04%)</title><rect x="0.6272%" y="373" width="0.0443%" height="15" fill="rgb(226,3,54)" fg:x="496" fg:w="35"/><text x="0.8772%" y="383.50"></text></g><g><title>CoreFoundation`CFSetGetValue (79 samples, 0.10%)</title><rect x="0.6234%" y="389" width="0.0999%" height="15" fill="rgb(245,192,40)" fg:x="493" fg:w="79"/><text x="0.8734%" y="399.50"></text></g><g><title>CoreFoundation`__CFStringHash (33 samples, 0.04%)</title><rect x="0.6815%" y="373" width="0.0417%" height="15" fill="rgb(238,167,29)" fg:x="539" fg:w="33"/><text x="0.9315%" y="383.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (101 samples, 0.13%)</title><rect x="0.6145%" y="405" width="0.1277%" height="15" fill="rgb(232,182,51)" fg:x="486" fg:w="101"/><text x="0.8645%" y="415.50"></text></g><g><title>CoreFoundation`CFRunLoopAddSource (201 samples, 0.25%)</title><rect x="0.5070%" y="421" width="0.2542%" height="15" fill="rgb(231,60,39)" fg:x="401" fg:w="201"/><text x="0.7570%" y="431.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (234 samples, 0.30%)</title><rect x="0.4893%" y="453" width="0.2959%" height="15" fill="rgb(208,69,12)" fg:x="387" fg:w="234"/><text x="0.7393%" y="463.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (225 samples, 0.28%)</title><rect x="0.5007%" y="437" width="0.2845%" height="15" fill="rgb(235,93,37)" fg:x="396" fg:w="225"/><text x="0.7507%" y="447.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (239 samples, 0.30%)</title><rect x="0.4855%" y="469" width="0.3022%" height="15" fill="rgb(213,116,39)" fg:x="384" fg:w="239"/><text x="0.7355%" y="479.50"></text></g><g><title>CoreFoundation`CFRetain (10 samples, 0.01%)</title><rect x="0.8206%" y="437" width="0.0126%" height="15" fill="rgb(222,207,29)" fg:x="649" fg:w="10"/><text x="1.0706%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (12 samples, 0.02%)</title><rect x="0.8522%" y="389" width="0.0152%" height="15" fill="rgb(206,96,30)" fg:x="674" fg:w="12"/><text x="1.1022%" y="399.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (28 samples, 0.04%)</title><rect x="0.8345%" y="437" width="0.0354%" height="15" fill="rgb(218,138,4)" fg:x="660" fg:w="28"/><text x="1.0845%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (16 samples, 0.02%)</title><rect x="0.8497%" y="421" width="0.0202%" height="15" fill="rgb(250,191,14)" fg:x="672" fg:w="16"/><text x="1.0997%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (16 samples, 0.02%)</title><rect x="0.8497%" y="405" width="0.0202%" height="15" fill="rgb(239,60,40)" fg:x="672" fg:w="16"/><text x="1.0997%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.03%)</title><rect x="0.8699%" y="437" width="0.0303%" height="15" fill="rgb(206,27,48)" fg:x="688" fg:w="24"/><text x="1.1199%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.03%)</title><rect x="0.8725%" y="421" width="0.0278%" height="15" fill="rgb(225,35,8)" fg:x="690" fg:w="22"/><text x="1.1225%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.03%)</title><rect x="0.8725%" y="405" width="0.0278%" height="15" fill="rgb(250,213,24)" fg:x="690" fg:w="22"/><text x="1.1225%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (13 samples, 0.02%)</title><rect x="0.8838%" y="389" width="0.0164%" height="15" fill="rgb(247,123,22)" fg:x="699" fg:w="13"/><text x="1.1338%" y="399.50"></text></g><g><title>CoreFoundation`CFBasicHashCreateCopy (79 samples, 0.10%)</title><rect x="0.8017%" y="453" width="0.0999%" height="15" fill="rgb(231,138,38)" fg:x="634" fg:w="79"/><text x="1.0517%" y="463.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (11 samples, 0.01%)</title><rect x="0.9066%" y="453" width="0.0139%" height="15" fill="rgb(231,145,46)" fg:x="717" fg:w="11"/><text x="1.1566%" y="463.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeID (11 samples, 0.01%)</title><rect x="0.9066%" y="437" width="0.0139%" height="15" fill="rgb(251,118,11)" fg:x="717" fg:w="11"/><text x="1.1566%" y="447.50"></text></g><g><title>CoreFoundation`CFSetCreateCopy (110 samples, 0.14%)</title><rect x="0.7878%" y="469" width="0.1391%" height="15" fill="rgb(217,147,25)" fg:x="623" fg:w="110"/><text x="1.0378%" y="479.50"></text></g><g><title>CoreFoundation`__CFBasicHashDrain (22 samples, 0.03%)</title><rect x="0.9458%" y="453" width="0.0278%" height="15" fill="rgb(247,81,37)" fg:x="748" fg:w="22"/><text x="1.1958%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (9 samples, 0.01%)</title><rect x="0.9622%" y="437" width="0.0114%" height="15" fill="rgb(209,12,38)" fg:x="761" fg:w="9"/><text x="1.2122%" y="447.50"></text></g><g><title>CoreFoundation`_CFRelease (51 samples, 0.06%)</title><rect x="0.9281%" y="469" width="0.0645%" height="15" fill="rgb(227,1,9)" fg:x="734" fg:w="51"/><text x="1.1781%" y="479.50"></text></g><g><title>CoreFoundation`__CFBasicHashDeallocate (11 samples, 0.01%)</title><rect x="0.9964%" y="469" width="0.0139%" height="15" fill="rgb(248,47,43)" fg:x="788" fg:w="11"/><text x="1.2464%" y="479.50"></text></g><g><title>CoreFoundation`__CFRunLoopSourceEqual (14 samples, 0.02%)</title><rect x="1.0103%" y="469" width="0.0177%" height="15" fill="rgb(221,10,30)" fg:x="799" fg:w="14"/><text x="1.2603%" y="479.50"></text></g><g><title>CoreFoundation`CFRunLoopAddSource (513 samples, 0.65%)</title><rect x="0.4135%" y="485" width="0.6487%" height="15" fill="rgb(210,229,1)" fg:x="327" fg:w="513"/><text x="0.6635%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.03%)</title><rect x="1.1292%" y="453" width="0.0316%" height="15" fill="rgb(222,148,37)" fg:x="893" fg:w="25"/><text x="1.3792%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.03%)</title><rect x="1.1329%" y="437" width="0.0278%" height="15" fill="rgb(234,67,33)" fg:x="896" fg:w="22"/><text x="1.3829%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.03%)</title><rect x="1.1329%" y="421" width="0.0278%" height="15" fill="rgb(247,98,35)" fg:x="896" fg:w="22"/><text x="1.3829%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (16 samples, 0.02%)</title><rect x="1.1405%" y="405" width="0.0202%" height="15" fill="rgb(247,138,52)" fg:x="902" fg:w="16"/><text x="1.3905%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (9 samples, 0.01%)</title><rect x="1.1608%" y="453" width="0.0114%" height="15" fill="rgb(213,79,30)" fg:x="918" fg:w="9"/><text x="1.4108%" y="463.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (78 samples, 0.10%)</title><rect x="1.0836%" y="469" width="0.0986%" height="15" fill="rgb(246,177,23)" fg:x="857" fg:w="78"/><text x="1.3336%" y="479.50"></text></g><g><title>CoreFoundation`CFRunLoopSourceCreate (105 samples, 0.13%)</title><rect x="1.0685%" y="485" width="0.1328%" height="15" fill="rgb(230,62,27)" fg:x="845" fg:w="105"/><text x="1.3185%" y="495.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutexattr_init (8 samples, 0.01%)</title><rect x="1.2278%" y="485" width="0.0101%" height="15" fill="rgb(216,154,8)" fg:x="971" fg:w="8"/><text x="1.4778%" y="495.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::create_proxy (703 samples, 0.89%)</title><rect x="0.3515%" y="501" width="0.8889%" height="15" fill="rgb(244,35,45)" fg:x="278" fg:w="703"/><text x="0.6015%" y="511.50"></text></g><g><title>AppKit` (10 samples, 0.01%)</title><rect x="1.2556%" y="485" width="0.0126%" height="15" fill="rgb(251,115,12)" fg:x="993" fg:w="10"/><text x="1.5056%" y="495.50"></text></g><g><title>AppKit`-[NSApplication _enableImmediateEventHandlingIfNeeded] (20 samples, 0.03%)</title><rect x="1.2708%" y="485" width="0.0253%" height="15" fill="rgb(240,54,50)" fg:x="1005" fg:w="20"/><text x="1.5208%" y="495.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (11 samples, 0.01%)</title><rect x="1.2961%" y="485" width="0.0139%" height="15" fill="rgb(233,84,52)" fg:x="1025" fg:w="11"/><text x="1.5461%" y="495.50"></text></g><g><title>AppKit`-[NSApplication _enableImmediateEventHandlingIfNeeded] (12 samples, 0.02%)</title><rect x="1.3618%" y="469" width="0.0152%" height="15" fill="rgb(207,117,47)" fg:x="1077" fg:w="12"/><text x="1.6118%" y="479.50"></text></g><g><title>AppKit`-[NSApplication setWindowsNeedUpdate:] (9 samples, 0.01%)</title><rect x="1.4200%" y="437" width="0.0114%" height="15" fill="rgb(249,43,39)" fg:x="1123" fg:w="9"/><text x="1.6700%" y="447.50"></text></g><g><title>AppKit`+[NSAnimationContext activate] (15 samples, 0.02%)</title><rect x="1.4440%" y="421" width="0.0190%" height="15" fill="rgb(209,38,44)" fg:x="1142" fg:w="15"/><text x="1.6940%" y="431.50"></text></g><g><title>CoreFoundation`-[__NSCFType retain] (8 samples, 0.01%)</title><rect x="1.4996%" y="405" width="0.0101%" height="15" fill="rgb(236,212,23)" fg:x="1186" fg:w="8"/><text x="1.7496%" y="415.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (14 samples, 0.02%)</title><rect x="1.5110%" y="405" width="0.0177%" height="15" fill="rgb(242,79,21)" fg:x="1195" fg:w="14"/><text x="1.7610%" y="415.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (11 samples, 0.01%)</title><rect x="1.5376%" y="389" width="0.0139%" height="15" fill="rgb(211,96,35)" fg:x="1216" fg:w="11"/><text x="1.7876%" y="399.50"></text></g><g><title>CoreFoundation`CFArrayContainsValue (25 samples, 0.03%)</title><rect x="1.5591%" y="389" width="0.0316%" height="15" fill="rgb(253,215,40)" fg:x="1233" fg:w="25"/><text x="1.8091%" y="399.50"></text></g><g><title>CoreFoundation`CFEqual (15 samples, 0.02%)</title><rect x="1.5717%" y="373" width="0.0190%" height="15" fill="rgb(211,81,21)" fg:x="1243" fg:w="15"/><text x="1.8217%" y="383.50"></text></g><g><title>CoreFoundation`CFEqual (11 samples, 0.01%)</title><rect x="1.6375%" y="341" width="0.0139%" height="15" fill="rgb(208,190,38)" fg:x="1295" fg:w="11"/><text x="1.8875%" y="351.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (38 samples, 0.05%)</title><rect x="1.6185%" y="357" width="0.0480%" height="15" fill="rgb(235,213,38)" fg:x="1280" fg:w="38"/><text x="1.8685%" y="367.50"></text></g><g><title>CoreFoundation`CFHash (12 samples, 0.02%)</title><rect x="1.6514%" y="341" width="0.0152%" height="15" fill="rgb(237,122,38)" fg:x="1306" fg:w="12"/><text x="1.9014%" y="351.50"></text></g><g><title>CoreFoundation`CFSetGetValue (68 samples, 0.09%)</title><rect x="1.6134%" y="373" width="0.0860%" height="15" fill="rgb(244,218,35)" fg:x="1276" fg:w="68"/><text x="1.8634%" y="383.50"></text></g><g><title>CoreFoundation`__CFStringHash (18 samples, 0.02%)</title><rect x="1.6767%" y="357" width="0.0228%" height="15" fill="rgb(240,68,47)" fg:x="1326" fg:w="18"/><text x="1.9267%" y="367.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (83 samples, 0.10%)</title><rect x="1.6033%" y="389" width="0.1049%" height="15" fill="rgb(210,16,53)" fg:x="1268" fg:w="83"/><text x="1.8533%" y="399.50"></text></g><g><title>CoreFoundation`CFRunLoopAddObserver (156 samples, 0.20%)</title><rect x="1.5300%" y="405" width="0.1973%" height="15" fill="rgb(235,124,12)" fg:x="1210" fg:w="156"/><text x="1.7800%" y="415.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (44 samples, 0.06%)</title><rect x="1.7626%" y="373" width="0.0556%" height="15" fill="rgb(224,169,11)" fg:x="1394" fg:w="44"/><text x="2.0126%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.03%)</title><rect x="1.7867%" y="357" width="0.0316%" height="15" fill="rgb(250,166,2)" fg:x="1413" fg:w="25"/><text x="2.0367%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (22 samples, 0.03%)</title><rect x="1.7905%" y="341" width="0.0278%" height="15" fill="rgb(242,216,29)" fg:x="1416" fg:w="22"/><text x="2.0405%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.03%)</title><rect x="1.7905%" y="325" width="0.0278%" height="15" fill="rgb(230,116,27)" fg:x="1416" fg:w="22"/><text x="2.0405%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (17 samples, 0.02%)</title><rect x="1.7968%" y="309" width="0.0215%" height="15" fill="rgb(228,99,48)" fg:x="1421" fg:w="17"/><text x="2.0468%" y="319.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (18 samples, 0.02%)</title><rect x="1.8360%" y="357" width="0.0228%" height="15" fill="rgb(253,11,6)" fg:x="1452" fg:w="18"/><text x="2.0860%" y="367.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (15 samples, 0.02%)</title><rect x="1.8398%" y="341" width="0.0190%" height="15" fill="rgb(247,143,39)" fg:x="1455" fg:w="15"/><text x="2.0898%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (8 samples, 0.01%)</title><rect x="1.8486%" y="325" width="0.0101%" height="15" fill="rgb(236,97,10)" fg:x="1462" fg:w="8"/><text x="2.0986%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (8 samples, 0.01%)</title><rect x="1.8486%" y="309" width="0.0101%" height="15" fill="rgb(233,208,19)" fg:x="1462" fg:w="8"/><text x="2.0986%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.01%)</title><rect x="1.8486%" y="293" width="0.0101%" height="15" fill="rgb(216,164,2)" fg:x="1462" fg:w="8"/><text x="2.0986%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.01%)</title><rect x="1.8486%" y="277" width="0.0101%" height="15" fill="rgb(220,129,5)" fg:x="1462" fg:w="8"/><text x="2.0986%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (9 samples, 0.01%)</title><rect x="1.8587%" y="357" width="0.0114%" height="15" fill="rgb(242,17,10)" fg:x="1470" fg:w="9"/><text x="2.1087%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (9 samples, 0.01%)</title><rect x="1.8587%" y="341" width="0.0114%" height="15" fill="rgb(242,107,0)" fg:x="1470" fg:w="9"/><text x="2.1087%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.01%)</title><rect x="1.8587%" y="325" width="0.0114%" height="15" fill="rgb(251,28,31)" fg:x="1470" fg:w="9"/><text x="2.1087%" y="335.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (43 samples, 0.05%)</title><rect x="1.8183%" y="373" width="0.0544%" height="15" fill="rgb(233,223,10)" fg:x="1438" fg:w="43"/><text x="2.0683%" y="383.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverCreate (116 samples, 0.15%)</title><rect x="1.7449%" y="389" width="0.1467%" height="15" fill="rgb(215,21,27)" fg:x="1380" fg:w="116"/><text x="1.9949%" y="399.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverCreateWithHandler (145 samples, 0.18%)</title><rect x="1.7336%" y="405" width="0.1833%" height="15" fill="rgb(232,23,21)" fg:x="1371" fg:w="145"/><text x="1.9836%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (12 samples, 0.02%)</title><rect x="1.9397%" y="389" width="0.0152%" height="15" fill="rgb(244,5,23)" fg:x="1534" fg:w="12"/><text x="2.1897%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_copyWeak (20 samples, 0.03%)</title><rect x="1.9308%" y="405" width="0.0253%" height="15" fill="rgb(226,81,46)" fg:x="1527" fg:w="20"/><text x="2.1808%" y="415.50"></text></g><g><title>libobjc.A.dylib`callSetWeaklyReferenced(objc_object*) (9 samples, 0.01%)</title><rect x="1.9827%" y="389" width="0.0114%" height="15" fill="rgb(247,70,30)" fg:x="1568" fg:w="9"/><text x="2.2327%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_initWeak (59 samples, 0.07%)</title><rect x="1.9649%" y="405" width="0.0746%" height="15" fill="rgb(212,68,19)" fg:x="1554" fg:w="59"/><text x="2.2149%" y="415.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (35 samples, 0.04%)</title><rect x="1.9953%" y="389" width="0.0443%" height="15" fill="rgb(240,187,13)" fg:x="1578" fg:w="35"/><text x="2.2453%" y="399.50"></text></g><g><title>libobjc.A.dylib`weak_entry_for_referent(weak_table_t*, objc_object*) (13 samples, 0.02%)</title><rect x="2.0231%" y="373" width="0.0164%" height="15" fill="rgb(223,113,26)" fg:x="1600" fg:w="13"/><text x="2.2731%" y="383.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (11 samples, 0.01%)</title><rect x="2.0396%" y="405" width="0.0139%" height="15" fill="rgb(206,192,2)" fg:x="1613" fg:w="11"/><text x="2.2896%" y="415.50"></text></g><g><title>AppKit`-[NSApplication setWindowsNeedUpdate:] (472 samples, 0.60%)</title><rect x="1.4655%" y="421" width="0.5968%" height="15" fill="rgb(241,108,4)" fg:x="1159" fg:w="472"/><text x="1.7155%" y="431.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (72 samples, 0.09%)</title><rect x="2.0787%" y="213" width="0.0910%" height="15" fill="rgb(247,173,49)" fg:x="1644" fg:w="72"/><text x="2.3287%" y="223.50"></text></g><g><title>HIToolbox`IsEventBusy (20 samples, 0.03%)</title><rect x="2.1445%" y="197" width="0.0253%" height="15" fill="rgb(224,114,35)" fg:x="1696" fg:w="20"/><text x="2.3945%" y="207.50"></text></g><g><title>HIToolbox`IsEventBusy (9 samples, 0.01%)</title><rect x="2.1698%" y="213" width="0.0114%" height="15" fill="rgb(245,159,27)" fg:x="1716" fg:w="9"/><text x="2.4198%" y="223.50"></text></g><g><title>AppKit`-[NSEvent _postAtStart:] (26 samples, 0.03%)</title><rect x="2.1925%" y="85" width="0.0329%" height="15" fill="rgb(245,172,44)" fg:x="1734" fg:w="26"/><text x="2.4425%" y="95.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (14 samples, 0.02%)</title><rect x="2.2077%" y="69" width="0.0177%" height="15" fill="rgb(236,23,11)" fg:x="1746" fg:w="14"/><text x="2.4577%" y="79.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (14 samples, 0.02%)</title><rect x="2.2077%" y="53" width="0.0177%" height="15" fill="rgb(205,117,38)" fg:x="1746" fg:w="14"/><text x="2.4577%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (14 samples, 0.02%)</title><rect x="2.2077%" y="37" width="0.0177%" height="15" fill="rgb(237,72,25)" fg:x="1746" fg:w="14"/><text x="2.4577%" y="47.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (32 samples, 0.04%)</title><rect x="2.1900%" y="149" width="0.0405%" height="15" fill="rgb(244,70,9)" fg:x="1732" fg:w="32"/><text x="2.4400%" y="159.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler (31 samples, 0.04%)</title><rect x="2.1913%" y="133" width="0.0392%" height="15" fill="rgb(217,125,39)" fg:x="1733" fg:w="31"/><text x="2.4413%" y="143.50"></text></g><g><title>App`std::panicking::try (31 samples, 0.04%)</title><rect x="2.1913%" y="117" width="0.0392%" height="15" fill="rgb(235,36,10)" fg:x="1733" fg:w="31"/><text x="2.4413%" y="127.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::cleared (31 samples, 0.04%)</title><rect x="2.1913%" y="101" width="0.0392%" height="15" fill="rgb(251,123,47)" fg:x="1733" fg:w="31"/><text x="2.4413%" y="111.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (36 samples, 0.05%)</title><rect x="2.1888%" y="165" width="0.0455%" height="15" fill="rgb(221,13,13)" fg:x="1731" fg:w="36"/><text x="2.4388%" y="175.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (8 samples, 0.01%)</title><rect x="2.2444%" y="133" width="0.0101%" height="15" fill="rgb(238,131,9)" fg:x="1775" fg:w="8"/><text x="2.4944%" y="143.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (15 samples, 0.02%)</title><rect x="2.2381%" y="149" width="0.0190%" height="15" fill="rgb(211,50,8)" fg:x="1770" fg:w="15"/><text x="2.4881%" y="159.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (18 samples, 0.02%)</title><rect x="2.2368%" y="165" width="0.0228%" height="15" fill="rgb(245,182,24)" fg:x="1769" fg:w="18"/><text x="2.4868%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (8 samples, 0.01%)</title><rect x="2.2747%" y="165" width="0.0101%" height="15" fill="rgb(242,14,37)" fg:x="1799" fg:w="8"/><text x="2.5247%" y="175.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (80 samples, 0.10%)</title><rect x="2.1862%" y="181" width="0.1012%" height="15" fill="rgb(246,228,12)" fg:x="1729" fg:w="80"/><text x="2.4362%" y="191.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (88 samples, 0.11%)</title><rect x="2.1812%" y="197" width="0.1113%" height="15" fill="rgb(213,55,15)" fg:x="1725" fg:w="88"/><text x="2.4312%" y="207.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (174 samples, 0.22%)</title><rect x="2.0775%" y="277" width="0.2200%" height="15" fill="rgb(209,9,3)" fg:x="1643" fg:w="174"/><text x="2.3275%" y="287.50"></text></g><g><title>AppKit`_DPSNextEvent (174 samples, 0.22%)</title><rect x="2.0775%" y="261" width="0.2200%" height="15" fill="rgb(230,59,30)" fg:x="1643" fg:w="174"/><text x="2.3275%" y="271.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (173 samples, 0.22%)</title><rect x="2.0787%" y="245" width="0.2187%" height="15" fill="rgb(209,121,21)" fg:x="1644" fg:w="173"/><text x="2.3287%" y="255.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (173 samples, 0.22%)</title><rect x="2.0787%" y="229" width="0.2187%" height="15" fill="rgb(220,109,13)" fg:x="1644" fg:w="173"/><text x="2.3287%" y="239.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (92 samples, 0.12%)</title><rect x="2.1812%" y="213" width="0.1163%" height="15" fill="rgb(232,18,1)" fg:x="1725" fg:w="92"/><text x="2.4312%" y="223.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (178 samples, 0.23%)</title><rect x="2.0737%" y="373" width="0.2251%" height="15" fill="rgb(215,41,42)" fg:x="1640" fg:w="178"/><text x="2.3237%" y="383.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (178 samples, 0.23%)</title><rect x="2.0737%" y="357" width="0.2251%" height="15" fill="rgb(224,123,36)" fg:x="1640" fg:w="178"/><text x="2.3237%" y="367.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (178 samples, 0.23%)</title><rect x="2.0737%" y="341" width="0.2251%" height="15" fill="rgb(240,125,3)" fg:x="1640" fg:w="178"/><text x="2.3237%" y="351.50"></text></g><g><title>AppKit`NSControlTrackMouse (178 samples, 0.23%)</title><rect x="2.0737%" y="325" width="0.2251%" height="15" fill="rgb(205,98,50)" fg:x="1640" fg:w="178"/><text x="2.3237%" y="335.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (178 samples, 0.23%)</title><rect x="2.0737%" y="309" width="0.2251%" height="15" fill="rgb(205,185,37)" fg:x="1640" fg:w="178"/><text x="2.3237%" y="319.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) trackEventsMatchingMask:timeout:mode:handler:] (175 samples, 0.22%)</title><rect x="2.0775%" y="293" width="0.2213%" height="15" fill="rgb(238,207,15)" fg:x="1643" fg:w="175"/><text x="2.3275%" y="303.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (185 samples, 0.23%)</title><rect x="2.0737%" y="389" width="0.2339%" height="15" fill="rgb(213,199,42)" fg:x="1640" fg:w="185"/><text x="2.3237%" y="399.50"></text></g><g><title>App`winit::platform_impl::platform::view::WinitView::mouse_motion (12 samples, 0.02%)</title><rect x="2.3076%" y="389" width="0.0152%" height="15" fill="rgb(235,201,11)" fg:x="1825" fg:w="12"/><text x="2.5576%" y="399.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (202 samples, 0.26%)</title><rect x="2.0699%" y="405" width="0.2554%" height="15" fill="rgb(207,46,11)" fg:x="1637" fg:w="202"/><text x="2.3199%" y="415.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (206 samples, 0.26%)</title><rect x="2.0686%" y="421" width="0.2605%" height="15" fill="rgb(241,35,35)" fg:x="1636" fg:w="206"/><text x="2.3186%" y="431.50"></text></g><g><title>AppKit`_NSSendEventToObservers (10 samples, 0.01%)</title><rect x="2.3354%" y="421" width="0.0126%" height="15" fill="rgb(243,32,47)" fg:x="1847" fg:w="10"/><text x="2.5854%" y="431.50"></text></g><g><title>CoreFoundation`CFRunLoopCopyCurrentMode (8 samples, 0.01%)</title><rect x="2.3696%" y="405" width="0.0101%" height="15" fill="rgb(247,202,23)" fg:x="1874" fg:w="8"/><text x="2.6196%" y="415.50"></text></g><g><title>CoreFoundation`CFRunLoopCopyCurrentMode (13 samples, 0.02%)</title><rect x="2.3835%" y="389" width="0.0164%" height="15" fill="rgb(219,102,11)" fg:x="1885" fg:w="13"/><text x="2.6335%" y="399.50"></text></g><g><title>QuartzCore`CA::Transaction::push (11 samples, 0.01%)</title><rect x="2.4024%" y="389" width="0.0139%" height="15" fill="rgb(243,110,44)" fg:x="1900" fg:w="11"/><text x="2.6524%" y="399.50"></text></g><g><title>QuartzCore`CA::Transaction::ensure_implicit (39 samples, 0.05%)</title><rect x="2.3797%" y="405" width="0.0493%" height="15" fill="rgb(222,74,54)" fg:x="1882" fg:w="39"/><text x="2.6297%" y="415.50"></text></g><g><title>QuartzCore`+[CATransaction(CATransactionPrivate) activateBackground:] (52 samples, 0.07%)</title><rect x="2.3683%" y="421" width="0.0658%" height="15" fill="rgb(216,99,12)" fg:x="1873" fg:w="52"/><text x="2.6183%" y="431.50"></text></g><g><title>QuartzCore`CA::Transaction::ensure_implicit (9 samples, 0.01%)</title><rect x="2.4341%" y="421" width="0.0114%" height="15" fill="rgb(226,22,26)" fg:x="1925" fg:w="9"/><text x="2.6841%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.01%)</title><rect x="2.4530%" y="421" width="0.0126%" height="15" fill="rgb(217,163,10)" fg:x="1940" fg:w="10"/><text x="2.7030%" y="431.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (827 samples, 1.05%)</title><rect x="1.4314%" y="437" width="1.0457%" height="15" fill="rgb(213,25,53)" fg:x="1132" fg:w="827"/><text x="1.6814%" y="447.50"></text></g><g><title>libsystem_pthread.dylib`pthread_main_np (9 samples, 0.01%)</title><rect x="2.4657%" y="421" width="0.0114%" height="15" fill="rgb(252,105,26)" fg:x="1950" fg:w="9"/><text x="2.7157%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (32 samples, 0.04%)</title><rect x="2.4935%" y="437" width="0.0405%" height="15" fill="rgb(220,39,43)" fg:x="1972" fg:w="32"/><text x="2.7435%" y="447.50"></text></g><g><title>App`winit::platform_impl::platform::app::WinitApplication::send_event (896 samples, 1.13%)</title><rect x="1.4099%" y="453" width="1.1329%" height="15" fill="rgb(229,68,48)" fg:x="1115" fg:w="896"/><text x="1.6599%" y="463.50"></text></g><g><title>Foundation`+[NSUndoManager(NSPrivate) _endTopLevelGroupings] (14 samples, 0.02%)</title><rect x="2.5441%" y="453" width="0.0177%" height="15" fill="rgb(252,8,32)" fg:x="2012" fg:w="14"/><text x="2.7941%" y="463.50"></text></g><g><title>HIToolbox`_HIEnableSuddenTerminationForSendEvent (9 samples, 0.01%)</title><rect x="2.5630%" y="453" width="0.0114%" height="15" fill="rgb(223,20,43)" fg:x="2027" fg:w="9"/><text x="2.8130%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.01%)</title><rect x="2.5744%" y="453" width="0.0126%" height="15" fill="rgb(229,81,49)" fg:x="2036" fg:w="10"/><text x="2.8244%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper (17 samples, 0.02%)</title><rect x="2.5871%" y="453" width="0.0215%" height="15" fill="rgb(236,28,36)" fg:x="2046" fg:w="17"/><text x="2.8371%" y="463.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (985 samples, 1.25%)</title><rect x="1.3770%" y="469" width="1.2455%" height="15" fill="rgb(249,185,26)" fg:x="1089" fg:w="985"/><text x="1.6270%" y="479.50"></text></g><g><title>AppKit`-[NSApplication(NSAppssassination) _checkForAutomaticTerminationSupportPossiblyEnablingIt] (9 samples, 0.01%)</title><rect x="2.6402%" y="469" width="0.0114%" height="15" fill="rgb(249,174,33)" fg:x="2088" fg:w="9"/><text x="2.8902%" y="479.50"></text></g><g><title>AppKit`+[NSEvent _discardTrackingAndCursorEventsIfNeeded] (8 samples, 0.01%)</title><rect x="2.7653%" y="453" width="0.0101%" height="15" fill="rgb(233,201,37)" fg:x="2187" fg:w="8"/><text x="3.0153%" y="463.50"></text></g><g><title>AppKit`-[NSApplication _enableSuddenTermination] (12 samples, 0.02%)</title><rect x="2.7780%" y="453" width="0.0152%" height="15" fill="rgb(221,78,26)" fg:x="2197" fg:w="12"/><text x="3.0280%" y="463.50"></text></g><g><title>AppKit`-[NSApplication _windowWithContextID:] (8 samples, 0.01%)</title><rect x="2.8007%" y="453" width="0.0101%" height="15" fill="rgb(250,127,30)" fg:x="2215" fg:w="8"/><text x="3.0507%" y="463.50"></text></g><g><title>AppKit`-[NSApplication windowWithWindowNumber:] (13 samples, 0.02%)</title><rect x="2.8109%" y="453" width="0.0164%" height="15" fill="rgb(230,49,44)" fg:x="2223" fg:w="13"/><text x="3.0609%" y="463.50"></text></g><g><title>AppKit`-[NSApplication windowWithWindowNumber:] (9 samples, 0.01%)</title><rect x="2.8994%" y="437" width="0.0114%" height="15" fill="rgb(229,67,23)" fg:x="2293" fg:w="9"/><text x="3.1494%" y="447.50"></text></g><g><title>AppKit`-[NSView layer] (9 samples, 0.01%)</title><rect x="2.9386%" y="421" width="0.0114%" height="15" fill="rgb(249,83,47)" fg:x="2324" fg:w="9"/><text x="3.1886%" y="431.50"></text></g><g><title>Foundation`-[NSConcretePointerArray countByEnumeratingWithState:objects:count:] (12 samples, 0.02%)</title><rect x="2.9626%" y="421" width="0.0152%" height="15" fill="rgb(215,43,3)" fg:x="2343" fg:w="12"/><text x="3.2126%" y="431.50"></text></g><g><title>QuartzCore`CA::Context::retain_context_with_id (8 samples, 0.01%)</title><rect x="2.9892%" y="405" width="0.0101%" height="15" fill="rgb(238,154,13)" fg:x="2364" fg:w="8"/><text x="3.2392%" y="415.50"></text></g><g><title>QuartzCore`CA::Layer::retain_parent (10 samples, 0.01%)</title><rect x="3.0220%" y="373" width="0.0126%" height="15" fill="rgb(219,56,2)" fg:x="2390" fg:w="10"/><text x="3.2720%" y="383.50"></text></g><g><title>QuartzCore`CA::Layer::ancestor_context_id (24 samples, 0.03%)</title><rect x="3.0119%" y="389" width="0.0303%" height="15" fill="rgb(233,0,4)" fg:x="2382" fg:w="24"/><text x="3.2619%" y="399.50"></text></g><g><title>QuartzCore`CA::Layer::retain_context (33 samples, 0.04%)</title><rect x="3.0031%" y="405" width="0.0417%" height="15" fill="rgb(235,30,7)" fg:x="2375" fg:w="33"/><text x="3.2531%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (11 samples, 0.01%)</title><rect x="3.0448%" y="405" width="0.0139%" height="15" fill="rgb(250,79,13)" fg:x="2408" fg:w="11"/><text x="3.2948%" y="415.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (11 samples, 0.01%)</title><rect x="3.0448%" y="389" width="0.0139%" height="15" fill="rgb(211,146,34)" fg:x="2408" fg:w="11"/><text x="3.2948%" y="399.50"></text></g><g><title>QuartzCore`-[CALayer(CALayerPrivate) context] (66 samples, 0.08%)</title><rect x="2.9879%" y="421" width="0.0835%" height="15" fill="rgb(228,22,38)" fg:x="2363" fg:w="66"/><text x="3.2379%" y="431.50"></text></g><g><title>libobjc.A.dylib`object_getIndexedIvars (13 samples, 0.02%)</title><rect x="3.0992%" y="421" width="0.0164%" height="15" fill="rgb(235,168,5)" fg:x="2451" fg:w="13"/><text x="3.3492%" y="431.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _findWindowUsingContextID:] (165 samples, 0.21%)</title><rect x="2.9108%" y="437" width="0.2086%" height="15" fill="rgb(221,155,16)" fg:x="2302" fg:w="165"/><text x="3.1608%" y="447.50"></text></g><g><title>AppKit`-[NSCGSWindow(NSCGSWindowDisplayCoordinateSystem) convertCGScreenLocationToCGWindowRelativePoint:] (9 samples, 0.01%)</title><rect x="3.1194%" y="437" width="0.0114%" height="15" fill="rgb(215,215,53)" fg:x="2467" fg:w="9"/><text x="3.3694%" y="447.50"></text></g><g><title>SkyLight`GetWindowBounds (8 samples, 0.01%)</title><rect x="3.1207%" y="421" width="0.0101%" height="15" fill="rgb(223,4,10)" fg:x="2468" fg:w="8"/><text x="3.3707%" y="431.50"></text></g><g><title>AppKit`-[NSWindow _borderView] (12 samples, 0.02%)</title><rect x="3.1396%" y="437" width="0.0152%" height="15" fill="rgb(234,103,6)" fg:x="2483" fg:w="12"/><text x="3.3896%" y="447.50"></text></g><g><title>CoreGraphics`CGRectIsEmpty (9 samples, 0.01%)</title><rect x="3.1586%" y="437" width="0.0114%" height="15" fill="rgb(227,97,0)" fg:x="2498" fg:w="9"/><text x="3.4086%" y="447.50"></text></g><g><title>Foundation`-[NSConcretePointerArray countByEnumeratingWithState:objects:count:] (8 samples, 0.01%)</title><rect x="3.1700%" y="437" width="0.0101%" height="15" fill="rgb(234,150,53)" fg:x="2507" fg:w="8"/><text x="3.4200%" y="447.50"></text></g><g><title>QuartzCore`-[CAContext contextId] (11 samples, 0.01%)</title><rect x="3.1877%" y="437" width="0.0139%" height="15" fill="rgb(228,201,54)" fg:x="2521" fg:w="11"/><text x="3.4377%" y="447.50"></text></g><g><title>SkyLight`SLEventGetIntegerValueField (19 samples, 0.02%)</title><rect x="3.2269%" y="437" width="0.0240%" height="15" fill="rgb(222,22,37)" fg:x="2552" fg:w="19"/><text x="3.4769%" y="447.50"></text></g><g><title>CoreGraphics`CGRectIsEmpty (11 samples, 0.01%)</title><rect x="3.3040%" y="421" width="0.0139%" height="15" fill="rgb(237,53,32)" fg:x="2613" fg:w="11"/><text x="3.5540%" y="431.50"></text></g><g><title>SkyLight`CGSDisplaySystemStateGetBounds (17 samples, 0.02%)</title><rect x="3.3179%" y="421" width="0.0215%" height="15" fill="rgb(233,25,53)" fg:x="2624" fg:w="17"/><text x="3.5679%" y="431.50"></text></g><g><title>SkyLight`SLSGetDisplayBounds (268 samples, 0.34%)</title><rect x="3.2534%" y="437" width="0.3389%" height="15" fill="rgb(210,40,34)" fg:x="2573" fg:w="268"/><text x="3.5034%" y="447.50"></text></g><g><title>SkyLight`get_current_display_system_state() (198 samples, 0.25%)</title><rect x="3.3419%" y="421" width="0.2504%" height="15" fill="rgb(241,220,44)" fg:x="2643" fg:w="198"/><text x="3.5919%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (191 samples, 0.24%)</title><rect x="3.3508%" y="405" width="0.2415%" height="15" fill="rgb(235,28,35)" fg:x="2650" fg:w="191"/><text x="3.6008%" y="415.50"></text></g><g><title>SkyLight`CGSDisplaySystemState::mainDisplay (12 samples, 0.02%)</title><rect x="3.6049%" y="421" width="0.0152%" height="15" fill="rgb(210,56,17)" fg:x="2851" fg:w="12"/><text x="3.8549%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (236 samples, 0.30%)</title><rect x="3.6682%" y="405" width="0.2984%" height="15" fill="rgb(224,130,29)" fg:x="2901" fg:w="236"/><text x="3.9182%" y="415.50"></text></g><g><title>SkyLight`get_current_display_system_state() (268 samples, 0.34%)</title><rect x="3.6290%" y="421" width="0.3389%" height="15" fill="rgb(235,212,8)" fg:x="2870" fg:w="268"/><text x="3.8790%" y="431.50"></text></g><g><title>SkyLight`SLSMainDisplayID (299 samples, 0.38%)</title><rect x="3.5936%" y="437" width="0.3781%" height="15" fill="rgb(223,33,50)" fg:x="2842" fg:w="299"/><text x="3.8436%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (94 samples, 0.12%)</title><rect x="3.9767%" y="437" width="0.1189%" height="15" fill="rgb(219,149,13)" fg:x="3145" fg:w="94"/><text x="4.2267%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_os_nospin_lock_lock (9 samples, 0.01%)</title><rect x="4.0955%" y="437" width="0.0114%" height="15" fill="rgb(250,156,29)" fg:x="3239" fg:w="9"/><text x="4.3455%" y="447.50"></text></g><g><title>AppKit`-[NSEvent _initWithCGEvent:eventRef:] (1,012 samples, 1.28%)</title><rect x="2.8324%" y="453" width="1.2796%" height="15" fill="rgb(216,193,19)" fg:x="2240" fg:w="1012"/><text x="3.0824%" y="463.50"></text></g><g><title>CoreFoundation`CFRelease (11 samples, 0.01%)</title><rect x="4.1777%" y="373" width="0.0139%" height="15" fill="rgb(216,135,14)" fg:x="3304" fg:w="11"/><text x="4.4277%" y="383.50"></text></g><g><title>CoreFoundation`_CFRelease (24 samples, 0.03%)</title><rect x="4.1980%" y="373" width="0.0303%" height="15" fill="rgb(241,47,5)" fg:x="3320" fg:w="24"/><text x="4.4480%" y="383.50"></text></g><g><title>SkyLight`CGSEventReclaimObjects (69 samples, 0.09%)</title><rect x="4.1575%" y="389" width="0.0872%" height="15" fill="rgb(233,42,35)" fg:x="3288" fg:w="69"/><text x="4.4075%" y="399.50"></text></g><g><title>SkyLight`event_finalize(void const*) (72 samples, 0.09%)</title><rect x="4.1550%" y="405" width="0.0910%" height="15" fill="rgb(231,13,6)" fg:x="3286" fg:w="72"/><text x="4.4050%" y="415.50"></text></g><g><title>CoreFoundation`_CFRelease (88 samples, 0.11%)</title><rect x="4.1499%" y="421" width="0.1113%" height="15" fill="rgb(207,181,40)" fg:x="3282" fg:w="88"/><text x="4.3999%" y="431.50"></text></g><g><title>HIToolbox`ReleaseEvent (123 samples, 0.16%)</title><rect x="4.1234%" y="437" width="0.1555%" height="15" fill="rgb(254,173,49)" fg:x="3261" fg:w="123"/><text x="4.3734%" y="447.50"></text></g><g><title>AppKit`-[NSEvent .cxx_destruct] (8 samples, 0.01%)</title><rect x="4.2852%" y="389" width="0.0101%" height="15" fill="rgb(221,1,38)" fg:x="3389" fg:w="8"/><text x="4.5352%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (21 samples, 0.03%)</title><rect x="4.2814%" y="421" width="0.0266%" height="15" fill="rgb(206,124,46)" fg:x="3386" fg:w="21"/><text x="4.5314%" y="431.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (19 samples, 0.02%)</title><rect x="4.2839%" y="405" width="0.0240%" height="15" fill="rgb(249,21,11)" fg:x="3388" fg:w="19"/><text x="4.5339%" y="415.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (23 samples, 0.03%)</title><rect x="4.2802%" y="437" width="0.0291%" height="15" fill="rgb(222,201,40)" fg:x="3385" fg:w="23"/><text x="4.5302%" y="447.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (163 samples, 0.21%)</title><rect x="4.1120%" y="453" width="0.2061%" height="15" fill="rgb(235,61,29)" fg:x="3252" fg:w="163"/><text x="4.3620%" y="463.50"></text></g><g><title>Foundation`-[NSRecursiveLock lock] (13 samples, 0.02%)</title><rect x="4.3244%" y="437" width="0.0164%" height="15" fill="rgb(219,207,3)" fg:x="3420" fg:w="13"/><text x="4.5744%" y="447.50"></text></g><g><title>AppKit`-[NSEvent window] (43 samples, 0.05%)</title><rect x="4.3181%" y="453" width="0.0544%" height="15" fill="rgb(222,56,46)" fg:x="3415" fg:w="43"/><text x="4.5681%" y="463.50"></text></g><g><title>CoreFoundation`_CFSuddenTerminationDisable (13 samples, 0.02%)</title><rect x="4.4117%" y="421" width="0.0164%" height="15" fill="rgb(239,76,54)" fg:x="3489" fg:w="13"/><text x="4.6617%" y="431.50"></text></g><g><title>Foundation`-[NSProcessInfo disableSuddenTermination] (9 samples, 0.01%)</title><rect x="4.4331%" y="421" width="0.0114%" height="15" fill="rgb(231,124,27)" fg:x="3506" fg:w="9"/><text x="4.6831%" y="431.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock_with_options (8 samples, 0.01%)</title><rect x="4.4812%" y="389" width="0.0101%" height="15" fill="rgb(249,195,6)" fg:x="3544" fg:w="8"/><text x="4.7312%" y="399.50"></text></g><g><title>CoreFoundation`_CFSuddenTerminationDisable (44 samples, 0.06%)</title><rect x="4.4698%" y="405" width="0.0556%" height="15" fill="rgb(237,174,47)" fg:x="3535" fg:w="44"/><text x="4.7198%" y="415.50"></text></g><g><title>libxpc.dylib`_xpc_transaction_begin (25 samples, 0.03%)</title><rect x="4.4938%" y="389" width="0.0316%" height="15" fill="rgb(206,201,31)" fg:x="3554" fg:w="25"/><text x="4.7438%" y="399.50"></text></g><g><title>Foundation`+[NSProcessInfo processInfo] (10 samples, 0.01%)</title><rect x="4.5255%" y="405" width="0.0126%" height="15" fill="rgb(231,57,52)" fg:x="3579" fg:w="10"/><text x="4.7755%" y="415.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (10 samples, 0.01%)</title><rect x="4.5381%" y="405" width="0.0126%" height="15" fill="rgb(248,177,22)" fg:x="3589" fg:w="10"/><text x="4.7881%" y="415.50"></text></g><g><title>libxpc.dylib`_xpc_transaction_begin (10 samples, 0.01%)</title><rect x="4.5520%" y="405" width="0.0126%" height="15" fill="rgb(215,211,37)" fg:x="3600" fg:w="10"/><text x="4.8020%" y="415.50"></text></g><g><title>HIToolbox`_HIDisableSuddenTerminationForSendEvent (93 samples, 0.12%)</title><rect x="4.4483%" y="421" width="0.1176%" height="15" fill="rgb(241,128,51)" fg:x="3518" fg:w="93"/><text x="4.6983%" y="431.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (30 samples, 0.04%)</title><rect x="4.5659%" y="421" width="0.0379%" height="15" fill="rgb(227,165,31)" fg:x="3611" fg:w="30"/><text x="4.8159%" y="431.50"></text></g><g><title>AppKit`-[NSApplication _disableSuddenTermination] (155 samples, 0.20%)</title><rect x="4.4117%" y="437" width="0.1960%" height="15" fill="rgb(228,167,24)" fg:x="3489" fg:w="155"/><text x="4.6617%" y="447.50"></text></g><g><title>SkyLight`SLSGetCurrentCursorLocation (21 samples, 0.03%)</title><rect x="4.6367%" y="389" width="0.0266%" height="15" fill="rgb(228,143,12)" fg:x="3667" fg:w="21"/><text x="4.8867%" y="399.50"></text></g><g><title>HIToolbox`GetGlobalMouse (33 samples, 0.04%)</title><rect x="4.6317%" y="405" width="0.0417%" height="15" fill="rgb(249,149,8)" fg:x="3663" fg:w="33"/><text x="4.8817%" y="415.50"></text></g><g><title>SkyLight`SLSMainConnectionID (8 samples, 0.01%)</title><rect x="4.6633%" y="389" width="0.0101%" height="15" fill="rgb(243,35,44)" fg:x="3688" fg:w="8"/><text x="4.9133%" y="399.50"></text></g><g><title>SkyLight`SLSGetCurrentCursorLocation (9 samples, 0.01%)</title><rect x="4.6759%" y="405" width="0.0114%" height="15" fill="rgb(246,89,9)" fg:x="3698" fg:w="9"/><text x="4.9259%" y="415.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (63 samples, 0.08%)</title><rect x="4.6114%" y="437" width="0.0797%" height="15" fill="rgb(233,213,13)" fg:x="3647" fg:w="63"/><text x="4.8614%" y="447.50"></text></g><g><title>HIToolbox`ConvertEventRefToEventRecord (62 samples, 0.08%)</title><rect x="4.6127%" y="421" width="0.0784%" height="15" fill="rgb(233,141,41)" fg:x="3648" fg:w="62"/><text x="4.8627%" y="431.50"></text></g><g><title>Foundation`-[NSProcessInfo enableSuddenTermination] (9 samples, 0.01%)</title><rect x="4.6962%" y="437" width="0.0114%" height="15" fill="rgb(239,167,4)" fg:x="3714" fg:w="9"/><text x="4.9462%" y="447.50"></text></g><g><title>HIToolbox`_HIDisableSuddenTerminationForSendEvent (8 samples, 0.01%)</title><rect x="4.7139%" y="437" width="0.0101%" height="15" fill="rgb(209,217,16)" fg:x="3728" fg:w="8"/><text x="4.9639%" y="447.50"></text></g><g><title>HIToolbox`_HIEnableSuddenTerminationForSendEvent (15 samples, 0.02%)</title><rect x="4.7240%" y="437" width="0.0190%" height="15" fill="rgb(219,88,35)" fg:x="3736" fg:w="15"/><text x="4.9740%" y="447.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (275 samples, 0.35%)</title><rect x="4.4091%" y="453" width="0.3477%" height="15" fill="rgb(220,193,23)" fg:x="3487" fg:w="275"/><text x="4.6591%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (11 samples, 0.01%)</title><rect x="4.7429%" y="437" width="0.0139%" height="15" fill="rgb(230,90,52)" fg:x="3751" fg:w="11"/><text x="4.9929%" y="447.50"></text></g><g><title>AppKit`_DPSConvertMaskToEventTypeList (9 samples, 0.01%)</title><rect x="4.8150%" y="437" width="0.0114%" height="15" fill="rgb(252,106,19)" fg:x="3808" fg:w="9"/><text x="5.0650%" y="447.50"></text></g><g><title>CoreFoundation`-[NSDate timeIntervalSinceNow] (19 samples, 0.02%)</title><rect x="4.8277%" y="437" width="0.0240%" height="15" fill="rgb(206,74,20)" fg:x="3818" fg:w="19"/><text x="5.0777%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`__commpage_gettimeofday (10 samples, 0.01%)</title><rect x="4.8390%" y="421" width="0.0126%" height="15" fill="rgb(230,138,44)" fg:x="3827" fg:w="10"/><text x="5.0890%" y="431.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (9 samples, 0.01%)</title><rect x="4.8580%" y="277" width="0.0114%" height="15" fill="rgb(235,182,43)" fg:x="3842" fg:w="9"/><text x="5.1080%" y="287.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (9 samples, 0.01%)</title><rect x="4.8580%" y="261" width="0.0114%" height="15" fill="rgb(242,16,51)" fg:x="3842" fg:w="9"/><text x="5.1080%" y="271.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (9 samples, 0.01%)</title><rect x="4.8580%" y="245" width="0.0114%" height="15" fill="rgb(248,9,4)" fg:x="3842" fg:w="9"/><text x="5.1080%" y="255.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (9 samples, 0.01%)</title><rect x="4.8580%" y="229" width="0.0114%" height="15" fill="rgb(210,31,22)" fg:x="3842" fg:w="9"/><text x="5.1080%" y="239.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (9 samples, 0.01%)</title><rect x="4.8580%" y="213" width="0.0114%" height="15" fill="rgb(239,54,39)" fg:x="3842" fg:w="9"/><text x="5.1080%" y="223.50"></text></g><g><title>App`winit::platform_impl::platform::app_delegate::ApplicationDelegate::did_finish_launching (9 samples, 0.01%)</title><rect x="4.8580%" y="197" width="0.0114%" height="15" fill="rgb(230,99,41)" fg:x="3842" fg:w="9"/><text x="5.1080%" y="207.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::launched (9 samples, 0.01%)</title><rect x="4.8580%" y="181" width="0.0114%" height="15" fill="rgb(253,106,12)" fg:x="3842" fg:w="9"/><text x="5.1080%" y="191.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (10 samples, 0.01%)</title><rect x="4.8580%" y="309" width="0.0126%" height="15" fill="rgb(213,46,41)" fg:x="3842" fg:w="10"/><text x="5.1080%" y="319.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (10 samples, 0.01%)</title><rect x="4.8580%" y="293" width="0.0126%" height="15" fill="rgb(215,133,35)" fg:x="3842" fg:w="10"/><text x="5.1080%" y="303.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (12 samples, 0.02%)</title><rect x="4.8567%" y="437" width="0.0152%" height="15" fill="rgb(213,28,5)" fg:x="3841" fg:w="12"/><text x="5.1067%" y="447.50"></text></g><g><title>AE`aeProcessAppleEvent (12 samples, 0.02%)</title><rect x="4.8567%" y="421" width="0.0152%" height="15" fill="rgb(215,77,49)" fg:x="3841" fg:w="12"/><text x="5.1067%" y="431.50"></text></g><g><title>AE`0x00007ff80e171570 (12 samples, 0.02%)</title><rect x="4.8567%" y="405" width="0.0152%" height="15" fill="rgb(248,100,22)" fg:x="3841" fg:w="12"/><text x="5.1067%" y="415.50"></text></g><g><title>AE`0x00007ff80e1715ef (12 samples, 0.02%)</title><rect x="4.8567%" y="389" width="0.0152%" height="15" fill="rgb(208,67,9)" fg:x="3841" fg:w="12"/><text x="5.1067%" y="399.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (12 samples, 0.02%)</title><rect x="4.8567%" y="373" width="0.0152%" height="15" fill="rgb(219,133,21)" fg:x="3841" fg:w="12"/><text x="5.1067%" y="383.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (12 samples, 0.02%)</title><rect x="4.8567%" y="357" width="0.0152%" height="15" fill="rgb(246,46,29)" fg:x="3841" fg:w="12"/><text x="5.1067%" y="367.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (12 samples, 0.02%)</title><rect x="4.8567%" y="341" width="0.0152%" height="15" fill="rgb(246,185,52)" fg:x="3841" fg:w="12"/><text x="5.1067%" y="351.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (12 samples, 0.02%)</title><rect x="4.8567%" y="325" width="0.0152%" height="15" fill="rgb(252,136,11)" fg:x="3841" fg:w="12"/><text x="5.1067%" y="335.50"></text></g><g><title>HIToolbox`GetMainEventQueue (9 samples, 0.01%)</title><rect x="4.9111%" y="421" width="0.0114%" height="15" fill="rgb(219,138,53)" fg:x="3884" fg:w="9"/><text x="5.1611%" y="431.50"></text></g><g><title>AppKit`___DPSBlockUntilNextEventMatchingListInMode_block_invoke (11 samples, 0.01%)</title><rect x="4.9630%" y="405" width="0.0139%" height="15" fill="rgb(211,51,23)" fg:x="3925" fg:w="11"/><text x="5.2130%" y="415.50"></text></g><g><title>CarbonCore`DYLD-STUB$$pthread_self (11 samples, 0.01%)</title><rect x="4.9769%" y="405" width="0.0139%" height="15" fill="rgb(247,221,28)" fg:x="3936" fg:w="11"/><text x="5.2269%" y="415.50"></text></g><g><title>CarbonCore`MPCurrentTaskID (31 samples, 0.04%)</title><rect x="4.9908%" y="405" width="0.0392%" height="15" fill="rgb(251,222,45)" fg:x="3947" fg:w="31"/><text x="5.2408%" y="415.50"></text></g><g><title>CoreFoundation`CFStringCompareWithOptionsAndLocale (12 samples, 0.02%)</title><rect x="5.0590%" y="405" width="0.0152%" height="15" fill="rgb(217,162,53)" fg:x="4001" fg:w="12"/><text x="5.3090%" y="415.50"></text></g><g><title>CoreFoundation`_CFRunLoopSetCurrent (12 samples, 0.02%)</title><rect x="5.0805%" y="405" width="0.0152%" height="15" fill="rgb(229,93,14)" fg:x="4018" fg:w="12"/><text x="5.3305%" y="415.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawIntoWindow (9 samples, 0.01%)</title><rect x="5.1804%" y="53" width="0.0114%" height="15" fill="rgb(209,67,49)" fg:x="4097" fg:w="9"/><text x="5.4304%" y="63.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawOnce (9 samples, 0.01%)</title><rect x="5.1804%" y="37" width="0.0114%" height="15" fill="rgb(213,87,29)" fg:x="4097" fg:w="9"/><text x="5.4304%" y="47.50"></text></g><g><title>HIToolbox`HIView::Render (10 samples, 0.01%)</title><rect x="5.1804%" y="213" width="0.0126%" height="15" fill="rgb(205,151,52)" fg:x="4097" fg:w="10"/><text x="5.4304%" y="223.50"></text></g><g><title>HIToolbox`HIView::DrawComposited (10 samples, 0.01%)</title><rect x="5.1804%" y="197" width="0.0126%" height="15" fill="rgb(253,215,39)" fg:x="4097" fg:w="10"/><text x="5.4304%" y="207.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (10 samples, 0.01%)</title><rect x="5.1804%" y="181" width="0.0126%" height="15" fill="rgb(221,220,41)" fg:x="4097" fg:w="10"/><text x="5.4304%" y="191.50"></text></g><g><title>HIToolbox`HIView::RecursiveDrawComposited (10 samples, 0.01%)</title><rect x="5.1804%" y="165" width="0.0126%" height="15" fill="rgb(218,133,21)" fg:x="4097" fg:w="10"/><text x="5.4304%" y="175.50"></text></g><g><title>HIToolbox`HIView::SendDraw (10 samples, 0.01%)</title><rect x="5.1804%" y="149" width="0.0126%" height="15" fill="rgb(221,193,43)" fg:x="4097" fg:w="10"/><text x="5.4304%" y="159.50"></text></g><g><title>HIToolbox`SendEventToEventTargetWithOptions (10 samples, 0.01%)</title><rect x="5.1804%" y="133" width="0.0126%" height="15" fill="rgb(240,128,52)" fg:x="4097" fg:w="10"/><text x="5.4304%" y="143.50"></text></g><g><title>HIToolbox`SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) (10 samples, 0.01%)</title><rect x="5.1804%" y="117" width="0.0126%" height="15" fill="rgb(253,114,12)" fg:x="4097" fg:w="10"/><text x="5.4304%" y="127.50"></text></g><g><title>HIToolbox`DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) (10 samples, 0.01%)</title><rect x="5.1804%" y="101" width="0.0126%" height="15" fill="rgb(215,223,47)" fg:x="4097" fg:w="10"/><text x="5.4304%" y="111.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawingDelegateHandler (10 samples, 0.01%)</title><rect x="5.1804%" y="85" width="0.0126%" height="15" fill="rgb(248,225,23)" fg:x="4097" fg:w="10"/><text x="5.4304%" y="95.50"></text></g><g><title>HIToolbox`HIMenuBarView::DrawSelf (10 samples, 0.01%)</title><rect x="5.1804%" y="69" width="0.0126%" height="15" fill="rgb(250,108,0)" fg:x="4097" fg:w="10"/><text x="5.4304%" y="79.50"></text></g><g><title>HIToolbox`MBWindows::GetWindowOnDisplay (14 samples, 0.02%)</title><rect x="5.1766%" y="277" width="0.0177%" height="15" fill="rgb(228,208,7)" fg:x="4094" fg:w="14"/><text x="5.4266%" y="287.50"></text></g><g><title>HIToolbox`ShowHide (11 samples, 0.01%)</title><rect x="5.1804%" y="261" width="0.0139%" height="15" fill="rgb(244,45,10)" fg:x="4097" fg:w="11"/><text x="5.4304%" y="271.50"></text></g><g><title>HIToolbox`_ShowHideWindows (11 samples, 0.01%)</title><rect x="5.1804%" y="245" width="0.0139%" height="15" fill="rgb(207,125,25)" fg:x="4097" fg:w="11"/><text x="5.4304%" y="255.50"></text></g><g><title>HIToolbox`WindowData::PrepareForVisibility (11 samples, 0.01%)</title><rect x="5.1804%" y="229" width="0.0139%" height="15" fill="rgb(210,195,18)" fg:x="4097" fg:w="11"/><text x="5.4304%" y="239.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (15 samples, 0.02%)</title><rect x="5.1766%" y="309" width="0.0190%" height="15" fill="rgb(249,80,12)" fg:x="4094" fg:w="15"/><text x="5.4266%" y="319.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (15 samples, 0.02%)</title><rect x="5.1766%" y="293" width="0.0190%" height="15" fill="rgb(221,65,9)" fg:x="4094" fg:w="15"/><text x="5.4266%" y="303.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (16 samples, 0.02%)</title><rect x="5.1766%" y="357" width="0.0202%" height="15" fill="rgb(235,49,36)" fg:x="4094" fg:w="16"/><text x="5.4266%" y="367.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (16 samples, 0.02%)</title><rect x="5.1766%" y="341" width="0.0202%" height="15" fill="rgb(225,32,20)" fg:x="4094" fg:w="16"/><text x="5.4266%" y="351.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (16 samples, 0.02%)</title><rect x="5.1766%" y="325" width="0.0202%" height="15" fill="rgb(215,141,46)" fg:x="4094" fg:w="16"/><text x="5.4266%" y="335.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (27 samples, 0.03%)</title><rect x="5.1665%" y="373" width="0.0341%" height="15" fill="rgb(250,160,47)" fg:x="4086" fg:w="27"/><text x="5.4165%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (8 samples, 0.01%)</title><rect x="5.2095%" y="373" width="0.0101%" height="15" fill="rgb(216,222,40)" fg:x="4120" fg:w="8"/><text x="5.4595%" y="383.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (65 samples, 0.08%)</title><rect x="5.1463%" y="389" width="0.0822%" height="15" fill="rgb(234,217,39)" fg:x="4070" fg:w="65"/><text x="5.3963%" y="399.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (110 samples, 0.14%)</title><rect x="5.0957%" y="405" width="0.1391%" height="15" fill="rgb(207,178,40)" fg:x="4030" fg:w="110"/><text x="5.3457%" y="415.50"></text></g><g><title>CarbonCore`_TSThreadManagerInitialized (12 samples, 0.02%)</title><rect x="5.2677%" y="373" width="0.0152%" height="15" fill="rgb(221,136,13)" fg:x="4166" fg:w="12"/><text x="5.5177%" y="383.50"></text></g><g><title>CarbonCore`MPTaskIsPreemptive (21 samples, 0.03%)</title><rect x="5.2614%" y="389" width="0.0266%" height="15" fill="rgb(249,199,10)" fg:x="4161" fg:w="21"/><text x="5.5114%" y="399.50"></text></g><g><title>CarbonCore`_TSThreadManagerInitialized (14 samples, 0.02%)</title><rect x="5.2904%" y="389" width="0.0177%" height="15" fill="rgb(249,222,13)" fg:x="4184" fg:w="14"/><text x="5.5404%" y="399.50"></text></g><g><title>HIToolbox`GetCurrentEventQueue (43 samples, 0.05%)</title><rect x="5.2601%" y="405" width="0.0544%" height="15" fill="rgb(244,185,38)" fg:x="4160" fg:w="43"/><text x="5.5101%" y="415.50"></text></g><g><title>HIToolbox`GetCurrentEventTime (10 samples, 0.01%)</title><rect x="5.3145%" y="405" width="0.0126%" height="15" fill="rgb(236,202,9)" fg:x="4203" fg:w="10"/><text x="5.5645%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (12 samples, 0.02%)</title><rect x="5.3347%" y="389" width="0.0152%" height="15" fill="rgb(250,229,37)" fg:x="4219" fg:w="12"/><text x="5.5847%" y="399.50"></text></g><g><title>HIToolbox`GetMainEventQueue (20 samples, 0.03%)</title><rect x="5.3271%" y="405" width="0.0253%" height="15" fill="rgb(206,174,23)" fg:x="4213" fg:w="20"/><text x="5.5771%" y="415.50"></text></g><g><title>CoreFoundation`CFRunLoopGetCurrent (19 samples, 0.02%)</title><rect x="5.4207%" y="389" width="0.0240%" height="15" fill="rgb(211,33,43)" fg:x="4287" fg:w="19"/><text x="5.6707%" y="399.50"></text></g><g><title>CoreFoundation`_CFGetTSDCreateIfNeeded (16 samples, 0.02%)</title><rect x="5.4245%" y="373" width="0.0202%" height="15" fill="rgb(245,58,50)" fg:x="4290" fg:w="16"/><text x="5.6745%" y="383.50"></text></g><g><title>CoreFoundation`CFAllocatorDeallocate (8 samples, 0.01%)</title><rect x="5.5218%" y="373" width="0.0101%" height="15" fill="rgb(244,68,36)" fg:x="4367" fg:w="8"/><text x="5.7718%" y="383.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (14 samples, 0.02%)</title><rect x="5.5320%" y="373" width="0.0177%" height="15" fill="rgb(232,229,15)" fg:x="4375" fg:w="14"/><text x="5.7820%" y="383.50"></text></g><g><title>CoreFoundation`CFEqual (11 samples, 0.01%)</title><rect x="5.5509%" y="373" width="0.0139%" height="15" fill="rgb(254,30,23)" fg:x="4390" fg:w="11"/><text x="5.8009%" y="383.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (23 samples, 0.03%)</title><rect x="5.6306%" y="341" width="0.0291%" height="15" fill="rgb(235,160,14)" fg:x="4453" fg:w="23"/><text x="5.8806%" y="351.50"></text></g><g><title>CoreFoundation`CFSetGetValue (51 samples, 0.06%)</title><rect x="5.6243%" y="357" width="0.0645%" height="15" fill="rgb(212,155,44)" fg:x="4448" fg:w="51"/><text x="5.8743%" y="367.50"></text></g><g><title>CoreFoundation`__CFStringHash (18 samples, 0.02%)</title><rect x="5.6660%" y="341" width="0.0228%" height="15" fill="rgb(226,2,50)" fg:x="4481" fg:w="18"/><text x="5.9160%" y="351.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (13 samples, 0.02%)</title><rect x="5.6951%" y="357" width="0.0164%" height="15" fill="rgb(234,177,6)" fg:x="4504" fg:w="13"/><text x="5.9451%" y="367.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeID (13 samples, 0.02%)</title><rect x="5.6951%" y="341" width="0.0164%" height="15" fill="rgb(217,24,9)" fg:x="4504" fg:w="13"/><text x="5.9451%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (93 samples, 0.12%)</title><rect x="5.6091%" y="373" width="0.1176%" height="15" fill="rgb(220,13,46)" fg:x="4436" fg:w="93"/><text x="5.8591%" y="383.50"></text></g><g><title>libobjc.A.dylib`object_setClass (9 samples, 0.01%)</title><rect x="5.7153%" y="357" width="0.0114%" height="15" fill="rgb(239,221,27)" fg:x="4520" fg:w="9"/><text x="5.9653%" y="367.50"></text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (12 samples, 0.02%)</title><rect x="5.8215%" y="357" width="0.0152%" height="15" fill="rgb(222,198,25)" fg:x="4604" fg:w="12"/><text x="6.0715%" y="367.50"></text></g><g><title>CoreFoundation`CFRelease (8 samples, 0.01%)</title><rect x="5.8367%" y="357" width="0.0101%" height="15" fill="rgb(211,99,13)" fg:x="4616" fg:w="8"/><text x="6.0867%" y="367.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPush (9 samples, 0.01%)</title><rect x="5.8481%" y="357" width="0.0114%" height="15" fill="rgb(232,111,31)" fg:x="4625" fg:w="9"/><text x="6.0981%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPush (9 samples, 0.01%)</title><rect x="5.8481%" y="341" width="0.0114%" height="15" fill="rgb(245,82,37)" fg:x="4625" fg:w="9"/><text x="6.0981%" y="351.50"></text></g><g><title>App`std::panicking::try (8 samples, 0.01%)</title><rect x="5.8683%" y="341" width="0.0101%" height="15" fill="rgb(227,149,46)" fg:x="4641" fg:w="8"/><text x="6.1183%" y="351.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler (11 samples, 0.01%)</title><rect x="5.8784%" y="341" width="0.0139%" height="15" fill="rgb(218,36,50)" fg:x="4649" fg:w="11"/><text x="6.1284%" y="351.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (8 samples, 0.01%)</title><rect x="5.9252%" y="325" width="0.0101%" height="15" fill="rgb(226,80,48)" fg:x="4686" fg:w="8"/><text x="6.1752%" y="335.50"></text></g><g><title>QuartzCore`CA::Context::retain_all_contexts (11 samples, 0.01%)</title><rect x="6.1439%" y="293" width="0.0139%" height="15" fill="rgb(238,224,15)" fg:x="4859" fg:w="11"/><text x="6.3939%" y="303.50"></text></g><g><title>QuartzCore`CA::Layer::thread_flags_ (13 samples, 0.02%)</title><rect x="6.1895%" y="277" width="0.0164%" height="15" fill="rgb(241,136,10)" fg:x="4895" fg:w="13"/><text x="6.4395%" y="287.50"></text></g><g><title>QuartzCore`CA::Layer::layout_if_needed (24 samples, 0.03%)</title><rect x="6.1781%" y="293" width="0.0303%" height="15" fill="rgb(208,32,45)" fg:x="4886" fg:w="24"/><text x="6.4281%" y="303.50"></text></g><g><title>QuartzCore`CA::Layer::prepare_commit (10 samples, 0.01%)</title><rect x="6.2084%" y="293" width="0.0126%" height="15" fill="rgb(207,135,9)" fg:x="4910" fg:w="10"/><text x="6.4584%" y="303.50"></text></g><g><title>QuartzCore`CA::Layer::set_next_animation_time (13 samples, 0.02%)</title><rect x="6.2211%" y="293" width="0.0164%" height="15" fill="rgb(206,86,44)" fg:x="4920" fg:w="13"/><text x="6.4711%" y="303.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::Encoder (8 samples, 0.01%)</title><rect x="6.2502%" y="293" width="0.0101%" height="15" fill="rgb(245,177,15)" fg:x="4943" fg:w="8"/><text x="6.5002%" y="303.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (573 samples, 0.72%)</title><rect x="6.2843%" y="277" width="0.7245%" height="15" fill="rgb(206,64,50)" fg:x="4970" fg:w="573"/><text x="6.5343%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (559 samples, 0.71%)</title><rect x="6.3020%" y="261" width="0.7068%" height="15" fill="rgb(234,36,40)" fg:x="4984" fg:w="559"/><text x="6.5520%" y="271.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (612 samples, 0.77%)</title><rect x="6.2603%" y="293" width="0.7738%" height="15" fill="rgb(213,64,8)" fg:x="4951" fg:w="612"/><text x="6.5103%" y="303.50"></text></g><g><title>QuartzCore`x_hash_table_foreach (17 samples, 0.02%)</title><rect x="7.0455%" y="277" width="0.0215%" height="15" fill="rgb(210,75,36)" fg:x="5572" fg:w="17"/><text x="7.2955%" y="287.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::set_object_cache (27 samples, 0.03%)</title><rect x="7.0341%" y="293" width="0.0341%" height="15" fill="rgb(229,88,21)" fg:x="5563" fg:w="27"/><text x="7.2841%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (26 samples, 0.03%)</title><rect x="7.1492%" y="213" width="0.0329%" height="15" fill="rgb(252,204,47)" fg:x="5654" fg:w="26"/><text x="7.3992%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (37 samples, 0.05%)</title><rect x="7.1403%" y="229" width="0.0468%" height="15" fill="rgb(208,77,27)" fg:x="5647" fg:w="37"/><text x="7.3903%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (41 samples, 0.05%)</title><rect x="7.1378%" y="261" width="0.0518%" height="15" fill="rgb(221,76,26)" fg:x="5645" fg:w="41"/><text x="7.3878%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (39 samples, 0.05%)</title><rect x="7.1403%" y="245" width="0.0493%" height="15" fill="rgb(225,139,18)" fg:x="5647" fg:w="39"/><text x="7.3903%" y="255.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_alloc_from_heap (52 samples, 0.07%)</title><rect x="7.1327%" y="277" width="0.0658%" height="15" fill="rgb(230,137,11)" fg:x="5641" fg:w="52"/><text x="7.3827%" y="287.50"></text></g><g><title>libdispatch.dylib`_dispatch_async_f_slow (76 samples, 0.10%)</title><rect x="7.1150%" y="293" width="0.0961%" height="15" fill="rgb(212,28,1)" fg:x="5627" fg:w="76"/><text x="7.3650%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`calloc (9 samples, 0.01%)</title><rect x="7.1998%" y="277" width="0.0114%" height="15" fill="rgb(248,164,17)" fg:x="5694" fg:w="9"/><text x="7.4498%" y="287.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_poll (16 samples, 0.02%)</title><rect x="7.2250%" y="277" width="0.0202%" height="15" fill="rgb(222,171,42)" fg:x="5714" fg:w="16"/><text x="7.4750%" y="287.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (657 samples, 0.83%)</title><rect x="7.2162%" y="293" width="0.8307%" height="15" fill="rgb(243,84,45)" fg:x="5707" fg:w="657"/><text x="7.4662%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (634 samples, 0.80%)</title><rect x="7.2453%" y="277" width="0.8017%" height="15" fill="rgb(252,49,23)" fg:x="5730" fg:w="634"/><text x="7.4953%" y="287.50"></text></g><g><title>libdispatch.dylib`_os_object_release_internal (9 samples, 0.01%)</title><rect x="8.0495%" y="293" width="0.0114%" height="15" fill="rgb(215,19,7)" fg:x="6366" fg:w="9"/><text x="8.2995%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (113 samples, 0.14%)</title><rect x="8.0735%" y="293" width="0.1429%" height="15" fill="rgb(238,81,41)" fg:x="6385" fg:w="113"/><text x="8.3235%" y="303.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (20 samples, 0.03%)</title><rect x="8.2202%" y="293" width="0.0253%" height="15" fill="rgb(210,199,37)" fg:x="6501" fg:w="20"/><text x="8.4702%" y="303.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (1,830 samples, 2.31%)</title><rect x="5.9606%" y="309" width="2.3139%" height="15" fill="rgb(244,192,49)" fg:x="4714" fg:w="1830"/><text x="6.2106%" y="319.50">Q..</text></g><g><title>QuartzCore`CA::Context::unref (9 samples, 0.01%)</title><rect x="8.2809%" y="309" width="0.0114%" height="15" fill="rgb(226,211,11)" fg:x="6549" fg:w="9"/><text x="8.5309%" y="319.50"></text></g><g><title>QuartzCore`CA::Layer::free_transaction (21 samples, 0.03%)</title><rect x="8.3175%" y="309" width="0.0266%" height="15" fill="rgb(236,162,54)" fg:x="6578" fg:w="21"/><text x="8.5675%" y="319.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::Encoder (8 samples, 0.01%)</title><rect x="8.3529%" y="309" width="0.0101%" height="15" fill="rgb(220,229,9)" fg:x="6606" fg:w="8"/><text x="8.6029%" y="319.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::~Encoder (8 samples, 0.01%)</title><rect x="8.3744%" y="309" width="0.0101%" height="15" fill="rgb(250,87,22)" fg:x="6623" fg:w="8"/><text x="8.6244%" y="319.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (9 samples, 0.01%)</title><rect x="8.3858%" y="309" width="0.0114%" height="15" fill="rgb(239,43,17)" fg:x="6632" fg:w="9"/><text x="8.6358%" y="319.50"></text></g><g><title>QuartzCore`CAHostTimeWithTime (13 samples, 0.02%)</title><rect x="8.4073%" y="309" width="0.0164%" height="15" fill="rgb(231,177,25)" fg:x="6649" fg:w="13"/><text x="8.6573%" y="319.50"></text></g><g><title>QuartzCore`CATimeWithHostTime (9 samples, 0.01%)</title><rect x="8.4326%" y="309" width="0.0114%" height="15" fill="rgb(219,179,1)" fg:x="6669" fg:w="9"/><text x="8.6826%" y="319.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (8 samples, 0.01%)</title><rect x="8.4958%" y="309" width="0.0101%" height="15" fill="rgb(238,219,53)" fg:x="6719" fg:w="8"/><text x="8.7458%" y="319.50"></text></g><g><title>libdispatch.dylib`dispatch_async_f (9 samples, 0.01%)</title><rect x="8.5059%" y="309" width="0.0114%" height="15" fill="rgb(232,167,36)" fg:x="6727" fg:w="9"/><text x="8.7559%" y="319.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (12 samples, 0.02%)</title><rect x="8.5540%" y="309" width="0.0152%" height="15" fill="rgb(244,19,51)" fg:x="6765" fg:w="12"/><text x="8.8040%" y="319.50"></text></g><g><title>libdispatch.dylib`voucher_get_activity_id (10 samples, 0.01%)</title><rect x="8.5704%" y="293" width="0.0126%" height="15" fill="rgb(224,6,22)" fg:x="6778" fg:w="10"/><text x="8.8204%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`__error (9 samples, 0.01%)</title><rect x="8.5831%" y="293" width="0.0114%" height="15" fill="rgb(224,145,5)" fg:x="6788" fg:w="9"/><text x="8.8331%" y="303.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (9 samples, 0.01%)</title><rect x="8.6109%" y="277" width="0.0114%" height="15" fill="rgb(234,130,49)" fg:x="6810" fg:w="9"/><text x="8.8609%" y="287.50"></text></g><g><title>libsystem_trace.dylib`DYLD-STUB$$memcpy (11 samples, 0.01%)</title><rect x="8.6438%" y="277" width="0.0139%" height="15" fill="rgb(254,6,2)" fg:x="6836" fg:w="11"/><text x="8.8938%" y="287.50"></text></g><g><title>libdispatch.dylib`firehose_buffer_ring_enqueue (11 samples, 0.01%)</title><rect x="8.7765%" y="245" width="0.0139%" height="15" fill="rgb(208,96,46)" fg:x="6941" fg:w="11"/><text x="9.0265%" y="255.50"></text></g><g><title>libdispatch.dylib`firehose_send_push_async (9 samples, 0.01%)</title><rect x="8.7791%" y="229" width="0.0114%" height="15" fill="rgb(239,3,39)" fg:x="6943" fg:w="9"/><text x="9.0291%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (9 samples, 0.01%)</title><rect x="8.7791%" y="213" width="0.0114%" height="15" fill="rgb(233,210,1)" fg:x="6943" fg:w="9"/><text x="9.0291%" y="223.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (50 samples, 0.06%)</title><rect x="8.7348%" y="261" width="0.0632%" height="15" fill="rgb(244,137,37)" fg:x="6908" fg:w="50"/><text x="8.9848%" y="271.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (158 samples, 0.20%)</title><rect x="8.6071%" y="293" width="0.1998%" height="15" fill="rgb(240,136,2)" fg:x="6807" fg:w="158"/><text x="8.8571%" y="303.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (113 samples, 0.14%)</title><rect x="8.6640%" y="277" width="0.1429%" height="15" fill="rgb(239,18,37)" fg:x="6852" fg:w="113"/><text x="8.9140%" y="287.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_unreliably_with_name_impl (191 samples, 0.24%)</title><rect x="8.5692%" y="309" width="0.2415%" height="15" fill="rgb(218,185,22)" fg:x="6777" fg:w="191"/><text x="8.8192%" y="319.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (2,284 samples, 2.89%)</title><rect x="5.9366%" y="325" width="2.8880%" height="15" fill="rgb(225,218,4)" fg:x="4695" fg:w="2284"/><text x="6.1866%" y="335.50">Qu..</text></g><g><title>libsystem_trace.dylib`os_signpost_enabled (11 samples, 0.01%)</title><rect x="8.8107%" y="309" width="0.0139%" height="15" fill="rgb(230,182,32)" fg:x="6968" fg:w="11"/><text x="9.0607%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (9 samples, 0.01%)</title><rect x="8.8284%" y="325" width="0.0114%" height="15" fill="rgb(242,56,43)" fg:x="6982" fg:w="9"/><text x="9.0784%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`_mach_continuous_time (11 samples, 0.01%)</title><rect x="8.8397%" y="325" width="0.0139%" height="15" fill="rgb(233,99,24)" fg:x="6991" fg:w="11"/><text x="9.0897%" y="335.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (2,353 samples, 2.98%)</title><rect x="5.8961%" y="341" width="2.9752%" height="15" fill="rgb(234,209,42)" fg:x="4663" fg:w="2353"/><text x="6.1461%" y="351.50">Qua..</text></g><g><title>QuartzCore`CA::Transaction::observer_callback (16 samples, 0.02%)</title><rect x="8.8714%" y="341" width="0.0202%" height="15" fill="rgb(227,7,12)" fg:x="7016" fg:w="16"/><text x="9.1214%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPush (8 samples, 0.01%)</title><rect x="8.9068%" y="341" width="0.0101%" height="15" fill="rgb(245,203,43)" fg:x="7044" fg:w="8"/><text x="9.1568%" y="351.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (2,421 samples, 3.06%)</title><rect x="5.8683%" y="357" width="3.0612%" height="15" fill="rgb(238,205,33)" fg:x="4641" fg:w="2421"/><text x="6.1183%" y="367.50">Cor..</text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (10 samples, 0.01%)</title><rect x="8.9169%" y="341" width="0.0126%" height="15" fill="rgb(231,56,7)" fg:x="7052" fg:w="10"/><text x="9.1669%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopPerCalloutARPEnd (10 samples, 0.01%)</title><rect x="8.9295%" y="357" width="0.0126%" height="15" fill="rgb(244,186,29)" fg:x="7062" fg:w="10"/><text x="9.1795%" y="367.50"></text></g><g><title>QuartzCore`CA::Transaction::observer_callback (10 samples, 0.01%)</title><rect x="8.9498%" y="357" width="0.0126%" height="15" fill="rgb(234,111,31)" fg:x="7078" fg:w="10"/><text x="9.1998%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (18 samples, 0.02%)</title><rect x="8.9700%" y="357" width="0.0228%" height="15" fill="rgb(241,149,10)" fg:x="7094" fg:w="18"/><text x="9.2200%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (13 samples, 0.02%)</title><rect x="8.9927%" y="357" width="0.0164%" height="15" fill="rgb(249,206,44)" fg:x="7112" fg:w="13"/><text x="9.2427%" y="367.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.01%)</title><rect x="9.0155%" y="357" width="0.0114%" height="15" fill="rgb(251,153,30)" fg:x="7130" fg:w="9"/><text x="9.2655%" y="367.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (2,609 samples, 3.30%)</title><rect x="5.7292%" y="373" width="3.2989%" height="15" fill="rgb(239,152,38)" fg:x="4531" fg:w="2609"/><text x="5.9792%" y="383.50">Cor..</text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (8 samples, 0.01%)</title><rect x="9.0332%" y="373" width="0.0101%" height="15" fill="rgb(249,139,47)" fg:x="7144" fg:w="8"/><text x="9.2832%" y="383.50"></text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (14 samples, 0.02%)</title><rect x="9.0585%" y="341" width="0.0177%" height="15" fill="rgb(244,64,35)" fg:x="7164" fg:w="14"/><text x="9.3085%" y="351.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (20 samples, 0.03%)</title><rect x="9.0560%" y="357" width="0.0253%" height="15" fill="rgb(216,46,15)" fg:x="7162" fg:w="20"/><text x="9.3060%" y="367.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeIsEmpty (33 samples, 0.04%)</title><rect x="9.0433%" y="373" width="0.0417%" height="15" fill="rgb(250,74,19)" fg:x="7152" fg:w="33"/><text x="9.2933%" y="383.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetCurrent (36 samples, 0.05%)</title><rect x="9.2014%" y="357" width="0.0455%" height="15" fill="rgb(249,42,33)" fg:x="7277" fg:w="36"/><text x="9.4514%" y="367.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (18 samples, 0.02%)</title><rect x="9.2494%" y="357" width="0.0228%" height="15" fill="rgb(242,149,17)" fg:x="7315" fg:w="18"/><text x="9.4994%" y="367.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (9 samples, 0.01%)</title><rect x="9.2874%" y="357" width="0.0114%" height="15" fill="rgb(244,29,21)" fg:x="7345" fg:w="9"/><text x="9.5374%" y="367.50"></text></g><g><title>CoreFoundation`CFSetGetCount (9 samples, 0.01%)</title><rect x="9.2987%" y="357" width="0.0114%" height="15" fill="rgb(220,130,37)" fg:x="7354" fg:w="9"/><text x="9.5487%" y="367.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (9 samples, 0.01%)</title><rect x="9.3481%" y="341" width="0.0114%" height="15" fill="rgb(211,67,2)" fg:x="7393" fg:w="9"/><text x="9.5981%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (20 samples, 0.03%)</title><rect x="9.3379%" y="357" width="0.0253%" height="15" fill="rgb(235,68,52)" fg:x="7385" fg:w="20"/><text x="9.5879%" y="367.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (11 samples, 0.01%)</title><rect x="9.4075%" y="341" width="0.0139%" height="15" fill="rgb(246,142,3)" fg:x="7440" fg:w="11"/><text x="9.6575%" y="351.50"></text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (8 samples, 0.01%)</title><rect x="9.4328%" y="341" width="0.0101%" height="15" fill="rgb(241,25,7)" fg:x="7460" fg:w="8"/><text x="9.6828%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (11 samples, 0.01%)</title><rect x="9.4669%" y="309" width="0.0139%" height="15" fill="rgb(242,119,39)" fg:x="7487" fg:w="11"/><text x="9.7169%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (14 samples, 0.02%)</title><rect x="9.4871%" y="293" width="0.0177%" height="15" fill="rgb(241,98,45)" fg:x="7503" fg:w="14"/><text x="9.7371%" y="303.50"></text></g><g><title>libobjc.A.dylib`weak_unregister_no_lock (12 samples, 0.02%)</title><rect x="9.4897%" y="277" width="0.0152%" height="15" fill="rgb(254,28,30)" fg:x="7505" fg:w="12"/><text x="9.7397%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (15 samples, 0.02%)</title><rect x="9.5048%" y="293" width="0.0190%" height="15" fill="rgb(241,142,54)" fg:x="7517" fg:w="15"/><text x="9.7548%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (8 samples, 0.01%)</title><rect x="9.5137%" y="277" width="0.0101%" height="15" fill="rgb(222,85,15)" fg:x="7524" fg:w="8"/><text x="9.7637%" y="287.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (36 samples, 0.05%)</title><rect x="9.4808%" y="309" width="0.0455%" height="15" fill="rgb(210,85,47)" fg:x="7498" fg:w="36"/><text x="9.7308%" y="319.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (65 samples, 0.08%)</title><rect x="9.4505%" y="325" width="0.0822%" height="15" fill="rgb(224,206,25)" fg:x="7474" fg:w="65"/><text x="9.7005%" y="335.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverInvalidate (76 samples, 0.10%)</title><rect x="9.4467%" y="341" width="0.0961%" height="15" fill="rgb(243,201,19)" fg:x="7471" fg:w="76"/><text x="9.6967%" y="351.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverInvalidate (8 samples, 0.01%)</title><rect x="9.5719%" y="309" width="0.0101%" height="15" fill="rgb(236,59,4)" fg:x="7570" fg:w="8"/><text x="9.8219%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopObserverDeallocate (10 samples, 0.01%)</title><rect x="9.5719%" y="325" width="0.0126%" height="15" fill="rgb(254,179,45)" fg:x="7570" fg:w="10"/><text x="9.8219%" y="335.50"></text></g><g><title>CoreFoundation`_CFRelease (39 samples, 0.05%)</title><rect x="9.5542%" y="341" width="0.0493%" height="15" fill="rgb(226,14,10)" fg:x="7556" fg:w="39"/><text x="9.8042%" y="351.50"></text></g><g><title>AppKit`-[NSView inputContext] (9 samples, 0.01%)</title><rect x="9.6642%" y="261" width="0.0114%" height="15" fill="rgb(244,27,41)" fg:x="7643" fg:w="9"/><text x="9.9142%" y="271.50"></text></g><g><title>AppKit`-[NSWindow _isKeyWindowIgnoringFocus] (31 samples, 0.04%)</title><rect x="9.6920%" y="245" width="0.0392%" height="15" fill="rgb(235,35,32)" fg:x="7665" fg:w="31"/><text x="9.9420%" y="255.50"></text></g><g><title>AppKit`-[NSWindow _allowsActiveInputContext] (49 samples, 0.06%)</title><rect x="9.6755%" y="261" width="0.0620%" height="15" fill="rgb(218,68,31)" fg:x="7652" fg:w="49"/><text x="9.9255%" y="271.50"></text></g><g><title>AppKit`-[NSWindow _isKeyWindowIgnoringFocus] (11 samples, 0.01%)</title><rect x="9.7375%" y="261" width="0.0139%" height="15" fill="rgb(207,120,37)" fg:x="7701" fg:w="11"/><text x="9.9875%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (23 samples, 0.03%)</title><rect x="9.7628%" y="229" width="0.0291%" height="15" fill="rgb(227,98,0)" fg:x="7721" fg:w="23"/><text x="10.0128%" y="239.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (25 samples, 0.03%)</title><rect x="9.7615%" y="245" width="0.0316%" height="15" fill="rgb(207,7,3)" fg:x="7720" fg:w="25"/><text x="10.0115%" y="255.50"></text></g><g><title>AppKit`-[NSWindow firstResponder] (34 samples, 0.04%)</title><rect x="9.7514%" y="261" width="0.0430%" height="15" fill="rgb(206,98,19)" fg:x="7712" fg:w="34"/><text x="10.0014%" y="271.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt;, void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt;::LookupBucketFor&lt;void const*&gt;(void const* const&amp;, objc::detail::DenseMapPair (9 samples, 0.01%)</title><rect x="9.7995%" y="261" width="0.0114%" height="15" fill="rgb(217,5,26)" fg:x="7750" fg:w="9"/><text x="10.0495%" y="271.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt; &gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (9 samples, 0.01%)</title><rect x="9.8222%" y="245" width="0.0114%" height="15" fill="rgb(235,190,38)" fg:x="7768" fg:w="9"/><text x="10.0722%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_getAssociatedObject (26 samples, 0.03%)</title><rect x="9.8121%" y="261" width="0.0329%" height="15" fill="rgb(247,86,24)" fg:x="7760" fg:w="26"/><text x="10.0621%" y="271.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt;, void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt;::LookupBucketFor&lt;void const*&gt;(void const* const&amp;, objc::detail::DenseMapPair (9 samples, 0.01%)</title><rect x="9.8336%" y="245" width="0.0114%" height="15" fill="rgb(205,101,16)" fg:x="7777" fg:w="9"/><text x="10.0836%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (13 samples, 0.02%)</title><rect x="9.8500%" y="245" width="0.0164%" height="15" fill="rgb(246,168,33)" fg:x="7790" fg:w="13"/><text x="10.1000%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (18 samples, 0.02%)</title><rect x="9.8450%" y="261" width="0.0228%" height="15" fill="rgb(231,114,1)" fg:x="7786" fg:w="18"/><text x="10.0950%" y="271.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (194 samples, 0.25%)</title><rect x="9.6477%" y="277" width="0.2453%" height="15" fill="rgb(207,184,53)" fg:x="7630" fg:w="194"/><text x="9.8977%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_retain (11 samples, 0.01%)</title><rect x="9.8791%" y="261" width="0.0139%" height="15" fill="rgb(224,95,51)" fg:x="7813" fg:w="11"/><text x="10.1291%" y="271.50"></text></g><g><title>AppKit`-[NSApplication keyWindow] (9 samples, 0.01%)</title><rect x="9.8994%" y="277" width="0.0114%" height="15" fill="rgb(212,188,45)" fg:x="7829" fg:w="9"/><text x="10.1494%" y="287.50"></text></g><g><title>CoreFoundation`+[NSArray allocWithZone:] (8 samples, 0.01%)</title><rect x="9.9525%" y="261" width="0.0101%" height="15" fill="rgb(223,154,38)" fg:x="7871" fg:w="8"/><text x="10.2025%" y="271.50"></text></g><g><title>CoreFoundation`CFCachedStringEqual (24 samples, 0.03%)</title><rect x="10.0106%" y="181" width="0.0303%" height="15" fill="rgb(251,22,52)" fg:x="7917" fg:w="24"/><text x="10.2606%" y="191.50"></text></g><g><title>CoreFoundation`CFEqual (23 samples, 0.03%)</title><rect x="10.0119%" y="165" width="0.0291%" height="15" fill="rgb(229,209,22)" fg:x="7918" fg:w="23"/><text x="10.2619%" y="175.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (44 samples, 0.06%)</title><rect x="9.9954%" y="197" width="0.0556%" height="15" fill="rgb(234,138,34)" fg:x="7905" fg:w="44"/><text x="10.2454%" y="207.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (48 samples, 0.06%)</title><rect x="9.9917%" y="213" width="0.0607%" height="15" fill="rgb(212,95,11)" fg:x="7902" fg:w="48"/><text x="10.2417%" y="223.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (61 samples, 0.08%)</title><rect x="9.9879%" y="229" width="0.0771%" height="15" fill="rgb(240,179,47)" fg:x="7899" fg:w="61"/><text x="10.2379%" y="239.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (71 samples, 0.09%)</title><rect x="9.9879%" y="245" width="0.0898%" height="15" fill="rgb(240,163,11)" fg:x="7899" fg:w="71"/><text x="10.2379%" y="255.50"></text></g><g><title>CoreFoundation`-[NSArray makeObjectsPerformSelector:] (99 samples, 0.13%)</title><rect x="9.9626%" y="261" width="0.1252%" height="15" fill="rgb(236,37,12)" fg:x="7879" fg:w="99"/><text x="10.2126%" y="271.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (14 samples, 0.02%)</title><rect x="10.0915%" y="261" width="0.0177%" height="15" fill="rgb(232,164,16)" fg:x="7981" fg:w="14"/><text x="10.3415%" y="271.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (10 samples, 0.01%)</title><rect x="10.1194%" y="245" width="0.0126%" height="15" fill="rgb(244,205,15)" fg:x="8003" fg:w="10"/><text x="10.3694%" y="255.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (10 samples, 0.01%)</title><rect x="10.1194%" y="229" width="0.0126%" height="15" fill="rgb(223,117,47)" fg:x="8003" fg:w="10"/><text x="10.3694%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (10 samples, 0.01%)</title><rect x="10.1194%" y="213" width="0.0126%" height="15" fill="rgb(244,107,35)" fg:x="8003" fg:w="10"/><text x="10.3694%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (8 samples, 0.01%)</title><rect x="10.1219%" y="197" width="0.0101%" height="15" fill="rgb(205,140,8)" fg:x="8005" fg:w="8"/><text x="10.3719%" y="207.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (26 samples, 0.03%)</title><rect x="10.1168%" y="261" width="0.0329%" height="15" fill="rgb(228,84,46)" fg:x="8001" fg:w="26"/><text x="10.3668%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (10 samples, 0.01%)</title><rect x="10.1371%" y="245" width="0.0126%" height="15" fill="rgb(254,188,9)" fg:x="8017" fg:w="10"/><text x="10.3871%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (8 samples, 0.01%)</title><rect x="10.1396%" y="229" width="0.0101%" height="15" fill="rgb(206,112,54)" fg:x="8019" fg:w="8"/><text x="10.3896%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (8 samples, 0.01%)</title><rect x="10.1396%" y="213" width="0.0101%" height="15" fill="rgb(216,84,49)" fg:x="8019" fg:w="8"/><text x="10.3896%" y="223.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (14 samples, 0.02%)</title><rect x="10.1788%" y="261" width="0.0177%" height="15" fill="rgb(214,194,35)" fg:x="8050" fg:w="14"/><text x="10.4288%" y="271.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _updateWindowsUsingCache] (252 samples, 0.32%)</title><rect x="9.9107%" y="277" width="0.3186%" height="15" fill="rgb(249,28,3)" fg:x="7838" fg:w="252"/><text x="10.1607%" y="287.50"></text></g><g><title>AppKit`-[NSWindow _allowsActiveInputContext] (8 samples, 0.01%)</title><rect x="10.2319%" y="277" width="0.0101%" height="15" fill="rgb(222,56,52)" fg:x="8092" fg:w="8"/><text x="10.4819%" y="287.50"></text></g><g><title>AppKit`-[NSWindow firstResponder] (14 samples, 0.02%)</title><rect x="10.2420%" y="277" width="0.0177%" height="15" fill="rgb(245,217,50)" fg:x="8100" fg:w="14"/><text x="10.4920%" y="287.50"></text></g><g><title>CoreFoundation`-[NSArray makeObjectsPerformSelector:] (13 samples, 0.02%)</title><rect x="10.2660%" y="277" width="0.0164%" height="15" fill="rgb(213,201,24)" fg:x="8119" fg:w="13"/><text x="10.5160%" y="287.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (12 samples, 0.02%)</title><rect x="10.2863%" y="277" width="0.0152%" height="15" fill="rgb(248,116,28)" fg:x="8135" fg:w="12"/><text x="10.5363%" y="287.50"></text></g><g><title>Foundation`-[NSConcreteNotification dealloc] (20 samples, 0.03%)</title><rect x="10.3128%" y="277" width="0.0253%" height="15" fill="rgb(219,72,43)" fg:x="8156" fg:w="20"/><text x="10.5628%" y="287.50"></text></g><g><title>CoreFoundation`CFEqual (8 samples, 0.01%)</title><rect x="10.4431%" y="229" width="0.0101%" height="15" fill="rgb(209,138,14)" fg:x="8259" fg:w="8"/><text x="10.6931%" y="239.50"></text></g><g><title>CoreFoundation`CFEqual (41 samples, 0.05%)</title><rect x="10.5012%" y="197" width="0.0518%" height="15" fill="rgb(222,18,33)" fg:x="8305" fg:w="41"/><text x="10.7512%" y="207.50"></text></g><g><title>CoreFoundation`CFCachedStringEqual (55 samples, 0.07%)</title><rect x="10.5012%" y="213" width="0.0695%" height="15" fill="rgb(213,199,7)" fg:x="8305" fg:w="55"/><text x="10.7512%" y="223.50"></text></g><g><title>CoreFoundation`__CFStringEqual (14 samples, 0.02%)</title><rect x="10.5531%" y="197" width="0.0177%" height="15" fill="rgb(250,110,10)" fg:x="8346" fg:w="14"/><text x="10.8031%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (9 samples, 0.01%)</title><rect x="10.5594%" y="181" width="0.0114%" height="15" fill="rgb(248,123,6)" fg:x="8351" fg:w="9"/><text x="10.8094%" y="191.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (103 samples, 0.13%)</title><rect x="10.4544%" y="229" width="0.1302%" height="15" fill="rgb(206,91,31)" fg:x="8268" fg:w="103"/><text x="10.7044%" y="239.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (147 samples, 0.19%)</title><rect x="10.4152%" y="245" width="0.1859%" height="15" fill="rgb(211,154,13)" fg:x="8237" fg:w="147"/><text x="10.6652%" y="255.50"></text></g><g><title>libsystem_c.dylib`_qsort (15 samples, 0.02%)</title><rect x="10.6251%" y="245" width="0.0190%" height="15" fill="rgb(225,148,7)" fg:x="8403" fg:w="15"/><text x="10.8751%" y="255.50"></text></g><g><title>libsystem_c.dylib`qsort_b (12 samples, 0.02%)</title><rect x="10.6441%" y="245" width="0.0152%" height="15" fill="rgb(220,160,43)" fg:x="8418" fg:w="12"/><text x="10.8941%" y="255.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (215 samples, 0.27%)</title><rect x="10.3900%" y="261" width="0.2719%" height="15" fill="rgb(213,52,39)" fg:x="8217" fg:w="215"/><text x="10.6400%" y="271.50"></text></g><g><title>Foundation`-[NSConcreteNotification initWithName:object:userInfo:] (11 samples, 0.01%)</title><rect x="10.6757%" y="261" width="0.0139%" height="15" fill="rgb(243,137,7)" fg:x="8443" fg:w="11"/><text x="10.9257%" y="271.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (10 samples, 0.01%)</title><rect x="10.6997%" y="245" width="0.0126%" height="15" fill="rgb(230,79,13)" fg:x="8462" fg:w="10"/><text x="10.9497%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (10 samples, 0.01%)</title><rect x="10.6997%" y="229" width="0.0126%" height="15" fill="rgb(247,105,23)" fg:x="8462" fg:w="10"/><text x="10.9497%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (10 samples, 0.01%)</title><rect x="10.6997%" y="213" width="0.0126%" height="15" fill="rgb(223,179,41)" fg:x="8462" fg:w="10"/><text x="10.9497%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.01%)</title><rect x="10.6997%" y="197" width="0.0126%" height="15" fill="rgb(218,9,34)" fg:x="8462" fg:w="10"/><text x="10.9497%" y="207.50"></text></g><g><title>Foundation`NSAllocateObject (17 samples, 0.02%)</title><rect x="10.6922%" y="261" width="0.0215%" height="15" fill="rgb(222,106,8)" fg:x="8456" fg:w="17"/><text x="10.9422%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (23 samples, 0.03%)</title><rect x="10.7225%" y="261" width="0.0291%" height="15" fill="rgb(211,220,0)" fg:x="8480" fg:w="23"/><text x="10.9725%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_opt_self (9 samples, 0.01%)</title><rect x="10.7516%" y="261" width="0.0114%" height="15" fill="rgb(229,52,16)" fg:x="8503" fg:w="9"/><text x="11.0016%" y="271.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (322 samples, 0.41%)</title><rect x="10.3583%" y="277" width="0.4072%" height="15" fill="rgb(212,155,18)" fg:x="8192" fg:w="322"/><text x="10.6083%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (16 samples, 0.02%)</title><rect x="10.7731%" y="277" width="0.0202%" height="15" fill="rgb(242,21,14)" fg:x="8520" fg:w="16"/><text x="11.0231%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (81 samples, 0.10%)</title><rect x="10.7971%" y="277" width="0.1024%" height="15" fill="rgb(222,19,48)" fg:x="8539" fg:w="81"/><text x="11.0471%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_retain (10 samples, 0.01%)</title><rect x="10.9058%" y="277" width="0.0126%" height="15" fill="rgb(232,45,27)" fg:x="8625" fg:w="10"/><text x="11.1558%" y="287.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (1,017 samples, 1.29%)</title><rect x="9.6351%" y="293" width="1.2859%" height="15" fill="rgb(249,103,42)" fg:x="7620" fg:w="1017"/><text x="9.8851%" y="303.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectsInRange:] (18 samples, 0.02%)</title><rect x="10.9514%" y="277" width="0.0228%" height="15" fill="rgb(246,81,33)" fg:x="8661" fg:w="18"/><text x="11.2014%" y="287.50"></text></g><g><title>CoreFoundation`CFArrayGetFirstIndexOfValue (11 samples, 0.01%)</title><rect x="10.9767%" y="277" width="0.0139%" height="15" fill="rgb(252,33,42)" fg:x="8681" fg:w="11"/><text x="11.2267%" y="287.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (15 samples, 0.02%)</title><rect x="11.0070%" y="245" width="0.0190%" height="15" fill="rgb(209,212,41)" fg:x="8705" fg:w="15"/><text x="11.2570%" y="255.50"></text></g><g><title>CoreFoundation`CFSetGetValue (24 samples, 0.03%)</title><rect x="11.0070%" y="261" width="0.0303%" height="15" fill="rgb(207,154,6)" fg:x="8705" fg:w="24"/><text x="11.2570%" y="271.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (42 samples, 0.05%)</title><rect x="10.9956%" y="277" width="0.0531%" height="15" fill="rgb(223,64,47)" fg:x="8696" fg:w="42"/><text x="11.2456%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.01%)</title><rect x="11.0500%" y="277" width="0.0101%" height="15" fill="rgb(211,161,38)" fg:x="8739" fg:w="8"/><text x="11.3000%" y="287.50"></text></g><g><title>CoreFoundation`CFRunLoopRemoveObserver (111 samples, 0.14%)</title><rect x="10.9413%" y="293" width="0.1404%" height="15" fill="rgb(219,138,40)" fg:x="8653" fg:w="111"/><text x="11.1913%" y="303.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:] (12 samples, 0.02%)</title><rect x="11.0993%" y="293" width="0.0152%" height="15" fill="rgb(241,228,46)" fg:x="8778" fg:w="12"/><text x="11.3493%" y="303.50"></text></g><g><title>CoreFoundation`CFCachedStringEqual (8 samples, 0.01%)</title><rect x="11.1322%" y="229" width="0.0101%" height="15" fill="rgb(223,209,38)" fg:x="8804" fg:w="8"/><text x="11.3822%" y="239.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (20 samples, 0.03%)</title><rect x="11.1271%" y="245" width="0.0253%" height="15" fill="rgb(236,164,45)" fg:x="8800" fg:w="20"/><text x="11.3771%" y="255.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (24 samples, 0.03%)</title><rect x="11.1246%" y="261" width="0.0303%" height="15" fill="rgb(231,15,5)" fg:x="8798" fg:w="24"/><text x="11.3746%" y="271.50"></text></g><g><title>CoreFoundation`__CFStringHash (9 samples, 0.01%)</title><rect x="11.1575%" y="261" width="0.0114%" height="15" fill="rgb(252,35,15)" fg:x="8824" fg:w="9"/><text x="11.4075%" y="271.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (42 samples, 0.05%)</title><rect x="11.1195%" y="277" width="0.0531%" height="15" fill="rgb(248,181,18)" fg:x="8794" fg:w="42"/><text x="11.3695%" y="287.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (59 samples, 0.07%)</title><rect x="11.1145%" y="293" width="0.0746%" height="15" fill="rgb(233,39,42)" fg:x="8790" fg:w="59"/><text x="11.3645%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (16 samples, 0.02%)</title><rect x="11.1954%" y="277" width="0.0202%" height="15" fill="rgb(238,110,33)" fg:x="8854" fg:w="16"/><text x="11.4454%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (24 samples, 0.03%)</title><rect x="11.1903%" y="293" width="0.0303%" height="15" fill="rgb(233,195,10)" fg:x="8850" fg:w="24"/><text x="11.4403%" y="303.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (1,308 samples, 1.65%)</title><rect x="9.6262%" y="309" width="1.6539%" height="15" fill="rgb(254,105,3)" fg:x="7613" fg:w="1308"/><text x="9.8762%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (46 samples, 0.06%)</title><rect x="11.2220%" y="293" width="0.0582%" height="15" fill="rgb(221,225,9)" fg:x="8875" fg:w="46"/><text x="11.4720%" y="303.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (10 samples, 0.01%)</title><rect x="11.2801%" y="261" width="0.0126%" height="15" fill="rgb(224,227,45)" fg:x="8921" fg:w="10"/><text x="11.5301%" y="271.50"></text></g><g><title>AppKit`-[_NSViewBackingLayer display] (8 samples, 0.01%)</title><rect x="11.2827%" y="245" width="0.0101%" height="15" fill="rgb(229,198,43)" fg:x="8923" fg:w="8"/><text x="11.5327%" y="255.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (8 samples, 0.01%)</title><rect x="11.2827%" y="229" width="0.0101%" height="15" fill="rgb(206,209,35)" fg:x="8923" fg:w="8"/><text x="11.5327%" y="239.50"></text></g><g><title>AppKit`__30-[_NSViewBackingLayer display]_block_invoke (8 samples, 0.01%)</title><rect x="11.2827%" y="213" width="0.0101%" height="15" fill="rgb(245,195,53)" fg:x="8923" fg:w="8"/><text x="11.5327%" y="223.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (8 samples, 0.01%)</title><rect x="11.2827%" y="197" width="0.0101%" height="15" fill="rgb(240,92,26)" fg:x="8923" fg:w="8"/><text x="11.5327%" y="207.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (8 samples, 0.01%)</title><rect x="11.2827%" y="181" width="0.0101%" height="15" fill="rgb(207,40,23)" fg:x="8923" fg:w="8"/><text x="11.5327%" y="191.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (14 samples, 0.02%)</title><rect x="11.2801%" y="277" width="0.0177%" height="15" fill="rgb(223,111,35)" fg:x="8921" fg:w="14"/><text x="11.5301%" y="287.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (20 samples, 0.03%)</title><rect x="11.2801%" y="309" width="0.0253%" height="15" fill="rgb(229,147,28)" fg:x="8921" fg:w="20"/><text x="11.5301%" y="319.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (20 samples, 0.03%)</title><rect x="11.2801%" y="293" width="0.0253%" height="15" fill="rgb(211,29,28)" fg:x="8921" fg:w="20"/><text x="11.5301%" y="303.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (1,363 samples, 1.72%)</title><rect x="9.6161%" y="325" width="1.7234%" height="15" fill="rgb(228,72,33)" fg:x="7605" fg:w="1363"/><text x="9.8661%" y="335.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events::_{{closure}} (13 samples, 0.02%)</title><rect x="11.3863%" y="261" width="0.0164%" height="15" fill="rgb(205,214,31)" fg:x="9005" fg:w="13"/><text x="11.6363%" y="271.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (23 samples, 0.03%)</title><rect x="11.3825%" y="277" width="0.0291%" height="15" fill="rgb(224,111,15)" fg:x="9002" fg:w="23"/><text x="11.6325%" y="287.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (38 samples, 0.05%)</title><rect x="11.3775%" y="293" width="0.0480%" height="15" fill="rgb(253,21,26)" fg:x="8998" fg:w="38"/><text x="11.6275%" y="303.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::wakeup (68 samples, 0.09%)</title><rect x="11.3497%" y="309" width="0.0860%" height="15" fill="rgb(245,139,43)" fg:x="8976" fg:w="68"/><text x="11.5997%" y="319.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_begin_handler (76 samples, 0.10%)</title><rect x="11.3459%" y="325" width="0.0961%" height="15" fill="rgb(252,170,7)" fg:x="8973" fg:w="76"/><text x="11.5959%" y="335.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_user_events (16 samples, 0.02%)</title><rect x="11.4786%" y="293" width="0.0202%" height="15" fill="rgb(231,118,14)" fg:x="9078" fg:w="16"/><text x="11.7286%" y="303.50"></text></g><g><title>AppKit` (12 samples, 0.02%)</title><rect x="11.5950%" y="277" width="0.0152%" height="15" fill="rgb(238,83,0)" fg:x="9170" fg:w="12"/><text x="11.8450%" y="287.50"></text></g><g><title>Foundation`NSKVOCopyPendingNotificationStack (29 samples, 0.04%)</title><rect x="11.6531%" y="245" width="0.0367%" height="15" fill="rgb(221,39,39)" fg:x="9216" fg:w="29"/><text x="11.9031%" y="255.50"></text></g><g><title>Foundation`NSKVOPendingPerThreadNotificationStack (13 samples, 0.02%)</title><rect x="11.6734%" y="229" width="0.0164%" height="15" fill="rgb(222,119,46)" fg:x="9232" fg:w="13"/><text x="11.9234%" y="239.50"></text></g><g><title>Foundation`NSKeyValueDidChangeWithPerThreadPendingNotifications (43 samples, 0.05%)</title><rect x="11.6430%" y="261" width="0.0544%" height="15" fill="rgb(222,165,49)" fg:x="9208" fg:w="43"/><text x="11.8930%" y="271.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (16 samples, 0.02%)</title><rect x="11.7277%" y="229" width="0.0202%" height="15" fill="rgb(219,113,52)" fg:x="9275" fg:w="16"/><text x="11.9777%" y="239.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (14 samples, 0.02%)</title><rect x="11.7303%" y="213" width="0.0177%" height="15" fill="rgb(214,7,15)" fg:x="9277" fg:w="14"/><text x="11.9803%" y="223.50"></text></g><g><title>Foundation`_NSKeyValueRetainedObservationInfoForObject (22 samples, 0.03%)</title><rect x="11.7239%" y="245" width="0.0278%" height="15" fill="rgb(235,32,4)" fg:x="9272" fg:w="22"/><text x="11.9739%" y="255.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (8 samples, 0.01%)</title><rect x="11.7530%" y="245" width="0.0101%" height="15" fill="rgb(238,90,54)" fg:x="9295" fg:w="8"/><text x="12.0030%" y="255.50"></text></g><g><title>Foundation`NSKeyValueWillChangeWithPerThreadPendingNotifications (55 samples, 0.07%)</title><rect x="11.6974%" y="261" width="0.0695%" height="15" fill="rgb(213,208,19)" fg:x="9251" fg:w="55"/><text x="11.9474%" y="271.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_recursive_lock_lock_with_options (13 samples, 0.02%)</title><rect x="11.7859%" y="261" width="0.0164%" height="15" fill="rgb(233,156,4)" fg:x="9321" fg:w="13"/><text x="12.0359%" y="271.50"></text></g><g><title>AppKit`-[NSApplication stop:] (152 samples, 0.19%)</title><rect x="11.6152%" y="277" width="0.1922%" height="15" fill="rgb(207,194,5)" fg:x="9186" fg:w="152"/><text x="11.8652%" y="287.50"></text></g><g><title>AppKit`+[NSScreen _zeroScreenHeight] (13 samples, 0.02%)</title><rect x="11.9098%" y="229" width="0.0164%" height="15" fill="rgb(206,111,30)" fg:x="9419" fg:w="13"/><text x="12.1598%" y="239.50"></text></g><g><title>AppKit`+[_NSScreenConfiguration latestZeroScreenHeight] (13 samples, 0.02%)</title><rect x="11.9263%" y="229" width="0.0164%" height="15" fill="rgb(243,70,54)" fg:x="9432" fg:w="13"/><text x="12.1763%" y="239.50"></text></g><g><title>Foundation`-[NSRecursiveLock lock] (8 samples, 0.01%)</title><rect x="11.9515%" y="213" width="0.0101%" height="15" fill="rgb(242,28,8)" fg:x="9452" fg:w="8"/><text x="12.2015%" y="223.50"></text></g><g><title>libobjc.A.dylib`object_getIndexedIvars (10 samples, 0.01%)</title><rect x="11.9756%" y="213" width="0.0126%" height="15" fill="rgb(219,106,18)" fg:x="9471" fg:w="10"/><text x="12.2256%" y="223.50"></text></g><g><title>AppKit`-[NSEvent window] (38 samples, 0.05%)</title><rect x="11.9427%" y="229" width="0.0480%" height="15" fill="rgb(244,222,10)" fg:x="9445" fg:w="38"/><text x="12.1927%" y="239.50"></text></g><g><title>SkyLight`CGSEventSourceForID (19 samples, 0.02%)</title><rect x="12.0704%" y="213" width="0.0240%" height="15" fill="rgb(236,179,52)" fg:x="9546" fg:w="19"/><text x="12.3204%" y="223.50"></text></g><g><title>SkyLight`CGSScoreboard (8 samples, 0.01%)</title><rect x="12.0843%" y="197" width="0.0101%" height="15" fill="rgb(213,23,39)" fg:x="9557" fg:w="8"/><text x="12.3343%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (11 samples, 0.01%)</title><rect x="12.1020%" y="197" width="0.0139%" height="15" fill="rgb(238,48,10)" fg:x="9571" fg:w="11"/><text x="12.3520%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.01%)</title><rect x="12.1033%" y="181" width="0.0126%" height="15" fill="rgb(251,196,23)" fg:x="9572" fg:w="10"/><text x="12.3533%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (10 samples, 0.01%)</title><rect x="12.1033%" y="165" width="0.0126%" height="15" fill="rgb(250,152,24)" fg:x="9572" fg:w="10"/><text x="12.3533%" y="175.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (14 samples, 0.02%)</title><rect x="12.1020%" y="213" width="0.0177%" height="15" fill="rgb(209,150,17)" fg:x="9571" fg:w="14"/><text x="12.3520%" y="223.50"></text></g><g><title>SkyLight`SLEventCreate (90 samples, 0.11%)</title><rect x="12.0160%" y="229" width="0.1138%" height="15" fill="rgb(234,202,34)" fg:x="9503" fg:w="90"/><text x="12.2660%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.02%)</title><rect x="12.1754%" y="165" width="0.0228%" height="15" fill="rgb(253,148,53)" fg:x="9629" fg:w="18"/><text x="12.4254%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.02%)</title><rect x="12.1766%" y="149" width="0.0215%" height="15" fill="rgb(218,129,16)" fg:x="9630" fg:w="17"/><text x="12.4266%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.02%)</title><rect x="12.1766%" y="133" width="0.0215%" height="15" fill="rgb(216,85,19)" fg:x="9630" fg:w="17"/><text x="12.4266%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.01%)</title><rect x="12.1842%" y="117" width="0.0139%" height="15" fill="rgb(235,228,7)" fg:x="9636" fg:w="11"/><text x="12.4342%" y="127.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (27 samples, 0.03%)</title><rect x="12.1690%" y="181" width="0.0341%" height="15" fill="rgb(245,175,0)" fg:x="9624" fg:w="27"/><text x="12.4190%" y="191.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (30 samples, 0.04%)</title><rect x="12.1690%" y="197" width="0.0379%" height="15" fill="rgb(208,168,36)" fg:x="9624" fg:w="30"/><text x="12.4190%" y="207.50"></text></g><g><title>SkyLight`CGSEventAppendixCreate (36 samples, 0.05%)</title><rect x="12.1665%" y="213" width="0.0455%" height="15" fill="rgb(246,171,24)" fg:x="9622" fg:w="36"/><text x="12.4165%" y="223.50"></text></g><g><title>SkyLight`SLEventRecordSetIntegerValue(SLSEventRecord*, CGEventField, long long) (66 samples, 0.08%)</title><rect x="12.1298%" y="229" width="0.0835%" height="15" fill="rgb(215,142,24)" fg:x="9593" fg:w="66"/><text x="12.3798%" y="239.50"></text></g><g><title>SkyLight`SLSMainConnectionID (11 samples, 0.01%)</title><rect x="12.2234%" y="229" width="0.0139%" height="15" fill="rgb(250,187,7)" fg:x="9667" fg:w="11"/><text x="12.4734%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (14 samples, 0.02%)</title><rect x="12.2765%" y="181" width="0.0177%" height="15" fill="rgb(228,66,33)" fg:x="9709" fg:w="14"/><text x="12.5265%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (14 samples, 0.02%)</title><rect x="12.2765%" y="165" width="0.0177%" height="15" fill="rgb(234,215,21)" fg:x="9709" fg:w="14"/><text x="12.5265%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (14 samples, 0.02%)</title><rect x="12.2765%" y="149" width="0.0177%" height="15" fill="rgb(222,191,20)" fg:x="9709" fg:w="14"/><text x="12.5265%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.01%)</title><rect x="12.2841%" y="133" width="0.0101%" height="15" fill="rgb(245,79,54)" fg:x="9715" fg:w="8"/><text x="12.5341%" y="143.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (40 samples, 0.05%)</title><rect x="12.2449%" y="197" width="0.0506%" height="15" fill="rgb(240,10,37)" fg:x="9684" fg:w="40"/><text x="12.4949%" y="207.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (44 samples, 0.06%)</title><rect x="12.2436%" y="213" width="0.0556%" height="15" fill="rgb(214,192,32)" fg:x="9683" fg:w="44"/><text x="12.4936%" y="223.50"></text></g><g><title>SkyLight`_SLEventCreate(SLSEventRecord*) (50 samples, 0.06%)</title><rect x="12.2373%" y="229" width="0.0632%" height="15" fill="rgb(209,36,54)" fg:x="9678" fg:w="50"/><text x="12.4873%" y="239.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (18 samples, 0.02%)</title><rect x="12.3094%" y="229" width="0.0228%" height="15" fill="rgb(220,10,11)" fg:x="9735" fg:w="18"/><text x="12.5594%" y="239.50"></text></g><g><title>AppKit`-[NSEvent CGEvent] (368 samples, 0.47%)</title><rect x="11.8719%" y="245" width="0.4653%" height="15" fill="rgb(221,106,17)" fg:x="9389" fg:w="368"/><text x="12.1219%" y="255.50"></text></g><g><title>HIToolbox`GetEventFromPool (8 samples, 0.01%)</title><rect x="12.4093%" y="213" width="0.0101%" height="15" fill="rgb(251,142,44)" fg:x="9814" fg:w="8"/><text x="12.6593%" y="223.50"></text></g><g><title>HIToolbox`CreateEvent (17 samples, 0.02%)</title><rect x="12.4017%" y="229" width="0.0215%" height="15" fill="rgb(238,13,15)" fg:x="9808" fg:w="17"/><text x="12.6517%" y="239.50"></text></g><g><title>SkyLight`SLEventGetIntegerValueField (18 samples, 0.02%)</title><rect x="12.4308%" y="229" width="0.0228%" height="15" fill="rgb(208,107,27)" fg:x="9831" fg:w="18"/><text x="12.6808%" y="239.50"></text></g><g><title>HIToolbox`CreateEventWithCGEvent (76 samples, 0.10%)</title><rect x="12.3612%" y="245" width="0.0961%" height="15" fill="rgb(205,136,37)" fg:x="9776" fg:w="76"/><text x="12.6112%" y="255.50"></text></g><g><title>SkyLight`SLEventCreate (21 samples, 0.03%)</title><rect x="12.4662%" y="245" width="0.0266%" height="15" fill="rgb(250,205,27)" fg:x="9859" fg:w="21"/><text x="12.7162%" y="255.50"></text></g><g><title>SkyLight`SLEventSetType (14 samples, 0.02%)</title><rect x="12.5041%" y="245" width="0.0177%" height="15" fill="rgb(210,80,43)" fg:x="9889" fg:w="14"/><text x="12.7541%" y="255.50"></text></g><g><title>SkyLight`SLSMainConnectionID (15 samples, 0.02%)</title><rect x="12.5218%" y="245" width="0.0190%" height="15" fill="rgb(247,160,36)" fg:x="9903" fg:w="15"/><text x="12.7718%" y="255.50"></text></g><g><title>libobjc.A.dylib`-[NSObject autorelease] (8 samples, 0.01%)</title><rect x="12.5408%" y="245" width="0.0101%" height="15" fill="rgb(234,13,49)" fg:x="9918" fg:w="8"/><text x="12.7908%" y="255.50"></text></g><g><title>AppKit`-[NSEvent _eventRefInternal] (618 samples, 0.78%)</title><rect x="11.8466%" y="261" width="0.7814%" height="15" fill="rgb(234,122,0)" fg:x="9369" fg:w="618"/><text x="12.0966%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (55 samples, 0.07%)</title><rect x="12.5585%" y="245" width="0.0695%" height="15" fill="rgb(207,146,38)" fg:x="9932" fg:w="55"/><text x="12.8085%" y="255.50"></text></g><g><title>CoreFoundation`CFRunLoopSourceSignal (9 samples, 0.01%)</title><rect x="12.6520%" y="261" width="0.0114%" height="15" fill="rgb(207,177,25)" fg:x="10006" fg:w="9"/><text x="12.9020%" y="271.50"></text></g><g><title>CoreFoundation`CFRunLoopStop (10 samples, 0.01%)</title><rect x="12.6634%" y="261" width="0.0126%" height="15" fill="rgb(211,178,42)" fg:x="10015" fg:w="10"/><text x="12.9134%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (144 samples, 0.18%)</title><rect x="12.6887%" y="245" width="0.1821%" height="15" fill="rgb(230,69,54)" fg:x="10035" fg:w="144"/><text x="12.9387%" y="255.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (158 samples, 0.20%)</title><rect x="12.6761%" y="261" width="0.1998%" height="15" fill="rgb(214,135,41)" fg:x="10025" fg:w="158"/><text x="12.9261%" y="271.50"></text></g><g><title>HIToolbox`CreateEventWithCGEvent (9 samples, 0.01%)</title><rect x="12.8784%" y="261" width="0.0114%" height="15" fill="rgb(237,67,25)" fg:x="10185" fg:w="9"/><text x="13.1284%" y="271.50"></text></g><g><title>HIToolbox`GetCurrentEventQueue (8 samples, 0.01%)</title><rect x="12.8923%" y="261" width="0.0101%" height="15" fill="rgb(222,189,50)" fg:x="10196" fg:w="8"/><text x="13.1423%" y="271.50"></text></g><g><title>CoreFoundation`CFRunLoopSourceSignal (8 samples, 0.01%)</title><rect x="12.9391%" y="245" width="0.0101%" height="15" fill="rgb(245,148,34)" fg:x="10233" fg:w="8"/><text x="13.1891%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1,050 samples, 1.33%)</title><rect x="12.9745%" y="229" width="1.3277%" height="15" fill="rgb(222,29,6)" fg:x="10261" fg:w="1050"/><text x="13.2245%" y="239.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (1,076 samples, 1.36%)</title><rect x="12.9492%" y="245" width="1.3605%" height="15" fill="rgb(221,189,43)" fg:x="10241" fg:w="1076"/><text x="13.1992%" y="255.50"></text></g><g><title>HIToolbox`IsEventTraceEnabled (9 samples, 0.01%)</title><rect x="14.3186%" y="245" width="0.0114%" height="15" fill="rgb(207,36,27)" fg:x="11324" fg:w="9"/><text x="14.5686%" y="255.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (28 samples, 0.04%)</title><rect x="14.3363%" y="245" width="0.0354%" height="15" fill="rgb(217,90,24)" fg:x="11338" fg:w="28"/><text x="14.5863%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (14 samples, 0.02%)</title><rect x="14.3805%" y="245" width="0.0177%" height="15" fill="rgb(224,66,35)" fg:x="11373" fg:w="14"/><text x="14.6305%" y="255.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (1,178 samples, 1.49%)</title><rect x="12.9176%" y="261" width="1.4895%" height="15" fill="rgb(221,13,50)" fg:x="10216" fg:w="1178"/><text x="13.1676%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.01%)</title><rect x="14.4134%" y="261" width="0.0101%" height="15" fill="rgb(236,68,49)" fg:x="11399" fg:w="8"/><text x="14.6634%" y="271.50"></text></g><g><title>AppKit`-[NSEvent _postAtStart:] (2,074 samples, 2.62%)</title><rect x="11.8125%" y="277" width="2.6225%" height="15" fill="rgb(229,146,28)" fg:x="9342" fg:w="2074"/><text x="12.0625%" y="287.50">Ap..</text></g><g><title>App`&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.01%)</title><rect x="14.4514%" y="277" width="0.0101%" height="15" fill="rgb(225,31,38)" fg:x="11429" fg:w="8"/><text x="14.7014%" y="287.50"></text></g><g><title>App`glutin_window::to_static_event (10 samples, 0.01%)</title><rect x="14.5184%" y="245" width="0.0126%" height="15" fill="rgb(250,208,3)" fg:x="11482" fg:w="10"/><text x="14.7684%" y="255.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events::_{{closure}} (29 samples, 0.04%)</title><rect x="14.5007%" y="261" width="0.0367%" height="15" fill="rgb(246,54,23)" fg:x="11468" fg:w="29"/><text x="14.7507%" y="271.50"></text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (34 samples, 0.04%)</title><rect x="14.5411%" y="261" width="0.0430%" height="15" fill="rgb(243,76,11)" fg:x="11500" fg:w="34"/><text x="14.7911%" y="271.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_user_events (101 samples, 0.13%)</title><rect x="14.4627%" y="277" width="0.1277%" height="15" fill="rgb(245,21,50)" fg:x="11438" fg:w="101"/><text x="14.7127%" y="287.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::events (10 samples, 0.01%)</title><rect x="14.6094%" y="277" width="0.0126%" height="15" fill="rgb(228,9,43)" fg:x="11554" fg:w="10"/><text x="14.8594%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (13 samples, 0.02%)</title><rect x="14.6221%" y="261" width="0.0164%" height="15" fill="rgb(208,100,47)" fg:x="11564" fg:w="13"/><text x="14.8721%" y="271.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::get_old_and_new_control_flow (16 samples, 0.02%)</title><rect x="14.6221%" y="277" width="0.0202%" height="15" fill="rgb(232,26,8)" fg:x="11564" fg:w="16"/><text x="14.8721%" y="287.50"></text></g><g><title>App`glutin_window::to_static_event (8 samples, 0.01%)</title><rect x="14.6815%" y="229" width="0.0101%" height="15" fill="rgb(216,166,38)" fg:x="11611" fg:w="8"/><text x="14.9315%" y="239.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events::_{{closure}} (11 samples, 0.01%)</title><rect x="14.6815%" y="245" width="0.0139%" height="15" fill="rgb(251,202,51)" fg:x="11611" fg:w="11"/><text x="14.9315%" y="255.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (36 samples, 0.05%)</title><rect x="14.6764%" y="261" width="0.0455%" height="15" fill="rgb(254,216,34)" fg:x="11607" fg:w="36"/><text x="14.9264%" y="271.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::_&lt;impl winit::event::Event&lt;Never&gt;&gt;::userify (21 samples, 0.03%)</title><rect x="14.6954%" y="245" width="0.0266%" height="15" fill="rgb(251,32,27)" fg:x="11622" fg:w="21"/><text x="14.9454%" y="255.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (69 samples, 0.09%)</title><rect x="14.6423%" y="277" width="0.0872%" height="15" fill="rgb(208,127,28)" fg:x="11580" fg:w="69"/><text x="14.8923%" y="287.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::redraw (11 samples, 0.01%)</title><rect x="14.7295%" y="277" width="0.0139%" height="15" fill="rgb(224,137,22)" fg:x="11649" fg:w="11"/><text x="14.9795%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (11 samples, 0.01%)</title><rect x="14.7295%" y="261" width="0.0139%" height="15" fill="rgb(254,70,32)" fg:x="11649" fg:w="11"/><text x="14.9795%" y="271.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApp (20 samples, 0.03%)</title><rect x="14.7434%" y="277" width="0.0253%" height="15" fill="rgb(229,75,37)" fg:x="11660" fg:w="20"/><text x="14.9934%" y="287.50"></text></g><g><title>AppKit`-[NSResponder retain] (9 samples, 0.01%)</title><rect x="14.7574%" y="261" width="0.0114%" height="15" fill="rgb(252,64,23)" fg:x="11671" fg:w="9"/><text x="15.0074%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (13 samples, 0.02%)</title><rect x="14.7852%" y="197" width="0.0164%" height="15" fill="rgb(232,162,48)" fg:x="11693" fg:w="13"/><text x="15.0352%" y="207.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (16 samples, 0.02%)</title><rect x="14.7826%" y="245" width="0.0202%" height="15" fill="rgb(246,160,12)" fg:x="11691" fg:w="16"/><text x="15.0326%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (16 samples, 0.02%)</title><rect x="14.7826%" y="229" width="0.0202%" height="15" fill="rgb(247,166,0)" fg:x="11691" fg:w="16"/><text x="15.0326%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (15 samples, 0.02%)</title><rect x="14.7839%" y="213" width="0.0190%" height="15" fill="rgb(249,219,21)" fg:x="11692" fg:w="15"/><text x="15.0339%" y="223.50"></text></g><g><title>AppKit`+[NSEvent otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:] (37 samples, 0.05%)</title><rect x="14.7700%" y="261" width="0.0468%" height="15" fill="rgb(205,209,3)" fg:x="11681" fg:w="37"/><text x="15.0200%" y="271.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::event::NSEvent::dummy (69 samples, 0.09%)</title><rect x="14.7687%" y="277" width="0.0872%" height="15" fill="rgb(243,44,1)" fg:x="11680" fg:w="69"/><text x="15.0187%" y="287.50"></text></g><g><title>CoreFoundation`CFRunLoopStop (10 samples, 0.01%)</title><rect x="14.8610%" y="277" width="0.0126%" height="15" fill="rgb(206,159,16)" fg:x="11753" fg:w="10"/><text x="15.1110%" y="287.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (13 samples, 0.02%)</title><rect x="14.8977%" y="277" width="0.0164%" height="15" fill="rgb(244,77,30)" fg:x="11782" fg:w="13"/><text x="15.1477%" y="287.50"></text></g><g><title>AppKit`-[NSEvent .cxx_destruct] (8 samples, 0.01%)</title><rect x="14.9875%" y="181" width="0.0101%" height="15" fill="rgb(218,69,12)" fg:x="11853" fg:w="8"/><text x="15.2375%" y="191.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (8 samples, 0.01%)</title><rect x="14.9976%" y="181" width="0.0101%" height="15" fill="rgb(212,87,7)" fg:x="11861" fg:w="8"/><text x="15.2476%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (33 samples, 0.04%)</title><rect x="14.9774%" y="213" width="0.0417%" height="15" fill="rgb(245,114,25)" fg:x="11845" fg:w="33"/><text x="15.2274%" y="223.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (29 samples, 0.04%)</title><rect x="14.9824%" y="197" width="0.0367%" height="15" fill="rgb(210,61,42)" fg:x="11849" fg:w="29"/><text x="15.2324%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (9 samples, 0.01%)</title><rect x="15.0077%" y="181" width="0.0114%" height="15" fill="rgb(211,52,33)" fg:x="11869" fg:w="9"/><text x="15.2577%" y="191.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (36 samples, 0.05%)</title><rect x="14.9748%" y="229" width="0.0455%" height="15" fill="rgb(234,58,33)" fg:x="11843" fg:w="36"/><text x="15.2248%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.01%)</title><rect x="15.0204%" y="229" width="0.0101%" height="15" fill="rgb(220,115,36)" fg:x="11879" fg:w="8"/><text x="15.2704%" y="239.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (70 samples, 0.09%)</title><rect x="14.9470%" y="245" width="0.0885%" height="15" fill="rgb(243,153,54)" fg:x="11821" fg:w="70"/><text x="15.1970%" y="255.50"></text></g><g><title>HIToolbox`ReleaseEvent (8 samples, 0.01%)</title><rect x="15.0406%" y="245" width="0.0101%" height="15" fill="rgb(251,47,18)" fg:x="11895" fg:w="8"/><text x="15.2906%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (20 samples, 0.03%)</title><rect x="15.0520%" y="245" width="0.0253%" height="15" fill="rgb(242,102,42)" fg:x="11904" fg:w="20"/><text x="15.3020%" y="255.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (110 samples, 0.14%)</title><rect x="14.9394%" y="261" width="0.1391%" height="15" fill="rgb(234,31,38)" fg:x="11815" fg:w="110"/><text x="15.1894%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (13 samples, 0.02%)</title><rect x="15.0798%" y="261" width="0.0164%" height="15" fill="rgb(221,117,51)" fg:x="11926" fg:w="13"/><text x="15.3298%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (156 samples, 0.20%)</title><rect x="14.9141%" y="277" width="0.1973%" height="15" fill="rgb(212,20,18)" fg:x="11795" fg:w="156"/><text x="15.1641%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_release (12 samples, 0.02%)</title><rect x="15.0962%" y="261" width="0.0152%" height="15" fill="rgb(245,133,36)" fg:x="11939" fg:w="12"/><text x="15.3462%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (84 samples, 0.11%)</title><rect x="15.1127%" y="277" width="0.1062%" height="15" fill="rgb(212,6,19)" fg:x="11952" fg:w="84"/><text x="15.3627%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_retain (13 samples, 0.02%)</title><rect x="15.2189%" y="277" width="0.0164%" height="15" fill="rgb(218,1,36)" fg:x="12036" fg:w="13"/><text x="15.4689%" y="287.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (25 samples, 0.03%)</title><rect x="15.2416%" y="277" width="0.0316%" height="15" fill="rgb(246,84,54)" fg:x="12054" fg:w="25"/><text x="15.4916%" y="287.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::cleared (2,981 samples, 3.77%)</title><rect x="11.5140%" y="293" width="3.7693%" height="15" fill="rgb(242,110,6)" fg:x="9106" fg:w="2981"/><text x="11.7640%" y="303.50">App`..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_unlock (8 samples, 0.01%)</title><rect x="15.2732%" y="277" width="0.0101%" height="15" fill="rgb(214,47,5)" fg:x="12079" fg:w="8"/><text x="15.5232%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (18 samples, 0.02%)</title><rect x="15.3036%" y="293" width="0.0228%" height="15" fill="rgb(218,159,25)" fg:x="12103" fg:w="18"/><text x="15.5536%" y="303.50"></text></g><g><title>libobjc.A.dylib`objc_release (13 samples, 0.02%)</title><rect x="15.3264%" y="293" width="0.0164%" height="15" fill="rgb(215,211,28)" fg:x="12121" fg:w="13"/><text x="15.5764%" y="303.50"></text></g><g><title>App`std::panicking::try (3,086 samples, 3.90%)</title><rect x="11.4483%" y="309" width="3.9021%" height="15" fill="rgb(238,59,32)" fg:x="9054" fg:w="3086"/><text x="11.6983%" y="319.50">App`..</text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler (3,099 samples, 3.92%)</title><rect x="11.4420%" y="325" width="3.9185%" height="15" fill="rgb(226,82,3)" fg:x="9049" fg:w="3099"/><text x="11.6920%" y="335.50">App`..</text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::cleared (8 samples, 0.01%)</title><rect x="15.3504%" y="309" width="0.0101%" height="15" fill="rgb(240,164,32)" fg:x="12140" fg:w="8"/><text x="15.6004%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (10 samples, 0.01%)</title><rect x="15.3693%" y="325" width="0.0126%" height="15" fill="rgb(232,46,7)" fg:x="12155" fg:w="10"/><text x="15.6193%" y="335.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (4,570 samples, 5.78%)</title><rect x="9.6060%" y="341" width="5.7785%" height="15" fill="rgb(229,129,53)" fg:x="7597" fg:w="4570"/><text x="9.8560%" y="351.50">CoreFou..</text></g><g><title>CoreFoundation`__CFRunLoopPerCalloutARPEnd (13 samples, 0.02%)</title><rect x="15.3845%" y="341" width="0.0164%" height="15" fill="rgb(234,188,29)" fg:x="12167" fg:w="13"/><text x="15.6345%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (15 samples, 0.02%)</title><rect x="15.4262%" y="341" width="0.0190%" height="15" fill="rgb(246,141,4)" fg:x="12200" fg:w="15"/><text x="15.6762%" y="351.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (15 samples, 0.02%)</title><rect x="15.4452%" y="341" width="0.0190%" height="15" fill="rgb(229,23,39)" fg:x="12215" fg:w="15"/><text x="15.6952%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (4,835 samples, 6.11%)</title><rect x="9.3632%" y="357" width="6.1136%" height="15" fill="rgb(206,12,3)" fg:x="7405" fg:w="4835"/><text x="9.6132%" y="367.50">CoreFoun..</text></g><g><title>CoreFoundation`CFBasicHashGetBucket (11 samples, 0.01%)</title><rect x="15.4996%" y="309" width="0.0139%" height="15" fill="rgb(252,226,20)" fg:x="12258" fg:w="11"/><text x="15.7496%" y="319.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (69 samples, 0.09%)</title><rect x="15.4857%" y="325" width="0.0872%" height="15" fill="rgb(216,123,35)" fg:x="12247" fg:w="69"/><text x="15.7357%" y="335.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (44 samples, 0.06%)</title><rect x="15.5173%" y="309" width="0.0556%" height="15" fill="rgb(212,68,40)" fg:x="12272" fg:w="44"/><text x="15.7673%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopCollectSources0 (43 samples, 0.05%)</title><rect x="15.5185%" y="293" width="0.0544%" height="15" fill="rgb(254,125,32)" fg:x="12273" fg:w="43"/><text x="15.7685%" y="303.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (71 samples, 0.09%)</title><rect x="15.4844%" y="341" width="0.0898%" height="15" fill="rgb(253,97,22)" fg:x="12246" fg:w="71"/><text x="15.7344%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSources0 (88 samples, 0.11%)</title><rect x="15.4768%" y="357" width="0.1113%" height="15" fill="rgb(241,101,14)" fg:x="12240" fg:w="88"/><text x="15.7268%" y="367.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (9 samples, 0.01%)</title><rect x="15.6172%" y="325" width="0.0114%" height="15" fill="rgb(238,103,29)" fg:x="12351" fg:w="9"/><text x="15.8672%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.02%)</title><rect x="15.6323%" y="325" width="0.0215%" height="15" fill="rgb(233,195,47)" fg:x="12363" fg:w="17"/><text x="15.8823%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.01%)</title><rect x="15.6437%" y="309" width="0.0101%" height="15" fill="rgb(246,218,30)" fg:x="12372" fg:w="8"/><text x="15.8937%" y="319.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (49 samples, 0.06%)</title><rect x="15.6007%" y="341" width="0.0620%" height="15" fill="rgb(219,145,47)" fg:x="12338" fg:w="49"/><text x="15.8507%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (13 samples, 0.02%)</title><rect x="15.6804%" y="325" width="0.0164%" height="15" fill="rgb(243,12,26)" fg:x="12401" fg:w="13"/><text x="15.9304%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (11 samples, 0.01%)</title><rect x="15.6829%" y="309" width="0.0139%" height="15" fill="rgb(214,87,16)" fg:x="12403" fg:w="11"/><text x="15.9329%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (11 samples, 0.01%)</title><rect x="15.6829%" y="293" width="0.0139%" height="15" fill="rgb(208,99,42)" fg:x="12403" fg:w="11"/><text x="15.9329%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (8 samples, 0.01%)</title><rect x="15.6867%" y="277" width="0.0101%" height="15" fill="rgb(253,99,2)" fg:x="12406" fg:w="8"/><text x="15.9367%" y="287.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (36 samples, 0.05%)</title><rect x="15.6627%" y="341" width="0.0455%" height="15" fill="rgb(220,168,23)" fg:x="12387" fg:w="36"/><text x="15.9127%" y="351.50"></text></g><g><title>CoreFoundation`CFArrayCreateMutable (11 samples, 0.01%)</title><rect x="15.7107%" y="341" width="0.0139%" height="15" fill="rgb(242,38,24)" fg:x="12425" fg:w="11"/><text x="15.9607%" y="351.50"></text></g><g><title>CoreFoundation`CFSetGetCount (11 samples, 0.01%)</title><rect x="15.7360%" y="341" width="0.0139%" height="15" fill="rgb(225,182,9)" fg:x="12445" fg:w="11"/><text x="15.9860%" y="351.50"></text></g><g><title>CoreFoundation`_CFArrayCheckAndGetValueAtIndex (12 samples, 0.02%)</title><rect x="15.7601%" y="341" width="0.0152%" height="15" fill="rgb(243,178,37)" fg:x="12464" fg:w="12"/><text x="16.0101%" y="351.50"></text></g><g><title>CoreFoundation`CFBasicHashGetElements (13 samples, 0.02%)</title><rect x="16.4340%" y="325" width="0.0164%" height="15" fill="rgb(232,139,19)" fg:x="12997" fg:w="13"/><text x="16.6840%" y="335.50"></text></g><g><title>CoreFoundation`CFBasicHashGetBucket (10 samples, 0.01%)</title><rect x="16.4378%" y="309" width="0.0126%" height="15" fill="rgb(225,201,24)" fg:x="13000" fg:w="10"/><text x="16.6878%" y="319.50"></text></g><g><title>CoreFoundation`CFRetain (14 samples, 0.02%)</title><rect x="16.4555%" y="325" width="0.0177%" height="15" fill="rgb(221,47,46)" fg:x="13014" fg:w="14"/><text x="16.7055%" y="335.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (24 samples, 0.03%)</title><rect x="16.4934%" y="325" width="0.0303%" height="15" fill="rgb(249,23,13)" fg:x="13044" fg:w="24"/><text x="16.7434%" y="335.50"></text></g><g><title>CoreFoundation`CFArrayGetFirstIndexOfValue (15 samples, 0.02%)</title><rect x="16.5314%" y="309" width="0.0190%" height="15" fill="rgb(219,9,5)" fg:x="13074" fg:w="15"/><text x="16.7814%" y="319.50"></text></g><g><title>CoreFoundation`_CFArrayCheckAndGetValueAtIndex (9 samples, 0.01%)</title><rect x="16.5390%" y="293" width="0.0114%" height="15" fill="rgb(254,171,16)" fg:x="13080" fg:w="9"/><text x="16.7890%" y="303.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (8 samples, 0.01%)</title><rect x="16.5529%" y="293" width="0.0101%" height="15" fill="rgb(230,171,20)" fg:x="13091" fg:w="8"/><text x="16.8029%" y="303.50"></text></g><g><title>CoreFoundation`CFArrayInsertValueAtIndex (12 samples, 0.02%)</title><rect x="16.5503%" y="309" width="0.0152%" height="15" fill="rgb(210,71,41)" fg:x="13089" fg:w="12"/><text x="16.8003%" y="319.50"></text></g><g><title>CoreFoundation`__CFArrayReleaseValues (25 samples, 0.03%)</title><rect x="16.5921%" y="293" width="0.0316%" height="15" fill="rgb(206,173,20)" fg:x="13122" fg:w="25"/><text x="16.8421%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="16.6072%" y="277" width="0.0164%" height="15" fill="rgb(233,88,34)" fg:x="13134" fg:w="13"/><text x="16.8572%" y="287.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (53 samples, 0.07%)</title><rect x="16.5668%" y="309" width="0.0670%" height="15" fill="rgb(223,209,46)" fg:x="13102" fg:w="53"/><text x="16.8168%" y="319.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (28 samples, 0.04%)</title><rect x="16.6338%" y="309" width="0.0354%" height="15" fill="rgb(250,43,18)" fg:x="13155" fg:w="28"/><text x="16.8838%" y="319.50"></text></g><g><title>CoreFoundation`__CFRunLoopInsertionIndexInTimerArray (10 samples, 0.01%)</title><rect x="16.6730%" y="309" width="0.0126%" height="15" fill="rgb(208,13,10)" fg:x="13186" fg:w="10"/><text x="16.9230%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.01%)</title><rect x="16.6957%" y="309" width="0.0126%" height="15" fill="rgb(212,200,36)" fg:x="13204" fg:w="10"/><text x="16.9457%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (339 samples, 0.43%)</title><rect x="16.7084%" y="309" width="0.4286%" height="15" fill="rgb(225,90,30)" fg:x="13214" fg:w="339"/><text x="16.9584%" y="319.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (491 samples, 0.62%)</title><rect x="16.5238%" y="325" width="0.6208%" height="15" fill="rgb(236,182,39)" fg:x="13068" fg:w="491"/><text x="16.7738%" y="335.50"></text></g><g><title>CoreFoundation`CFEqual (11 samples, 0.01%)</title><rect x="17.1864%" y="277" width="0.0139%" height="15" fill="rgb(212,144,35)" fg:x="13592" fg:w="11"/><text x="17.4364%" y="287.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (42 samples, 0.05%)</title><rect x="17.1585%" y="293" width="0.0531%" height="15" fill="rgb(228,63,44)" fg:x="13570" fg:w="42"/><text x="17.4085%" y="303.50"></text></g><g><title>CoreFoundation`CFHash (9 samples, 0.01%)</title><rect x="17.2003%" y="277" width="0.0114%" height="15" fill="rgb(228,109,6)" fg:x="13603" fg:w="9"/><text x="17.4503%" y="287.50"></text></g><g><title>CoreFoundation`CFSetGetValue (75 samples, 0.09%)</title><rect x="17.1560%" y="309" width="0.0948%" height="15" fill="rgb(238,117,24)" fg:x="13568" fg:w="75"/><text x="17.4060%" y="319.50"></text></g><g><title>CoreFoundation`__CFStringHash (28 samples, 0.04%)</title><rect x="17.2154%" y="293" width="0.0354%" height="15" fill="rgb(242,26,26)" fg:x="13615" fg:w="28"/><text x="17.4654%" y="303.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (12 samples, 0.02%)</title><rect x="17.2534%" y="309" width="0.0152%" height="15" fill="rgb(221,92,48)" fg:x="13645" fg:w="12"/><text x="17.5034%" y="319.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeID (12 samples, 0.02%)</title><rect x="17.2534%" y="293" width="0.0152%" height="15" fill="rgb(209,209,32)" fg:x="13645" fg:w="12"/><text x="17.5034%" y="303.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (104 samples, 0.13%)</title><rect x="17.1446%" y="325" width="0.1315%" height="15" fill="rgb(221,70,22)" fg:x="13559" fg:w="104"/><text x="17.3946%" y="335.50"></text></g><g><title>CoreFoundation`__CFTSRToNanoseconds (11 samples, 0.01%)</title><rect x="17.2812%" y="325" width="0.0139%" height="15" fill="rgb(248,145,5)" fg:x="13667" fg:w="11"/><text x="17.5312%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (100 samples, 0.13%)</title><rect x="17.3191%" y="325" width="0.1264%" height="15" fill="rgb(226,116,26)" fg:x="13697" fg:w="100"/><text x="17.5691%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (15 samples, 0.02%)</title><rect x="17.4456%" y="325" width="0.0190%" height="15" fill="rgb(244,5,17)" fg:x="13797" fg:w="15"/><text x="17.6956%" y="335.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (14 samples, 0.02%)</title><rect x="17.4645%" y="325" width="0.0177%" height="15" fill="rgb(252,159,33)" fg:x="13812" fg:w="14"/><text x="17.7145%" y="335.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (1,351 samples, 1.71%)</title><rect x="15.7891%" y="341" width="1.7083%" height="15" fill="rgb(206,71,0)" fg:x="12487" fg:w="1351"/><text x="16.0391%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (9 samples, 0.01%)</title><rect x="17.5164%" y="245" width="0.0114%" height="15" fill="rgb(233,118,54)" fg:x="13853" fg:w="9"/><text x="17.7664%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (15 samples, 0.02%)</title><rect x="17.5126%" y="261" width="0.0190%" height="15" fill="rgb(234,83,48)" fg:x="13850" fg:w="15"/><text x="17.7626%" y="271.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (19 samples, 0.02%)</title><rect x="17.5101%" y="325" width="0.0240%" height="15" fill="rgb(228,3,54)" fg:x="13848" fg:w="19"/><text x="17.7601%" y="335.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (19 samples, 0.02%)</title><rect x="17.5101%" y="309" width="0.0240%" height="15" fill="rgb(226,155,13)" fg:x="13848" fg:w="19"/><text x="17.7601%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (18 samples, 0.02%)</title><rect x="17.5113%" y="293" width="0.0228%" height="15" fill="rgb(241,28,37)" fg:x="13849" fg:w="18"/><text x="17.7613%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (17 samples, 0.02%)</title><rect x="17.5126%" y="277" width="0.0215%" height="15" fill="rgb(233,93,10)" fg:x="13850" fg:w="17"/><text x="17.7626%" y="287.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (26 samples, 0.03%)</title><rect x="17.5063%" y="341" width="0.0329%" height="15" fill="rgb(225,113,19)" fg:x="13845" fg:w="26"/><text x="17.7563%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (8 samples, 0.01%)</title><rect x="17.5442%" y="341" width="0.0101%" height="15" fill="rgb(241,2,18)" fg:x="13875" fg:w="8"/><text x="17.7942%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.01%)</title><rect x="17.5543%" y="341" width="0.0126%" height="15" fill="rgb(228,207,21)" fg:x="13883" fg:w="10"/><text x="17.8043%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (11 samples, 0.01%)</title><rect x="17.5670%" y="341" width="0.0139%" height="15" fill="rgb(213,211,35)" fg:x="13893" fg:w="11"/><text x="17.8170%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_opt_self (9 samples, 0.01%)</title><rect x="17.5809%" y="341" width="0.0114%" height="15" fill="rgb(209,83,10)" fg:x="13904" fg:w="9"/><text x="17.8309%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (1,607 samples, 2.03%)</title><rect x="15.5881%" y="357" width="2.0320%" height="15" fill="rgb(209,164,1)" fg:x="12328" fg:w="1607"/><text x="15.8381%" y="367.50">C..</text></g><g><title>libsystem_kernel.dylib`kdebug_trace (8 samples, 0.01%)</title><rect x="17.6403%" y="341" width="0.0101%" height="15" fill="rgb(213,184,43)" fg:x="13951" fg:w="8"/><text x="17.8903%" y="351.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (341 samples, 0.43%)</title><rect x="17.6251%" y="357" width="0.4312%" height="15" fill="rgb(231,61,34)" fg:x="13939" fg:w="341"/><text x="17.8751%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (316 samples, 0.40%)</title><rect x="17.6567%" y="341" width="0.3996%" height="15" fill="rgb(235,75,3)" fg:x="13964" fg:w="316"/><text x="17.9067%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_get_main_queue_port_4CF (14 samples, 0.02%)</title><rect x="18.0588%" y="357" width="0.0177%" height="15" fill="rgb(220,106,47)" fg:x="14282" fg:w="14"/><text x="18.3088%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_runloop_root_queue_get_port_4CF (12 samples, 0.02%)</title><rect x="18.0765%" y="357" width="0.0152%" height="15" fill="rgb(210,196,33)" fg:x="14296" fg:w="12"/><text x="18.3265%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (62 samples, 0.08%)</title><rect x="18.1005%" y="357" width="0.0784%" height="15" fill="rgb(229,154,42)" fg:x="14315" fg:w="62"/><text x="18.3505%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_extract_member_trap (80 samples, 0.10%)</title><rect x="18.2030%" y="357" width="0.1012%" height="15" fill="rgb(228,114,26)" fg:x="14396" fg:w="80"/><text x="18.4530%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (740 samples, 0.94%)</title><rect x="18.3041%" y="357" width="0.9357%" height="15" fill="rgb(208,144,1)" fg:x="14476" fg:w="740"/><text x="18.5541%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`voucher_mach_msg_revert (16 samples, 0.02%)</title><rect x="19.2638%" y="357" width="0.0202%" height="15" fill="rgb(239,112,37)" fg:x="15235" fg:w="16"/><text x="19.5138%" y="367.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (8,084 samples, 10.22%)</title><rect x="9.0888%" y="373" width="10.2218%" height="15" fill="rgb(210,96,50)" fg:x="7188" fg:w="8084"/><text x="9.3388%" y="383.50">CoreFoundation`..</text></g><g><title>CoreFoundation`__CFStringEqual (8 samples, 0.01%)</title><rect x="19.3106%" y="373" width="0.0101%" height="15" fill="rgb(222,178,2)" fg:x="15272" fg:w="8"/><text x="19.5606%" y="383.50"></text></g><g><title>libdispatch.dylib`_dispatch_get_main_queue_port_4CF (25 samples, 0.03%)</title><rect x="19.3220%" y="373" width="0.0316%" height="15" fill="rgb(226,74,18)" fg:x="15281" fg:w="25"/><text x="19.5720%" y="383.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (18 samples, 0.02%)</title><rect x="19.3587%" y="373" width="0.0228%" height="15" fill="rgb(225,67,54)" fg:x="15310" fg:w="18"/><text x="19.6087%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_port_insert_member (9 samples, 0.01%)</title><rect x="19.4017%" y="373" width="0.0114%" height="15" fill="rgb(251,92,32)" fg:x="15344" fg:w="9"/><text x="19.6517%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.03%)</title><rect x="19.4168%" y="373" width="0.0341%" height="15" fill="rgb(228,149,22)" fg:x="15356" fg:w="27"/><text x="19.6668%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (24 samples, 0.03%)</title><rect x="19.4206%" y="357" width="0.0303%" height="15" fill="rgb(243,54,13)" fg:x="15359" fg:w="24"/><text x="19.6706%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (24 samples, 0.03%)</title><rect x="19.4206%" y="341" width="0.0303%" height="15" fill="rgb(243,180,28)" fg:x="15359" fg:w="24"/><text x="19.6706%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (11 samples, 0.01%)</title><rect x="19.4371%" y="325" width="0.0139%" height="15" fill="rgb(208,167,24)" fg:x="15372" fg:w="11"/><text x="19.6871%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.01%)</title><rect x="19.4611%" y="373" width="0.0139%" height="15" fill="rgb(245,73,45)" fg:x="15391" fg:w="11"/><text x="19.7111%" y="383.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (8 samples, 0.01%)</title><rect x="19.4826%" y="373" width="0.0101%" height="15" fill="rgb(237,203,48)" fg:x="15408" fg:w="8"/><text x="19.7326%" y="383.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (11,121 samples, 14.06%)</title><rect x="5.4485%" y="389" width="14.0619%" height="15" fill="rgb(211,197,16)" fg:x="4309" fg:w="11121"/><text x="5.6985%" y="399.50">CoreFoundation`CFRunL..</text></g><g><title>CoreFoundation`_CFStringGetCStringPtrInternal (9 samples, 0.01%)</title><rect x="19.5521%" y="373" width="0.0114%" height="15" fill="rgb(243,99,51)" fg:x="15463" fg:w="9"/><text x="19.8021%" y="383.50"></text></g><g><title>CoreFoundation`CFStringCompareWithOptionsAndLocale (61 samples, 0.08%)</title><rect x="19.5142%" y="389" width="0.0771%" height="15" fill="rgb(215,123,29)" fg:x="15433" fg:w="61"/><text x="19.7642%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (17 samples, 0.02%)</title><rect x="19.5698%" y="373" width="0.0215%" height="15" fill="rgb(239,186,37)" fg:x="15477" fg:w="17"/><text x="19.8198%" y="383.50"></text></g><g><title>CoreFoundation`CFStringGetLength (28 samples, 0.04%)</title><rect x="19.5913%" y="389" width="0.0354%" height="15" fill="rgb(252,136,39)" fg:x="15494" fg:w="28"/><text x="19.8413%" y="399.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (17 samples, 0.02%)</title><rect x="19.7507%" y="357" width="0.0215%" height="15" fill="rgb(223,213,32)" fg:x="15620" fg:w="17"/><text x="20.0007%" y="367.50"></text></g><g><title>HIToolbox`CreateEventWithCGEvent (8 samples, 0.01%)</title><rect x="19.7772%" y="325" width="0.0101%" height="15" fill="rgb(233,115,5)" fg:x="15641" fg:w="8"/><text x="20.0272%" y="335.50"></text></g><g><title>HIToolbox`CreateAndPostEventWithCGEvent(__CGEvent*, unsigned int, unsigned char, __CFMachPortBoost*) (18 samples, 0.02%)</title><rect x="19.7772%" y="341" width="0.0228%" height="15" fill="rgb(207,226,44)" fg:x="15641" fg:w="18"/><text x="20.0272%" y="351.50"></text></g><g><title>HIToolbox`PingEventQueueMachPort (16 samples, 0.02%)</title><rect x="19.8012%" y="341" width="0.0202%" height="15" fill="rgb(208,126,0)" fg:x="15660" fg:w="16"/><text x="20.0512%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (15 samples, 0.02%)</title><rect x="19.8025%" y="325" width="0.0190%" height="15" fill="rgb(244,66,21)" fg:x="15661" fg:w="15"/><text x="20.0525%" y="335.50"></text></g><g><title>HIToolbox`_RemoveCGEventFromQueue (8 samples, 0.01%)</title><rect x="19.8215%" y="341" width="0.0101%" height="15" fill="rgb(222,97,12)" fg:x="15676" fg:w="8"/><text x="20.0715%" y="351.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (56 samples, 0.07%)</title><rect x="19.7721%" y="357" width="0.0708%" height="15" fill="rgb(219,213,19)" fg:x="15637" fg:w="56"/><text x="20.0221%" y="367.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (90 samples, 0.11%)</title><rect x="19.7367%" y="373" width="0.1138%" height="15" fill="rgb(252,169,30)" fg:x="15609" fg:w="90"/><text x="19.9867%" y="383.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (131 samples, 0.17%)</title><rect x="19.6925%" y="389" width="0.1656%" height="15" fill="rgb(206,32,51)" fg:x="15574" fg:w="131"/><text x="19.9425%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free (8 samples, 0.01%)</title><rect x="19.8594%" y="389" width="0.0101%" height="15" fill="rgb(250,172,42)" fg:x="15706" fg:w="8"/><text x="20.1094%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (10 samples, 0.01%)</title><rect x="19.8822%" y="389" width="0.0126%" height="15" fill="rgb(209,34,43)" fg:x="15724" fg:w="10"/><text x="20.1322%" y="399.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (11 samples, 0.01%)</title><rect x="19.8948%" y="389" width="0.0139%" height="15" fill="rgb(223,11,35)" fg:x="15734" fg:w="11"/><text x="20.1448%" y="399.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (11,519 samples, 14.57%)</title><rect x="5.3600%" y="405" width="14.5652%" height="15" fill="rgb(251,219,26)" fg:x="4239" fg:w="11519"/><text x="5.6100%" y="415.50">HIToolbox`RunCurrentEv..</text></g><g><title>CoreFoundation`_CFRelease (14 samples, 0.02%)</title><rect x="19.9340%" y="389" width="0.0177%" height="15" fill="rgb(231,119,3)" fg:x="15765" fg:w="14"/><text x="20.1840%" y="399.50"></text></g><g><title>CoreFoundation`__CFMachPortBoostDeallocate (14 samples, 0.02%)</title><rect x="19.9340%" y="373" width="0.0177%" height="15" fill="rgb(216,97,11)" fg:x="15765" fg:w="14"/><text x="20.1840%" y="383.50"></text></g><g><title>libdispatch.dylib`voucher_decrement_importance_count4CF (14 samples, 0.02%)</title><rect x="19.9340%" y="357" width="0.0177%" height="15" fill="rgb(223,59,9)" fg:x="15765" fg:w="14"/><text x="20.1840%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_voucher_attr_command (14 samples, 0.02%)</title><rect x="19.9340%" y="341" width="0.0177%" height="15" fill="rgb(233,93,31)" fg:x="15765" fg:w="14"/><text x="20.1840%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (14 samples, 0.02%)</title><rect x="19.9340%" y="325" width="0.0177%" height="15" fill="rgb(239,81,33)" fg:x="15765" fg:w="14"/><text x="20.1840%" y="335.50"></text></g><g><title>HIToolbox`_DropPendingBoost (22 samples, 0.03%)</title><rect x="19.9315%" y="405" width="0.0278%" height="15" fill="rgb(213,120,34)" fg:x="15763" fg:w="22"/><text x="20.1815%" y="415.50"></text></g><g><title>HIToolbox`_EventThreadLock (13 samples, 0.02%)</title><rect x="19.9593%" y="405" width="0.0164%" height="15" fill="rgb(243,49,53)" fg:x="15785" fg:w="13"/><text x="20.2093%" y="415.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (15 samples, 0.02%)</title><rect x="19.9770%" y="405" width="0.0190%" height="15" fill="rgb(247,216,33)" fg:x="15799" fg:w="15"/><text x="20.2270%" y="415.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (9 samples, 0.01%)</title><rect x="20.0099%" y="405" width="0.0114%" height="15" fill="rgb(226,26,14)" fg:x="15825" fg:w="9"/><text x="20.2599%" y="415.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (11,970 samples, 15.14%)</title><rect x="4.9225%" y="421" width="15.1354%" height="15" fill="rgb(215,49,53)" fg:x="3893" fg:w="11970"/><text x="5.1725%" y="431.50">HIToolbox`ReceiveNextEv..</text></g><g><title>libsystem_pthread.dylib`pthread_self (28 samples, 0.04%)</title><rect x="20.0225%" y="405" width="0.0354%" height="15" fill="rgb(245,162,40)" fg:x="15835" fg:w="28"/><text x="20.2725%" y="415.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (12,017 samples, 15.19%)</title><rect x="4.8770%" y="437" width="15.1949%" height="15" fill="rgb(229,68,17)" fg:x="3857" fg:w="12017"/><text x="5.1270%" y="447.50">HIToolbox`_BlockUntilNe..</text></g><g><title>libsystem_c.dylib`gettimeofday (12 samples, 0.02%)</title><rect x="20.0807%" y="437" width="0.0152%" height="15" fill="rgb(213,182,10)" fg:x="15881" fg:w="12"/><text x="20.3307%" y="447.50"></text></g><g><title>AppKit`_DPSNextEvent (12,132 samples, 15.34%)</title><rect x="4.7568%" y="453" width="15.3403%" height="15" fill="rgb(245,125,30)" fg:x="3762" fg:w="12132"/><text x="5.0068%" y="463.50">AppKit`_DPSNextEvent</text></g><g><title>AppKit`_NSEventMarkCATransactionInputTime (12 samples, 0.02%)</title><rect x="20.1022%" y="453" width="0.0152%" height="15" fill="rgb(232,202,2)" fg:x="15898" fg:w="12"/><text x="20.3522%" y="463.50"></text></g><g><title>AppKit`_PerfAddRunLoopObserver (8 samples, 0.01%)</title><rect x="20.1199%" y="453" width="0.0101%" height="15" fill="rgb(237,140,51)" fg:x="15912" fg:w="8"/><text x="20.3699%" y="463.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (9 samples, 0.01%)</title><rect x="20.1629%" y="453" width="0.0114%" height="15" fill="rgb(236,157,25)" fg:x="15946" fg:w="9"/><text x="20.4129%" y="463.50"></text></g><g><title>HIToolbox`CopyEventCGEvent (10 samples, 0.01%)</title><rect x="20.1856%" y="453" width="0.0126%" height="15" fill="rgb(219,209,0)" fg:x="15964" fg:w="10"/><text x="20.4356%" y="463.50"></text></g><g><title>SkyLight`SLEventGetIntegerValueField (13 samples, 0.02%)</title><rect x="20.2375%" y="453" width="0.0164%" height="15" fill="rgb(240,116,54)" fg:x="16005" fg:w="13"/><text x="20.4875%" y="463.50"></text></g><g><title>SkyLight`SLSGetDisplayBounds (11 samples, 0.01%)</title><rect x="20.2615%" y="453" width="0.0139%" height="15" fill="rgb(216,10,36)" fg:x="16024" fg:w="11"/><text x="20.5115%" y="463.50"></text></g><g><title>SkyLight`SLSMainDisplayID (8 samples, 0.01%)</title><rect x="20.2754%" y="453" width="0.0101%" height="15" fill="rgb(222,72,44)" fg:x="16035" fg:w="8"/><text x="20.5254%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (20 samples, 0.03%)</title><rect x="20.2956%" y="437" width="0.0253%" height="15" fill="rgb(232,159,9)" fg:x="16051" fg:w="20"/><text x="20.5456%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (19 samples, 0.02%)</title><rect x="20.2969%" y="421" width="0.0240%" height="15" fill="rgb(210,39,32)" fg:x="16052" fg:w="19"/><text x="20.5469%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.02%)</title><rect x="20.2994%" y="405" width="0.0215%" height="15" fill="rgb(216,194,45)" fg:x="16054" fg:w="17"/><text x="20.5494%" y="415.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (25 samples, 0.03%)</title><rect x="20.2931%" y="453" width="0.0316%" height="15" fill="rgb(218,18,35)" fg:x="16049" fg:w="25"/><text x="20.5431%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (20 samples, 0.03%)</title><rect x="20.3348%" y="453" width="0.0253%" height="15" fill="rgb(207,83,51)" fg:x="16082" fg:w="20"/><text x="20.5848%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_release (13 samples, 0.02%)</title><rect x="20.3437%" y="437" width="0.0164%" height="15" fill="rgb(225,63,43)" fg:x="16089" fg:w="13"/><text x="20.5937%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (105 samples, 0.13%)</title><rect x="20.3614%" y="453" width="0.1328%" height="15" fill="rgb(207,57,36)" fg:x="16103" fg:w="105"/><text x="20.6114%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (16 samples, 0.02%)</title><rect x="20.4941%" y="453" width="0.0202%" height="15" fill="rgb(216,99,33)" fg:x="16208" fg:w="16"/><text x="20.7441%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_object::rootAutorelease2 (10 samples, 0.01%)</title><rect x="20.5144%" y="453" width="0.0126%" height="15" fill="rgb(225,42,16)" fg:x="16224" fg:w="10"/><text x="20.7644%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_release (10 samples, 0.01%)</title><rect x="20.5270%" y="453" width="0.0126%" height="15" fill="rgb(220,201,45)" fg:x="16234" fg:w="10"/><text x="20.7770%" y="463.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (14,154 samples, 17.90%)</title><rect x="2.6515%" y="469" width="17.8970%" height="15" fill="rgb(225,33,4)" fg:x="2097" fg:w="14154"/><text x="2.9015%" y="479.50">AppKit`-[NSApplication(NSEve..</text></g><g><title>AppKit`-[NSEvent _initWithCGEvent:eventRef:] (8 samples, 0.01%)</title><rect x="20.5536%" y="469" width="0.0101%" height="15" fill="rgb(224,33,50)" fg:x="16255" fg:w="8"/><text x="20.8036%" y="479.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (8 samples, 0.01%)</title><rect x="20.5637%" y="469" width="0.0101%" height="15" fill="rgb(246,198,51)" fg:x="16263" fg:w="8"/><text x="20.8137%" y="479.50"></text></g><g><title>Foundation` (15 samples, 0.02%)</title><rect x="20.5991%" y="469" width="0.0190%" height="15" fill="rgb(205,22,4)" fg:x="16291" fg:w="15"/><text x="20.8491%" y="479.50"></text></g><g><title>Foundation`-[NSAutoreleasePool drain] (23 samples, 0.03%)</title><rect x="20.6256%" y="469" width="0.0291%" height="15" fill="rgb(206,3,8)" fg:x="16312" fg:w="23"/><text x="20.8756%" y="479.50"></text></g><g><title>CoreFoundation`_CFGetTSD (8 samples, 0.01%)</title><rect x="20.6927%" y="437" width="0.0101%" height="15" fill="rgb(251,23,15)" fg:x="16365" fg:w="8"/><text x="20.9427%" y="447.50"></text></g><g><title>Foundation`NSKVOCopyPendingNotificationStack (18 samples, 0.02%)</title><rect x="20.6876%" y="453" width="0.0228%" height="15" fill="rgb(252,88,28)" fg:x="16361" fg:w="18"/><text x="20.9376%" y="463.50"></text></g><g><title>Foundation`NSKeyValueDidChangeWithPerThreadPendingNotifications (28 samples, 0.04%)</title><rect x="20.6762%" y="469" width="0.0354%" height="15" fill="rgb(212,127,14)" fg:x="16352" fg:w="28"/><text x="20.9262%" y="479.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (25 samples, 0.03%)</title><rect x="20.7470%" y="437" width="0.0316%" height="15" fill="rgb(247,145,37)" fg:x="16408" fg:w="25"/><text x="20.9970%" y="447.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (19 samples, 0.02%)</title><rect x="20.7546%" y="421" width="0.0240%" height="15" fill="rgb(209,117,53)" fg:x="16414" fg:w="19"/><text x="21.0046%" y="431.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObservingCustomization) observationInfo] (9 samples, 0.01%)</title><rect x="20.7786%" y="437" width="0.0114%" height="15" fill="rgb(212,90,42)" fg:x="16433" fg:w="9"/><text x="21.0286%" y="447.50"></text></g><g><title>Foundation`_NSKeyValueRetainedObservationInfoForObject (40 samples, 0.05%)</title><rect x="20.7407%" y="453" width="0.0506%" height="15" fill="rgb(218,164,37)" fg:x="16403" fg:w="40"/><text x="20.9907%" y="463.50"></text></g><g><title>Foundation`NSKeyValueWillChangeWithPerThreadPendingNotifications (77 samples, 0.10%)</title><rect x="20.7116%" y="469" width="0.0974%" height="15" fill="rgb(246,65,34)" fg:x="16380" fg:w="77"/><text x="20.9616%" y="479.50"></text></g><g><title>HIToolbox`_HIEnableSuddenTerminationIfRequestedByPlist (10 samples, 0.01%)</title><rect x="20.8153%" y="469" width="0.0126%" height="15" fill="rgb(231,100,33)" fg:x="16462" fg:w="10"/><text x="21.0653%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (9 samples, 0.01%)</title><rect x="20.8431%" y="469" width="0.0114%" height="15" fill="rgb(228,126,14)" fg:x="16484" fg:w="9"/><text x="21.0931%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (129 samples, 0.16%)</title><rect x="20.8646%" y="469" width="0.1631%" height="15" fill="rgb(215,173,21)" fg:x="16501" fg:w="129"/><text x="21.1146%" y="479.50"></text></g><g><title>libobjc.A.dylib`objc_opt_new (16 samples, 0.02%)</title><rect x="21.0277%" y="469" width="0.0202%" height="15" fill="rgb(210,6,40)" fg:x="16630" fg:w="16"/><text x="21.2777%" y="479.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_recursive_lock_lock_with_options (11 samples, 0.01%)</title><rect x="21.0783%" y="469" width="0.0139%" height="15" fill="rgb(212,48,18)" fg:x="16670" fg:w="11"/><text x="21.3283%" y="479.50"></text></g><g><title>AppKit`-[NSApplication run] (15,652 samples, 19.79%)</title><rect x="1.3100%" y="485" width="19.7911%" height="15" fill="rgb(230,214,11)" fg:x="1036" fg:w="15652"/><text x="1.5600%" y="495.50">AppKit`-[NSApplication run]</text></g><g><title>AppKit`-[NSResponder retain] (15 samples, 0.02%)</title><rect x="21.1087%" y="485" width="0.0190%" height="15" fill="rgb(254,105,39)" fg:x="16694" fg:w="15"/><text x="21.3587%" y="495.50"></text></g><g><title>AppKit`DYLD-STUB$$NSPushAutoreleasePool (8 samples, 0.01%)</title><rect x="21.1276%" y="485" width="0.0101%" height="15" fill="rgb(245,158,5)" fg:x="16709" fg:w="8"/><text x="21.3776%" y="495.50"></text></g><g><title>App`objc2::foundation::thread::MainThreadMarker::new_unchecked (8 samples, 0.01%)</title><rect x="21.1542%" y="485" width="0.0101%" height="15" fill="rgb(249,208,11)" fg:x="16730" fg:w="8"/><text x="21.4042%" y="495.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::get_old_and_new_control_flow (9 samples, 0.01%)</title><rect x="21.1871%" y="469" width="0.0114%" height="15" fill="rgb(210,39,28)" fg:x="16756" fg:w="9"/><text x="21.4371%" y="479.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events::_{{closure}} (15 samples, 0.02%)</title><rect x="21.2199%" y="437" width="0.0190%" height="15" fill="rgb(211,56,53)" fg:x="16782" fg:w="15"/><text x="21.4699%" y="447.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (29 samples, 0.04%)</title><rect x="21.2086%" y="453" width="0.0367%" height="15" fill="rgb(226,201,30)" fg:x="16773" fg:w="29"/><text x="21.4586%" y="463.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (12 samples, 0.02%)</title><rect x="21.2465%" y="453" width="0.0152%" height="15" fill="rgb(239,101,34)" fg:x="16803" fg:w="12"/><text x="21.4965%" y="463.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (52 samples, 0.07%)</title><rect x="21.1984%" y="469" width="0.0658%" height="15" fill="rgb(226,209,5)" fg:x="16765" fg:w="52"/><text x="21.4484%" y="479.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::exit (94 samples, 0.12%)</title><rect x="21.1643%" y="485" width="0.1189%" height="15" fill="rgb(250,105,47)" fg:x="16738" fg:w="94"/><text x="21.4143%" y="495.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::set_callback (16 samples, 0.02%)</title><rect x="21.2832%" y="485" width="0.0202%" height="15" fill="rgb(230,72,3)" fg:x="16832" fg:w="16"/><text x="21.5332%" y="495.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (10 samples, 0.01%)</title><rect x="21.3084%" y="469" width="0.0126%" height="15" fill="rgb(232,218,39)" fg:x="16852" fg:w="10"/><text x="21.5584%" y="479.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApp (17 samples, 0.02%)</title><rect x="21.3034%" y="485" width="0.0215%" height="15" fill="rgb(248,166,6)" fg:x="16848" fg:w="17"/><text x="21.5534%" y="495.50"></text></g><g><title>CoreFoundation`+[NSDate distantFuture] (8 samples, 0.01%)</title><rect x="21.3350%" y="485" width="0.0101%" height="15" fill="rgb(247,89,20)" fg:x="16873" fg:w="8"/><text x="21.5850%" y="495.50"></text></g><g><title>Foundation`NSKeyValueWillChangeWithPerThreadPendingNotifications (12 samples, 0.02%)</title><rect x="21.3793%" y="485" width="0.0152%" height="15" fill="rgb(248,130,54)" fg:x="16908" fg:w="12"/><text x="21.6293%" y="495.50"></text></g><g><title>Foundation`NSPushAutoreleasePool (13 samples, 0.02%)</title><rect x="21.3944%" y="485" width="0.0164%" height="15" fill="rgb(234,196,4)" fg:x="16920" fg:w="13"/><text x="21.6444%" y="495.50"></text></g><g><title>HIToolbox`_HIEnableSuddenTerminationIfRequestedByPlist (8 samples, 0.01%)</title><rect x="21.4109%" y="485" width="0.0101%" height="15" fill="rgb(250,143,31)" fg:x="16933" fg:w="8"/><text x="21.6609%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (109 samples, 0.14%)</title><rect x="21.4235%" y="485" width="0.1378%" height="15" fill="rgb(211,110,34)" fg:x="16943" fg:w="109"/><text x="21.6735%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_retain (14 samples, 0.02%)</title><rect x="21.5613%" y="485" width="0.0177%" height="15" fill="rgb(215,124,48)" fg:x="17052" fg:w="14"/><text x="21.8113%" y="495.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return (16,107 samples, 20.37%)</title><rect x="1.2404%" y="501" width="20.3664%" height="15" fill="rgb(216,46,13)" fg:x="981" fg:w="16107"/><text x="1.4904%" y="511.50">App`winit::platform_impl::platfo..</text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::send (27 samples, 0.03%)</title><rect x="21.6119%" y="485" width="0.0341%" height="15" fill="rgb(205,184,25)" fg:x="17092" fg:w="27"/><text x="21.8619%" y="495.50"></text></g><g><title>CoreFoundation`CFRunLoopSourceSignal (10 samples, 0.01%)</title><rect x="21.6473%" y="485" width="0.0126%" height="15" fill="rgb(228,1,10)" fg:x="17120" fg:w="10"/><text x="21.8973%" y="495.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoopProxy&lt;T&gt;::send_event (52 samples, 0.07%)</title><rect x="21.6069%" y="501" width="0.0658%" height="15" fill="rgb(213,116,27)" fg:x="17088" fg:w="52"/><text x="21.8569%" y="511.50"></text></g><g><title>CoreFoundation`CFRelease (9 samples, 0.01%)</title><rect x="21.6764%" y="501" width="0.0114%" height="15" fill="rgb(241,95,50)" fg:x="17143" fg:w="9"/><text x="21.9264%" y="511.50"></text></g><g><title>CoreFoundation`CFRunLoopGetMain (8 samples, 0.01%)</title><rect x="21.6878%" y="501" width="0.0101%" height="15" fill="rgb(238,48,32)" fg:x="17152" fg:w="8"/><text x="21.9378%" y="511.50"></text></g><g><title>CoreFoundation`CFRunLoopSourceInvalidate (9 samples, 0.01%)</title><rect x="21.7346%" y="469" width="0.0114%" height="15" fill="rgb(235,113,49)" fg:x="17189" fg:w="9"/><text x="21.9846%" y="479.50"></text></g><g><title>CoreFoundation`__CFRunLoopSourceDeallocate (14 samples, 0.02%)</title><rect x="21.7333%" y="485" width="0.0177%" height="15" fill="rgb(205,127,43)" fg:x="17188" fg:w="14"/><text x="21.9833%" y="495.50"></text></g><g><title>CoreFoundation`_CFRelease (40 samples, 0.05%)</title><rect x="21.7131%" y="501" width="0.0506%" height="15" fill="rgb(250,162,2)" fg:x="17172" fg:w="40"/><text x="21.9631%" y="511.50"></text></g><g><title>CoreFoundation`__CFRunLoopSourceDeallocate (10 samples, 0.01%)</title><rect x="21.7636%" y="501" width="0.0126%" height="15" fill="rgb(220,13,41)" fg:x="17212" fg:w="10"/><text x="22.0136%" y="511.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events (17,001 samples, 21.50%)</title><rect x="0.3035%" y="517" width="21.4969%" height="15" fill="rgb(249,221,25)" fg:x="240" fg:w="17001"/><text x="0.5535%" y="527.50">App`glutin_window::GlutinWindow::p..</text></g><g><title>App`glutin_window::GlutinWindow::poll_event (17,070 samples, 21.58%)</title><rect x="0.2327%" y="533" width="21.5841%" height="15" fill="rgb(215,208,19)" fg:x="184" fg:w="17070"/><text x="0.4827%" y="543.50">App`glutin_window::GlutinWindow::p..</text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::Window&gt;::poll_event (17,079 samples, 21.60%)</title><rect x="0.2276%" y="549" width="21.5955%" height="15" fill="rgb(236,175,2)" fg:x="180" fg:w="17079"/><text x="0.4776%" y="559.50">App`&lt;glutin_window::GlutinWindow a..</text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::Window&gt;::size (12 samples, 0.02%)</title><rect x="21.8256%" y="549" width="0.0152%" height="15" fill="rgb(241,52,2)" fg:x="17261" fg:w="12"/><text x="22.0756%" y="559.50"></text></g><g><title>App`winit::platform_impl::platform::window::WinitWindow::inner_size (10 samples, 0.01%)</title><rect x="21.8281%" y="533" width="0.0126%" height="15" fill="rgb(248,140,14)" fg:x="17263" fg:w="10"/><text x="22.0781%" y="543.50"></text></g><g><title>CoreFoundation`__CFNumberHash (15 samples, 0.02%)</title><rect x="21.9053%" y="405" width="0.0190%" height="15" fill="rgb(253,22,42)" fg:x="17324" fg:w="15"/><text x="22.1553%" y="415.50"></text></g><g><title>CoreFoundation`__CFNumberGetValue (12 samples, 0.02%)</title><rect x="21.9091%" y="389" width="0.0152%" height="15" fill="rgb(234,61,47)" fg:x="17327" fg:w="12"/><text x="22.1591%" y="399.50"></text></g><g><title>Foundation`probeGC (24 samples, 0.03%)</title><rect x="21.8964%" y="421" width="0.0303%" height="15" fill="rgb(208,226,15)" fg:x="17317" fg:w="24"/><text x="22.1464%" y="431.50"></text></g><g><title>Foundation`-[NSConcreteMapTable objectForKey:] (36 samples, 0.05%)</title><rect x="21.8926%" y="437" width="0.0455%" height="15" fill="rgb(217,221,4)" fg:x="17314" fg:w="36"/><text x="22.1426%" y="447.50"></text></g><g><title>AppKit`+[NSCGLSurface surfaceWithID:] (39 samples, 0.05%)</title><rect x="21.8926%" y="453" width="0.0493%" height="15" fill="rgb(212,174,34)" fg:x="17314" fg:w="39"/><text x="22.1426%" y="463.50"></text></g><g><title>CoreFoundation`_CFRelease (9 samples, 0.01%)</title><rect x="22.0115%" y="357" width="0.0114%" height="15" fill="rgb(253,83,4)" fg:x="17408" fg:w="9"/><text x="22.2615%" y="367.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (18 samples, 0.02%)</title><rect x="22.0279%" y="325" width="0.0228%" height="15" fill="rgb(250,195,49)" fg:x="17421" fg:w="18"/><text x="22.2779%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (11 samples, 0.01%)</title><rect x="22.0368%" y="309" width="0.0139%" height="15" fill="rgb(241,192,25)" fg:x="17428" fg:w="11"/><text x="22.2868%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (10 samples, 0.01%)</title><rect x="22.0380%" y="293" width="0.0126%" height="15" fill="rgb(208,124,10)" fg:x="17429" fg:w="10"/><text x="22.2880%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (9 samples, 0.01%)</title><rect x="22.0393%" y="277" width="0.0114%" height="15" fill="rgb(222,33,0)" fg:x="17430" fg:w="9"/><text x="22.2893%" y="287.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreateDataBuffer (24 samples, 0.03%)</title><rect x="22.0229%" y="357" width="0.0303%" height="15" fill="rgb(234,209,28)" fg:x="17417" fg:w="24"/><text x="22.2729%" y="367.50"></text></g><g><title>IOAccelerator`_IOAccelResourceAlloc (21 samples, 0.03%)</title><rect x="22.0267%" y="341" width="0.0266%" height="15" fill="rgb(224,11,23)" fg:x="17420" fg:w="21"/><text x="22.2767%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (497 samples, 0.63%)</title><rect x="22.0583%" y="309" width="0.6284%" height="15" fill="rgb(232,99,1)" fg:x="17445" fg:w="497"/><text x="22.3083%" y="319.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (503 samples, 0.64%)</title><rect x="22.0545%" y="357" width="0.6360%" height="15" fill="rgb(237,95,45)" fg:x="17442" fg:w="503"/><text x="22.3045%" y="367.50"></text></g><g><title>IOKit`IOConnectCallMethod (503 samples, 0.64%)</title><rect x="22.0545%" y="341" width="0.6360%" height="15" fill="rgb(208,109,11)" fg:x="17442" fg:w="503"/><text x="22.3045%" y="351.50"></text></g><g><title>IOKit`io_connect_method (503 samples, 0.64%)</title><rect x="22.0545%" y="325" width="0.6360%" height="15" fill="rgb(216,190,48)" fg:x="17442" fg:w="503"/><text x="22.3045%" y="335.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (544 samples, 0.69%)</title><rect x="22.0102%" y="373" width="0.6879%" height="15" fill="rgb(251,171,36)" fg:x="17407" fg:w="544"/><text x="22.2602%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelCommandBuffer::getNew (563 samples, 0.71%)</title><rect x="21.9900%" y="405" width="0.7119%" height="15" fill="rgb(230,62,22)" fg:x="17391" fg:w="563"/><text x="22.2400%" y="415.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (553 samples, 0.70%)</title><rect x="22.0026%" y="389" width="0.6992%" height="15" fill="rgb(225,114,35)" fg:x="17401" fg:w="553"/><text x="22.2526%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`intelSubmitCommands (570 samples, 0.72%)</title><rect x="21.9837%" y="421" width="0.7207%" height="15" fill="rgb(215,118,42)" fg:x="17386" fg:w="570"/><text x="22.2337%" y="431.50"></text></g><g><title>GLEngine`gleBindFramebuffer (13 samples, 0.02%)</title><rect x="22.7284%" y="405" width="0.0164%" height="15" fill="rgb(243,119,21)" fg:x="17975" fg:w="13"/><text x="22.9784%" y="415.50"></text></g><g><title>GLEngine`glBindFramebuffer_Exec (21 samples, 0.03%)</title><rect x="22.7196%" y="421" width="0.0266%" height="15" fill="rgb(252,177,53)" fg:x="17968" fg:w="21"/><text x="22.9696%" y="431.50"></text></g><g><title>GLEngine`glDrawArrays_Exec (11 samples, 0.01%)</title><rect x="22.7537%" y="421" width="0.0139%" height="15" fill="rgb(237,209,29)" fg:x="17995" fg:w="11"/><text x="23.0037%" y="431.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (11 samples, 0.01%)</title><rect x="22.7537%" y="405" width="0.0139%" height="15" fill="rgb(212,65,23)" fg:x="17995" fg:w="11"/><text x="23.0037%" y="415.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCore (11 samples, 0.01%)</title><rect x="22.7537%" y="389" width="0.0139%" height="15" fill="rgb(230,222,46)" fg:x="17995" fg:w="11"/><text x="23.0037%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (11 samples, 0.01%)</title><rect x="22.7537%" y="373" width="0.0139%" height="15" fill="rgb(215,135,32)" fg:x="17995" fg:w="11"/><text x="23.0037%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gpusLoadCurrentPipelinePrograms (11 samples, 0.01%)</title><rect x="22.7537%" y="357" width="0.0139%" height="15" fill="rgb(246,101,22)" fg:x="17995" fg:w="11"/><text x="23.0037%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`intelUpdateCtxSysProgramCommon(GLDContextRec*, GLDProgramRec*, GLDPipelineProgramRec*, void*, ShaderInfoCacheRec*, unsigned int) (11 samples, 0.01%)</title><rect x="22.7537%" y="341" width="0.0139%" height="15" fill="rgb(206,107,13)" fg:x="17995" fg:w="11"/><text x="23.0037%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`USC::IM_Shader::Compile (11 samples, 0.01%)</title><rect x="22.7537%" y="325" width="0.0139%" height="15" fill="rgb(250,100,44)" fg:x="17995" fg:w="11"/><text x="23.0037%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramPipeline (48 samples, 0.06%)</title><rect x="22.7777%" y="373" width="0.0607%" height="15" fill="rgb(231,147,38)" fg:x="18014" fg:w="48"/><text x="23.0277%" y="383.50"></text></g><g><title>GLEngine`gleBeginPrimitiveTCLFunc (52 samples, 0.07%)</title><rect x="22.7765%" y="405" width="0.0658%" height="15" fill="rgb(229,8,40)" fg:x="18013" fg:w="52"/><text x="23.0265%" y="415.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrIntelBeginPrimitiveBuffer (51 samples, 0.06%)</title><rect x="22.7777%" y="389" width="0.0645%" height="15" fill="rgb(221,135,30)" fg:x="18014" fg:w="51"/><text x="23.0277%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (17 samples, 0.02%)</title><rect x="22.8460%" y="389" width="0.0215%" height="15" fill="rgb(249,193,18)" fg:x="18068" fg:w="17"/><text x="23.0960%" y="399.50"></text></g><g><title>GLEngine`gleUpdateDeferredStateFull (32 samples, 0.04%)</title><rect x="22.8713%" y="389" width="0.0405%" height="15" fill="rgb(209,133,39)" fg:x="18088" fg:w="32"/><text x="23.1213%" y="399.50"></text></g><g><title>libGPUSupportMercury.dylib`gldLoadFramebuffer (13 samples, 0.02%)</title><rect x="22.9269%" y="373" width="0.0164%" height="15" fill="rgb(232,100,14)" fg:x="18132" fg:w="13"/><text x="23.1769%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrUpdateFramebuffer (8 samples, 0.01%)</title><rect x="22.9333%" y="357" width="0.0101%" height="15" fill="rgb(224,185,1)" fg:x="18137" fg:w="8"/><text x="23.1833%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrBindContextDrawFramebuffer (33 samples, 0.04%)</title><rect x="22.9459%" y="357" width="0.0417%" height="15" fill="rgb(223,139,8)" fg:x="18147" fg:w="33"/><text x="23.1959%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`patchColorAttachmentSurfaceState(unsigned int, unsigned int, SGfxRenderSurfaceState&amp;) (9 samples, 0.01%)</title><rect x="22.9763%" y="341" width="0.0114%" height="15" fill="rgb(232,213,38)" fg:x="18171" fg:w="9"/><text x="23.2263%" y="351.50"></text></g><g><title>GLEngine`gleUpdateDrawFramebufferState (67 samples, 0.08%)</title><rect x="22.9118%" y="389" width="0.0847%" height="15" fill="rgb(207,94,22)" fg:x="18120" fg:w="67"/><text x="23.1618%" y="399.50"></text></g><g><title>libGPUSupportMercury.dylib`gldUpdateDrawFramebuffer (42 samples, 0.05%)</title><rect x="22.9434%" y="373" width="0.0531%" height="15" fill="rgb(219,183,54)" fg:x="18145" fg:w="42"/><text x="23.1934%" y="383.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCore (127 samples, 0.16%)</title><rect x="22.8422%" y="405" width="0.1606%" height="15" fill="rgb(216,185,54)" fg:x="18065" fg:w="127"/><text x="23.0922%" y="415.50"></text></g><g><title>GLEngine`glDrawArrays_IMM_Exec (190 samples, 0.24%)</title><rect x="22.7676%" y="421" width="0.2402%" height="15" fill="rgb(254,217,39)" fg:x="18006" fg:w="190"/><text x="23.0176%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (74 samples, 0.09%)</title><rect x="23.0724%" y="325" width="0.0936%" height="15" fill="rgb(240,178,23)" fg:x="18247" fg:w="74"/><text x="23.3224%" y="335.50"></text></g><g><title>OpenGL`GLCGetParameter (94 samples, 0.12%)</title><rect x="23.0496%" y="405" width="0.1189%" height="15" fill="rgb(218,11,47)" fg:x="18229" fg:w="94"/><text x="23.2996%" y="415.50"></text></g><g><title>libGPUSupportMercury.dylib`gldGetInteger (90 samples, 0.11%)</title><rect x="23.0546%" y="389" width="0.1138%" height="15" fill="rgb(218,51,51)" fg:x="18233" fg:w="90"/><text x="23.3046%" y="399.50"></text></g><g><title>IOAccelerator`IOAccelDeviceGetSurfaceInfo (87 samples, 0.11%)</title><rect x="23.0584%" y="373" width="0.1100%" height="15" fill="rgb(238,126,27)" fg:x="18236" fg:w="87"/><text x="23.3084%" y="383.50"></text></g><g><title>IOKit`IOConnectCallMethod (79 samples, 0.10%)</title><rect x="23.0686%" y="357" width="0.0999%" height="15" fill="rgb(249,202,22)" fg:x="18244" fg:w="79"/><text x="23.3186%" y="367.50"></text></g><g><title>IOKit`io_connect_method (78 samples, 0.10%)</title><rect x="23.0698%" y="341" width="0.0986%" height="15" fill="rgb(254,195,49)" fg:x="18245" fg:w="78"/><text x="23.3198%" y="351.50"></text></g><g><title>OpenGL`CGLGetParameter (99 samples, 0.13%)</title><rect x="23.0445%" y="421" width="0.1252%" height="15" fill="rgb(208,123,14)" fg:x="18225" fg:w="99"/><text x="23.2945%" y="431.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (970 samples, 1.23%)</title><rect x="21.9672%" y="437" width="1.2265%" height="15" fill="rgb(224,200,8)" fg:x="17373" fg:w="970"/><text x="22.2172%" y="447.50"></text></g><g><title>AppKit`is_surface_opaque (92 samples, 0.12%)</title><rect x="23.2026%" y="437" width="0.1163%" height="15" fill="rgb(217,61,36)" fg:x="18350" fg:w="92"/><text x="23.4526%" y="447.50"></text></g><g><title>SkyLight`SLSGetSurfaceOpacity (91 samples, 0.12%)</title><rect x="23.2039%" y="421" width="0.1151%" height="15" fill="rgb(206,35,45)" fg:x="18351" fg:w="91"/><text x="23.4539%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (78 samples, 0.10%)</title><rect x="23.2203%" y="405" width="0.0986%" height="15" fill="rgb(217,65,33)" fg:x="18364" fg:w="78"/><text x="23.4703%" y="415.50"></text></g><g><title>Foundation`hashProbe (14 samples, 0.02%)</title><rect x="23.3341%" y="421" width="0.0177%" height="15" fill="rgb(222,158,48)" fg:x="18454" fg:w="14"/><text x="23.5841%" y="431.50"></text></g><g><title>Foundation`-[NSConcreteHashTable addObject:] (27 samples, 0.03%)</title><rect x="23.3240%" y="437" width="0.0341%" height="15" fill="rgb(254,2,54)" fg:x="18446" fg:w="27"/><text x="23.5740%" y="447.50"></text></g><g><title>IOKit`IORegistryEntryGetRegistryEntryID (35 samples, 0.04%)</title><rect x="23.3809%" y="437" width="0.0443%" height="15" fill="rgb(250,143,38)" fg:x="18491" fg:w="35"/><text x="23.6309%" y="447.50"></text></g><g><title>IOKit`io_registry_entry_get_registry_entry_id (35 samples, 0.04%)</title><rect x="23.3809%" y="421" width="0.0443%" height="15" fill="rgb(248,25,0)" fg:x="18491" fg:w="35"/><text x="23.6309%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (35 samples, 0.04%)</title><rect x="23.3809%" y="405" width="0.0443%" height="15" fill="rgb(206,152,27)" fg:x="18491" fg:w="35"/><text x="23.6309%" y="415.50"></text></g><g><title>QuartzCore`+[CATransaction(CATransactionPrivate) currentState] (9 samples, 0.01%)</title><rect x="23.4289%" y="437" width="0.0114%" height="15" fill="rgb(240,77,30)" fg:x="18529" fg:w="9"/><text x="23.6789%" y="447.50"></text></g><g><title>IOKit`io_connect_method (89 samples, 0.11%)</title><rect x="23.4631%" y="373" width="0.1125%" height="15" fill="rgb(231,5,3)" fg:x="18556" fg:w="89"/><text x="23.7131%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (86 samples, 0.11%)</title><rect x="23.4669%" y="357" width="0.1087%" height="15" fill="rgb(207,226,32)" fg:x="18559" fg:w="86"/><text x="23.7169%" y="367.50"></text></g><g><title>IOSurface`IOSurfaceClientDecrementUseCount (93 samples, 0.12%)</title><rect x="23.4593%" y="405" width="0.1176%" height="15" fill="rgb(222,207,47)" fg:x="18553" fg:w="93"/><text x="23.7093%" y="415.50"></text></g><g><title>IOKit`IOConnectCallMethod (91 samples, 0.12%)</title><rect x="23.4618%" y="389" width="0.1151%" height="15" fill="rgb(229,115,45)" fg:x="18555" fg:w="91"/><text x="23.7118%" y="399.50"></text></g><g><title>QuartzCore`release_image(_CAImageQueue*, unsigned long, CAImageQueueReleased*, bool) (112 samples, 0.14%)</title><rect x="23.4504%" y="421" width="0.1416%" height="15" fill="rgb(224,191,6)" fg:x="18546" fg:w="112"/><text x="23.7004%" y="431.50"></text></g><g><title>AppKit`__26-[NSCGLSurface flushRect:]_block_invoke (15 samples, 0.02%)</title><rect x="23.5971%" y="389" width="0.0190%" height="15" fill="rgb(230,227,24)" fg:x="18662" fg:w="15"/><text x="23.8471%" y="399.50"></text></g><g><title>AppKit`invoke_and_release_block (21 samples, 0.03%)</title><rect x="23.5958%" y="405" width="0.0266%" height="15" fill="rgb(228,80,19)" fg:x="18661" fg:w="21"/><text x="23.8458%" y="415.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (12 samples, 0.02%)</title><rect x="23.6237%" y="405" width="0.0152%" height="15" fill="rgb(247,229,0)" fg:x="18683" fg:w="12"/><text x="23.8737%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.02%)</title><rect x="23.6388%" y="405" width="0.0164%" height="15" fill="rgb(237,194,15)" fg:x="18695" fg:w="13"/><text x="23.8888%" y="415.50"></text></g><g><title>QuartzCore`release_images(_CAImageQueue*, CAImageQueueReleased*) (51 samples, 0.06%)</title><rect x="23.5920%" y="421" width="0.0645%" height="15" fill="rgb(219,203,20)" fg:x="18658" fg:w="51"/><text x="23.8420%" y="431.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (180 samples, 0.23%)</title><rect x="23.4403%" y="437" width="0.2276%" height="15" fill="rgb(234,128,8)" fg:x="18538" fg:w="180"/><text x="23.6903%" y="447.50"></text></g><g><title>IOSurface`IOSurfaceClientIncrementUseCount (81 samples, 0.10%)</title><rect x="23.6907%" y="405" width="0.1024%" height="15" fill="rgb(248,202,8)" fg:x="18736" fg:w="81"/><text x="23.9407%" y="415.50"></text></g><g><title>IOKit`IOConnectCallMethod (76 samples, 0.10%)</title><rect x="23.6970%" y="389" width="0.0961%" height="15" fill="rgb(206,104,37)" fg:x="18741" fg:w="76"/><text x="23.9470%" y="399.50"></text></g><g><title>IOKit`io_connect_method (75 samples, 0.09%)</title><rect x="23.6983%" y="373" width="0.0948%" height="15" fill="rgb(223,8,27)" fg:x="18742" fg:w="75"/><text x="23.9483%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (73 samples, 0.09%)</title><rect x="23.7008%" y="357" width="0.0923%" height="15" fill="rgb(216,217,28)" fg:x="18744" fg:w="73"/><text x="23.9508%" y="367.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (118 samples, 0.15%)</title><rect x="23.8045%" y="405" width="0.1492%" height="15" fill="rgb(249,199,1)" fg:x="18826" fg:w="118"/><text x="24.0545%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (105 samples, 0.13%)</title><rect x="23.8209%" y="389" width="0.1328%" height="15" fill="rgb(240,85,17)" fg:x="18839" fg:w="105"/><text x="24.0709%" y="399.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (227 samples, 0.29%)</title><rect x="23.6780%" y="421" width="0.2870%" height="15" fill="rgb(206,108,45)" fg:x="18726" fg:w="227"/><text x="23.9280%" y="431.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage (238 samples, 0.30%)</title><rect x="23.6679%" y="437" width="0.3009%" height="15" fill="rgb(245,210,41)" fg:x="18718" fg:w="238"/><text x="23.9179%" y="447.50"></text></g><g><title>SkyLight`get_canonical_display_id(int) (27 samples, 0.03%)</title><rect x="23.9764%" y="421" width="0.0341%" height="15" fill="rgb(206,13,37)" fg:x="18962" fg:w="27"/><text x="24.2264%" y="431.50"></text></g><g><title>SkyLight`get_current_display_system_state() (25 samples, 0.03%)</title><rect x="23.9790%" y="405" width="0.0316%" height="15" fill="rgb(250,61,18)" fg:x="18964" fg:w="25"/><text x="24.2290%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (22 samples, 0.03%)</title><rect x="23.9828%" y="389" width="0.0278%" height="15" fill="rgb(235,172,48)" fg:x="18967" fg:w="22"/><text x="24.2328%" y="399.50"></text></g><g><title>SkyLight`get_current_display_system_state() (36 samples, 0.05%)</title><rect x="24.0106%" y="421" width="0.0455%" height="15" fill="rgb(249,201,17)" fg:x="18989" fg:w="36"/><text x="24.2606%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (32 samples, 0.04%)</title><rect x="24.0156%" y="405" width="0.0405%" height="15" fill="rgb(219,208,6)" fg:x="18993" fg:w="32"/><text x="24.2656%" y="415.50"></text></g><g><title>SkyLight`SLSAcceleratorForDisplayAlias (65 samples, 0.08%)</title><rect x="23.9752%" y="437" width="0.0822%" height="15" fill="rgb(248,31,23)" fg:x="18961" fg:w="65"/><text x="24.2252%" y="447.50"></text></g><g><title>SkyLight`get_current_display_system_state() (32 samples, 0.04%)</title><rect x="24.0662%" y="421" width="0.0405%" height="15" fill="rgb(245,15,42)" fg:x="19033" fg:w="32"/><text x="24.3162%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (25 samples, 0.03%)</title><rect x="24.0751%" y="405" width="0.0316%" height="15" fill="rgb(222,217,39)" fg:x="19040" fg:w="25"/><text x="24.3251%" y="415.50"></text></g><g><title>SkyLight`get_display_logging() (29 samples, 0.04%)</title><rect x="24.1067%" y="421" width="0.0367%" height="15" fill="rgb(210,219,27)" fg:x="19065" fg:w="29"/><text x="24.3567%" y="431.50"></text></g><g><title>SkyLight`get_current_display_system_state() (28 samples, 0.04%)</title><rect x="24.1079%" y="405" width="0.0354%" height="15" fill="rgb(252,166,36)" fg:x="19066" fg:w="28"/><text x="24.3579%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (25 samples, 0.03%)</title><rect x="24.1117%" y="389" width="0.0316%" height="15" fill="rgb(245,132,34)" fg:x="19069" fg:w="25"/><text x="24.3617%" y="399.50"></text></g><g><title>SkyLight`SLSGetDisplaysWithOpenGLDisplayMask (73 samples, 0.09%)</title><rect x="24.0574%" y="437" width="0.0923%" height="15" fill="rgb(236,54,3)" fg:x="19026" fg:w="73"/><text x="24.3074%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (83 samples, 0.10%)</title><rect x="24.1661%" y="421" width="0.1049%" height="15" fill="rgb(241,173,43)" fg:x="19112" fg:w="83"/><text x="24.4161%" y="431.50"></text></g><g><title>SkyLight`SLSGetSurfaceBinding (97 samples, 0.12%)</title><rect x="24.1497%" y="437" width="0.1227%" height="15" fill="rgb(215,190,9)" fg:x="19099" fg:w="97"/><text x="24.3997%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_initWeak (8 samples, 0.01%)</title><rect x="24.3001%" y="437" width="0.0101%" height="15" fill="rgb(242,101,16)" fg:x="19218" fg:w="8"/><text x="24.5501%" y="447.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (9 samples, 0.01%)</title><rect x="24.3102%" y="437" width="0.0114%" height="15" fill="rgb(223,190,21)" fg:x="19226" fg:w="9"/><text x="24.5602%" y="447.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (10 samples, 0.01%)</title><rect x="24.3216%" y="437" width="0.0126%" height="15" fill="rgb(215,228,25)" fg:x="19235" fg:w="10"/><text x="24.5716%" y="447.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (1,894 samples, 2.39%)</title><rect x="21.9419%" y="453" width="2.3949%" height="15" fill="rgb(225,36,22)" fg:x="17353" fg:w="1894"/><text x="22.1919%" y="463.50">Ap..</text></g><g><title>AppKit`-[NSCGLSurface synchronize] (16 samples, 0.02%)</title><rect x="24.3368%" y="453" width="0.0202%" height="15" fill="rgb(251,106,46)" fg:x="19247" fg:w="16"/><text x="24.5868%" y="463.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (17 samples, 0.02%)</title><rect x="24.4101%" y="453" width="0.0215%" height="15" fill="rgb(208,90,1)" fg:x="19305" fg:w="17"/><text x="24.6601%" y="463.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (2,023 samples, 2.56%)</title><rect x="21.8825%" y="469" width="2.5580%" height="15" fill="rgb(243,10,4)" fg:x="17306" fg:w="2023"/><text x="22.1325%" y="479.50">Ap..</text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (10 samples, 0.01%)</title><rect x="24.4847%" y="357" width="0.0126%" height="15" fill="rgb(212,137,27)" fg:x="19364" fg:w="10"/><text x="24.7347%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (8 samples, 0.01%)</title><rect x="24.4873%" y="341" width="0.0101%" height="15" fill="rgb(231,220,49)" fg:x="19366" fg:w="8"/><text x="24.7373%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (8 samples, 0.01%)</title><rect x="24.4873%" y="325" width="0.0101%" height="15" fill="rgb(237,96,20)" fg:x="19366" fg:w="8"/><text x="24.7373%" y="335.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreateDataBuffer (18 samples, 0.02%)</title><rect x="24.4759%" y="389" width="0.0228%" height="15" fill="rgb(239,229,30)" fg:x="19357" fg:w="18"/><text x="24.7259%" y="399.50"></text></g><g><title>IOAccelerator`_IOAccelResourceAlloc (17 samples, 0.02%)</title><rect x="24.4772%" y="373" width="0.0215%" height="15" fill="rgb(219,65,33)" fg:x="19358" fg:w="17"/><text x="24.7272%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (745 samples, 0.94%)</title><rect x="24.5138%" y="341" width="0.9420%" height="15" fill="rgb(243,134,7)" fg:x="19387" fg:w="745"/><text x="24.7638%" y="351.50"></text></g><g><title>IOKit`io_connect_method (757 samples, 0.96%)</title><rect x="24.5062%" y="357" width="0.9572%" height="15" fill="rgb(216,177,54)" fg:x="19381" fg:w="757"/><text x="24.7562%" y="367.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (761 samples, 0.96%)</title><rect x="24.5024%" y="389" width="0.9622%" height="15" fill="rgb(211,160,20)" fg:x="19378" fg:w="761"/><text x="24.7524%" y="399.50"></text></g><g><title>IOKit`IOConnectCallMethod (760 samples, 0.96%)</title><rect x="24.5037%" y="373" width="0.9610%" height="15" fill="rgb(239,85,39)" fg:x="19379" fg:w="760"/><text x="24.7537%" y="383.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (796 samples, 1.01%)</title><rect x="24.4645%" y="405" width="1.0065%" height="15" fill="rgb(232,125,22)" fg:x="19348" fg:w="796"/><text x="24.7145%" y="415.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (803 samples, 1.02%)</title><rect x="24.4582%" y="421" width="1.0154%" height="15" fill="rgb(244,57,34)" fg:x="19343" fg:w="803"/><text x="24.7082%" y="431.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelCommandBuffer::getNew (810 samples, 1.02%)</title><rect x="24.4519%" y="437" width="1.0242%" height="15" fill="rgb(214,203,32)" fg:x="19338" fg:w="810"/><text x="24.7019%" y="447.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`intelSubmitCommands (816 samples, 1.03%)</title><rect x="24.4481%" y="453" width="1.0318%" height="15" fill="rgb(207,58,43)" fg:x="19335" fg:w="816"/><text x="24.6981%" y="463.50"></text></g><g><title>SkyLight`CGSConnectionByID (8 samples, 0.01%)</title><rect x="25.4862%" y="421" width="0.0101%" height="15" fill="rgb(215,193,15)" fg:x="20156" fg:w="8"/><text x="25.7362%" y="431.50"></text></g><g><title>SkyLight`CGSGetConnectionPortById (10 samples, 0.01%)</title><rect x="25.4862%" y="437" width="0.0126%" height="15" fill="rgb(232,15,44)" fg:x="20156" fg:w="10"/><text x="25.7362%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (93 samples, 0.12%)</title><rect x="25.5026%" y="437" width="0.1176%" height="15" fill="rgb(212,3,48)" fg:x="20169" fg:w="93"/><text x="25.7526%" y="447.50"></text></g><g><title>SkyLight`SLSFlushSurfaceWithOptionsAndIndex (117 samples, 0.15%)</title><rect x="25.4799%" y="453" width="0.1479%" height="15" fill="rgb(218,128,7)" fg:x="20151" fg:w="117"/><text x="25.7299%" y="463.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gldPresentFramebufferData (941 samples, 1.19%)</title><rect x="24.4405%" y="469" width="1.1898%" height="15" fill="rgb(226,216,39)" fg:x="19329" fg:w="941"/><text x="24.6905%" y="479.50"></text></g><g><title>GLEngine`glSwap_Exec (2,985 samples, 3.77%)</title><rect x="21.8648%" y="485" width="3.7744%" height="15" fill="rgb(243,47,51)" fg:x="17292" fg:w="2985"/><text x="22.1148%" y="495.50">GLEn..</text></g><g><title>App`glutin::api::cgl::context::ContextInner::flush_buffer (3,003 samples, 3.80%)</title><rect x="21.8471%" y="533" width="3.7971%" height="15" fill="rgb(241,183,40)" fg:x="17278" fg:w="3003"/><text x="22.0971%" y="543.50">App`..</text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (2,998 samples, 3.79%)</title><rect x="21.8534%" y="517" width="3.7908%" height="15" fill="rgb(231,217,32)" fg:x="17283" fg:w="2998"/><text x="22.1034%" y="527.50">AppK..</text></g><g><title>OpenGL`CGLFlushDrawable (2,994 samples, 3.79%)</title><rect x="21.8585%" y="501" width="3.7858%" height="15" fill="rgb(229,61,38)" fg:x="17287" fg:w="2994"/><text x="22.1085%" y="511.50">Open..</text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::Window&gt;::swap_buffers (3,015 samples, 3.81%)</title><rect x="21.8408%" y="549" width="3.8123%" height="15" fill="rgb(225,210,5)" fg:x="17273" fg:w="3015"/><text x="22.0908%" y="559.50">App`..</text></g><g><title>App`&lt;std::time::Instant as core::ops::arith::Add&lt;core::time::Duration&gt;&gt;::add (8 samples, 0.01%)</title><rect x="25.6531%" y="549" width="0.0101%" height="15" fill="rgb(231,79,45)" fg:x="20288" fg:w="8"/><text x="25.9031%" y="559.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_event (9 samples, 0.01%)</title><rect x="25.6771%" y="549" width="0.0114%" height="15" fill="rgb(224,100,7)" fg:x="20307" fg:w="9"/><text x="25.9271%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`clock_get_time (188 samples, 0.24%)</title><rect x="25.7214%" y="501" width="0.2377%" height="15" fill="rgb(241,198,18)" fg:x="20342" fg:w="188"/><text x="25.9714%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (183 samples, 0.23%)</title><rect x="25.7277%" y="485" width="0.2314%" height="15" fill="rgb(252,97,53)" fg:x="20347" fg:w="183"/><text x="25.9777%" y="495.50"></text></g><g><title>libsystem_c.dylib`nanosleep (208 samples, 0.26%)</title><rect x="25.7075%" y="517" width="0.2630%" height="15" fill="rgb(220,88,7)" fg:x="20331" fg:w="208"/><text x="25.9575%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (164 samples, 0.21%)</title><rect x="25.9743%" y="517" width="0.2074%" height="15" fill="rgb(213,176,14)" fg:x="20542" fg:w="164"/><text x="26.2243%" y="527.50"></text></g><g><title>App`std::thread::sleep (397 samples, 0.50%)</title><rect x="25.6948%" y="533" width="0.5020%" height="15" fill="rgb(246,73,7)" fg:x="20321" fg:w="397"/><text x="25.9448%" y="543.50"></text></g><g><title>App`std::time::Instant::elapsed (22 samples, 0.03%)</title><rect x="26.1968%" y="533" width="0.0278%" height="15" fill="rgb(245,64,36)" fg:x="20718" fg:w="22"/><text x="26.4468%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (9 samples, 0.01%)</title><rect x="26.2132%" y="517" width="0.0114%" height="15" fill="rgb(245,80,10)" fg:x="20731" fg:w="9"/><text x="26.4632%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (9 samples, 0.01%)</title><rect x="26.2271%" y="533" width="0.0114%" height="15" fill="rgb(232,107,50)" fg:x="20742" fg:w="9"/><text x="26.4771%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (89 samples, 0.11%)</title><rect x="26.2385%" y="533" width="0.1125%" height="15" fill="rgb(253,3,0)" fg:x="20751" fg:w="89"/><text x="26.4885%" y="543.50"></text></g><g><title>App`spin_sleep::sleep (528 samples, 0.67%)</title><rect x="25.6885%" y="549" width="0.6676%" height="15" fill="rgb(212,99,53)" fg:x="20316" fg:w="528"/><text x="25.9385%" y="559.50"></text></g><g><title>App`event_loop::Events::next (20,721 samples, 26.20%)</title><rect x="0.1669%" y="565" width="26.2006%" height="15" fill="rgb(249,111,54)" fg:x="132" fg:w="20721"/><text x="0.4169%" y="575.50">App`event_loop::Events::next</text></g><g><title>App`&lt;opengl_graphics::back_end::GlGraphics as graphics::graphics::Graphics&gt;::tri_list (35 samples, 0.04%)</title><rect x="26.3839%" y="517" width="0.0443%" height="15" fill="rgb(249,55,30)" fg:x="20866" fg:w="35"/><text x="26.6339%" y="527.50"></text></g><g><title>libsystem_m.dylib`0x00007ff8126d26f0 (25 samples, 0.03%)</title><rect x="26.3966%" y="501" width="0.0316%" height="15" fill="rgb(237,47,42)" fg:x="20876" fg:w="25"/><text x="26.6466%" y="511.50"></text></g><g><title>App`graphics::rectangle::Rectangle::draw_tri (37 samples, 0.05%)</title><rect x="26.3827%" y="533" width="0.0468%" height="15" fill="rgb(211,20,18)" fg:x="20865" fg:w="37"/><text x="26.6327%" y="543.50"></text></g><g><title>App`App::App::render::draw_board (44 samples, 0.06%)</title><rect x="26.3751%" y="549" width="0.0556%" height="15" fill="rgb(231,203,46)" fg:x="20859" fg:w="44"/><text x="26.6251%" y="559.50"></text></g><g><title>GLEngine`glBindVertexArray_Exec (11 samples, 0.01%)</title><rect x="26.4598%" y="501" width="0.0139%" height="15" fill="rgb(237,142,3)" fg:x="20926" fg:w="11"/><text x="26.7098%" y="511.50"></text></g><g><title>GLEngine`gleBindVertexArray (11 samples, 0.01%)</title><rect x="26.4598%" y="485" width="0.0139%" height="15" fill="rgb(241,107,1)" fg:x="20926" fg:w="11"/><text x="26.7098%" y="495.50"></text></g><g><title>GLEngine`glBufferData_Exec (22 samples, 0.03%)</title><rect x="26.4737%" y="501" width="0.0278%" height="15" fill="rgb(229,83,13)" fg:x="20937" fg:w="22"/><text x="26.7237%" y="511.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrIntelRenderVertexArray (27 samples, 0.03%)</title><rect x="26.5041%" y="485" width="0.0341%" height="15" fill="rgb(241,91,40)" fg:x="20961" fg:w="27"/><text x="26.7541%" y="495.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramPipeline (26 samples, 0.03%)</title><rect x="26.5053%" y="469" width="0.0329%" height="15" fill="rgb(225,3,45)" fg:x="20962" fg:w="26"/><text x="26.7553%" y="479.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gpusLoadCurrentPipelinePrograms (10 samples, 0.01%)</title><rect x="26.5648%" y="437" width="0.0126%" height="15" fill="rgb(244,223,14)" fg:x="21009" fg:w="10"/><text x="26.8148%" y="447.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (29 samples, 0.04%)</title><rect x="26.5496%" y="453" width="0.0367%" height="15" fill="rgb(224,124,37)" fg:x="20997" fg:w="29"/><text x="26.7996%" y="463.50"></text></g><g><title>GLEngine`gleUpdateDeferredStateFull (13 samples, 0.02%)</title><rect x="26.5913%" y="453" width="0.0164%" height="15" fill="rgb(251,171,30)" fg:x="21030" fg:w="13"/><text x="26.8413%" y="463.50"></text></g><g><title>GLEngine`glDrawArrays_GL3Exec (88 samples, 0.11%)</title><rect x="26.5028%" y="501" width="0.1113%" height="15" fill="rgb(236,46,54)" fg:x="20960" fg:w="88"/><text x="26.7528%" y="511.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (60 samples, 0.08%)</title><rect x="26.5382%" y="485" width="0.0759%" height="15" fill="rgb(245,213,5)" fg:x="20988" fg:w="60"/><text x="26.7882%" y="495.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (54 samples, 0.07%)</title><rect x="26.5458%" y="469" width="0.0683%" height="15" fill="rgb(230,144,27)" fg:x="20994" fg:w="54"/><text x="26.7958%" y="479.50"></text></g><g><title>App`opengl_graphics::back_end::Colored::flush (128 samples, 0.16%)</title><rect x="26.4585%" y="517" width="0.1618%" height="15" fill="rgb(220,86,6)" fg:x="20925" fg:w="128"/><text x="26.7085%" y="527.50"></text></g><g><title>GLEngine`gleUnbindProgramObject (8 samples, 0.01%)</title><rect x="26.6318%" y="469" width="0.0101%" height="15" fill="rgb(240,20,13)" fg:x="21062" fg:w="8"/><text x="26.8818%" y="479.50"></text></g><g><title>GLEngine`gleUpdateCurrentProgramState (16 samples, 0.02%)</title><rect x="26.6419%" y="469" width="0.0202%" height="15" fill="rgb(217,89,34)" fg:x="21070" fg:w="16"/><text x="26.8919%" y="479.50"></text></g><g><title>App`opengl_graphics::back_end::GlGraphics::use_program (36 samples, 0.05%)</title><rect x="26.6229%" y="517" width="0.0455%" height="15" fill="rgb(229,13,5)" fg:x="21055" fg:w="36"/><text x="26.8729%" y="527.50"></text></g><g><title>GLEngine`glUseProgramObjectARB_Exec (35 samples, 0.04%)</title><rect x="26.6242%" y="501" width="0.0443%" height="15" fill="rgb(244,67,35)" fg:x="21056" fg:w="35"/><text x="26.8742%" y="511.50"></text></g><g><title>GLEngine`gleUseProgramObject (33 samples, 0.04%)</title><rect x="26.6267%" y="485" width="0.0417%" height="15" fill="rgb(221,40,2)" fg:x="21058" fg:w="33"/><text x="26.8767%" y="495.50"></text></g><g><title>GLEngine`glBindTexture_Exec (15 samples, 0.02%)</title><rect x="26.6823%" y="501" width="0.0190%" height="15" fill="rgb(237,157,21)" fg:x="21102" fg:w="15"/><text x="26.9323%" y="511.50"></text></g><g><title>GLEngine`gleBindTexture (14 samples, 0.02%)</title><rect x="26.6836%" y="485" width="0.0177%" height="15" fill="rgb(222,94,11)" fg:x="21103" fg:w="14"/><text x="26.9336%" y="495.50"></text></g><g><title>GLEngine`gleLookupHashObject (9 samples, 0.01%)</title><rect x="26.6899%" y="469" width="0.0114%" height="15" fill="rgb(249,113,6)" fg:x="21108" fg:w="9"/><text x="26.9399%" y="479.50"></text></g><g><title>GLEngine`glBindVertexArray_Exec (12 samples, 0.02%)</title><rect x="26.7013%" y="501" width="0.0152%" height="15" fill="rgb(238,137,36)" fg:x="21117" fg:w="12"/><text x="26.9513%" y="511.50"></text></g><g><title>GLEngine`gleBindVertexArray (12 samples, 0.02%)</title><rect x="26.7013%" y="485" width="0.0152%" height="15" fill="rgb(210,102,26)" fg:x="21117" fg:w="12"/><text x="26.9513%" y="495.50"></text></g><g><title>GLEngine`gleSetCurrentVertexHashObject (9 samples, 0.01%)</title><rect x="26.7051%" y="469" width="0.0114%" height="15" fill="rgb(218,30,30)" fg:x="21120" fg:w="9"/><text x="26.9551%" y="479.50"></text></g><g><title>IOAccelerator`IOAccelResourceCheckSysMem (32 samples, 0.04%)</title><rect x="26.7392%" y="453" width="0.0405%" height="15" fill="rgb(214,67,26)" fg:x="21147" fg:w="32"/><text x="26.9892%" y="463.50"></text></g><g><title>GLEngine`gleGetFreeOrphanNode (59 samples, 0.07%)</title><rect x="26.7279%" y="469" width="0.0746%" height="15" fill="rgb(251,9,53)" fg:x="21138" fg:w="59"/><text x="26.9779%" y="479.50"></text></g><g><title>libGPUSupportMercury.dylib`gldTestMemoryPlugin (18 samples, 0.02%)</title><rect x="26.7797%" y="453" width="0.0228%" height="15" fill="rgb(228,204,25)" fg:x="21179" fg:w="18"/><text x="27.0297%" y="463.50"></text></g><g><title>GLEngine`gleAcquireBufferData (68 samples, 0.09%)</title><rect x="26.7266%" y="485" width="0.0860%" height="15" fill="rgb(207,153,8)" fg:x="21137" fg:w="68"/><text x="26.9766%" y="495.50"></text></g><g><title>GLEngine`gleOrphanBufferObject (9 samples, 0.01%)</title><rect x="26.8189%" y="485" width="0.0114%" height="15" fill="rgb(242,9,16)" fg:x="21210" fg:w="9"/><text x="27.0689%" y="495.50"></text></g><g><title>GLEngine`glBufferData_Exec (98 samples, 0.12%)</title><rect x="26.7165%" y="501" width="0.1239%" height="15" fill="rgb(217,211,10)" fg:x="21129" fg:w="98"/><text x="26.9665%" y="511.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::CheckOOM (13 samples, 0.02%)</title><rect x="26.8758%" y="453" width="0.0164%" height="15" fill="rgb(219,228,52)" fg:x="21255" fg:w="13"/><text x="27.1258%" y="463.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::CheckOOM (13 samples, 0.02%)</title><rect x="26.8758%" y="437" width="0.0164%" height="15" fill="rgb(231,92,29)" fg:x="21255" fg:w="13"/><text x="27.1258%" y="447.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updatePSConstantState(GenContext*, unsigned long long) (11 samples, 0.01%)</title><rect x="26.8973%" y="453" width="0.0139%" height="15" fill="rgb(232,8,23)" fg:x="21272" fg:w="11"/><text x="27.1473%" y="463.50"></text></g><g><title>IOAccelerator`IOAccelContextAddResource (15 samples, 0.02%)</title><rect x="26.9327%" y="437" width="0.0190%" height="15" fill="rgb(216,211,34)" fg:x="21300" fg:w="15"/><text x="27.1827%" y="447.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`void updateBindingTable&lt;SGfx3dStateBindingTablePointers&gt;(GenContext*, unsigned int, SGfx3dStateBindingTablePointers&amp;) (33 samples, 0.04%)</title><rect x="26.9137%" y="453" width="0.0417%" height="15" fill="rgb(236,151,0)" fg:x="21285" fg:w="33"/><text x="27.1637%" y="463.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramPipeline (81 samples, 0.10%)</title><rect x="26.8568%" y="469" width="0.1024%" height="15" fill="rgb(209,168,3)" fg:x="21240" fg:w="81"/><text x="27.1068%" y="479.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrIntelRenderVertexArray (101 samples, 0.13%)</title><rect x="26.8442%" y="485" width="0.1277%" height="15" fill="rgb(208,129,28)" fg:x="21230" fg:w="101"/><text x="27.0942%" y="495.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelVertexState::submitVboBuffers (10 samples, 0.01%)</title><rect x="26.9593%" y="469" width="0.0126%" height="15" fill="rgb(229,78,22)" fg:x="21321" fg:w="10"/><text x="27.2093%" y="479.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::updateContextSamplerStates (9 samples, 0.01%)</title><rect x="27.0010%" y="421" width="0.0114%" height="15" fill="rgb(228,187,13)" fg:x="21354" fg:w="9"/><text x="27.2510%" y="431.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::UpdateSamplerStates (12 samples, 0.02%)</title><rect x="26.9997%" y="437" width="0.0152%" height="15" fill="rgb(240,119,24)" fg:x="21353" fg:w="12"/><text x="27.2497%" y="447.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusLoadCurrentTextures (21 samples, 0.03%)</title><rect x="27.0503%" y="437" width="0.0266%" height="15" fill="rgb(209,194,42)" fg:x="21393" fg:w="21"/><text x="27.3003%" y="447.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrBindContextTexture (9 samples, 0.01%)</title><rect x="27.0655%" y="421" width="0.0114%" height="15" fill="rgb(247,200,46)" fg:x="21405" fg:w="9"/><text x="27.3155%" y="431.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelVertexArray::buildBufData (11 samples, 0.01%)</title><rect x="27.0870%" y="405" width="0.0139%" height="15" fill="rgb(218,76,16)" fg:x="21422" fg:w="11"/><text x="27.3370%" y="415.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (89 samples, 0.11%)</title><rect x="26.9896%" y="453" width="0.1125%" height="15" fill="rgb(225,21,48)" fg:x="21345" fg:w="89"/><text x="27.2396%" y="463.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusLoadCurrentVertexArray (20 samples, 0.03%)</title><rect x="27.0769%" y="437" width="0.0253%" height="15" fill="rgb(239,223,50)" fg:x="21414" fg:w="20"/><text x="27.3269%" y="447.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrUpdateVertexArrayBuffers (12 samples, 0.02%)</title><rect x="27.0870%" y="421" width="0.0152%" height="15" fill="rgb(244,45,21)" fg:x="21422" fg:w="12"/><text x="27.3370%" y="431.50"></text></g><g><title>GLEngine`gleUpdateDeferredStateFull (22 samples, 0.03%)</title><rect x="27.1034%" y="453" width="0.0278%" height="15" fill="rgb(232,33,43)" fg:x="21435" fg:w="22"/><text x="27.3534%" y="463.50"></text></g><g><title>GLEngine`glDrawArrays_GL3Exec (232 samples, 0.29%)</title><rect x="26.8417%" y="501" width="0.2934%" height="15" fill="rgb(209,8,3)" fg:x="21228" fg:w="232"/><text x="27.0917%" y="511.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (128 samples, 0.16%)</title><rect x="26.9732%" y="485" width="0.1618%" height="15" fill="rgb(214,25,53)" fg:x="21332" fg:w="128"/><text x="27.2232%" y="495.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (124 samples, 0.16%)</title><rect x="26.9782%" y="469" width="0.1568%" height="15" fill="rgb(254,186,54)" fg:x="21336" fg:w="124"/><text x="27.2282%" y="479.50"></text></g><g><title>GLEngine`setProgramUniformInner (21 samples, 0.03%)</title><rect x="27.1388%" y="469" width="0.0266%" height="15" fill="rgb(208,174,49)" fg:x="21463" fg:w="21"/><text x="27.3888%" y="479.50"></text></g><g><title>GLEngine`glUniform4f_Exec (25 samples, 0.03%)</title><rect x="27.1350%" y="501" width="0.0316%" height="15" fill="rgb(233,191,51)" fg:x="21460" fg:w="25"/><text x="27.3850%" y="511.50"></text></g><g><title>GLEngine`setUniform (24 samples, 0.03%)</title><rect x="27.1363%" y="485" width="0.0303%" height="15" fill="rgb(222,134,10)" fg:x="21461" fg:w="24"/><text x="27.3863%" y="495.50"></text></g><g><title>App`opengl_graphics::back_end::Textured::flush (409 samples, 0.52%)</title><rect x="26.6684%" y="517" width="0.5172%" height="15" fill="rgb(230,226,20)" fg:x="21091" fg:w="409"/><text x="26.9184%" y="527.50"></text></g><g><title>App`&lt;opengl_graphics::back_end::GlGraphics as graphics::graphics::Graphics&gt;::tri_list_uv (606 samples, 0.77%)</title><rect x="26.4408%" y="533" width="0.7663%" height="15" fill="rgb(251,111,25)" fg:x="20911" fg:w="606"/><text x="26.6908%" y="543.50"></text></g><g><title>App`App::App::render::draw_pieces (615 samples, 0.78%)</title><rect x="26.4307%" y="549" width="0.7776%" height="15" fill="rgb(224,40,46)" fg:x="20903" fg:w="615"/><text x="26.6807%" y="559.50"></text></g><g><title>App`opengl_graphics::back_end::GlGraphics::draw_end (12 samples, 0.02%)</title><rect x="27.2147%" y="549" width="0.0152%" height="15" fill="rgb(236,108,47)" fg:x="21523" fg:w="12"/><text x="27.4647%" y="559.50"></text></g><g><title>App`opengl_graphics::back_end::Textured::flush (9 samples, 0.01%)</title><rect x="27.2185%" y="533" width="0.0114%" height="15" fill="rgb(234,93,0)" fg:x="21526" fg:w="9"/><text x="27.4685%" y="543.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::GetClearDirtyFlagsCheckOOMFlush (12 samples, 0.02%)</title><rect x="27.2665%" y="501" width="0.0152%" height="15" fill="rgb(224,213,32)" fg:x="21564" fg:w="12"/><text x="27.5165%" y="511.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramClearPipeline (23 samples, 0.03%)</title><rect x="27.2589%" y="517" width="0.0291%" height="15" fill="rgb(251,11,48)" fg:x="21558" fg:w="23"/><text x="27.5089%" y="527.50"></text></g><g><title>GLEngine`glClear_Exec (48 samples, 0.06%)</title><rect x="27.2324%" y="549" width="0.0607%" height="15" fill="rgb(236,173,5)" fg:x="21537" fg:w="48"/><text x="27.4824%" y="559.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gldClearFramebufferData (41 samples, 0.05%)</title><rect x="27.2412%" y="533" width="0.0518%" height="15" fill="rgb(230,95,12)" fg:x="21544" fg:w="41"/><text x="27.4912%" y="543.50"></text></g><g><title>App`opengl_graphics::back_end::GlGraphics::draw (743 samples, 0.94%)</title><rect x="26.3675%" y="565" width="0.9395%" height="15" fill="rgb(232,209,1)" fg:x="20853" fg:w="743"/><text x="26.6175%" y="575.50"></text></g><g><title>App`App::main (21,619 samples, 27.34%)</title><rect x="0.0013%" y="581" width="27.3361%" height="15" fill="rgb(232,6,1)" fg:x="1" fg:w="21619"/><text x="0.2513%" y="591.50">App`App::main</text></g><g><title>libsystem_malloc.dylib`free_large (10 samples, 0.01%)</title><rect x="27.3247%" y="565" width="0.0126%" height="15" fill="rgb(210,224,50)" fg:x="21610" fg:w="10"/><text x="27.5747%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (10 samples, 0.01%)</title><rect x="27.3247%" y="549" width="0.0126%" height="15" fill="rgb(228,127,35)" fg:x="21610" fg:w="10"/><text x="27.5747%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (10 samples, 0.01%)</title><rect x="27.3247%" y="533" width="0.0126%" height="15" fill="rgb(245,102,45)" fg:x="21610" fg:w="10"/><text x="27.5747%" y="543.50"></text></g><g><title>App`main (21,625 samples, 27.34%)</title><rect x="0.0000%" y="645" width="27.3437%" height="15" fill="rgb(214,1,49)" fg:x="0" fg:w="21625"/><text x="0.2500%" y="655.50">App`main</text></g><g><title>App`std::rt::lang_start_internal (21,625 samples, 27.34%)</title><rect x="0.0000%" y="629" width="27.3437%" height="15" fill="rgb(226,163,40)" fg:x="0" fg:w="21625"/><text x="0.2500%" y="639.50">App`std::rt::lang_start_internal</text></g><g><title>App`std::rt::lang_start::_{{closure}} (21,625 samples, 27.34%)</title><rect x="0.0000%" y="613" width="27.3437%" height="15" fill="rgb(239,212,28)" fg:x="0" fg:w="21625"/><text x="0.2500%" y="623.50">App`std::rt::lang_start::_{{closure}}</text></g><g><title>App`std::sys_common::backtrace::__rust_begin_short_backtrace (21,625 samples, 27.34%)</title><rect x="0.0000%" y="597" width="27.3437%" height="15" fill="rgb(220,20,13)" fg:x="0" fg:w="21625"/><text x="0.2500%" y="607.50">App`std::sys_common::backtrace::__rust_begin..</text></g><g><title>dyld`start (21,643 samples, 27.37%)</title><rect x="0.0000%" y="661" width="27.3664%" height="15" fill="rgb(210,164,35)" fg:x="0" fg:w="21643"/><text x="0.2500%" y="671.50">dyld`start</text></g><g><title>libdyld.dylib`dyld4::LibSystemHelpers::exit (18 samples, 0.02%)</title><rect x="27.3437%" y="645" width="0.0228%" height="15" fill="rgb(248,109,41)" fg:x="21625" fg:w="18"/><text x="27.5937%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__exit (17 samples, 0.02%)</title><rect x="27.3449%" y="629" width="0.0215%" height="15" fill="rgb(238,23,50)" fg:x="21626" fg:w="17"/><text x="27.5949%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (9 samples, 0.01%)</title><rect x="27.4575%" y="645" width="0.0114%" height="15" fill="rgb(211,48,49)" fg:x="21715" fg:w="9"/><text x="27.7075%" y="655.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1,132 samples, 1.43%)</title><rect x="27.4688%" y="645" width="1.4314%" height="15" fill="rgb(223,36,21)" fg:x="21724" fg:w="1132"/><text x="27.7188%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (9 samples, 0.01%)</title><rect x="29.1518%" y="613" width="0.0114%" height="15" fill="rgb(207,123,46)" fg:x="23055" fg:w="9"/><text x="29.4018%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_workloop_poke_drain (13 samples, 0.02%)</title><rect x="29.1632%" y="613" width="0.0164%" height="15" fill="rgb(240,218,32)" fg:x="23064" fg:w="13"/><text x="29.4132%" y="623.50"></text></g><g><title>QuartzCore`CABackingStoreCollect (56 samples, 0.07%)</title><rect x="29.2391%" y="549" width="0.0708%" height="15" fill="rgb(252,5,43)" fg:x="23124" fg:w="56"/><text x="29.4891%" y="559.50"></text></g><g><title>QuartzCore`CABackingStoreCollect_(double, bool) (56 samples, 0.07%)</title><rect x="29.2391%" y="533" width="0.0708%" height="15" fill="rgb(252,84,19)" fg:x="23124" fg:w="56"/><text x="29.4891%" y="543.50"></text></g><g><title>QuartzCore`CATimeWithHostTime (11 samples, 0.01%)</title><rect x="29.3099%" y="549" width="0.0139%" height="15" fill="rgb(243,152,39)" fg:x="23180" fg:w="11"/><text x="29.5599%" y="559.50"></text></g><g><title>QuartzCore`async_collect_callback(void*) (81 samples, 0.10%)</title><rect x="29.2378%" y="565" width="0.1024%" height="15" fill="rgb(234,160,15)" fg:x="23123" fg:w="81"/><text x="29.4878%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (13 samples, 0.02%)</title><rect x="29.3238%" y="549" width="0.0164%" height="15" fill="rgb(237,34,20)" fg:x="23191" fg:w="13"/><text x="29.5738%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (93 samples, 0.12%)</title><rect x="29.2365%" y="581" width="0.1176%" height="15" fill="rgb(229,97,13)" fg:x="23122" fg:w="93"/><text x="29.4865%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (8 samples, 0.01%)</title><rect x="29.3440%" y="565" width="0.0101%" height="15" fill="rgb(234,71,50)" fg:x="23207" fg:w="8"/><text x="29.5940%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.04%)</title><rect x="29.3554%" y="565" width="0.0379%" height="15" fill="rgb(253,155,4)" fg:x="23216" fg:w="30"/><text x="29.6054%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (14 samples, 0.02%)</title><rect x="29.3756%" y="549" width="0.0177%" height="15" fill="rgb(222,185,37)" fg:x="23232" fg:w="14"/><text x="29.6256%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_free_to_cache_limit (36 samples, 0.05%)</title><rect x="29.3541%" y="581" width="0.0455%" height="15" fill="rgb(251,177,13)" fg:x="23215" fg:w="36"/><text x="29.6041%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (165 samples, 0.21%)</title><rect x="29.1986%" y="597" width="0.2086%" height="15" fill="rgb(250,179,40)" fg:x="23092" fg:w="165"/><text x="29.4486%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (17 samples, 0.02%)</title><rect x="29.4161%" y="597" width="0.0215%" height="15" fill="rgb(242,44,2)" fg:x="23264" fg:w="17"/><text x="29.6661%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (211 samples, 0.27%)</title><rect x="29.1796%" y="613" width="0.2668%" height="15" fill="rgb(216,177,13)" fg:x="23077" fg:w="211"/><text x="29.4296%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (1,658 samples, 2.10%)</title><rect x="27.3841%" y="661" width="2.0965%" height="15" fill="rgb(216,106,43)" fg:x="21657" fg:w="1658"/><text x="27.6341%" y="671.50">l..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (457 samples, 0.58%)</title><rect x="28.9027%" y="645" width="0.5779%" height="15" fill="rgb(216,183,2)" fg:x="22858" fg:w="457"/><text x="29.1527%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (413 samples, 0.52%)</title><rect x="28.9583%" y="629" width="0.5222%" height="15" fill="rgb(249,75,3)" fg:x="22902" fg:w="413"/><text x="29.2083%" y="639.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="29.4679%" y="613" width="0.0126%" height="15" fill="rgb(219,67,39)" fg:x="23305" fg:w="10"/><text x="29.7179%" y="623.50"></text></g><g><title>CoreFoundation`CFRunLoopPerformBlock (8 samples, 0.01%)</title><rect x="29.5198%" y="501" width="0.0101%" height="15" fill="rgb(253,228,2)" fg:x="23346" fg:w="8"/><text x="29.7698%" y="511.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (17 samples, 0.02%)</title><rect x="29.5299%" y="501" width="0.0215%" height="15" fill="rgb(235,138,27)" fg:x="23354" fg:w="17"/><text x="29.7799%" y="511.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (10 samples, 0.01%)</title><rect x="29.5868%" y="357" width="0.0126%" height="15" fill="rgb(236,97,51)" fg:x="23399" fg:w="10"/><text x="29.8368%" y="367.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (12 samples, 0.02%)</title><rect x="29.5855%" y="437" width="0.0152%" height="15" fill="rgb(240,80,30)" fg:x="23398" fg:w="12"/><text x="29.8355%" y="447.50"></text></g><g><title>libsystem_c.dylib`snprintf (11 samples, 0.01%)</title><rect x="29.5868%" y="421" width="0.0139%" height="15" fill="rgb(230,178,19)" fg:x="23399" fg:w="11"/><text x="29.8368%" y="431.50"></text></g><g><title>libsystem_c.dylib`vsnprintf_l (11 samples, 0.01%)</title><rect x="29.5868%" y="405" width="0.0139%" height="15" fill="rgb(210,190,27)" fg:x="23399" fg:w="11"/><text x="29.8368%" y="415.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (11 samples, 0.01%)</title><rect x="29.5868%" y="389" width="0.0139%" height="15" fill="rgb(222,107,31)" fg:x="23399" fg:w="11"/><text x="29.8368%" y="399.50"></text></g><g><title>libsystem_c.dylib`__v2printf (11 samples, 0.01%)</title><rect x="29.5868%" y="373" width="0.0139%" height="15" fill="rgb(216,127,34)" fg:x="23399" fg:w="11"/><text x="29.8368%" y="383.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (18 samples, 0.02%)</title><rect x="29.5855%" y="453" width="0.0228%" height="15" fill="rgb(234,116,52)" fg:x="23398" fg:w="18"/><text x="29.8355%" y="463.50"></text></g><g><title>SkyLight`CGSEventLogEvent (28 samples, 0.04%)</title><rect x="29.5792%" y="469" width="0.0354%" height="15" fill="rgb(222,124,15)" fg:x="23393" fg:w="28"/><text x="29.8292%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (25 samples, 0.03%)</title><rect x="29.6247%" y="437" width="0.0316%" height="15" fill="rgb(231,179,28)" fg:x="23429" fg:w="25"/><text x="29.8747%" y="447.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (27 samples, 0.03%)</title><rect x="29.6247%" y="453" width="0.0341%" height="15" fill="rgb(226,93,45)" fg:x="23429" fg:w="27"/><text x="29.8747%" y="463.50"></text></g><g><title>IOKit`IOHIDEventAppendEvent (8 samples, 0.01%)</title><rect x="29.6854%" y="389" width="0.0101%" height="15" fill="rgb(215,8,51)" fg:x="23477" fg:w="8"/><text x="29.9354%" y="399.50"></text></g><g><title>IOKit`IOHIDEventCreateWithBytes (27 samples, 0.03%)</title><rect x="29.6702%" y="405" width="0.0341%" height="15" fill="rgb(223,106,5)" fg:x="23465" fg:w="27"/><text x="29.9202%" y="415.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_18::__invoke (30 samples, 0.04%)</title><rect x="29.6690%" y="421" width="0.0379%" height="15" fill="rgb(250,191,5)" fg:x="23464" fg:w="30"/><text x="29.9190%" y="431.50"></text></g><g><title>SkyLight`SLEventGetFieldDecodeDescriptor(SLEventToken)::$_20::__invoke (12 samples, 0.02%)</title><rect x="29.7069%" y="421" width="0.0152%" height="15" fill="rgb(242,132,44)" fg:x="23494" fg:w="12"/><text x="29.9569%" y="431.50"></text></g><g><title>SkyLight`SLEventRecordCreateWithBytesAndSource(void const*, unsigned long, __CGEventSource*) (49 samples, 0.06%)</title><rect x="29.6614%" y="437" width="0.0620%" height="15" fill="rgb(251,152,29)" fg:x="23458" fg:w="49"/><text x="29.9114%" y="447.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (54 samples, 0.07%)</title><rect x="29.6589%" y="453" width="0.0683%" height="15" fill="rgb(218,179,5)" fg:x="23456" fg:w="54"/><text x="29.9089%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (123 samples, 0.16%)</title><rect x="29.7410%" y="453" width="0.1555%" height="15" fill="rgb(227,67,19)" fg:x="23521" fg:w="123"/><text x="29.9910%" y="463.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (224 samples, 0.28%)</title><rect x="29.6146%" y="469" width="0.2832%" height="15" fill="rgb(233,119,31)" fg:x="23421" fg:w="224"/><text x="29.8646%" y="479.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (272 samples, 0.34%)</title><rect x="29.5691%" y="501" width="0.3439%" height="15" fill="rgb(241,120,22)" fg:x="23385" fg:w="272"/><text x="29.8191%" y="511.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (271 samples, 0.34%)</title><rect x="29.5703%" y="485" width="0.3427%" height="15" fill="rgb(224,102,30)" fg:x="23386" fg:w="271"/><text x="29.8203%" y="495.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (328 samples, 0.41%)</title><rect x="29.5096%" y="517" width="0.4147%" height="15" fill="rgb(210,164,37)" fg:x="23338" fg:w="328"/><text x="29.7596%" y="527.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (334 samples, 0.42%)</title><rect x="29.5033%" y="533" width="0.4223%" height="15" fill="rgb(226,191,16)" fg:x="23333" fg:w="334"/><text x="29.7533%" y="543.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (342 samples, 0.43%)</title><rect x="29.4957%" y="565" width="0.4324%" height="15" fill="rgb(214,40,45)" fg:x="23327" fg:w="342"/><text x="29.7457%" y="575.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (342 samples, 0.43%)</title><rect x="29.4957%" y="549" width="0.4324%" height="15" fill="rgb(244,29,26)" fg:x="23327" fg:w="342"/><text x="29.7457%" y="559.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (343 samples, 0.43%)</title><rect x="29.4957%" y="581" width="0.4337%" height="15" fill="rgb(216,16,5)" fg:x="23327" fg:w="343"/><text x="29.7457%" y="591.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_adopt (12 samples, 0.02%)</title><rect x="29.9320%" y="565" width="0.0152%" height="15" fill="rgb(249,76,35)" fg:x="23672" fg:w="12"/><text x="30.1820%" y="575.50"></text></g><g><title>libdispatch.dylib`_voucher_create_with_mach_voucher (8 samples, 0.01%)</title><rect x="29.9370%" y="549" width="0.0101%" height="15" fill="rgb(207,11,44)" fg:x="23676" fg:w="8"/><text x="30.1870%" y="559.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (76 samples, 0.10%)</title><rect x="29.9294%" y="581" width="0.0961%" height="15" fill="rgb(228,190,49)" fg:x="23670" fg:w="76"/><text x="30.1794%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (60 samples, 0.08%)</title><rect x="29.9497%" y="565" width="0.0759%" height="15" fill="rgb(214,173,12)" fg:x="23686" fg:w="60"/><text x="30.1997%" y="575.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_revert (9 samples, 0.01%)</title><rect x="30.0281%" y="581" width="0.0114%" height="15" fill="rgb(218,26,35)" fg:x="23748" fg:w="9"/><text x="30.2781%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_set_priority_and_mach_voucher_slow (9 samples, 0.01%)</title><rect x="30.0281%" y="565" width="0.0114%" height="15" fill="rgb(220,200,19)" fg:x="23748" fg:w="9"/><text x="30.2781%" y="575.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (440 samples, 0.56%)</title><rect x="29.4856%" y="597" width="0.5564%" height="15" fill="rgb(239,95,49)" fg:x="23319" fg:w="440"/><text x="29.7356%" y="607.50"></text></g><g><title>AppKit`_NSEventThread (446 samples, 0.56%)</title><rect x="29.4818%" y="629" width="0.5639%" height="15" fill="rgb(235,85,53)" fg:x="23316" fg:w="446"/><text x="29.7318%" y="639.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (445 samples, 0.56%)</title><rect x="29.4831%" y="613" width="0.5627%" height="15" fill="rgb(233,133,31)" fg:x="23317" fg:w="445"/><text x="29.7331%" y="623.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (16 samples, 0.02%)</title><rect x="30.2683%" y="501" width="0.0202%" height="15" fill="rgb(218,25,20)" fg:x="23938" fg:w="16"/><text x="30.5183%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (24 samples, 0.03%)</title><rect x="30.8259%" y="469" width="0.0303%" height="15" fill="rgb(252,210,38)" fg:x="24379" fg:w="24"/><text x="31.0759%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (22 samples, 0.03%)</title><rect x="30.8285%" y="453" width="0.0278%" height="15" fill="rgb(242,134,21)" fg:x="24381" fg:w="22"/><text x="31.0785%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 0.02%)</title><rect x="30.8323%" y="437" width="0.0240%" height="15" fill="rgb(213,28,48)" fg:x="24384" fg:w="19"/><text x="31.0823%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (8 samples, 0.01%)</title><rect x="30.8462%" y="421" width="0.0101%" height="15" fill="rgb(250,196,2)" fg:x="24395" fg:w="8"/><text x="31.0962%" y="431.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (46 samples, 0.06%)</title><rect x="30.7994%" y="485" width="0.0582%" height="15" fill="rgb(227,5,17)" fg:x="24358" fg:w="46"/><text x="31.0494%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (10 samples, 0.01%)</title><rect x="32.7466%" y="405" width="0.0126%" height="15" fill="rgb(221,226,24)" fg:x="25898" fg:w="10"/><text x="32.9966%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (76 samples, 0.10%)</title><rect x="32.7049%" y="437" width="0.0961%" height="15" fill="rgb(211,5,48)" fg:x="25865" fg:w="76"/><text x="32.9549%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (70 samples, 0.09%)</title><rect x="32.7125%" y="421" width="0.0885%" height="15" fill="rgb(219,150,6)" fg:x="25871" fg:w="70"/><text x="32.9625%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (33 samples, 0.04%)</title><rect x="32.7593%" y="405" width="0.0417%" height="15" fill="rgb(251,46,16)" fg:x="25908" fg:w="33"/><text x="33.0093%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (86 samples, 0.11%)</title><rect x="32.6935%" y="453" width="0.1087%" height="15" fill="rgb(220,204,40)" fg:x="25856" fg:w="86"/><text x="32.9435%" y="463.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (155 samples, 0.20%)</title><rect x="32.6113%" y="469" width="0.1960%" height="15" fill="rgb(211,85,2)" fg:x="25791" fg:w="155"/><text x="32.8613%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (58 samples, 0.07%)</title><rect x="34.9303%" y="437" width="0.0733%" height="15" fill="rgb(229,17,7)" fg:x="27625" fg:w="58"/><text x="35.1803%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.06%)</title><rect x="34.9404%" y="421" width="0.0632%" height="15" fill="rgb(239,72,28)" fg:x="27633" fg:w="50"/><text x="35.1904%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (46 samples, 0.06%)</title><rect x="34.9455%" y="405" width="0.0582%" height="15" fill="rgb(230,47,54)" fg:x="27637" fg:w="46"/><text x="35.1955%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.02%)</title><rect x="34.9847%" y="389" width="0.0190%" height="15" fill="rgb(214,50,8)" fg:x="27668" fg:w="15"/><text x="35.2347%" y="399.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (100 samples, 0.13%)</title><rect x="34.8785%" y="453" width="0.1264%" height="15" fill="rgb(216,198,43)" fg:x="27584" fg:w="100"/><text x="35.1285%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="38.1332%" y="373" width="0.0101%" height="15" fill="rgb(234,20,35)" fg:x="30158" fg:w="8"/><text x="38.3832%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (72 samples, 0.09%)</title><rect x="38.0826%" y="405" width="0.0910%" height="15" fill="rgb(254,45,19)" fg:x="30118" fg:w="72"/><text x="38.3326%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (70 samples, 0.09%)</title><rect x="38.0851%" y="389" width="0.0885%" height="15" fill="rgb(219,14,44)" fg:x="30120" fg:w="70"/><text x="38.3351%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (24 samples, 0.03%)</title><rect x="38.1433%" y="373" width="0.0303%" height="15" fill="rgb(217,220,26)" fg:x="30166" fg:w="24"/><text x="38.3933%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (85 samples, 0.11%)</title><rect x="38.0674%" y="421" width="0.1075%" height="15" fill="rgb(213,158,28)" fg:x="30106" fg:w="85"/><text x="38.3174%" y="431.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (182 samples, 0.23%)</title><rect x="37.9524%" y="437" width="0.2301%" height="15" fill="rgb(252,51,52)" fg:x="30015" fg:w="182"/><text x="38.2024%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (69 samples, 0.09%)</title><rect x="40.8277%" y="405" width="0.0872%" height="15" fill="rgb(246,89,16)" fg:x="32289" fg:w="69"/><text x="41.0777%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (63 samples, 0.08%)</title><rect x="40.8353%" y="389" width="0.0797%" height="15" fill="rgb(216,158,49)" fg:x="32295" fg:w="63"/><text x="41.0853%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (62 samples, 0.08%)</title><rect x="40.8366%" y="373" width="0.0784%" height="15" fill="rgb(236,107,19)" fg:x="32296" fg:w="62"/><text x="41.0866%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (22 samples, 0.03%)</title><rect x="40.8871%" y="357" width="0.0278%" height="15" fill="rgb(228,185,30)" fg:x="32336" fg:w="22"/><text x="41.1371%" y="367.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (114 samples, 0.14%)</title><rect x="40.7746%" y="421" width="0.1441%" height="15" fill="rgb(246,134,8)" fg:x="32247" fg:w="114"/><text x="41.0246%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (50 samples, 0.06%)</title><rect x="43.3996%" y="373" width="0.0632%" height="15" fill="rgb(214,143,50)" fg:x="34323" fg:w="50"/><text x="43.6496%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (47 samples, 0.06%)</title><rect x="43.4034%" y="357" width="0.0594%" height="15" fill="rgb(228,75,8)" fg:x="34326" fg:w="47"/><text x="43.6534%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (15 samples, 0.02%)</title><rect x="43.4438%" y="341" width="0.0190%" height="15" fill="rgb(207,175,4)" fg:x="34358" fg:w="15"/><text x="43.6938%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (59 samples, 0.07%)</title><rect x="43.3895%" y="389" width="0.0746%" height="15" fill="rgb(205,108,24)" fg:x="34315" fg:w="59"/><text x="43.6395%" y="399.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (121 samples, 0.15%)</title><rect x="43.3174%" y="405" width="0.1530%" height="15" fill="rgb(244,120,49)" fg:x="34258" fg:w="121"/><text x="43.5674%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (64 samples, 0.08%)</title><rect x="46.3116%" y="357" width="0.0809%" height="15" fill="rgb(223,47,38)" fg:x="36626" fg:w="64"/><text x="46.5616%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (62 samples, 0.08%)</title><rect x="46.3141%" y="341" width="0.0784%" height="15" fill="rgb(229,179,11)" fg:x="36628" fg:w="62"/><text x="46.5641%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (21 samples, 0.03%)</title><rect x="46.3660%" y="325" width="0.0266%" height="15" fill="rgb(231,122,1)" fg:x="36669" fg:w="21"/><text x="46.6160%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (78 samples, 0.10%)</title><rect x="46.2952%" y="373" width="0.0986%" height="15" fill="rgb(245,119,9)" fg:x="36613" fg:w="78"/><text x="46.5452%" y="383.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (126 samples, 0.16%)</title><rect x="46.2433%" y="389" width="0.1593%" height="15" fill="rgb(241,163,25)" fg:x="36572" fg:w="126"/><text x="46.4933%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (52 samples, 0.07%)</title><rect x="49.0011%" y="341" width="0.0658%" height="15" fill="rgb(217,214,3)" fg:x="38753" fg:w="52"/><text x="49.2511%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (48 samples, 0.06%)</title><rect x="49.0061%" y="325" width="0.0607%" height="15" fill="rgb(240,86,28)" fg:x="38757" fg:w="48"/><text x="49.2561%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.02%)</title><rect x="49.0428%" y="309" width="0.0240%" height="15" fill="rgb(215,47,9)" fg:x="38786" fg:w="19"/><text x="49.2928%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (66 samples, 0.08%)</title><rect x="48.9846%" y="357" width="0.0835%" height="15" fill="rgb(252,25,45)" fg:x="38740" fg:w="66"/><text x="49.2346%" y="367.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (131 samples, 0.17%)</title><rect x="48.9100%" y="373" width="0.1656%" height="15" fill="rgb(251,164,9)" fg:x="38681" fg:w="131"/><text x="49.1600%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (92 samples, 0.12%)</title><rect x="51.9864%" y="341" width="0.1163%" height="15" fill="rgb(233,194,0)" fg:x="41114" fg:w="92"/><text x="52.2364%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (81 samples, 0.10%)</title><rect x="52.0004%" y="325" width="0.1024%" height="15" fill="rgb(249,111,24)" fg:x="41125" fg:w="81"/><text x="52.2504%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (75 samples, 0.09%)</title><rect x="52.0079%" y="309" width="0.0948%" height="15" fill="rgb(250,223,3)" fg:x="41131" fg:w="75"/><text x="52.2579%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (16 samples, 0.02%)</title><rect x="52.0825%" y="293" width="0.0202%" height="15" fill="rgb(236,178,37)" fg:x="41190" fg:w="16"/><text x="52.3325%" y="303.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (150 samples, 0.19%)</title><rect x="51.9156%" y="357" width="0.1897%" height="15" fill="rgb(241,158,50)" fg:x="41058" fg:w="150"/><text x="52.1656%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (63 samples, 0.08%)</title><rect x="54.5204%" y="325" width="0.0797%" height="15" fill="rgb(213,121,41)" fg:x="43118" fg:w="63"/><text x="54.7704%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (54 samples, 0.07%)</title><rect x="54.5318%" y="309" width="0.0683%" height="15" fill="rgb(240,92,3)" fg:x="43127" fg:w="54"/><text x="54.7818%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (52 samples, 0.07%)</title><rect x="54.5343%" y="293" width="0.0658%" height="15" fill="rgb(205,123,3)" fg:x="43129" fg:w="52"/><text x="54.7843%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (21 samples, 0.03%)</title><rect x="54.5735%" y="277" width="0.0266%" height="15" fill="rgb(205,97,47)" fg:x="43160" fg:w="21"/><text x="54.8235%" y="287.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (113 samples, 0.14%)</title><rect x="54.4622%" y="341" width="0.1429%" height="15" fill="rgb(247,152,14)" fg:x="43072" fg:w="113"/><text x="54.7122%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="57.4413%" y="261" width="0.0101%" height="15" fill="rgb(248,195,53)" fg:x="45428" fg:w="8"/><text x="57.6913%" y="271.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (112 samples, 0.14%)</title><rect x="57.3338%" y="325" width="0.1416%" height="15" fill="rgb(226,201,16)" fg:x="45343" fg:w="112"/><text x="57.5838%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (67 samples, 0.08%)</title><rect x="57.3907%" y="309" width="0.0847%" height="15" fill="rgb(205,98,0)" fg:x="45388" fg:w="67"/><text x="57.6407%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (59 samples, 0.07%)</title><rect x="57.4008%" y="293" width="0.0746%" height="15" fill="rgb(214,191,48)" fg:x="45396" fg:w="59"/><text x="57.6508%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (57 samples, 0.07%)</title><rect x="57.4033%" y="277" width="0.0721%" height="15" fill="rgb(237,112,39)" fg:x="45398" fg:w="57"/><text x="57.6533%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.02%)</title><rect x="57.4514%" y="261" width="0.0240%" height="15" fill="rgb(247,203,27)" fg:x="45436" fg:w="19"/><text x="57.7014%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (63 samples, 0.08%)</title><rect x="59.4808%" y="293" width="0.0797%" height="15" fill="rgb(235,124,28)" fg:x="47041" fg:w="63"/><text x="59.7308%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (59 samples, 0.07%)</title><rect x="59.4859%" y="277" width="0.0746%" height="15" fill="rgb(208,207,46)" fg:x="47045" fg:w="59"/><text x="59.7359%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (55 samples, 0.07%)</title><rect x="59.4909%" y="261" width="0.0695%" height="15" fill="rgb(234,176,4)" fg:x="47049" fg:w="55"/><text x="59.7409%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.03%)</title><rect x="59.5314%" y="245" width="0.0291%" height="15" fill="rgb(230,133,28)" fg:x="47081" fg:w="23"/><text x="59.7814%" y="255.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (94 samples, 0.12%)</title><rect x="59.4429%" y="309" width="0.1189%" height="15" fill="rgb(211,137,40)" fg:x="47011" fg:w="94"/><text x="59.6929%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (12 samples, 0.02%)</title><rect x="60.7124%" y="293" width="0.0152%" height="15" fill="rgb(254,35,13)" fg:x="48015" fg:w="12"/><text x="60.9624%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (30 samples, 0.04%)</title><rect x="60.8237%" y="277" width="0.0379%" height="15" fill="rgb(225,49,51)" fg:x="48103" fg:w="30"/><text x="61.0737%" y="287.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (54 samples, 0.07%)</title><rect x="60.8730%" y="277" width="0.0683%" height="15" fill="rgb(251,10,15)" fg:x="48142" fg:w="54"/><text x="61.1230%" y="287.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (31 samples, 0.04%)</title><rect x="60.9021%" y="261" width="0.0392%" height="15" fill="rgb(228,207,15)" fg:x="48165" fg:w="31"/><text x="61.1521%" y="271.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (50 samples, 0.06%)</title><rect x="60.9741%" y="261" width="0.0632%" height="15" fill="rgb(241,99,19)" fg:x="48222" fg:w="50"/><text x="61.2241%" y="271.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (17 samples, 0.02%)</title><rect x="61.0374%" y="261" width="0.0215%" height="15" fill="rgb(207,104,49)" fg:x="48272" fg:w="17"/><text x="61.2874%" y="271.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (101 samples, 0.13%)</title><rect x="61.0588%" y="261" width="0.1277%" height="15" fill="rgb(234,99,18)" fg:x="48289" fg:w="101"/><text x="61.3088%" y="271.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (29 samples, 0.04%)</title><rect x="61.1866%" y="261" width="0.0367%" height="15" fill="rgb(213,191,49)" fg:x="48390" fg:w="29"/><text x="61.4366%" y="271.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (281 samples, 0.36%)</title><rect x="60.9425%" y="277" width="0.3553%" height="15" fill="rgb(210,226,19)" fg:x="48197" fg:w="281"/><text x="61.1925%" y="287.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (59 samples, 0.07%)</title><rect x="61.2232%" y="261" width="0.0746%" height="15" fill="rgb(229,97,18)" fg:x="48419" fg:w="59"/><text x="61.4732%" y="271.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (491 samples, 0.62%)</title><rect x="60.7276%" y="293" width="0.6208%" height="15" fill="rgb(211,167,15)" fg:x="48027" fg:w="491"/><text x="60.9776%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (32 samples, 0.04%)</title><rect x="61.3079%" y="277" width="0.0405%" height="15" fill="rgb(210,169,34)" fg:x="48486" fg:w="32"/><text x="61.5579%" y="287.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (275 samples, 0.35%)</title><rect x="61.3484%" y="293" width="0.3477%" height="15" fill="rgb(241,121,31)" fg:x="48518" fg:w="275"/><text x="61.5984%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (219 samples, 0.28%)</title><rect x="61.4192%" y="277" width="0.2769%" height="15" fill="rgb(232,40,11)" fg:x="48574" fg:w="219"/><text x="61.6692%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (93 samples, 0.12%)</title><rect x="61.7037%" y="293" width="0.1176%" height="15" fill="rgb(205,86,26)" fg:x="48799" fg:w="93"/><text x="61.9537%" y="303.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (1,789 samples, 2.26%)</title><rect x="59.5617%" y="309" width="2.2621%" height="15" fill="rgb(231,126,28)" fg:x="47105" fg:w="1789"/><text x="59.8117%" y="319.50">A..</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (10 samples, 0.01%)</title><rect x="61.8238%" y="309" width="0.0126%" height="15" fill="rgb(219,221,18)" fg:x="48894" fg:w="10"/><text x="62.0738%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (37 samples, 0.05%)</title><rect x="61.9579%" y="293" width="0.0468%" height="15" fill="rgb(211,40,0)" fg:x="49000" fg:w="37"/><text x="62.2079%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_evading_king_moves (9 samples, 0.01%)</title><rect x="62.0047%" y="293" width="0.0114%" height="15" fill="rgb(239,85,43)" fg:x="49037" fg:w="9"/><text x="62.2547%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (72 samples, 0.09%)</title><rect x="62.0160%" y="293" width="0.0910%" height="15" fill="rgb(231,55,21)" fg:x="49046" fg:w="72"/><text x="62.2660%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (44 samples, 0.06%)</title><rect x="62.0514%" y="277" width="0.0556%" height="15" fill="rgb(225,184,43)" fg:x="49074" fg:w="44"/><text x="62.3014%" y="287.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (75 samples, 0.09%)</title><rect x="62.1614%" y="277" width="0.0948%" height="15" fill="rgb(251,158,41)" fg:x="49161" fg:w="75"/><text x="62.4114%" y="287.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (30 samples, 0.04%)</title><rect x="62.2563%" y="277" width="0.0379%" height="15" fill="rgb(234,159,37)" fg:x="49236" fg:w="30"/><text x="62.5063%" y="287.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (185 samples, 0.23%)</title><rect x="62.2942%" y="277" width="0.2339%" height="15" fill="rgb(216,204,22)" fg:x="49266" fg:w="185"/><text x="62.5442%" y="287.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (68 samples, 0.09%)</title><rect x="62.5281%" y="277" width="0.0860%" height="15" fill="rgb(214,17,3)" fg:x="49451" fg:w="68"/><text x="62.7781%" y="287.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (507 samples, 0.64%)</title><rect x="62.1071%" y="293" width="0.6411%" height="15" fill="rgb(212,111,17)" fg:x="49118" fg:w="507"/><text x="62.3571%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (106 samples, 0.13%)</title><rect x="62.6141%" y="277" width="0.1340%" height="15" fill="rgb(221,157,24)" fg:x="49519" fg:w="106"/><text x="62.8641%" y="287.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (767 samples, 0.97%)</title><rect x="61.8365%" y="309" width="0.9698%" height="15" fill="rgb(252,16,13)" fg:x="48904" fg:w="767"/><text x="62.0865%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (42 samples, 0.05%)</title><rect x="62.7532%" y="293" width="0.0531%" height="15" fill="rgb(221,62,2)" fg:x="49629" fg:w="42"/><text x="63.0032%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (234 samples, 0.30%)</title><rect x="62.8063%" y="309" width="0.2959%" height="15" fill="rgb(247,87,22)" fg:x="49671" fg:w="234"/><text x="63.0563%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (185 samples, 0.23%)</title><rect x="62.8683%" y="293" width="0.2339%" height="15" fill="rgb(215,73,9)" fg:x="49720" fg:w="185"/><text x="63.1183%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (82 samples, 0.10%)</title><rect x="63.4069%" y="293" width="0.1037%" height="15" fill="rgb(207,175,33)" fg:x="50146" fg:w="82"/><text x="63.6569%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (337 samples, 0.43%)</title><rect x="63.1047%" y="309" width="0.4261%" height="15" fill="rgb(243,129,54)" fg:x="49907" fg:w="337"/><text x="63.3547%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (16 samples, 0.02%)</title><rect x="63.5106%" y="293" width="0.0202%" height="15" fill="rgb(227,119,45)" fg:x="50228" fg:w="16"/><text x="63.7606%" y="303.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (9 samples, 0.01%)</title><rect x="63.5397%" y="309" width="0.0114%" height="15" fill="rgb(205,109,36)" fg:x="50251" fg:w="9"/><text x="63.7897%" y="319.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (23 samples, 0.03%)</title><rect x="63.7180%" y="293" width="0.0291%" height="15" fill="rgb(205,6,39)" fg:x="50392" fg:w="23"/><text x="63.9680%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (52 samples, 0.07%)</title><rect x="63.7471%" y="293" width="0.0658%" height="15" fill="rgb(221,32,16)" fg:x="50415" fg:w="52"/><text x="63.9971%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (47 samples, 0.06%)</title><rect x="63.7534%" y="277" width="0.0594%" height="15" fill="rgb(228,144,50)" fg:x="50420" fg:w="47"/><text x="64.0034%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (44 samples, 0.06%)</title><rect x="63.7572%" y="261" width="0.0556%" height="15" fill="rgb(229,201,53)" fg:x="50423" fg:w="44"/><text x="64.0072%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (20 samples, 0.03%)</title><rect x="63.7875%" y="245" width="0.0253%" height="15" fill="rgb(249,153,27)" fg:x="50447" fg:w="20"/><text x="64.0375%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.02%)</title><rect x="63.8166%" y="293" width="0.0228%" height="15" fill="rgb(227,106,25)" fg:x="50470" fg:w="18"/><text x="64.0666%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.02%)</title><rect x="63.8229%" y="277" width="0.0164%" height="15" fill="rgb(230,65,29)" fg:x="50475" fg:w="13"/><text x="64.0729%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.01%)</title><rect x="63.8394%" y="293" width="0.0126%" height="15" fill="rgb(221,57,46)" fg:x="50488" fg:w="10"/><text x="64.0894%" y="303.50"></text></g><g><title>App`core::slice::sort::merge_sort (259 samples, 0.33%)</title><rect x="63.5511%" y="309" width="0.3275%" height="15" fill="rgb(229,161,17)" fg:x="50260" fg:w="259"/><text x="63.8011%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.02%)</title><rect x="63.8545%" y="293" width="0.0240%" height="15" fill="rgb(222,213,11)" fg:x="50500" fg:w="19"/><text x="64.1045%" y="303.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (52 samples, 0.07%)</title><rect x="63.8786%" y="309" width="0.0658%" height="15" fill="rgb(235,35,13)" fg:x="50519" fg:w="52"/><text x="64.1286%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (24 samples, 0.03%)</title><rect x="63.9494%" y="309" width="0.0303%" height="15" fill="rgb(233,158,34)" fg:x="50575" fg:w="24"/><text x="64.1994%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="63.9696%" y="293" width="0.0101%" height="15" fill="rgb(215,151,48)" fg:x="50591" fg:w="8"/><text x="64.2196%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (57 samples, 0.07%)</title><rect x="63.9797%" y="309" width="0.0721%" height="15" fill="rgb(229,84,14)" fg:x="50599" fg:w="57"/><text x="64.2297%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (34 samples, 0.04%)</title><rect x="64.0088%" y="293" width="0.0430%" height="15" fill="rgb(229,68,14)" fg:x="50622" fg:w="34"/><text x="64.2588%" y="303.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$__bzero (8 samples, 0.01%)</title><rect x="64.0682%" y="309" width="0.0101%" height="15" fill="rgb(243,106,26)" fg:x="50669" fg:w="8"/><text x="64.3182%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="64.0821%" y="309" width="0.0152%" height="15" fill="rgb(206,45,38)" fg:x="50680" fg:w="12"/><text x="64.3321%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (80 samples, 0.10%)</title><rect x="64.0973%" y="309" width="0.1012%" height="15" fill="rgb(226,6,15)" fg:x="50692" fg:w="80"/><text x="64.3473%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="64.1985%" y="309" width="0.0114%" height="15" fill="rgb(232,22,54)" fg:x="50772" fg:w="9"/><text x="64.4485%" y="319.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (5,333 samples, 6.74%)</title><rect x="57.4754%" y="325" width="6.7433%" height="15" fill="rgb(229,222,32)" fg:x="45455" fg:w="5333"/><text x="57.7254%" y="335.50">App`App::..</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (18 samples, 0.02%)</title><rect x="64.2187%" y="325" width="0.0228%" height="15" fill="rgb(228,62,29)" fg:x="50788" fg:w="18"/><text x="64.4687%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (52 samples, 0.07%)</title><rect x="64.4109%" y="309" width="0.0658%" height="15" fill="rgb(251,103,34)" fg:x="50940" fg:w="52"/><text x="64.6609%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_evading_king_moves (11 samples, 0.01%)</title><rect x="64.4830%" y="309" width="0.0139%" height="15" fill="rgb(233,12,30)" fg:x="50997" fg:w="11"/><text x="64.7330%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (134 samples, 0.17%)</title><rect x="64.4969%" y="309" width="0.1694%" height="15" fill="rgb(238,52,0)" fg:x="51008" fg:w="134"/><text x="64.7469%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (91 samples, 0.12%)</title><rect x="64.5512%" y="293" width="0.1151%" height="15" fill="rgb(223,98,5)" fg:x="51051" fg:w="91"/><text x="64.8012%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (132 samples, 0.17%)</title><rect x="64.7510%" y="293" width="0.1669%" height="15" fill="rgb(228,75,37)" fg:x="51209" fg:w="132"/><text x="65.0010%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (42 samples, 0.05%)</title><rect x="64.9179%" y="293" width="0.0531%" height="15" fill="rgb(205,115,49)" fg:x="51341" fg:w="42"/><text x="65.1679%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (239 samples, 0.30%)</title><rect x="64.9710%" y="293" width="0.3022%" height="15" fill="rgb(250,154,43)" fg:x="51383" fg:w="239"/><text x="65.2210%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (115 samples, 0.15%)</title><rect x="65.2732%" y="293" width="0.1454%" height="15" fill="rgb(226,43,29)" fg:x="51622" fg:w="115"/><text x="65.5232%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (715 samples, 0.90%)</title><rect x="64.6688%" y="309" width="0.9041%" height="15" fill="rgb(249,228,39)" fg:x="51144" fg:w="715"/><text x="64.9188%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (122 samples, 0.15%)</title><rect x="65.4187%" y="293" width="0.1543%" height="15" fill="rgb(216,79,43)" fg:x="51737" fg:w="122"/><text x="65.6687%" y="303.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (1,135 samples, 1.44%)</title><rect x="64.2415%" y="325" width="1.4351%" height="15" fill="rgb(228,95,12)" fg:x="50806" fg:w="1135"/><text x="64.4915%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (77 samples, 0.10%)</title><rect x="65.5792%" y="309" width="0.0974%" height="15" fill="rgb(249,221,15)" fg:x="51864" fg:w="77"/><text x="65.8292%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (333 samples, 0.42%)</title><rect x="65.6766%" y="325" width="0.4211%" height="15" fill="rgb(233,34,13)" fg:x="51941" fg:w="333"/><text x="65.9266%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (228 samples, 0.29%)</title><rect x="65.8094%" y="309" width="0.2883%" height="15" fill="rgb(214,103,39)" fg:x="52046" fg:w="228"/><text x="66.0594%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (76 samples, 0.10%)</title><rect x="66.5061%" y="309" width="0.0961%" height="15" fill="rgb(251,126,39)" fg:x="52597" fg:w="76"/><text x="66.7561%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (412 samples, 0.52%)</title><rect x="66.1002%" y="325" width="0.5210%" height="15" fill="rgb(214,216,36)" fg:x="52276" fg:w="412"/><text x="66.3502%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="66.6022%" y="309" width="0.0190%" height="15" fill="rgb(220,221,8)" fg:x="52673" fg:w="15"/><text x="66.8522%" y="319.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (22 samples, 0.03%)</title><rect x="66.6325%" y="325" width="0.0278%" height="15" fill="rgb(240,216,3)" fg:x="52697" fg:w="22"/><text x="66.8825%" y="335.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (30 samples, 0.04%)</title><rect x="66.8563%" y="309" width="0.0379%" height="15" fill="rgb(232,218,17)" fg:x="52874" fg:w="30"/><text x="67.1063%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (39 samples, 0.05%)</title><rect x="66.9044%" y="277" width="0.0493%" height="15" fill="rgb(229,163,45)" fg:x="52912" fg:w="39"/><text x="67.1544%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (18 samples, 0.02%)</title><rect x="66.9309%" y="261" width="0.0228%" height="15" fill="rgb(231,110,42)" fg:x="52933" fg:w="18"/><text x="67.1809%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (48 samples, 0.06%)</title><rect x="66.8943%" y="309" width="0.0607%" height="15" fill="rgb(208,170,48)" fg:x="52904" fg:w="48"/><text x="67.1443%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (43 samples, 0.05%)</title><rect x="66.9006%" y="293" width="0.0544%" height="15" fill="rgb(239,116,25)" fg:x="52909" fg:w="43"/><text x="67.1506%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.01%)</title><rect x="66.9613%" y="309" width="0.0139%" height="15" fill="rgb(219,200,50)" fg:x="52957" fg:w="11"/><text x="67.2113%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.01%)</title><rect x="66.9802%" y="309" width="0.0126%" height="15" fill="rgb(245,200,0)" fg:x="52972" fg:w="10"/><text x="67.2302%" y="319.50"></text></g><g><title>App`core::slice::sort::merge_sort (284 samples, 0.36%)</title><rect x="66.6603%" y="325" width="0.3591%" height="15" fill="rgb(245,119,33)" fg:x="52719" fg:w="284"/><text x="66.9103%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.02%)</title><rect x="66.9954%" y="309" width="0.0240%" height="15" fill="rgb(231,125,12)" fg:x="52984" fg:w="19"/><text x="67.2454%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`madvise (24 samples, 0.03%)</title><rect x="67.1775%" y="293" width="0.0303%" height="15" fill="rgb(216,96,41)" fg:x="53128" fg:w="24"/><text x="67.4275%" y="303.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (228 samples, 0.29%)</title><rect x="67.1219%" y="309" width="0.2883%" height="15" fill="rgb(248,43,45)" fg:x="53084" fg:w="228"/><text x="67.3719%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (158 samples, 0.20%)</title><rect x="67.2104%" y="293" width="0.1998%" height="15" fill="rgb(217,222,7)" fg:x="53154" fg:w="158"/><text x="67.4604%" y="303.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (313 samples, 0.40%)</title><rect x="67.0194%" y="325" width="0.3958%" height="15" fill="rgb(233,28,6)" fg:x="53003" fg:w="313"/><text x="67.2694%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.01%)</title><rect x="67.4506%" y="309" width="0.0114%" height="15" fill="rgb(231,218,15)" fg:x="53344" fg:w="9"/><text x="67.7006%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (9 samples, 0.01%)</title><rect x="67.4506%" y="293" width="0.0114%" height="15" fill="rgb(226,171,48)" fg:x="53344" fg:w="9"/><text x="67.7006%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (30 samples, 0.04%)</title><rect x="67.4253%" y="325" width="0.0379%" height="15" fill="rgb(235,201,9)" fg:x="53324" fg:w="30"/><text x="67.6753%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (44 samples, 0.06%)</title><rect x="67.4633%" y="325" width="0.0556%" height="15" fill="rgb(217,80,15)" fg:x="53354" fg:w="44"/><text x="67.7133%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (31 samples, 0.04%)</title><rect x="67.4797%" y="309" width="0.0392%" height="15" fill="rgb(219,152,8)" fg:x="53367" fg:w="31"/><text x="67.7297%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.01%)</title><rect x="67.5240%" y="325" width="0.0101%" height="15" fill="rgb(243,107,38)" fg:x="53402" fg:w="8"/><text x="67.7740%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (113 samples, 0.14%)</title><rect x="67.5530%" y="325" width="0.1429%" height="15" fill="rgb(231,17,5)" fg:x="53425" fg:w="113"/><text x="67.8030%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="67.6959%" y="325" width="0.0152%" height="15" fill="rgb(209,25,54)" fg:x="53538" fg:w="12"/><text x="67.9459%" y="335.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (10,368 samples, 13.11%)</title><rect x="54.6051%" y="341" width="13.1098%" height="15" fill="rgb(219,0,2)" fg:x="43185" fg:w="10368"/><text x="54.8551%" y="351.50">App`App::game_manage..</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (14 samples, 0.02%)</title><rect x="67.7149%" y="341" width="0.0177%" height="15" fill="rgb(246,9,5)" fg:x="53553" fg:w="14"/><text x="67.9649%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (55 samples, 0.07%)</title><rect x="67.8767%" y="325" width="0.0695%" height="15" fill="rgb(226,159,4)" fg:x="53681" fg:w="55"/><text x="68.1267%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (81 samples, 0.10%)</title><rect x="67.9526%" y="325" width="0.1024%" height="15" fill="rgb(219,175,34)" fg:x="53741" fg:w="81"/><text x="68.2026%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (58 samples, 0.07%)</title><rect x="67.9817%" y="309" width="0.0733%" height="15" fill="rgb(236,10,46)" fg:x="53764" fg:w="58"/><text x="68.2317%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (88 samples, 0.11%)</title><rect x="68.1220%" y="309" width="0.1113%" height="15" fill="rgb(240,211,16)" fg:x="53875" fg:w="88"/><text x="68.3720%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (59 samples, 0.07%)</title><rect x="68.2333%" y="309" width="0.0746%" height="15" fill="rgb(205,3,43)" fg:x="53963" fg:w="59"/><text x="68.4833%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (172 samples, 0.22%)</title><rect x="68.3079%" y="309" width="0.2175%" height="15" fill="rgb(245,7,22)" fg:x="54022" fg:w="172"/><text x="68.5579%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (100 samples, 0.13%)</title><rect x="68.5254%" y="309" width="0.1264%" height="15" fill="rgb(239,132,32)" fg:x="54194" fg:w="100"/><text x="68.7754%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (589 samples, 0.74%)</title><rect x="68.0563%" y="325" width="0.7448%" height="15" fill="rgb(228,202,34)" fg:x="53823" fg:w="589"/><text x="68.3063%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (118 samples, 0.15%)</title><rect x="68.6518%" y="309" width="0.1492%" height="15" fill="rgb(254,200,22)" fg:x="54294" fg:w="118"/><text x="68.9018%" y="319.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (911 samples, 1.15%)</title><rect x="67.7326%" y="341" width="1.1519%" height="15" fill="rgb(219,10,39)" fg:x="53567" fg:w="911"/><text x="67.9826%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (64 samples, 0.08%)</title><rect x="68.8036%" y="325" width="0.0809%" height="15" fill="rgb(226,210,39)" fg:x="54414" fg:w="64"/><text x="69.0536%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (259 samples, 0.33%)</title><rect x="68.8845%" y="341" width="0.3275%" height="15" fill="rgb(208,219,16)" fg:x="54478" fg:w="259"/><text x="69.1345%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (176 samples, 0.22%)</title><rect x="68.9895%" y="325" width="0.2225%" height="15" fill="rgb(216,158,51)" fg:x="54561" fg:w="176"/><text x="69.2395%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (113 samples, 0.14%)</title><rect x="69.7026%" y="325" width="0.1429%" height="15" fill="rgb(233,14,44)" fg:x="55125" fg:w="113"/><text x="69.9526%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (548 samples, 0.69%)</title><rect x="69.2145%" y="341" width="0.6929%" height="15" fill="rgb(237,97,39)" fg:x="54739" fg:w="548"/><text x="69.4645%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (49 samples, 0.06%)</title><rect x="69.8455%" y="325" width="0.0620%" height="15" fill="rgb(218,198,43)" fg:x="55238" fg:w="49"/><text x="70.0955%" y="335.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (36 samples, 0.05%)</title><rect x="70.1603%" y="325" width="0.0455%" height="15" fill="rgb(231,104,20)" fg:x="55487" fg:w="36"/><text x="70.4103%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (57 samples, 0.07%)</title><rect x="70.2172%" y="293" width="0.0721%" height="15" fill="rgb(254,36,13)" fg:x="55532" fg:w="57"/><text x="70.4672%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (30 samples, 0.04%)</title><rect x="70.2514%" y="277" width="0.0379%" height="15" fill="rgb(248,14,50)" fg:x="55559" fg:w="30"/><text x="70.5014%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (68 samples, 0.09%)</title><rect x="70.2059%" y="325" width="0.0860%" height="15" fill="rgb(217,107,29)" fg:x="55523" fg:w="68"/><text x="70.4559%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (63 samples, 0.08%)</title><rect x="70.2122%" y="309" width="0.0797%" height="15" fill="rgb(251,169,33)" fg:x="55528" fg:w="63"/><text x="70.4622%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.01%)</title><rect x="70.2918%" y="325" width="0.0101%" height="15" fill="rgb(217,108,32)" fg:x="55591" fg:w="8"/><text x="70.5418%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.02%)</title><rect x="70.3019%" y="325" width="0.0177%" height="15" fill="rgb(219,66,42)" fg:x="55599" fg:w="14"/><text x="70.5519%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.01%)</title><rect x="70.3095%" y="309" width="0.0101%" height="15" fill="rgb(206,180,7)" fg:x="55605" fg:w="8"/><text x="70.5595%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.01%)</title><rect x="70.3209%" y="325" width="0.0139%" height="15" fill="rgb(208,226,31)" fg:x="55614" fg:w="11"/><text x="70.5709%" y="335.50"></text></g><g><title>App`core::slice::sort::merge_sort (339 samples, 0.43%)</title><rect x="69.9302%" y="341" width="0.4286%" height="15" fill="rgb(218,26,49)" fg:x="55305" fg:w="339"/><text x="70.1802%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.02%)</title><rect x="70.3361%" y="325" width="0.0228%" height="15" fill="rgb(233,197,48)" fg:x="55626" fg:w="18"/><text x="70.5861%" y="335.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.01%)</title><rect x="70.4512%" y="325" width="0.0101%" height="15" fill="rgb(252,181,51)" fg:x="55717" fg:w="8"/><text x="70.7012%" y="335.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (83 samples, 0.10%)</title><rect x="70.3588%" y="341" width="0.1049%" height="15" fill="rgb(253,90,19)" fg:x="55644" fg:w="83"/><text x="70.6088%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (9 samples, 0.01%)</title><rect x="70.4878%" y="325" width="0.0114%" height="15" fill="rgb(215,171,30)" fg:x="55746" fg:w="9"/><text x="70.7378%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (37 samples, 0.05%)</title><rect x="70.4676%" y="341" width="0.0468%" height="15" fill="rgb(214,222,9)" fg:x="55730" fg:w="37"/><text x="70.7176%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (10 samples, 0.01%)</title><rect x="70.5017%" y="325" width="0.0126%" height="15" fill="rgb(223,3,22)" fg:x="55757" fg:w="10"/><text x="70.7517%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (10 samples, 0.01%)</title><rect x="70.5017%" y="309" width="0.0126%" height="15" fill="rgb(225,196,46)" fg:x="55757" fg:w="10"/><text x="70.7517%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (58 samples, 0.07%)</title><rect x="70.5144%" y="341" width="0.0733%" height="15" fill="rgb(209,110,37)" fg:x="55767" fg:w="58"/><text x="70.7644%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (36 samples, 0.05%)</title><rect x="70.5422%" y="325" width="0.0455%" height="15" fill="rgb(249,89,12)" fg:x="55789" fg:w="36"/><text x="70.7922%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (8 samples, 0.01%)</title><rect x="70.5877%" y="341" width="0.0101%" height="15" fill="rgb(226,27,33)" fg:x="55825" fg:w="8"/><text x="70.8377%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (16 samples, 0.02%)</title><rect x="70.5978%" y="341" width="0.0202%" height="15" fill="rgb(213,82,22)" fg:x="55833" fg:w="16"/><text x="70.8478%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (94 samples, 0.12%)</title><rect x="70.6471%" y="341" width="0.1189%" height="15" fill="rgb(248,140,0)" fg:x="55872" fg:w="94"/><text x="70.8971%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.02%)</title><rect x="70.7660%" y="341" width="0.0228%" height="15" fill="rgb(228,106,3)" fg:x="55966" fg:w="18"/><text x="71.0160%" y="351.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (14,778 samples, 18.69%)</title><rect x="52.1053%" y="357" width="18.6860%" height="15" fill="rgb(209,23,37)" fg:x="41208" fg:w="14778"/><text x="52.3553%" y="367.50">App`App::game_manager::bot2::..</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (21 samples, 0.03%)</title><rect x="70.7913%" y="357" width="0.0266%" height="15" fill="rgb(241,93,50)" fg:x="55986" fg:w="21"/><text x="71.0413%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (61 samples, 0.08%)</title><rect x="71.0265%" y="341" width="0.0771%" height="15" fill="rgb(253,46,43)" fg:x="56172" fg:w="61"/><text x="71.2765%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_evading_king_moves (15 samples, 0.02%)</title><rect x="71.1074%" y="341" width="0.0190%" height="15" fill="rgb(226,206,43)" fg:x="56236" fg:w="15"/><text x="71.3574%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (133 samples, 0.17%)</title><rect x="71.1264%" y="341" width="0.1682%" height="15" fill="rgb(217,54,7)" fg:x="56251" fg:w="133"/><text x="71.3764%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (85 samples, 0.11%)</title><rect x="71.1871%" y="325" width="0.1075%" height="15" fill="rgb(223,5,52)" fg:x="56299" fg:w="85"/><text x="71.4371%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (125 samples, 0.16%)</title><rect x="71.3995%" y="325" width="0.1581%" height="15" fill="rgb(206,52,46)" fg:x="56467" fg:w="125"/><text x="71.6495%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (78 samples, 0.10%)</title><rect x="71.5575%" y="325" width="0.0986%" height="15" fill="rgb(253,136,11)" fg:x="56592" fg:w="78"/><text x="71.8075%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (296 samples, 0.37%)</title><rect x="71.6562%" y="325" width="0.3743%" height="15" fill="rgb(208,106,33)" fg:x="56670" fg:w="296"/><text x="71.9062%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (121 samples, 0.15%)</title><rect x="72.0304%" y="325" width="0.1530%" height="15" fill="rgb(206,54,4)" fg:x="56966" fg:w="121"/><text x="72.2804%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (843 samples, 1.07%)</title><rect x="71.2971%" y="341" width="1.0659%" height="15" fill="rgb(213,3,15)" fg:x="56386" fg:w="843"/><text x="71.5471%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (142 samples, 0.18%)</title><rect x="72.1834%" y="325" width="0.1796%" height="15" fill="rgb(252,211,39)" fg:x="57087" fg:w="142"/><text x="72.4334%" y="335.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (1,338 samples, 1.69%)</title><rect x="70.8178%" y="357" width="1.6918%" height="15" fill="rgb(223,6,36)" fg:x="56007" fg:w="1338"/><text x="71.0678%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (105 samples, 0.13%)</title><rect x="72.3769%" y="341" width="0.1328%" height="15" fill="rgb(252,169,45)" fg:x="57240" fg:w="105"/><text x="72.6269%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (358 samples, 0.45%)</title><rect x="72.5109%" y="357" width="0.4527%" height="15" fill="rgb(212,48,26)" fg:x="57346" fg:w="358"/><text x="72.7609%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (274 samples, 0.35%)</title><rect x="72.6172%" y="341" width="0.3465%" height="15" fill="rgb(251,102,48)" fg:x="57430" fg:w="274"/><text x="72.8672%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (142 samples, 0.18%)</title><rect x="73.3935%" y="341" width="0.1796%" height="15" fill="rgb(243,208,16)" fg:x="58044" fg:w="142"/><text x="73.6435%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (491 samples, 0.62%)</title><rect x="72.9674%" y="357" width="0.6208%" height="15" fill="rgb(219,96,24)" fg:x="57707" fg:w="491"/><text x="73.2174%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="73.5731%" y="341" width="0.0152%" height="15" fill="rgb(219,33,29)" fg:x="58186" fg:w="12"/><text x="73.8231%" y="351.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (24 samples, 0.03%)</title><rect x="73.5984%" y="357" width="0.0303%" height="15" fill="rgb(223,176,5)" fg:x="58206" fg:w="24"/><text x="73.8484%" y="367.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (46 samples, 0.06%)</title><rect x="73.8424%" y="341" width="0.0582%" height="15" fill="rgb(228,140,14)" fg:x="58399" fg:w="46"/><text x="74.0924%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (52 samples, 0.07%)</title><rect x="73.9006%" y="341" width="0.0658%" height="15" fill="rgb(217,179,31)" fg:x="58445" fg:w="52"/><text x="74.1506%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (48 samples, 0.06%)</title><rect x="73.9056%" y="325" width="0.0607%" height="15" fill="rgb(230,9,30)" fg:x="58449" fg:w="48"/><text x="74.1556%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (46 samples, 0.06%)</title><rect x="73.9082%" y="309" width="0.0582%" height="15" fill="rgb(230,136,20)" fg:x="58451" fg:w="46"/><text x="74.1582%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (26 samples, 0.03%)</title><rect x="73.9334%" y="293" width="0.0329%" height="15" fill="rgb(215,210,22)" fg:x="58471" fg:w="26"/><text x="74.1834%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.01%)</title><rect x="73.9752%" y="325" width="0.0126%" height="15" fill="rgb(218,43,5)" fg:x="58504" fg:w="10"/><text x="74.2252%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (14 samples, 0.02%)</title><rect x="73.9714%" y="341" width="0.0177%" height="15" fill="rgb(216,11,5)" fg:x="58501" fg:w="14"/><text x="74.2214%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.01%)</title><rect x="73.9916%" y="341" width="0.0139%" height="15" fill="rgb(209,82,29)" fg:x="58517" fg:w="11"/><text x="74.2416%" y="351.50"></text></g><g><title>App`core::slice::sort::merge_sort (320 samples, 0.40%)</title><rect x="73.6287%" y="357" width="0.4046%" height="15" fill="rgb(244,115,12)" fg:x="58230" fg:w="320"/><text x="73.8787%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (22 samples, 0.03%)</title><rect x="74.0055%" y="341" width="0.0278%" height="15" fill="rgb(222,82,18)" fg:x="58528" fg:w="22"/><text x="74.2555%" y="351.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (46 samples, 0.06%)</title><rect x="74.1395%" y="341" width="0.0582%" height="15" fill="rgb(249,227,8)" fg:x="58634" fg:w="46"/><text x="74.3895%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (33 samples, 0.04%)</title><rect x="74.1560%" y="325" width="0.0417%" height="15" fill="rgb(253,141,45)" fg:x="58647" fg:w="33"/><text x="74.4060%" y="335.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (131 samples, 0.17%)</title><rect x="74.0333%" y="357" width="0.1656%" height="15" fill="rgb(234,184,4)" fg:x="58550" fg:w="131"/><text x="74.2833%" y="367.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::shrink_to (9 samples, 0.01%)</title><rect x="74.1990%" y="357" width="0.0114%" height="15" fill="rgb(218,194,23)" fg:x="58681" fg:w="9"/><text x="74.4490%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.05%)</title><rect x="74.2104%" y="357" width="0.0506%" height="15" fill="rgb(235,66,41)" fg:x="58690" fg:w="40"/><text x="74.4604%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.02%)</title><rect x="74.2432%" y="341" width="0.0177%" height="15" fill="rgb(245,217,1)" fg:x="58716" fg:w="14"/><text x="74.4932%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.02%)</title><rect x="74.2432%" y="325" width="0.0177%" height="15" fill="rgb(229,91,1)" fg:x="58716" fg:w="14"/><text x="74.4932%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (48 samples, 0.06%)</title><rect x="74.2609%" y="357" width="0.0607%" height="15" fill="rgb(207,101,30)" fg:x="58730" fg:w="48"/><text x="74.5109%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (22 samples, 0.03%)</title><rect x="74.2938%" y="341" width="0.0278%" height="15" fill="rgb(223,82,49)" fg:x="58756" fg:w="22"/><text x="74.5438%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.01%)</title><rect x="74.3305%" y="357" width="0.0114%" height="15" fill="rgb(218,167,17)" fg:x="58785" fg:w="9"/><text x="74.5805%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="74.3608%" y="357" width="0.0114%" height="15" fill="rgb(208,103,14)" fg:x="58809" fg:w="9"/><text x="74.6108%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (102 samples, 0.13%)</title><rect x="74.3722%" y="357" width="0.1290%" height="15" fill="rgb(238,20,8)" fg:x="58818" fg:w="102"/><text x="74.6222%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (22 samples, 0.03%)</title><rect x="74.5012%" y="357" width="0.0278%" height="15" fill="rgb(218,80,54)" fg:x="58920" fg:w="22"/><text x="74.7512%" y="367.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (20,136 samples, 25.46%)</title><rect x="49.0757%" y="373" width="25.4609%" height="15" fill="rgb(240,144,17)" fg:x="38812" fg:w="20136"/><text x="49.3257%" y="383.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (11 samples, 0.01%)</title><rect x="74.5366%" y="373" width="0.0139%" height="15" fill="rgb(245,27,50)" fg:x="58948" fg:w="11"/><text x="74.7866%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (48 samples, 0.06%)</title><rect x="74.7515%" y="357" width="0.0607%" height="15" fill="rgb(251,51,7)" fg:x="59118" fg:w="48"/><text x="75.0015%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_evading_king_moves (9 samples, 0.01%)</title><rect x="74.8135%" y="357" width="0.0114%" height="15" fill="rgb(245,217,29)" fg:x="59167" fg:w="9"/><text x="75.0635%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (99 samples, 0.13%)</title><rect x="74.8249%" y="357" width="0.1252%" height="15" fill="rgb(221,176,29)" fg:x="59176" fg:w="99"/><text x="75.0749%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (64 samples, 0.08%)</title><rect x="74.8691%" y="341" width="0.0809%" height="15" fill="rgb(212,180,24)" fg:x="59211" fg:w="64"/><text x="75.1191%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (120 samples, 0.15%)</title><rect x="75.0398%" y="341" width="0.1517%" height="15" fill="rgb(254,24,2)" fg:x="59346" fg:w="120"/><text x="75.2898%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (53 samples, 0.07%)</title><rect x="75.1916%" y="341" width="0.0670%" height="15" fill="rgb(230,100,2)" fg:x="59466" fg:w="53"/><text x="75.4416%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (247 samples, 0.31%)</title><rect x="75.2586%" y="341" width="0.3123%" height="15" fill="rgb(219,142,25)" fg:x="59519" fg:w="247"/><text x="75.5086%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (110 samples, 0.14%)</title><rect x="75.5709%" y="341" width="0.1391%" height="15" fill="rgb(240,73,43)" fg:x="59766" fg:w="110"/><text x="75.8209%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (710 samples, 0.90%)</title><rect x="74.9526%" y="357" width="0.8978%" height="15" fill="rgb(214,114,15)" fg:x="59277" fg:w="710"/><text x="75.2026%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (111 samples, 0.14%)</title><rect x="75.7100%" y="341" width="0.1404%" height="15" fill="rgb(207,130,4)" fg:x="59876" fg:w="111"/><text x="75.9600%" y="351.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (1,107 samples, 1.40%)</title><rect x="74.5505%" y="373" width="1.3997%" height="15" fill="rgb(221,25,40)" fg:x="58959" fg:w="1107"/><text x="74.8005%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (68 samples, 0.09%)</title><rect x="75.8642%" y="357" width="0.0860%" height="15" fill="rgb(241,184,7)" fg:x="59998" fg:w="68"/><text x="76.1142%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (249 samples, 0.31%)</title><rect x="75.9515%" y="373" width="0.3148%" height="15" fill="rgb(235,159,4)" fg:x="60067" fg:w="249"/><text x="76.2015%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (176 samples, 0.22%)</title><rect x="76.0438%" y="357" width="0.2225%" height="15" fill="rgb(214,87,48)" fg:x="60140" fg:w="176"/><text x="76.2938%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (127 samples, 0.16%)</title><rect x="76.7747%" y="357" width="0.1606%" height="15" fill="rgb(246,198,24)" fg:x="60718" fg:w="127"/><text x="77.0247%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (567 samples, 0.72%)</title><rect x="76.2663%" y="373" width="0.7169%" height="15" fill="rgb(209,66,40)" fg:x="60316" fg:w="567"/><text x="76.5163%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (38 samples, 0.05%)</title><rect x="76.9352%" y="357" width="0.0480%" height="15" fill="rgb(233,147,39)" fg:x="60845" fg:w="38"/><text x="77.1852%" y="367.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (48 samples, 0.06%)</title><rect x="77.2678%" y="357" width="0.0607%" height="15" fill="rgb(231,145,52)" fg:x="61108" fg:w="48"/><text x="77.5178%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (92 samples, 0.12%)</title><rect x="77.3285%" y="357" width="0.1163%" height="15" fill="rgb(206,20,26)" fg:x="61156" fg:w="92"/><text x="77.5785%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (81 samples, 0.10%)</title><rect x="77.3424%" y="341" width="0.1024%" height="15" fill="rgb(238,220,4)" fg:x="61167" fg:w="81"/><text x="77.5924%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (78 samples, 0.10%)</title><rect x="77.3462%" y="325" width="0.0986%" height="15" fill="rgb(252,195,42)" fg:x="61170" fg:w="78"/><text x="77.5962%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (47 samples, 0.06%)</title><rect x="77.3854%" y="309" width="0.0594%" height="15" fill="rgb(209,10,6)" fg:x="61201" fg:w="47"/><text x="77.6354%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (9 samples, 0.01%)</title><rect x="77.4448%" y="357" width="0.0114%" height="15" fill="rgb(229,3,52)" fg:x="61248" fg:w="9"/><text x="77.6948%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (16 samples, 0.02%)</title><rect x="77.4688%" y="341" width="0.0202%" height="15" fill="rgb(253,49,37)" fg:x="61267" fg:w="16"/><text x="77.7188%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (29 samples, 0.04%)</title><rect x="77.4562%" y="357" width="0.0367%" height="15" fill="rgb(240,103,49)" fg:x="61257" fg:w="29"/><text x="77.7062%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (14 samples, 0.02%)</title><rect x="77.4941%" y="357" width="0.0177%" height="15" fill="rgb(250,182,30)" fg:x="61287" fg:w="14"/><text x="77.7441%" y="367.50"></text></g><g><title>App`core::slice::sort::merge_sort (423 samples, 0.53%)</title><rect x="77.0136%" y="373" width="0.5349%" height="15" fill="rgb(248,8,30)" fg:x="60907" fg:w="423"/><text x="77.2636%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (28 samples, 0.04%)</title><rect x="77.5131%" y="357" width="0.0354%" height="15" fill="rgb(237,120,30)" fg:x="61302" fg:w="28"/><text x="77.7631%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`madvise (9 samples, 0.01%)</title><rect x="77.6560%" y="341" width="0.0114%" height="15" fill="rgb(221,146,34)" fg:x="61415" fg:w="9"/><text x="77.9060%" y="351.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (44 samples, 0.06%)</title><rect x="77.6319%" y="357" width="0.0556%" height="15" fill="rgb(242,55,13)" fg:x="61396" fg:w="44"/><text x="77.8819%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.02%)</title><rect x="77.6673%" y="341" width="0.0202%" height="15" fill="rgb(242,112,31)" fg:x="61424" fg:w="16"/><text x="77.9173%" y="351.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (111 samples, 0.14%)</title><rect x="77.5485%" y="373" width="0.1404%" height="15" fill="rgb(249,192,27)" fg:x="61330" fg:w="111"/><text x="77.7985%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.01%)</title><rect x="77.7116%" y="357" width="0.0101%" height="15" fill="rgb(208,204,44)" fg:x="61459" fg:w="8"/><text x="77.9616%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (39 samples, 0.05%)</title><rect x="77.6952%" y="373" width="0.0493%" height="15" fill="rgb(208,93,54)" fg:x="61446" fg:w="39"/><text x="77.9452%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.02%)</title><rect x="77.7280%" y="357" width="0.0164%" height="15" fill="rgb(242,1,31)" fg:x="61472" fg:w="13"/><text x="77.9780%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (12 samples, 0.02%)</title><rect x="77.7293%" y="341" width="0.0152%" height="15" fill="rgb(241,83,25)" fg:x="61473" fg:w="12"/><text x="77.9793%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (48 samples, 0.06%)</title><rect x="77.7445%" y="373" width="0.0607%" height="15" fill="rgb(205,169,50)" fg:x="61485" fg:w="48"/><text x="77.9945%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (26 samples, 0.03%)</title><rect x="77.7723%" y="357" width="0.0329%" height="15" fill="rgb(239,186,37)" fg:x="61507" fg:w="26"/><text x="78.0223%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.01%)</title><rect x="77.8128%" y="373" width="0.0139%" height="15" fill="rgb(205,221,10)" fg:x="61539" fg:w="11"/><text x="78.0628%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="77.8456%" y="373" width="0.0190%" height="15" fill="rgb(218,196,15)" fg:x="61565" fg:w="15"/><text x="78.0956%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (84 samples, 0.11%)</title><rect x="77.8646%" y="373" width="0.1062%" height="15" fill="rgb(218,196,35)" fg:x="61580" fg:w="84"/><text x="78.1146%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="77.9708%" y="373" width="0.0114%" height="15" fill="rgb(233,63,24)" fg:x="61664" fg:w="9"/><text x="78.2208%" y="383.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (24,979 samples, 31.58%)</title><rect x="46.4027%" y="389" width="31.5846%" height="15" fill="rgb(225,8,4)" fg:x="36698" fg:w="24979"/><text x="46.6527%" y="399.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (12 samples, 0.02%)</title><rect x="77.9873%" y="389" width="0.0152%" height="15" fill="rgb(234,105,35)" fg:x="61677" fg:w="12"/><text x="78.2373%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (62 samples, 0.08%)</title><rect x="78.2553%" y="373" width="0.0784%" height="15" fill="rgb(236,21,32)" fg:x="61889" fg:w="62"/><text x="78.5053%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_evading_king_moves (11 samples, 0.01%)</title><rect x="78.3350%" y="373" width="0.0139%" height="15" fill="rgb(228,109,6)" fg:x="61952" fg:w="11"/><text x="78.5850%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (127 samples, 0.16%)</title><rect x="78.3489%" y="373" width="0.1606%" height="15" fill="rgb(229,215,31)" fg:x="61963" fg:w="127"/><text x="78.5989%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (85 samples, 0.11%)</title><rect x="78.4020%" y="357" width="0.1075%" height="15" fill="rgb(221,52,54)" fg:x="62005" fg:w="85"/><text x="78.6520%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (119 samples, 0.15%)</title><rect x="78.6169%" y="357" width="0.1505%" height="15" fill="rgb(252,129,43)" fg:x="62175" fg:w="119"/><text x="78.8669%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (59 samples, 0.07%)</title><rect x="78.7674%" y="357" width="0.0746%" height="15" fill="rgb(248,183,27)" fg:x="62294" fg:w="59"/><text x="79.0174%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (326 samples, 0.41%)</title><rect x="78.8420%" y="357" width="0.4122%" height="15" fill="rgb(250,0,22)" fg:x="62353" fg:w="326"/><text x="79.0920%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (113 samples, 0.14%)</title><rect x="79.2542%" y="357" width="0.1429%" height="15" fill="rgb(213,166,10)" fg:x="62679" fg:w="113"/><text x="79.5042%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (848 samples, 1.07%)</title><rect x="78.5183%" y="373" width="1.0723%" height="15" fill="rgb(207,163,36)" fg:x="62097" fg:w="848"/><text x="78.7683%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (153 samples, 0.19%)</title><rect x="79.3971%" y="357" width="0.1935%" height="15" fill="rgb(208,122,22)" fg:x="62792" fg:w="153"/><text x="79.6471%" y="367.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (1,371 samples, 1.73%)</title><rect x="78.0024%" y="389" width="1.7336%" height="15" fill="rgb(207,104,49)" fg:x="61689" fg:w="1371"/><text x="78.2524%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (108 samples, 0.14%)</title><rect x="79.5994%" y="373" width="0.1366%" height="15" fill="rgb(248,211,50)" fg:x="62952" fg:w="108"/><text x="79.8494%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (312 samples, 0.39%)</title><rect x="79.7360%" y="389" width="0.3945%" height="15" fill="rgb(217,13,45)" fg:x="63060" fg:w="312"/><text x="79.9860%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (215 samples, 0.27%)</title><rect x="79.8586%" y="373" width="0.2719%" height="15" fill="rgb(211,216,49)" fg:x="63157" fg:w="215"/><text x="80.1086%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (95 samples, 0.12%)</title><rect x="80.5566%" y="373" width="0.1201%" height="15" fill="rgb(221,58,53)" fg:x="63709" fg:w="95"/><text x="80.8066%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (458 samples, 0.58%)</title><rect x="80.1343%" y="389" width="0.5791%" height="15" fill="rgb(220,112,41)" fg:x="63375" fg:w="458"/><text x="80.3843%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (29 samples, 0.04%)</title><rect x="80.6767%" y="373" width="0.0367%" height="15" fill="rgb(236,38,28)" fg:x="63804" fg:w="29"/><text x="80.9267%" y="383.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (9 samples, 0.01%)</title><rect x="80.7273%" y="389" width="0.0114%" height="15" fill="rgb(227,195,22)" fg:x="63844" fg:w="9"/><text x="80.9773%" y="399.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (46 samples, 0.06%)</title><rect x="80.9448%" y="373" width="0.0582%" height="15" fill="rgb(214,55,33)" fg:x="64016" fg:w="46"/><text x="81.1948%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (50 samples, 0.06%)</title><rect x="81.0169%" y="341" width="0.0632%" height="15" fill="rgb(248,80,13)" fg:x="64073" fg:w="50"/><text x="81.2669%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (28 samples, 0.04%)</title><rect x="81.0447%" y="325" width="0.0354%" height="15" fill="rgb(238,52,6)" fg:x="64095" fg:w="28"/><text x="81.2947%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (63 samples, 0.08%)</title><rect x="81.0030%" y="373" width="0.0797%" height="15" fill="rgb(224,198,47)" fg:x="64062" fg:w="63"/><text x="81.2530%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (56 samples, 0.07%)</title><rect x="81.0118%" y="357" width="0.0708%" height="15" fill="rgb(233,171,20)" fg:x="64069" fg:w="56"/><text x="81.2618%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.02%)</title><rect x="81.0877%" y="373" width="0.0215%" height="15" fill="rgb(241,30,25)" fg:x="64129" fg:w="17"/><text x="81.3377%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.01%)</title><rect x="81.0953%" y="357" width="0.0139%" height="15" fill="rgb(207,171,38)" fg:x="64135" fg:w="11"/><text x="81.3453%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.01%)</title><rect x="81.1117%" y="373" width="0.0101%" height="15" fill="rgb(234,70,1)" fg:x="64148" fg:w="8"/><text x="81.3617%" y="383.50"></text></g><g><title>App`core::slice::sort::merge_sort (318 samples, 0.40%)</title><rect x="80.7387%" y="389" width="0.4021%" height="15" fill="rgb(232,178,18)" fg:x="63853" fg:w="318"/><text x="80.9887%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="81.1231%" y="373" width="0.0177%" height="15" fill="rgb(241,78,40)" fg:x="64157" fg:w="14"/><text x="81.3731%" y="383.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.02%)</title><rect x="81.2495%" y="373" width="0.0228%" height="15" fill="rgb(222,35,25)" fg:x="64257" fg:w="18"/><text x="81.4995%" y="383.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (105 samples, 0.13%)</title><rect x="81.1408%" y="389" width="0.1328%" height="15" fill="rgb(207,92,16)" fg:x="64171" fg:w="105"/><text x="81.3908%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.01%)</title><rect x="81.3001%" y="373" width="0.0126%" height="15" fill="rgb(216,59,51)" fg:x="64297" fg:w="10"/><text x="81.5501%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.03%)</title><rect x="81.3203%" y="373" width="0.0253%" height="15" fill="rgb(213,80,28)" fg:x="64313" fg:w="20"/><text x="81.5703%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (19 samples, 0.02%)</title><rect x="81.3216%" y="357" width="0.0240%" height="15" fill="rgb(220,93,7)" fg:x="64314" fg:w="19"/><text x="81.5716%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (50 samples, 0.06%)</title><rect x="81.2837%" y="389" width="0.0632%" height="15" fill="rgb(225,24,44)" fg:x="64284" fg:w="50"/><text x="81.5337%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (42 samples, 0.05%)</title><rect x="81.3469%" y="389" width="0.0531%" height="15" fill="rgb(243,74,40)" fg:x="64334" fg:w="42"/><text x="81.5969%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (26 samples, 0.03%)</title><rect x="81.3671%" y="373" width="0.0329%" height="15" fill="rgb(228,39,7)" fg:x="64350" fg:w="26"/><text x="81.6171%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (12 samples, 0.02%)</title><rect x="81.4076%" y="389" width="0.0152%" height="15" fill="rgb(227,79,8)" fg:x="64382" fg:w="12"/><text x="81.6576%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (111 samples, 0.14%)</title><rect x="81.4620%" y="389" width="0.1404%" height="15" fill="rgb(236,58,11)" fg:x="64425" fg:w="111"/><text x="81.7120%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="81.6023%" y="389" width="0.0177%" height="15" fill="rgb(249,63,35)" fg:x="64536" fg:w="14"/><text x="81.8523%" y="399.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (30,174 samples, 38.15%)</title><rect x="43.4704%" y="405" width="38.1534%" height="15" fill="rgb(252,114,16)" fg:x="34379" fg:w="30174"/><text x="43.7204%" y="415.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (12 samples, 0.02%)</title><rect x="81.6238%" y="405" width="0.0152%" height="15" fill="rgb(254,151,24)" fg:x="64553" fg:w="12"/><text x="81.8738%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (53 samples, 0.07%)</title><rect x="81.8097%" y="389" width="0.0670%" height="15" fill="rgb(253,54,39)" fg:x="64700" fg:w="53"/><text x="82.0597%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (80 samples, 0.10%)</title><rect x="81.8855%" y="389" width="0.1012%" height="15" fill="rgb(243,25,45)" fg:x="64760" fg:w="80"/><text x="82.1355%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (56 samples, 0.07%)</title><rect x="81.9159%" y="373" width="0.0708%" height="15" fill="rgb(234,134,9)" fg:x="64784" fg:w="56"/><text x="82.1659%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (136 samples, 0.17%)</title><rect x="82.0550%" y="373" width="0.1720%" height="15" fill="rgb(227,166,31)" fg:x="64894" fg:w="136"/><text x="82.3050%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (73 samples, 0.09%)</title><rect x="82.2269%" y="373" width="0.0923%" height="15" fill="rgb(245,143,41)" fg:x="65030" fg:w="73"/><text x="82.4769%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (279 samples, 0.35%)</title><rect x="82.3192%" y="373" width="0.3528%" height="15" fill="rgb(238,181,32)" fg:x="65103" fg:w="279"/><text x="82.5692%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (116 samples, 0.15%)</title><rect x="82.6720%" y="373" width="0.1467%" height="15" fill="rgb(224,113,18)" fg:x="65382" fg:w="116"/><text x="82.9220%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (772 samples, 0.98%)</title><rect x="81.9943%" y="389" width="0.9762%" height="15" fill="rgb(240,229,28)" fg:x="64846" fg:w="772"/><text x="82.2443%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (120 samples, 0.15%)</title><rect x="82.8187%" y="373" width="0.1517%" height="15" fill="rgb(250,185,3)" fg:x="65498" fg:w="120"/><text x="83.0687%" y="383.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (1,137 samples, 1.44%)</title><rect x="81.6390%" y="405" width="1.4377%" height="15" fill="rgb(212,59,25)" fg:x="64565" fg:w="1137"/><text x="81.8890%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (79 samples, 0.10%)</title><rect x="82.9768%" y="389" width="0.0999%" height="15" fill="rgb(221,87,20)" fg:x="65623" fg:w="79"/><text x="83.2268%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (195 samples, 0.25%)</title><rect x="83.0767%" y="405" width="0.2466%" height="15" fill="rgb(213,74,28)" fg:x="65702" fg:w="195"/><text x="83.3267%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (133 samples, 0.17%)</title><rect x="83.1550%" y="389" width="0.1682%" height="15" fill="rgb(224,132,34)" fg:x="65764" fg:w="133"/><text x="83.4050%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (144 samples, 0.18%)</title><rect x="83.9137%" y="389" width="0.1821%" height="15" fill="rgb(222,101,24)" fg:x="66364" fg:w="144"/><text x="84.1637%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (647 samples, 0.82%)</title><rect x="83.3283%" y="405" width="0.8181%" height="15" fill="rgb(254,142,4)" fg:x="65901" fg:w="647"/><text x="83.5783%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (40 samples, 0.05%)</title><rect x="84.0958%" y="389" width="0.0506%" height="15" fill="rgb(230,229,49)" fg:x="66508" fg:w="40"/><text x="84.3458%" y="399.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (65 samples, 0.08%)</title><rect x="84.4650%" y="389" width="0.0822%" height="15" fill="rgb(238,70,47)" fg:x="66800" fg:w="65"/><text x="84.7150%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (72 samples, 0.09%)</title><rect x="84.5472%" y="389" width="0.0910%" height="15" fill="rgb(231,160,17)" fg:x="66865" fg:w="72"/><text x="84.7972%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (66 samples, 0.08%)</title><rect x="84.5548%" y="373" width="0.0835%" height="15" fill="rgb(218,68,53)" fg:x="66871" fg:w="66"/><text x="84.8048%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (61 samples, 0.08%)</title><rect x="84.5611%" y="357" width="0.0771%" height="15" fill="rgb(236,111,10)" fg:x="66876" fg:w="61"/><text x="84.8111%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (41 samples, 0.05%)</title><rect x="84.5864%" y="341" width="0.0518%" height="15" fill="rgb(224,34,41)" fg:x="66896" fg:w="41"/><text x="84.8364%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.02%)</title><rect x="84.6446%" y="389" width="0.0228%" height="15" fill="rgb(241,118,19)" fg:x="66942" fg:w="18"/><text x="84.8946%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.01%)</title><rect x="84.6534%" y="373" width="0.0139%" height="15" fill="rgb(238,129,25)" fg:x="66949" fg:w="11"/><text x="84.9034%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (14 samples, 0.02%)</title><rect x="84.6673%" y="389" width="0.0177%" height="15" fill="rgb(238,22,31)" fg:x="66960" fg:w="14"/><text x="84.9173%" y="399.50"></text></g><g><title>App`core::slice::sort::merge_sort (425 samples, 0.54%)</title><rect x="84.1780%" y="405" width="0.5374%" height="15" fill="rgb(222,174,48)" fg:x="66573" fg:w="425"/><text x="84.4280%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.03%)</title><rect x="84.6850%" y="389" width="0.0303%" height="15" fill="rgb(206,152,40)" fg:x="66974" fg:w="24"/><text x="84.9350%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (11 samples, 0.01%)</title><rect x="84.8481%" y="373" width="0.0139%" height="15" fill="rgb(218,99,54)" fg:x="67103" fg:w="11"/><text x="85.0981%" y="383.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (178 samples, 0.23%)</title><rect x="84.8064%" y="389" width="0.2251%" height="15" fill="rgb(220,174,26)" fg:x="67070" fg:w="178"/><text x="85.0564%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (132 samples, 0.17%)</title><rect x="84.8646%" y="373" width="0.1669%" height="15" fill="rgb(245,116,9)" fg:x="67116" fg:w="132"/><text x="85.1146%" y="383.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (253 samples, 0.32%)</title><rect x="84.7154%" y="405" width="0.3199%" height="15" fill="rgb(209,72,35)" fg:x="66998" fg:w="253"/><text x="84.9654%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (18 samples, 0.02%)</title><rect x="85.0896%" y="389" width="0.0228%" height="15" fill="rgb(226,126,21)" fg:x="67294" fg:w="18"/><text x="85.3396%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (15 samples, 0.02%)</title><rect x="85.0934%" y="373" width="0.0190%" height="15" fill="rgb(227,192,1)" fg:x="67297" fg:w="15"/><text x="85.3434%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (51 samples, 0.06%)</title><rect x="85.0492%" y="405" width="0.0645%" height="15" fill="rgb(237,180,29)" fg:x="67262" fg:w="51"/><text x="85.2992%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (51 samples, 0.06%)</title><rect x="85.1137%" y="405" width="0.0645%" height="15" fill="rgb(230,197,35)" fg:x="67313" fg:w="51"/><text x="85.3637%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32 samples, 0.04%)</title><rect x="85.1377%" y="389" width="0.0405%" height="15" fill="rgb(246,193,31)" fg:x="67332" fg:w="32"/><text x="85.3877%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (8 samples, 0.01%)</title><rect x="85.1807%" y="405" width="0.0101%" height="15" fill="rgb(241,36,4)" fg:x="67366" fg:w="8"/><text x="85.4307%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (13 samples, 0.02%)</title><rect x="85.1908%" y="405" width="0.0164%" height="15" fill="rgb(241,130,17)" fg:x="67374" fg:w="13"/><text x="85.4408%" y="415.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$__bzero (8 samples, 0.01%)</title><rect x="85.2110%" y="405" width="0.0101%" height="15" fill="rgb(206,137,32)" fg:x="67390" fg:w="8"/><text x="85.4610%" y="415.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (11 samples, 0.01%)</title><rect x="85.2224%" y="405" width="0.0139%" height="15" fill="rgb(237,228,51)" fg:x="67399" fg:w="11"/><text x="85.4724%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="85.2389%" y="405" width="0.0114%" height="15" fill="rgb(243,6,42)" fg:x="67412" fg:w="9"/><text x="85.4889%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (79 samples, 0.10%)</title><rect x="85.2502%" y="405" width="0.0999%" height="15" fill="rgb(251,74,28)" fg:x="67421" fg:w="79"/><text x="85.5002%" y="415.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (35,150 samples, 44.45%)</title><rect x="40.9187%" y="421" width="44.4453%" height="15" fill="rgb(218,20,49)" fg:x="32361" fg:w="35150"/><text x="41.1687%" y="431.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (14 samples, 0.02%)</title><rect x="85.3640%" y="421" width="0.0177%" height="15" fill="rgb(238,28,14)" fg:x="67511" fg:w="14"/><text x="85.6140%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (74 samples, 0.09%)</title><rect x="85.6195%" y="405" width="0.0936%" height="15" fill="rgb(229,40,46)" fg:x="67713" fg:w="74"/><text x="85.8695%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (124 samples, 0.16%)</title><rect x="85.7231%" y="405" width="0.1568%" height="15" fill="rgb(244,195,20)" fg:x="67795" fg:w="124"/><text x="85.9731%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (67 samples, 0.08%)</title><rect x="85.7952%" y="389" width="0.0847%" height="15" fill="rgb(253,56,35)" fg:x="67852" fg:w="67"/><text x="86.0452%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (152 samples, 0.19%)</title><rect x="85.9773%" y="389" width="0.1922%" height="15" fill="rgb(210,149,44)" fg:x="67996" fg:w="152"/><text x="86.2273%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (94 samples, 0.12%)</title><rect x="86.1695%" y="389" width="0.1189%" height="15" fill="rgb(240,135,12)" fg:x="68148" fg:w="94"/><text x="86.4195%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (414 samples, 0.52%)</title><rect x="86.2883%" y="389" width="0.5235%" height="15" fill="rgb(251,24,50)" fg:x="68242" fg:w="414"/><text x="86.5383%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (144 samples, 0.18%)</title><rect x="86.8118%" y="389" width="0.1821%" height="15" fill="rgb(243,200,47)" fg:x="68656" fg:w="144"/><text x="87.0618%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (1,047 samples, 1.32%)</title><rect x="85.8812%" y="405" width="1.3239%" height="15" fill="rgb(224,166,26)" fg:x="67920" fg:w="1047"/><text x="86.1312%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (167 samples, 0.21%)</title><rect x="86.9939%" y="389" width="0.2112%" height="15" fill="rgb(233,0,47)" fg:x="68800" fg:w="167"/><text x="87.2439%" y="399.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (1,569 samples, 1.98%)</title><rect x="85.3817%" y="421" width="1.9839%" height="15" fill="rgb(253,80,5)" fg:x="67525" fg:w="1569"/><text x="85.6317%" y="431.50">A..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (123 samples, 0.16%)</title><rect x="87.2101%" y="405" width="0.1555%" height="15" fill="rgb(214,133,25)" fg:x="68971" fg:w="123"/><text x="87.4601%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (225 samples, 0.28%)</title><rect x="87.3657%" y="421" width="0.2845%" height="15" fill="rgb(209,27,14)" fg:x="69094" fg:w="225"/><text x="87.6157%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (151 samples, 0.19%)</title><rect x="87.4592%" y="405" width="0.1909%" height="15" fill="rgb(219,102,51)" fg:x="69168" fg:w="151"/><text x="87.7092%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (106 samples, 0.13%)</title><rect x="88.0396%" y="405" width="0.1340%" height="15" fill="rgb(237,18,16)" fg:x="69627" fg:w="106"/><text x="88.2896%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (439 samples, 0.56%)</title><rect x="87.6514%" y="421" width="0.5551%" height="15" fill="rgb(241,85,17)" fg:x="69320" fg:w="439"/><text x="87.9014%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (26 samples, 0.03%)</title><rect x="88.1736%" y="405" width="0.0329%" height="15" fill="rgb(236,90,42)" fg:x="69733" fg:w="26"/><text x="88.4236%" y="415.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (15 samples, 0.02%)</title><rect x="88.2179%" y="421" width="0.0190%" height="15" fill="rgb(249,57,21)" fg:x="69768" fg:w="15"/><text x="88.4679%" y="431.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (46 samples, 0.06%)</title><rect x="88.3949%" y="405" width="0.0582%" height="15" fill="rgb(243,12,36)" fg:x="69908" fg:w="46"/><text x="88.6449%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (56 samples, 0.07%)</title><rect x="88.4531%" y="405" width="0.0708%" height="15" fill="rgb(253,128,47)" fg:x="69954" fg:w="56"/><text x="88.7031%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (43 samples, 0.05%)</title><rect x="88.4695%" y="389" width="0.0544%" height="15" fill="rgb(207,33,20)" fg:x="69967" fg:w="43"/><text x="88.7195%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (40 samples, 0.05%)</title><rect x="88.4733%" y="373" width="0.0506%" height="15" fill="rgb(233,215,35)" fg:x="69970" fg:w="40"/><text x="88.7233%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (24 samples, 0.03%)</title><rect x="88.4935%" y="357" width="0.0303%" height="15" fill="rgb(249,188,52)" fg:x="69986" fg:w="24"/><text x="88.7435%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.01%)</title><rect x="88.5327%" y="389" width="0.0139%" height="15" fill="rgb(225,12,32)" fg:x="70017" fg:w="11"/><text x="88.7827%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (18 samples, 0.02%)</title><rect x="88.5264%" y="405" width="0.0228%" height="15" fill="rgb(247,98,14)" fg:x="70012" fg:w="18"/><text x="88.7764%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.01%)</title><rect x="88.5517%" y="405" width="0.0126%" height="15" fill="rgb(247,219,48)" fg:x="70032" fg:w="10"/><text x="88.8017%" y="415.50"></text></g><g><title>App`core::slice::sort::merge_sort (285 samples, 0.36%)</title><rect x="88.2369%" y="421" width="0.3604%" height="15" fill="rgb(253,60,48)" fg:x="69783" fg:w="285"/><text x="88.4869%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.03%)</title><rect x="88.5669%" y="405" width="0.0303%" height="15" fill="rgb(245,15,52)" fg:x="70044" fg:w="24"/><text x="88.8169%" y="415.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (65 samples, 0.08%)</title><rect x="88.5972%" y="421" width="0.0822%" height="15" fill="rgb(220,133,28)" fg:x="70068" fg:w="65"/><text x="88.8472%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (8 samples, 0.01%)</title><rect x="88.7022%" y="405" width="0.0101%" height="15" fill="rgb(217,180,4)" fg:x="70151" fg:w="8"/><text x="88.9522%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.01%)</title><rect x="88.7161%" y="405" width="0.0139%" height="15" fill="rgb(251,24,1)" fg:x="70162" fg:w="11"/><text x="88.9661%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.01%)</title><rect x="88.7161%" y="389" width="0.0139%" height="15" fill="rgb(212,185,49)" fg:x="70162" fg:w="11"/><text x="88.9661%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (37 samples, 0.05%)</title><rect x="88.6857%" y="421" width="0.0468%" height="15" fill="rgb(215,175,22)" fg:x="70138" fg:w="37"/><text x="88.9357%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (41 samples, 0.05%)</title><rect x="88.7325%" y="421" width="0.0518%" height="15" fill="rgb(250,205,14)" fg:x="70175" fg:w="41"/><text x="88.9825%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (24 samples, 0.03%)</title><rect x="88.7540%" y="405" width="0.0303%" height="15" fill="rgb(225,211,22)" fg:x="70192" fg:w="24"/><text x="89.0040%" y="415.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (20 samples, 0.03%)</title><rect x="88.8084%" y="421" width="0.0253%" height="15" fill="rgb(251,179,42)" fg:x="70235" fg:w="20"/><text x="89.0584%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (99 samples, 0.13%)</title><rect x="88.8413%" y="421" width="0.1252%" height="15" fill="rgb(208,216,51)" fg:x="70261" fg:w="99"/><text x="89.0913%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.01%)</title><rect x="88.9664%" y="421" width="0.0139%" height="15" fill="rgb(235,36,11)" fg:x="70360" fg:w="11"/><text x="89.2164%" y="431.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (40,178 samples, 50.80%)</title><rect x="38.1825%" y="437" width="50.8029%" height="15" fill="rgb(213,189,28)" fg:x="30197" fg:w="40178"/><text x="38.4325%" y="447.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (13 samples, 0.02%)</title><rect x="88.9854%" y="437" width="0.0164%" height="15" fill="rgb(227,203,42)" fg:x="70375" fg:w="13"/><text x="89.2354%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (67 samples, 0.08%)</title><rect x="89.2547%" y="421" width="0.0847%" height="15" fill="rgb(244,72,36)" fg:x="70588" fg:w="67"/><text x="89.5047%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (118 samples, 0.15%)</title><rect x="89.3470%" y="421" width="0.1492%" height="15" fill="rgb(213,53,17)" fg:x="70661" fg:w="118"/><text x="89.5970%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (68 samples, 0.09%)</title><rect x="89.4103%" y="405" width="0.0860%" height="15" fill="rgb(207,167,3)" fg:x="70711" fg:w="68"/><text x="89.6603%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (223 samples, 0.28%)</title><rect x="89.6012%" y="405" width="0.2820%" height="15" fill="rgb(216,98,30)" fg:x="70862" fg:w="223"/><text x="89.8512%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (105 samples, 0.13%)</title><rect x="89.8832%" y="405" width="0.1328%" height="15" fill="rgb(236,123,15)" fg:x="71085" fg:w="105"/><text x="90.1332%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (414 samples, 0.52%)</title><rect x="90.0159%" y="405" width="0.5235%" height="15" fill="rgb(248,81,50)" fg:x="71190" fg:w="414"/><text x="90.2659%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (138 samples, 0.17%)</title><rect x="90.5394%" y="405" width="0.1745%" height="15" fill="rgb(214,120,4)" fg:x="71604" fg:w="138"/><text x="90.7894%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (1,117 samples, 1.41%)</title><rect x="89.4975%" y="421" width="1.4124%" height="15" fill="rgb(208,179,34)" fg:x="70780" fg:w="1117"/><text x="89.7475%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (155 samples, 0.20%)</title><rect x="90.7139%" y="405" width="0.1960%" height="15" fill="rgb(227,140,7)" fg:x="71742" fg:w="155"/><text x="90.9639%" y="415.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (1,639 samples, 2.07%)</title><rect x="89.0018%" y="437" width="2.0724%" height="15" fill="rgb(214,22,6)" fg:x="70388" fg:w="1639"/><text x="89.2518%" y="447.50">A..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (123 samples, 0.16%)</title><rect x="90.9187%" y="421" width="0.1555%" height="15" fill="rgb(207,137,27)" fg:x="71904" fg:w="123"/><text x="91.1687%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (210 samples, 0.27%)</title><rect x="91.0743%" y="437" width="0.2655%" height="15" fill="rgb(210,8,46)" fg:x="72027" fg:w="210"/><text x="91.3243%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (145 samples, 0.18%)</title><rect x="91.1565%" y="421" width="0.1833%" height="15" fill="rgb(240,16,54)" fg:x="72092" fg:w="145"/><text x="91.4065%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (110 samples, 0.14%)</title><rect x="91.8367%" y="421" width="0.1391%" height="15" fill="rgb(211,209,29)" fg:x="72630" fg:w="110"/><text x="92.0867%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (540 samples, 0.68%)</title><rect x="91.3411%" y="437" width="0.6828%" height="15" fill="rgb(226,228,24)" fg:x="72238" fg:w="540"/><text x="91.5911%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (38 samples, 0.05%)</title><rect x="91.9758%" y="421" width="0.0480%" height="15" fill="rgb(222,84,9)" fg:x="72740" fg:w="38"/><text x="92.2258%" y="431.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (8 samples, 0.01%)</title><rect x="92.0340%" y="437" width="0.0101%" height="15" fill="rgb(234,203,30)" fg:x="72786" fg:w="8"/><text x="92.2840%" y="447.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (55 samples, 0.07%)</title><rect x="92.3653%" y="421" width="0.0695%" height="15" fill="rgb(238,109,14)" fg:x="73048" fg:w="55"/><text x="92.6153%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (79 samples, 0.10%)</title><rect x="92.4348%" y="421" width="0.0999%" height="15" fill="rgb(233,206,34)" fg:x="73103" fg:w="79"/><text x="92.6848%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (67 samples, 0.08%)</title><rect x="92.4500%" y="405" width="0.0847%" height="15" fill="rgb(220,167,47)" fg:x="73115" fg:w="67"/><text x="92.7000%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (62 samples, 0.08%)</title><rect x="92.4563%" y="389" width="0.0784%" height="15" fill="rgb(238,105,10)" fg:x="73120" fg:w="62"/><text x="92.7063%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (33 samples, 0.04%)</title><rect x="92.4930%" y="373" width="0.0417%" height="15" fill="rgb(213,227,17)" fg:x="73149" fg:w="33"/><text x="92.7430%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (28 samples, 0.04%)</title><rect x="92.5385%" y="421" width="0.0354%" height="15" fill="rgb(217,132,38)" fg:x="73185" fg:w="28"/><text x="92.7885%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (21 samples, 0.03%)</title><rect x="92.5474%" y="405" width="0.0266%" height="15" fill="rgb(242,146,4)" fg:x="73192" fg:w="21"/><text x="92.7974%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (22 samples, 0.03%)</title><rect x="92.5764%" y="421" width="0.0278%" height="15" fill="rgb(212,61,9)" fg:x="73215" fg:w="22"/><text x="92.8264%" y="431.50"></text></g><g><title>App`core::slice::sort::merge_sort (475 samples, 0.60%)</title><rect x="92.0441%" y="437" width="0.6006%" height="15" fill="rgb(247,126,22)" fg:x="72794" fg:w="475"/><text x="92.2941%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (31 samples, 0.04%)</title><rect x="92.6055%" y="421" width="0.0392%" height="15" fill="rgb(220,196,2)" fg:x="73238" fg:w="31"/><text x="92.8555%" y="431.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (48 samples, 0.06%)</title><rect x="92.7535%" y="421" width="0.0607%" height="15" fill="rgb(208,46,4)" fg:x="73355" fg:w="48"/><text x="93.0035%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.03%)</title><rect x="92.7851%" y="405" width="0.0291%" height="15" fill="rgb(252,104,46)" fg:x="73380" fg:w="23"/><text x="93.0351%" y="415.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (136 samples, 0.17%)</title><rect x="92.6447%" y="437" width="0.1720%" height="15" fill="rgb(237,152,48)" fg:x="73269" fg:w="136"/><text x="92.8947%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (45 samples, 0.06%)</title><rect x="92.8281%" y="437" width="0.0569%" height="15" fill="rgb(221,59,37)" fg:x="73414" fg:w="45"/><text x="93.0781%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (15 samples, 0.02%)</title><rect x="92.8660%" y="421" width="0.0190%" height="15" fill="rgb(209,202,51)" fg:x="73444" fg:w="15"/><text x="93.1160%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (14 samples, 0.02%)</title><rect x="92.8673%" y="405" width="0.0177%" height="15" fill="rgb(228,81,30)" fg:x="73445" fg:w="14"/><text x="93.1173%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (60 samples, 0.08%)</title><rect x="92.8850%" y="437" width="0.0759%" height="15" fill="rgb(227,42,39)" fg:x="73459" fg:w="60"/><text x="93.1350%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (33 samples, 0.04%)</title><rect x="92.9191%" y="421" width="0.0417%" height="15" fill="rgb(221,26,2)" fg:x="73486" fg:w="33"/><text x="93.1691%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (11 samples, 0.01%)</title><rect x="92.9735%" y="437" width="0.0139%" height="15" fill="rgb(254,61,31)" fg:x="73529" fg:w="11"/><text x="93.2235%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="93.0228%" y="437" width="0.0190%" height="15" fill="rgb(222,173,38)" fg:x="73568" fg:w="15"/><text x="93.2728%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (74 samples, 0.09%)</title><rect x="93.0418%" y="437" width="0.0936%" height="15" fill="rgb(218,50,12)" fg:x="73583" fg:w="74"/><text x="93.2918%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="93.1353%" y="437" width="0.0164%" height="15" fill="rgb(223,88,40)" fg:x="73657" fg:w="13"/><text x="93.3853%" y="447.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (45,992 samples, 58.15%)</title><rect x="35.0049%" y="453" width="58.1544%" height="15" fill="rgb(237,54,19)" fg:x="27684" fg:w="45992"/><text x="35.2549%" y="463.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (9 samples, 0.01%)</title><rect x="93.1593%" y="453" width="0.0114%" height="15" fill="rgb(251,129,25)" fg:x="73676" fg:w="9"/><text x="93.4093%" y="463.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (62 samples, 0.08%)</title><rect x="93.3655%" y="437" width="0.0784%" height="15" fill="rgb(238,97,19)" fg:x="73839" fg:w="62"/><text x="93.6155%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (77 samples, 0.10%)</title><rect x="93.4565%" y="437" width="0.0974%" height="15" fill="rgb(240,169,18)" fg:x="73911" fg:w="77"/><text x="93.7065%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (49 samples, 0.06%)</title><rect x="93.4919%" y="421" width="0.0620%" height="15" fill="rgb(230,187,49)" fg:x="73939" fg:w="49"/><text x="93.7419%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (119 samples, 0.15%)</title><rect x="93.6462%" y="421" width="0.1505%" height="15" fill="rgb(209,44,26)" fg:x="74061" fg:w="119"/><text x="93.8962%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (104 samples, 0.13%)</title><rect x="93.7966%" y="421" width="0.1315%" height="15" fill="rgb(244,0,6)" fg:x="74180" fg:w="104"/><text x="94.0466%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (350 samples, 0.44%)</title><rect x="93.9281%" y="421" width="0.4426%" height="15" fill="rgb(248,18,21)" fg:x="74284" fg:w="350"/><text x="94.1781%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (94 samples, 0.12%)</title><rect x="94.3707%" y="421" width="0.1189%" height="15" fill="rgb(245,180,19)" fg:x="74634" fg:w="94"/><text x="94.6207%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (864 samples, 1.09%)</title><rect x="93.5539%" y="437" width="1.0925%" height="15" fill="rgb(252,118,36)" fg:x="73988" fg:w="864"/><text x="93.8039%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (124 samples, 0.16%)</title><rect x="94.4895%" y="421" width="0.1568%" height="15" fill="rgb(210,224,19)" fg:x="74728" fg:w="124"/><text x="94.7395%" y="431.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (1,265 samples, 1.60%)</title><rect x="93.1707%" y="453" width="1.5995%" height="15" fill="rgb(218,30,24)" fg:x="73685" fg:w="1265"/><text x="93.4207%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (92 samples, 0.12%)</title><rect x="94.6539%" y="437" width="0.1163%" height="15" fill="rgb(219,75,50)" fg:x="74858" fg:w="92"/><text x="94.9039%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (161 samples, 0.20%)</title><rect x="94.7703%" y="453" width="0.2036%" height="15" fill="rgb(234,72,50)" fg:x="74950" fg:w="161"/><text x="95.0203%" y="463.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (105 samples, 0.13%)</title><rect x="94.8411%" y="437" width="0.1328%" height="15" fill="rgb(219,100,48)" fg:x="75006" fg:w="105"/><text x="95.0911%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (95 samples, 0.12%)</title><rect x="95.4758%" y="437" width="0.1201%" height="15" fill="rgb(253,5,41)" fg:x="75508" fg:w="95"/><text x="95.7258%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (515 samples, 0.65%)</title><rect x="94.9764%" y="453" width="0.6512%" height="15" fill="rgb(247,181,11)" fg:x="75113" fg:w="515"/><text x="95.2264%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (25 samples, 0.03%)</title><rect x="95.5959%" y="437" width="0.0316%" height="15" fill="rgb(222,223,25)" fg:x="75603" fg:w="25"/><text x="95.8459%" y="447.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (17 samples, 0.02%)</title><rect x="95.6377%" y="453" width="0.0215%" height="15" fill="rgb(214,198,28)" fg:x="75636" fg:w="17"/><text x="95.8877%" y="463.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (46 samples, 0.06%)</title><rect x="95.8286%" y="437" width="0.0582%" height="15" fill="rgb(230,46,43)" fg:x="75787" fg:w="46"/><text x="96.0786%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (49 samples, 0.06%)</title><rect x="95.8943%" y="405" width="0.0620%" height="15" fill="rgb(233,65,53)" fg:x="75839" fg:w="49"/><text x="96.1443%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (25 samples, 0.03%)</title><rect x="95.9247%" y="389" width="0.0316%" height="15" fill="rgb(221,121,27)" fg:x="75863" fg:w="25"/><text x="96.1747%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (57 samples, 0.07%)</title><rect x="95.8868%" y="437" width="0.0721%" height="15" fill="rgb(247,70,47)" fg:x="75833" fg:w="57"/><text x="96.1368%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (52 samples, 0.07%)</title><rect x="95.8931%" y="421" width="0.0658%" height="15" fill="rgb(228,85,35)" fg:x="75838" fg:w="52"/><text x="96.1431%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.02%)</title><rect x="95.9626%" y="421" width="0.0164%" height="15" fill="rgb(209,50,18)" fg:x="75893" fg:w="13"/><text x="96.2126%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.02%)</title><rect x="95.9588%" y="437" width="0.0215%" height="15" fill="rgb(250,19,35)" fg:x="75890" fg:w="17"/><text x="96.2088%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (9 samples, 0.01%)</title><rect x="95.9829%" y="437" width="0.0114%" height="15" fill="rgb(253,107,29)" fg:x="75909" fg:w="9"/><text x="96.2329%" y="447.50"></text></g><g><title>App`core::slice::sort::merge_sort (281 samples, 0.36%)</title><rect x="95.6592%" y="453" width="0.3553%" height="15" fill="rgb(252,179,29)" fg:x="75653" fg:w="281"/><text x="95.9092%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="95.9955%" y="437" width="0.0190%" height="15" fill="rgb(238,194,6)" fg:x="75919" fg:w="15"/><text x="96.2455%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`madvise (13 samples, 0.02%)</title><rect x="96.1295%" y="421" width="0.0164%" height="15" fill="rgb(238,164,29)" fg:x="76025" fg:w="13"/><text x="96.3795%" y="431.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (119 samples, 0.15%)</title><rect x="96.0903%" y="437" width="0.1505%" height="15" fill="rgb(224,25,9)" fg:x="75994" fg:w="119"/><text x="96.3403%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (75 samples, 0.09%)</title><rect x="96.1460%" y="421" width="0.0948%" height="15" fill="rgb(244,153,23)" fg:x="76038" fg:w="75"/><text x="96.3960%" y="431.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (182 samples, 0.23%)</title><rect x="96.0145%" y="453" width="0.2301%" height="15" fill="rgb(212,203,14)" fg:x="75934" fg:w="182"/><text x="96.2645%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.01%)</title><rect x="96.2813%" y="437" width="0.0126%" height="15" fill="rgb(220,164,20)" fg:x="76145" fg:w="10"/><text x="96.5313%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free (40 samples, 0.05%)</title><rect x="96.2598%" y="453" width="0.0506%" height="15" fill="rgb(222,203,48)" fg:x="76128" fg:w="40"/><text x="96.5098%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (52 samples, 0.07%)</title><rect x="96.3103%" y="453" width="0.0658%" height="15" fill="rgb(215,159,22)" fg:x="76168" fg:w="52"/><text x="96.5603%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (32 samples, 0.04%)</title><rect x="96.3356%" y="437" width="0.0405%" height="15" fill="rgb(216,183,47)" fg:x="76188" fg:w="32"/><text x="96.5856%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (11 samples, 0.01%)</title><rect x="96.4178%" y="453" width="0.0139%" height="15" fill="rgb(229,195,25)" fg:x="76253" fg:w="11"/><text x="96.6678%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (73 samples, 0.09%)</title><rect x="96.4317%" y="453" width="0.0923%" height="15" fill="rgb(224,132,51)" fg:x="76264" fg:w="73"/><text x="96.6817%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="96.5240%" y="453" width="0.0190%" height="15" fill="rgb(240,63,7)" fg:x="76337" fg:w="15"/><text x="96.7740%" y="463.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (50,410 samples, 63.74%)</title><rect x="32.8073%" y="469" width="63.7407%" height="15" fill="rgb(249,182,41)" fg:x="25946" fg:w="50410"/><text x="33.0573%" y="479.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (29 samples, 0.04%)</title><rect x="96.6467%" y="453" width="0.0367%" height="15" fill="rgb(243,47,26)" fg:x="76434" fg:w="29"/><text x="96.8967%" y="463.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (43 samples, 0.05%)</title><rect x="96.6859%" y="453" width="0.0544%" height="15" fill="rgb(233,48,2)" fg:x="76465" fg:w="43"/><text x="96.9359%" y="463.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (28 samples, 0.04%)</title><rect x="96.7049%" y="437" width="0.0354%" height="15" fill="rgb(244,165,34)" fg:x="76480" fg:w="28"/><text x="96.9549%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (87 samples, 0.11%)</title><rect x="96.7769%" y="437" width="0.1100%" height="15" fill="rgb(207,89,7)" fg:x="76537" fg:w="87"/><text x="97.0269%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (40 samples, 0.05%)</title><rect x="96.8869%" y="437" width="0.0506%" height="15" fill="rgb(244,117,36)" fg:x="76624" fg:w="40"/><text x="97.1369%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (163 samples, 0.21%)</title><rect x="96.9375%" y="437" width="0.2061%" height="15" fill="rgb(226,144,34)" fg:x="76664" fg:w="163"/><text x="97.1875%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (49 samples, 0.06%)</title><rect x="97.1436%" y="437" width="0.0620%" height="15" fill="rgb(213,23,19)" fg:x="76827" fg:w="49"/><text x="97.3936%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (425 samples, 0.54%)</title><rect x="96.7403%" y="453" width="0.5374%" height="15" fill="rgb(217,75,12)" fg:x="76508" fg:w="425"/><text x="96.9903%" y="463.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (57 samples, 0.07%)</title><rect x="97.2056%" y="437" width="0.0721%" height="15" fill="rgb(224,159,17)" fg:x="76876" fg:w="57"/><text x="97.4556%" y="447.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (617 samples, 0.78%)</title><rect x="96.5544%" y="469" width="0.7802%" height="15" fill="rgb(217,118,1)" fg:x="76361" fg:w="617"/><text x="96.8044%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (43 samples, 0.05%)</title><rect x="97.2802%" y="453" width="0.0544%" height="15" fill="rgb(232,180,48)" fg:x="76935" fg:w="43"/><text x="97.5302%" y="463.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (53 samples, 0.07%)</title><rect x="97.3345%" y="469" width="0.0670%" height="15" fill="rgb(230,27,33)" fg:x="76978" fg:w="53"/><text x="97.5845%" y="479.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (41 samples, 0.05%)</title><rect x="97.3497%" y="453" width="0.0518%" height="15" fill="rgb(205,31,21)" fg:x="76990" fg:w="41"/><text x="97.5997%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (82 samples, 0.10%)</title><rect x="97.8037%" y="453" width="0.1037%" height="15" fill="rgb(253,59,4)" fg:x="77349" fg:w="82"/><text x="98.0537%" y="463.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (426 samples, 0.54%)</title><rect x="97.4016%" y="469" width="0.5387%" height="15" fill="rgb(224,201,9)" fg:x="77031" fg:w="426"/><text x="97.6516%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (26 samples, 0.03%)</title><rect x="97.9073%" y="453" width="0.0329%" height="15" fill="rgb(229,206,30)" fg:x="77431" fg:w="26"/><text x="98.1573%" y="463.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (51 samples, 0.06%)</title><rect x="98.2589%" y="453" width="0.0645%" height="15" fill="rgb(212,67,47)" fg:x="77709" fg:w="51"/><text x="98.5089%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (77 samples, 0.10%)</title><rect x="98.3360%" y="421" width="0.0974%" height="15" fill="rgb(211,96,50)" fg:x="77770" fg:w="77"/><text x="98.5860%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (46 samples, 0.06%)</title><rect x="98.3752%" y="405" width="0.0582%" height="15" fill="rgb(252,114,18)" fg:x="77801" fg:w="46"/><text x="98.6252%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (88 samples, 0.11%)</title><rect x="98.3233%" y="453" width="0.1113%" height="15" fill="rgb(223,58,37)" fg:x="77760" fg:w="88"/><text x="98.5733%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (82 samples, 0.10%)</title><rect x="98.3309%" y="437" width="0.1037%" height="15" fill="rgb(237,70,4)" fg:x="77766" fg:w="82"/><text x="98.5809%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.01%)</title><rect x="98.4346%" y="453" width="0.0101%" height="15" fill="rgb(244,85,46)" fg:x="77848" fg:w="8"/><text x="98.6846%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (21 samples, 0.03%)</title><rect x="98.4447%" y="453" width="0.0266%" height="15" fill="rgb(223,39,52)" fg:x="77856" fg:w="21"/><text x="98.6947%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (13 samples, 0.02%)</title><rect x="98.4548%" y="437" width="0.0164%" height="15" fill="rgb(218,200,14)" fg:x="77864" fg:w="13"/><text x="98.7048%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (14 samples, 0.02%)</title><rect x="98.4738%" y="453" width="0.0177%" height="15" fill="rgb(208,171,16)" fg:x="77879" fg:w="14"/><text x="98.7238%" y="463.50"></text></g><g><title>App`core::slice::sort::merge_sort (462 samples, 0.58%)</title><rect x="97.9567%" y="469" width="0.5842%" height="15" fill="rgb(234,200,18)" fg:x="77470" fg:w="462"/><text x="98.2067%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (37 samples, 0.05%)</title><rect x="98.4940%" y="453" width="0.0468%" height="15" fill="rgb(228,45,11)" fg:x="77895" fg:w="37"/><text x="98.7440%" y="463.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.02%)</title><rect x="98.6255%" y="453" width="0.0190%" height="15" fill="rgb(237,182,11)" fg:x="77999" fg:w="15"/><text x="98.8755%" y="463.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="98.6344%" y="437" width="0.0101%" height="15" fill="rgb(241,175,49)" fg:x="78006" fg:w="8"/><text x="98.8844%" y="447.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (83 samples, 0.10%)</title><rect x="98.5408%" y="469" width="0.1049%" height="15" fill="rgb(247,38,35)" fg:x="77932" fg:w="83"/><text x="98.7908%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (12 samples, 0.02%)</title><rect x="98.6749%" y="453" width="0.0152%" height="15" fill="rgb(228,39,49)" fg:x="78038" fg:w="12"/><text x="98.9249%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`free (41 samples, 0.05%)</title><rect x="98.6597%" y="469" width="0.0518%" height="15" fill="rgb(226,101,26)" fg:x="78026" fg:w="41"/><text x="98.9097%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.02%)</title><rect x="98.6951%" y="453" width="0.0164%" height="15" fill="rgb(206,141,19)" fg:x="78054" fg:w="13"/><text x="98.9451%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.02%)</title><rect x="98.6951%" y="437" width="0.0164%" height="15" fill="rgb(211,200,13)" fg:x="78054" fg:w="13"/><text x="98.9451%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (48 samples, 0.06%)</title><rect x="98.7115%" y="469" width="0.0607%" height="15" fill="rgb(241,121,6)" fg:x="78067" fg:w="48"/><text x="98.9615%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (21 samples, 0.03%)</title><rect x="98.7457%" y="453" width="0.0266%" height="15" fill="rgb(234,221,29)" fg:x="78094" fg:w="21"/><text x="98.9957%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (10 samples, 0.01%)</title><rect x="98.7861%" y="469" width="0.0126%" height="15" fill="rgb(229,136,5)" fg:x="78126" fg:w="10"/><text x="99.0361%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (48 samples, 0.06%)</title><rect x="98.8266%" y="469" width="0.0607%" height="15" fill="rgb(238,36,11)" fg:x="78158" fg:w="48"/><text x="99.0766%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="98.8873%" y="469" width="0.0126%" height="15" fill="rgb(251,55,41)" fg:x="78206" fg:w="10"/><text x="99.1373%" y="479.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (53,814 samples, 68.04%)</title><rect x="30.8575%" y="485" width="68.0449%" height="15" fill="rgb(242,34,40)" fg:x="24404" fg:w="53814"/><text x="31.1075%" y="495.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (10 samples, 0.01%)</title><rect x="98.9265%" y="469" width="0.0126%" height="15" fill="rgb(215,42,17)" fg:x="78237" fg:w="10"/><text x="99.1765%" y="479.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (12 samples, 0.02%)</title><rect x="98.9417%" y="469" width="0.0152%" height="15" fill="rgb(207,44,46)" fg:x="78249" fg:w="12"/><text x="99.1917%" y="479.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_bishop_moves (15 samples, 0.02%)</title><rect x="98.9720%" y="453" width="0.0190%" height="15" fill="rgb(211,206,28)" fg:x="78273" fg:w="15"/><text x="99.2220%" y="463.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_knight_moves (9 samples, 0.01%)</title><rect x="98.9910%" y="453" width="0.0114%" height="15" fill="rgb(237,167,16)" fg:x="78288" fg:w="9"/><text x="99.2410%" y="463.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_pawn_moves (47 samples, 0.06%)</title><rect x="99.0024%" y="453" width="0.0594%" height="15" fill="rgb(233,66,6)" fg:x="78297" fg:w="47"/><text x="99.2524%" y="463.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_queen_moves (14 samples, 0.02%)</title><rect x="99.0618%" y="453" width="0.0177%" height="15" fill="rgb(246,123,29)" fg:x="78344" fg:w="14"/><text x="99.3118%" y="463.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (107 samples, 0.14%)</title><rect x="98.9581%" y="469" width="0.1353%" height="15" fill="rgb(209,62,40)" fg:x="78262" fg:w="107"/><text x="99.2081%" y="479.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_rook_moves (11 samples, 0.01%)</title><rect x="99.0795%" y="453" width="0.0139%" height="15" fill="rgb(218,4,25)" fg:x="78358" fg:w="11"/><text x="99.3295%" y="463.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (161 samples, 0.20%)</title><rect x="98.9037%" y="485" width="0.2036%" height="15" fill="rgb(253,91,49)" fg:x="78219" fg:w="161"/><text x="99.1537%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.01%)</title><rect x="99.0934%" y="469" width="0.0139%" height="15" fill="rgb(228,155,29)" fg:x="78369" fg:w="11"/><text x="99.3434%" y="479.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_king_moves (18 samples, 0.02%)</title><rect x="99.1073%" y="485" width="0.0228%" height="15" fill="rgb(243,57,37)" fg:x="78380" fg:w="18"/><text x="99.3573%" y="495.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::attackers (13 samples, 0.02%)</title><rect x="99.1136%" y="469" width="0.0164%" height="15" fill="rgb(244,167,17)" fg:x="78385" fg:w="13"/><text x="99.3636%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (32 samples, 0.04%)</title><rect x="99.2755%" y="469" width="0.0405%" height="15" fill="rgb(207,181,38)" fg:x="78513" fg:w="32"/><text x="99.5255%" y="479.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (163 samples, 0.21%)</title><rect x="99.1301%" y="485" width="0.2061%" height="15" fill="rgb(211,8,23)" fg:x="78398" fg:w="163"/><text x="99.3801%" y="495.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (16 samples, 0.02%)</title><rect x="99.3159%" y="469" width="0.0202%" height="15" fill="rgb(235,11,44)" fg:x="78545" fg:w="16"/><text x="99.5659%" y="479.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (12 samples, 0.02%)</title><rect x="99.4323%" y="469" width="0.0152%" height="15" fill="rgb(248,18,52)" fg:x="78637" fg:w="12"/><text x="99.6823%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.04%)</title><rect x="99.4474%" y="469" width="0.0354%" height="15" fill="rgb(208,4,7)" fg:x="78649" fg:w="28"/><text x="99.6974%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (27 samples, 0.03%)</title><rect x="99.4487%" y="453" width="0.0341%" height="15" fill="rgb(240,17,39)" fg:x="78650" fg:w="27"/><text x="99.6987%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (26 samples, 0.03%)</title><rect x="99.4500%" y="437" width="0.0329%" height="15" fill="rgb(207,170,3)" fg:x="78651" fg:w="26"/><text x="99.7000%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (15 samples, 0.02%)</title><rect x="99.4639%" y="421" width="0.0190%" height="15" fill="rgb(236,100,52)" fg:x="78662" fg:w="15"/><text x="99.7139%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (8 samples, 0.01%)</title><rect x="99.4879%" y="469" width="0.0101%" height="15" fill="rgb(246,78,51)" fg:x="78681" fg:w="8"/><text x="99.7379%" y="479.50"></text></g><g><title>App`core::slice::sort::merge_sort (116 samples, 0.15%)</title><rect x="99.3577%" y="485" width="0.1467%" height="15" fill="rgb(211,17,15)" fg:x="78578" fg:w="116"/><text x="99.6077%" y="495.50"></text></g><g><title>App`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (14 samples, 0.02%)</title><rect x="99.5359%" y="469" width="0.0177%" height="15" fill="rgb(209,59,46)" fg:x="78719" fg:w="14"/><text x="99.7859%" y="479.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (42 samples, 0.05%)</title><rect x="99.5043%" y="485" width="0.0531%" height="15" fill="rgb(210,92,25)" fg:x="78694" fg:w="42"/><text x="99.7543%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.01%)</title><rect x="99.5612%" y="485" width="0.0139%" height="15" fill="rgb(238,174,52)" fg:x="78739" fg:w="11"/><text x="99.8112%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (22 samples, 0.03%)</title><rect x="99.5751%" y="485" width="0.0278%" height="15" fill="rgb(230,73,7)" fg:x="78750" fg:w="22"/><text x="99.8251%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.02%)</title><rect x="99.5865%" y="469" width="0.0164%" height="15" fill="rgb(243,124,40)" fg:x="78759" fg:w="13"/><text x="99.8365%" y="479.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (9 samples, 0.01%)</title><rect x="99.6257%" y="485" width="0.0114%" height="15" fill="rgb(244,170,11)" fg:x="78790" fg:w="9"/><text x="99.8757%" y="495.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (54,847 samples, 69.35%)</title><rect x="30.2885%" y="501" width="69.3511%" height="15" fill="rgb(207,114,54)" fg:x="23954" fg:w="54847"/><text x="30.5385%" y="511.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::legal_moves (24 samples, 0.03%)</title><rect x="99.6472%" y="485" width="0.0303%" height="15" fill="rgb(205,42,20)" fg:x="78807" fg:w="24"/><text x="99.8972%" y="495.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::gen_moves_legal (31 samples, 0.04%)</title><rect x="99.6396%" y="501" width="0.0392%" height="15" fill="rgb(230,30,28)" fg:x="78801" fg:w="31"/><text x="99.8896%" y="511.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="99.7307%" y="485" width="0.0164%" height="15" fill="rgb(205,73,54)" fg:x="78873" fg:w="13"/><text x="99.9807%" y="495.50"></text></g><g><title>App`App::game_manager::state_bitboard::BitBoardState::perform_move (58 samples, 0.07%)</title><rect x="99.6814%" y="501" width="0.0733%" height="15" fill="rgb(254,227,23)" fg:x="78834" fg:w="58"/><text x="99.9314%" y="511.50"></text></g><g><title>App`core::slice::sort::merge_sort (39 samples, 0.05%)</title><rect x="99.7598%" y="501" width="0.0493%" height="15" fill="rgb(228,202,34)" fg:x="78896" fg:w="39"/><text x="100.0098%" y="511.50"></text></g><g><title>App`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (10 samples, 0.01%)</title><rect x="99.8091%" y="501" width="0.0126%" height="15" fill="rgb(222,225,37)" fg:x="78935" fg:w="10"/><text x="100.0591%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (12 samples, 0.02%)</title><rect x="99.8230%" y="501" width="0.0152%" height="15" fill="rgb(221,14,54)" fg:x="78946" fg:w="12"/><text x="100.0730%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="99.8280%" y="485" width="0.0101%" height="15" fill="rgb(254,102,2)" fg:x="78950" fg:w="8"/><text x="100.0780%" y="495.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (55,184 samples, 69.78%)</title><rect x="30.0774%" y="517" width="69.7772%" height="15" fill="rgb(232,104,17)" fg:x="23787" fg:w="55184"/><text x="30.3274%" y="527.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::bot2::Bot2::search (55,226 samples, 69.83%)</title><rect x="30.0546%" y="533" width="69.8303%" height="15" fill="rgb(250,220,14)" fg:x="23769" fg:w="55226"/><text x="30.3046%" y="543.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`&lt;App::game_manager::bot2::Bot2 as App::game_manager::bot::Bot&gt;::get_move (55,238 samples, 69.85%)</title><rect x="30.0458%" y="581" width="69.8455%" height="15" fill="rgb(241,158,9)" fg:x="23762" fg:w="55238"/><text x="30.2958%" y="591.50">App`&lt;App::game_manager::bot2::Bot2 as App::game_manager::bot::Bot&gt;::get_move</text></g><g><title>App`App::game_manager::bot2::Bot2::search (55,238 samples, 69.85%)</title><rect x="30.0458%" y="565" width="69.8455%" height="15" fill="rgb(246,9,43)" fg:x="23762" fg:w="55238"/><text x="30.2958%" y="575.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::bot2::Bot2::search (55,235 samples, 69.84%)</title><rect x="30.0496%" y="549" width="69.8417%" height="15" fill="rgb(206,73,33)" fg:x="23765" fg:w="55235"/><text x="30.2996%" y="559.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>libsystem_kernel.dylib`madvise (43 samples, 0.05%)</title><rect x="99.8913%" y="581" width="0.0544%" height="15" fill="rgb(222,79,8)" fg:x="79000" fg:w="43"/><text x="100.1413%" y="591.50"></text></g><g><title>App`std::sys_common::backtrace::__rust_begin_short_backtrace (55,323 samples, 69.95%)</title><rect x="30.0458%" y="597" width="69.9530%" height="15" fill="rgb(234,8,54)" fg:x="23762" fg:w="55323"/><text x="30.2958%" y="607.50">App`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>libsystem_malloc.dylib`free_large (42 samples, 0.05%)</title><rect x="99.9456%" y="581" width="0.0531%" height="15" fill="rgb(209,134,38)" fg:x="79043" fg:w="42"/><text x="100.1956%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (41 samples, 0.05%)</title><rect x="99.9469%" y="565" width="0.0518%" height="15" fill="rgb(230,127,29)" fg:x="79044" fg:w="41"/><text x="100.1969%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (41 samples, 0.05%)</title><rect x="99.9469%" y="549" width="0.0518%" height="15" fill="rgb(242,44,41)" fg:x="79044" fg:w="41"/><text x="100.1969%" y="559.50"></text></g><g><title>all (79,086 samples, 100%)</title><rect x="0.0000%" y="677" width="100.0000%" height="15" fill="rgb(222,56,43)" fg:x="0" fg:w="79086"/><text x="0.2500%" y="687.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (55,771 samples, 70.52%)</title><rect x="29.4806%" y="661" width="70.5194%" height="15" fill="rgb(238,39,47)" fg:x="23315" fg:w="55771"/><text x="29.7306%" y="671.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (55,771 samples, 70.52%)</title><rect x="29.4806%" y="645" width="70.5194%" height="15" fill="rgb(226,79,43)" fg:x="23315" fg:w="55771"/><text x="29.7306%" y="655.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>App`std::sys::unix::thread::Thread::new::thread_start (55,324 samples, 69.95%)</title><rect x="30.0458%" y="629" width="69.9542%" height="15" fill="rgb(242,105,53)" fg:x="23762" fg:w="55324"/><text x="30.2958%" y="639.50">App`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>App`core::ops::function::FnOnce::call_once{{vtable.shim}} (55,324 samples, 69.95%)</title><rect x="30.0458%" y="613" width="69.9542%" height="15" fill="rgb(251,132,46)" fg:x="23762" fg:w="55324"/><text x="30.2958%" y="623.50">App`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g></svg></svg>