<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="613.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="613.00"> </text><svg id="frames" x="10" width="1180" total_samples="162675"><g><title>App`&lt;glutin::display::Display as glutin::display::GlDisplay&gt;::find_configs (18 samples, 0.01%)</title><rect x="0.0240%" y="405" width="0.0111%" height="15" fill="rgb(227,0,7)" fg:x="39" fg:w="18"/><text x="0.2740%" y="415.50"></text></g><g><title>App`glutin::api::cgl::config::_&lt;impl glutin::api::cgl::display::Display&gt;::find_configs (18 samples, 0.01%)</title><rect x="0.0240%" y="389" width="0.0111%" height="15" fill="rgb(217,0,24)" fg:x="39" fg:w="18"/><text x="0.2740%" y="399.50"></text></g><g><title>AppKit`-[NSOpenGLPixelFormat initWithAttributes:] (18 samples, 0.01%)</title><rect x="0.0240%" y="373" width="0.0111%" height="15" fill="rgb(221,193,54)" fg:x="39" fg:w="18"/><text x="0.2740%" y="383.50"></text></g><g><title>OpenGL`CGLChoosePixelFormat (18 samples, 0.01%)</title><rect x="0.0240%" y="357" width="0.0111%" height="15" fill="rgb(248,212,6)" fg:x="39" fg:w="18"/><text x="0.2740%" y="367.50"></text></g><g><title>OpenGL`0x00007ffa37526363 (18 samples, 0.01%)</title><rect x="0.0240%" y="341" width="0.0111%" height="15" fill="rgb(208,68,35)" fg:x="39" fg:w="18"/><text x="0.2740%" y="351.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (24 samples, 0.01%)</title><rect x="0.0369%" y="341" width="0.0148%" height="15" fill="rgb(232,128,0)" fg:x="60" fg:w="24"/><text x="0.2869%" y="351.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (29 samples, 0.02%)</title><rect x="0.0357%" y="389" width="0.0178%" height="15" fill="rgb(207,160,47)" fg:x="58" fg:w="29"/><text x="0.2857%" y="399.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (29 samples, 0.02%)</title><rect x="0.0357%" y="373" width="0.0178%" height="15" fill="rgb(228,23,34)" fg:x="58" fg:w="29"/><text x="0.2857%" y="383.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (27 samples, 0.02%)</title><rect x="0.0369%" y="357" width="0.0166%" height="15" fill="rgb(218,30,26)" fg:x="60" fg:w="27"/><text x="0.2869%" y="367.50"></text></g><g><title>App`glutin_winit::DisplayBuilder::build (52 samples, 0.03%)</title><rect x="0.0240%" y="421" width="0.0320%" height="15" fill="rgb(220,122,19)" fg:x="39" fg:w="52"/><text x="0.2740%" y="431.50"></text></g><g><title>App`winit::platform_impl::platform::window::WinitWindow::new (34 samples, 0.02%)</title><rect x="0.0350%" y="405" width="0.0209%" height="15" fill="rgb(250,228,42)" fg:x="57" fg:w="34"/><text x="0.2850%" y="415.50"></text></g><g><title>App`glutin_window::GlutinWindow::from_raw (61 samples, 0.04%)</title><rect x="0.0191%" y="437" width="0.0375%" height="15" fill="rgb(240,193,28)" fg:x="31" fg:w="61"/><text x="0.2691%" y="447.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (29 samples, 0.02%)</title><rect x="0.0566%" y="421" width="0.0178%" height="15" fill="rgb(216,20,37)" fg:x="92" fg:w="29"/><text x="0.3066%" y="431.50"></text></g><g><title>AppKit`-[NSApplication init] (29 samples, 0.02%)</title><rect x="0.0566%" y="405" width="0.0178%" height="15" fill="rgb(206,188,39)" fg:x="92" fg:w="29"/><text x="0.3066%" y="415.50"></text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::BuildFromWindowSettings&gt;::build_from_window_settings (93 samples, 0.06%)</title><rect x="0.0191%" y="469" width="0.0572%" height="15" fill="rgb(217,207,13)" fg:x="31" fg:w="93"/><text x="0.2691%" y="479.50"></text></g><g><title>App`glutin_window::GlutinWindow::new (93 samples, 0.06%)</title><rect x="0.0191%" y="453" width="0.0572%" height="15" fill="rgb(231,73,38)" fg:x="31" fg:w="93"/><text x="0.2691%" y="463.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (32 samples, 0.02%)</title><rect x="0.0566%" y="437" width="0.0197%" height="15" fill="rgb(225,20,46)" fg:x="92" fg:w="32"/><text x="0.3066%" y="447.50"></text></g><g><title>CoreFoundation`CFEqual (19 samples, 0.01%)</title><rect x="0.3024%" y="357" width="0.0117%" height="15" fill="rgb(210,31,41)" fg:x="492" fg:w="19"/><text x="0.5524%" y="367.50"></text></g><g><title>CoreFoundation`CFBasicHashAddValue (59 samples, 0.04%)</title><rect x="0.2785%" y="373" width="0.0363%" height="15" fill="rgb(221,200,47)" fg:x="453" fg:w="59"/><text x="0.5285%" y="383.50"></text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (64 samples, 0.04%)</title><rect x="0.3541%" y="293" width="0.0393%" height="15" fill="rgb(226,26,5)" fg:x="576" fg:w="64"/><text x="0.6041%" y="303.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (82 samples, 0.05%)</title><rect x="0.3467%" y="309" width="0.0504%" height="15" fill="rgb(249,33,26)" fg:x="564" fg:w="82"/><text x="0.5967%" y="319.50"></text></g><g><title>CoreFoundation`CFEqual (23 samples, 0.01%)</title><rect x="0.4223%" y="261" width="0.0141%" height="15" fill="rgb(235,183,28)" fg:x="687" fg:w="23"/><text x="0.6723%" y="271.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (54 samples, 0.03%)</title><rect x="0.4100%" y="277" width="0.0332%" height="15" fill="rgb(221,5,38)" fg:x="667" fg:w="54"/><text x="0.6600%" y="287.50"></text></g><g><title>CoreFoundation`CFSetGetValue (105 samples, 0.06%)</title><rect x="0.4088%" y="293" width="0.0645%" height="15" fill="rgb(247,18,42)" fg:x="665" fg:w="105"/><text x="0.6588%" y="303.50"></text></g><g><title>CoreFoundation`__CFStringHash (39 samples, 0.02%)</title><rect x="0.4494%" y="277" width="0.0240%" height="15" fill="rgb(241,131,45)" fg:x="731" fg:w="39"/><text x="0.6994%" y="287.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (129 samples, 0.08%)</title><rect x="0.4045%" y="309" width="0.0793%" height="15" fill="rgb(249,31,29)" fg:x="658" fg:w="129"/><text x="0.6545%" y="319.50"></text></g><g><title>CoreFoundation`CFRunLoopAddSource (257 samples, 0.16%)</title><rect x="0.3418%" y="325" width="0.1580%" height="15" fill="rgb(225,111,53)" fg:x="556" fg:w="257"/><text x="0.5918%" y="335.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (302 samples, 0.19%)</title><rect x="0.3270%" y="373" width="0.1856%" height="15" fill="rgb(238,160,17)" fg:x="532" fg:w="302"/><text x="0.5770%" y="383.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (296 samples, 0.18%)</title><rect x="0.3307%" y="357" width="0.1820%" height="15" fill="rgb(214,148,48)" fg:x="538" fg:w="296"/><text x="0.5807%" y="367.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (287 samples, 0.18%)</title><rect x="0.3363%" y="341" width="0.1764%" height="15" fill="rgb(232,36,49)" fg:x="547" fg:w="287"/><text x="0.5863%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.01%)</title><rect x="0.5680%" y="293" width="0.0111%" height="15" fill="rgb(209,103,24)" fg:x="924" fg:w="18"/><text x="0.8180%" y="303.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (47 samples, 0.03%)</title><rect x="0.5514%" y="341" width="0.0289%" height="15" fill="rgb(229,88,8)" fg:x="897" fg:w="47"/><text x="0.8014%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (22 samples, 0.01%)</title><rect x="0.5668%" y="325" width="0.0135%" height="15" fill="rgb(213,181,19)" fg:x="922" fg:w="22"/><text x="0.8168%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (21 samples, 0.01%)</title><rect x="0.5674%" y="309" width="0.0129%" height="15" fill="rgb(254,191,54)" fg:x="923" fg:w="21"/><text x="0.8174%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (23 samples, 0.01%)</title><rect x="0.5803%" y="341" width="0.0141%" height="15" fill="rgb(241,83,37)" fg:x="944" fg:w="23"/><text x="0.8303%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (23 samples, 0.01%)</title><rect x="0.5803%" y="325" width="0.0141%" height="15" fill="rgb(233,36,39)" fg:x="944" fg:w="23"/><text x="0.8303%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (23 samples, 0.01%)</title><rect x="0.5803%" y="309" width="0.0141%" height="15" fill="rgb(226,3,54)" fg:x="944" fg:w="23"/><text x="0.8303%" y="319.50"></text></g><g><title>CoreFoundation`CFBasicHashCreateCopy (114 samples, 0.07%)</title><rect x="0.5262%" y="357" width="0.0701%" height="15" fill="rgb(245,192,40)" fg:x="856" fg:w="114"/><text x="0.7762%" y="367.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (17 samples, 0.01%)</title><rect x="0.5981%" y="357" width="0.0105%" height="15" fill="rgb(238,167,29)" fg:x="973" fg:w="17"/><text x="0.8481%" y="367.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeID (17 samples, 0.01%)</title><rect x="0.5981%" y="341" width="0.0105%" height="15" fill="rgb(232,182,51)" fg:x="973" fg:w="17"/><text x="0.8481%" y="351.50"></text></g><g><title>CoreFoundation`CFSetCreateCopy (173 samples, 0.11%)</title><rect x="0.5127%" y="373" width="0.1063%" height="15" fill="rgb(231,60,39)" fg:x="834" fg:w="173"/><text x="0.7627%" y="383.50"></text></g><g><title>CoreFoundation`__CFBasicHashDrain (22 samples, 0.01%)</title><rect x="0.6307%" y="357" width="0.0135%" height="15" fill="rgb(208,69,12)" fg:x="1026" fg:w="22"/><text x="0.8807%" y="367.50"></text></g><g><title>CoreFoundation`_CFRelease (67 samples, 0.04%)</title><rect x="0.6190%" y="373" width="0.0412%" height="15" fill="rgb(235,93,37)" fg:x="1007" fg:w="67"/><text x="0.8690%" y="383.50"></text></g><g><title>CoreFoundation`__CFRunLoopSourceEqual (17 samples, 0.01%)</title><rect x="0.6670%" y="373" width="0.0105%" height="15" fill="rgb(213,116,39)" fg:x="1085" fg:w="17"/><text x="0.9170%" y="383.50"></text></g><g><title>CoreFoundation`CFRunLoopAddSource (681 samples, 0.42%)</title><rect x="0.2717%" y="389" width="0.4186%" height="15" fill="rgb(222,207,29)" fg:x="442" fg:w="681"/><text x="0.5217%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (43 samples, 0.03%)</title><rect x="0.7383%" y="357" width="0.0264%" height="15" fill="rgb(206,96,30)" fg:x="1201" fg:w="43"/><text x="0.9883%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (34 samples, 0.02%)</title><rect x="0.7438%" y="341" width="0.0209%" height="15" fill="rgb(218,138,4)" fg:x="1210" fg:w="34"/><text x="0.9938%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (33 samples, 0.02%)</title><rect x="0.7444%" y="325" width="0.0203%" height="15" fill="rgb(250,191,14)" fg:x="1211" fg:w="33"/><text x="0.9944%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (22 samples, 0.01%)</title><rect x="0.7512%" y="309" width="0.0135%" height="15" fill="rgb(239,60,40)" fg:x="1222" fg:w="22"/><text x="1.0012%" y="319.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (109 samples, 0.07%)</title><rect x="0.7069%" y="373" width="0.0670%" height="15" fill="rgb(206,27,48)" fg:x="1150" fg:w="109"/><text x="0.9569%" y="383.50"></text></g><g><title>CoreFoundation`CFRunLoopSourceCreate (141 samples, 0.09%)</title><rect x="0.6977%" y="389" width="0.0867%" height="15" fill="rgb(225,35,8)" fg:x="1135" fg:w="141"/><text x="0.9477%" y="399.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (17 samples, 0.01%)</title><rect x="0.7844%" y="389" width="0.0105%" height="15" fill="rgb(250,213,24)" fg:x="1276" fg:w="17"/><text x="1.0344%" y="399.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::create_proxy (984 samples, 0.60%)</title><rect x="0.2096%" y="405" width="0.6049%" height="15" fill="rgb(247,123,22)" fg:x="341" fg:w="984"/><text x="0.4596%" y="415.50"></text></g><g><title>AppKit`+[NSAnimationContext activate] (19 samples, 0.01%)</title><rect x="0.9547%" y="325" width="0.0117%" height="15" fill="rgb(231,138,38)" fg:x="1553" fg:w="19"/><text x="1.2047%" y="335.50"></text></g><g><title>CoreFoundation`CFArrayContainsValue (32 samples, 0.02%)</title><rect x="1.0204%" y="293" width="0.0197%" height="15" fill="rgb(231,145,46)" fg:x="1660" fg:w="32"/><text x="1.2704%" y="303.50"></text></g><g><title>CoreFoundation`CFEqual (20 samples, 0.01%)</title><rect x="1.0278%" y="277" width="0.0123%" height="15" fill="rgb(251,118,11)" fg:x="1672" fg:w="20"/><text x="1.2778%" y="287.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (30 samples, 0.02%)</title><rect x="1.0499%" y="261" width="0.0184%" height="15" fill="rgb(217,147,25)" fg:x="1708" fg:w="30"/><text x="1.2999%" y="271.50"></text></g><g><title>CoreFoundation`CFSetGetValue (61 samples, 0.04%)</title><rect x="1.0456%" y="277" width="0.0375%" height="15" fill="rgb(247,81,37)" fg:x="1701" fg:w="61"/><text x="1.2956%" y="287.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (80 samples, 0.05%)</title><rect x="1.0450%" y="293" width="0.0492%" height="15" fill="rgb(209,12,38)" fg:x="1700" fg:w="80"/><text x="1.2950%" y="303.50"></text></g><g><title>CoreFoundation`CFRunLoopAddObserver (176 samples, 0.11%)</title><rect x="1.0045%" y="309" width="0.1082%" height="15" fill="rgb(227,1,9)" fg:x="1634" fg:w="176"/><text x="1.2545%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.01%)</title><rect x="1.1551%" y="261" width="0.0105%" height="15" fill="rgb(248,47,43)" fg:x="1879" fg:w="17"/><text x="1.4051%" y="271.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (48 samples, 0.03%)</title><rect x="1.1372%" y="277" width="0.0295%" height="15" fill="rgb(221,10,30)" fg:x="1850" fg:w="48"/><text x="1.3872%" y="287.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (23 samples, 0.01%)</title><rect x="1.1784%" y="261" width="0.0141%" height="15" fill="rgb(210,229,1)" fg:x="1917" fg:w="23"/><text x="1.4284%" y="271.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (21 samples, 0.01%)</title><rect x="1.1797%" y="245" width="0.0129%" height="15" fill="rgb(222,148,37)" fg:x="1919" fg:w="21"/><text x="1.4297%" y="255.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (46 samples, 0.03%)</title><rect x="1.1686%" y="277" width="0.0283%" height="15" fill="rgb(234,67,33)" fg:x="1901" fg:w="46"/><text x="1.4186%" y="287.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverCreate (140 samples, 0.09%)</title><rect x="1.1200%" y="293" width="0.0861%" height="15" fill="rgb(247,98,35)" fg:x="1822" fg:w="140"/><text x="1.3700%" y="303.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverCreateWithHandler (174 samples, 0.11%)</title><rect x="1.1151%" y="309" width="0.1070%" height="15" fill="rgb(247,138,52)" fg:x="1814" fg:w="174"/><text x="1.3651%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_initWeak (74 samples, 0.05%)</title><rect x="1.2399%" y="309" width="0.0455%" height="15" fill="rgb(213,79,30)" fg:x="2017" fg:w="74"/><text x="1.4899%" y="319.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (45 samples, 0.03%)</title><rect x="1.2577%" y="293" width="0.0277%" height="15" fill="rgb(246,177,23)" fg:x="2046" fg:w="45"/><text x="1.5077%" y="303.50"></text></g><g><title>AppKit`-[NSApplication setWindowsNeedUpdate:] (533 samples, 0.33%)</title><rect x="0.9694%" y="325" width="0.3276%" height="15" fill="rgb(230,62,27)" fg:x="1577" fg:w="533"/><text x="1.2194%" y="335.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (24 samples, 0.01%)</title><rect x="1.3106%" y="117" width="0.0148%" height="15" fill="rgb(216,154,8)" fg:x="2132" fg:w="24"/><text x="1.5606%" y="127.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (17 samples, 0.01%)</title><rect x="1.3426%" y="53" width="0.0105%" height="15" fill="rgb(244,35,45)" fg:x="2184" fg:w="17"/><text x="1.5926%" y="63.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (18 samples, 0.01%)</title><rect x="1.3426%" y="69" width="0.0111%" height="15" fill="rgb(251,115,12)" fg:x="2184" fg:w="18"/><text x="1.5926%" y="79.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (47 samples, 0.03%)</title><rect x="1.3339%" y="85" width="0.0289%" height="15" fill="rgb(240,54,50)" fg:x="2170" fg:w="47"/><text x="1.5839%" y="95.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (58 samples, 0.04%)</title><rect x="1.3278%" y="101" width="0.0357%" height="15" fill="rgb(233,84,52)" fg:x="2160" fg:w="58"/><text x="1.5778%" y="111.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (87 samples, 0.05%)</title><rect x="1.3106%" y="181" width="0.0535%" height="15" fill="rgb(207,117,47)" fg:x="2132" fg:w="87"/><text x="1.5606%" y="191.50"></text></g><g><title>AppKit`_DPSNextEvent (87 samples, 0.05%)</title><rect x="1.3106%" y="165" width="0.0535%" height="15" fill="rgb(249,43,39)" fg:x="2132" fg:w="87"/><text x="1.5606%" y="175.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (87 samples, 0.05%)</title><rect x="1.3106%" y="149" width="0.0535%" height="15" fill="rgb(209,38,44)" fg:x="2132" fg:w="87"/><text x="1.5606%" y="159.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (87 samples, 0.05%)</title><rect x="1.3106%" y="133" width="0.0535%" height="15" fill="rgb(236,212,23)" fg:x="2132" fg:w="87"/><text x="1.5606%" y="143.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (59 samples, 0.04%)</title><rect x="1.3278%" y="117" width="0.0363%" height="15" fill="rgb(242,79,21)" fg:x="2160" fg:w="59"/><text x="1.5778%" y="127.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) trackEventsMatchingMask:timeout:mode:handler:] (88 samples, 0.05%)</title><rect x="1.3106%" y="197" width="0.0541%" height="15" fill="rgb(211,96,35)" fg:x="2132" fg:w="88"/><text x="1.5606%" y="207.50"></text></g><g><title>AppKit`-[NSControl mouseDown:] (91 samples, 0.06%)</title><rect x="1.3094%" y="277" width="0.0559%" height="15" fill="rgb(253,215,40)" fg:x="2130" fg:w="91"/><text x="1.5594%" y="287.50"></text></g><g><title>AppKit`-[NSButtonCell trackMouse:inRect:ofView:untilMouseUp:] (91 samples, 0.06%)</title><rect x="1.3094%" y="261" width="0.0559%" height="15" fill="rgb(211,81,21)" fg:x="2130" fg:w="91"/><text x="1.5594%" y="271.50"></text></g><g><title>AppKit`-[NSCell trackMouse:inRect:ofView:untilMouseUp:] (91 samples, 0.06%)</title><rect x="1.3094%" y="245" width="0.0559%" height="15" fill="rgb(208,190,38)" fg:x="2130" fg:w="91"/><text x="1.5594%" y="255.50"></text></g><g><title>AppKit`NSControlTrackMouse (91 samples, 0.06%)</title><rect x="1.3094%" y="229" width="0.0559%" height="15" fill="rgb(235,213,38)" fg:x="2130" fg:w="91"/><text x="1.5594%" y="239.50"></text></g><g><title>AppKit`-[NSDragEventTracker trackEvent:usingHandler:] (91 samples, 0.06%)</title><rect x="1.3094%" y="213" width="0.0559%" height="15" fill="rgb(237,122,38)" fg:x="2130" fg:w="91"/><text x="1.5594%" y="223.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _handleMouseDownEvent:isDelayedEvent:] (92 samples, 0.06%)</title><rect x="1.3094%" y="293" width="0.0566%" height="15" fill="rgb(244,218,35)" fg:x="2130" fg:w="92"/><text x="1.5594%" y="303.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (97 samples, 0.06%)</title><rect x="1.3081%" y="309" width="0.0596%" height="15" fill="rgb(240,68,47)" fg:x="2128" fg:w="97"/><text x="1.5581%" y="319.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (101 samples, 0.06%)</title><rect x="1.3063%" y="325" width="0.0621%" height="15" fill="rgb(210,16,53)" fg:x="2125" fg:w="101"/><text x="1.5563%" y="335.50"></text></g><g><title>CoreFoundation`CFRunLoopCopyCurrentMode (17 samples, 0.01%)</title><rect x="1.4034%" y="309" width="0.0105%" height="15" fill="rgb(235,124,12)" fg:x="2283" fg:w="17"/><text x="1.6534%" y="319.50"></text></g><g><title>QuartzCore`CA::Transaction::ensure_implicit (55 samples, 0.03%)</title><rect x="1.4139%" y="309" width="0.0338%" height="15" fill="rgb(224,169,11)" fg:x="2300" fg:w="55"/><text x="1.6639%" y="319.50"></text></g><g><title>QuartzCore`+[CATransaction(CATransactionPrivate) activateBackground:] (76 samples, 0.05%)</title><rect x="1.4028%" y="325" width="0.0467%" height="15" fill="rgb(250,166,2)" fg:x="2282" fg:w="76"/><text x="1.6528%" y="335.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) sendEvent:] (848 samples, 0.52%)</title><rect x="0.9479%" y="341" width="0.5213%" height="15" fill="rgb(242,216,29)" fg:x="1542" fg:w="848"/><text x="1.1979%" y="351.50"></text></g><g><title>AppKit`_NSSendEventToObservers (22 samples, 0.01%)</title><rect x="1.4698%" y="341" width="0.0135%" height="15" fill="rgb(230,116,27)" fg:x="2391" fg:w="22"/><text x="1.7198%" y="351.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (36 samples, 0.02%)</title><rect x="1.4846%" y="341" width="0.0221%" height="15" fill="rgb(228,99,48)" fg:x="2415" fg:w="36"/><text x="1.7346%" y="351.50"></text></g><g><title>App`winit::platform_impl::platform::app::WinitApplication::send_event (951 samples, 0.58%)</title><rect x="0.9258%" y="357" width="0.5846%" height="15" fill="rgb(253,11,6)" fg:x="1506" fg:w="951"/><text x="1.1758%" y="367.50"></text></g><g><title>Foundation`+[NSUndoManager(NSPrivate) _endTopLevelGroupings] (30 samples, 0.02%)</title><rect x="1.5116%" y="357" width="0.0184%" height="15" fill="rgb(247,143,39)" fg:x="2459" fg:w="30"/><text x="1.7616%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper (18 samples, 0.01%)</title><rect x="1.5405%" y="357" width="0.0111%" height="15" fill="rgb(236,97,10)" fg:x="2506" fg:w="18"/><text x="1.7905%" y="367.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (1,073 samples, 0.66%)</title><rect x="0.9049%" y="373" width="0.6596%" height="15" fill="rgb(233,208,19)" fg:x="1472" fg:w="1073"/><text x="1.1549%" y="383.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (19 samples, 0.01%)</title><rect x="1.5528%" y="357" width="0.0117%" height="15" fill="rgb(216,164,2)" fg:x="2526" fg:w="19"/><text x="1.8028%" y="367.50"></text></g><g><title>AppKit`+[NSEvent _discardTrackingAndCursorEventsIfNeeded] (31 samples, 0.02%)</title><rect x="1.6622%" y="357" width="0.0191%" height="15" fill="rgb(220,129,5)" fg:x="2704" fg:w="31"/><text x="1.9122%" y="367.50"></text></g><g><title>AppKit`+[NSTouchBar(NSTouchBarEvents) allowsTouchesDuringTrackingLoops] (17 samples, 0.01%)</title><rect x="1.6813%" y="357" width="0.0105%" height="15" fill="rgb(242,17,10)" fg:x="2735" fg:w="17"/><text x="1.9313%" y="367.50"></text></g><g><title>AppKit`-[NSApplication windowWithWindowNumber:] (17 samples, 0.01%)</title><rect x="1.7120%" y="357" width="0.0105%" height="15" fill="rgb(242,107,0)" fg:x="2785" fg:w="17"/><text x="1.9620%" y="367.50"></text></g><g><title>Foundation`-[NSConcretePointerArray countByEnumeratingWithState:objects:count:] (20 samples, 0.01%)</title><rect x="1.7938%" y="325" width="0.0123%" height="15" fill="rgb(251,28,31)" fg:x="2918" fg:w="20"/><text x="2.0438%" y="335.50"></text></g><g><title>QuartzCore`CA::Layer::retain_parent (22 samples, 0.01%)</title><rect x="1.8436%" y="277" width="0.0135%" height="15" fill="rgb(233,223,10)" fg:x="2999" fg:w="22"/><text x="2.0936%" y="287.50"></text></g><g><title>QuartzCore`CA::Layer::ancestor_context_id (41 samples, 0.03%)</title><rect x="1.8343%" y="293" width="0.0252%" height="15" fill="rgb(215,21,27)" fg:x="2984" fg:w="41"/><text x="2.0843%" y="303.50"></text></g><g><title>QuartzCore`CA::Layer::retain_context (58 samples, 0.04%)</title><rect x="1.8257%" y="309" width="0.0357%" height="15" fill="rgb(232,23,21)" fg:x="2970" fg:w="58"/><text x="2.0757%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (23 samples, 0.01%)</title><rect x="1.8614%" y="309" width="0.0141%" height="15" fill="rgb(244,5,23)" fg:x="3028" fg:w="23"/><text x="2.1114%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (23 samples, 0.01%)</title><rect x="1.8614%" y="293" width="0.0141%" height="15" fill="rgb(226,81,46)" fg:x="3028" fg:w="23"/><text x="2.1114%" y="303.50"></text></g><g><title>QuartzCore`-[CALayer(CALayerPrivate) context] (117 samples, 0.07%)</title><rect x="1.8140%" y="325" width="0.0719%" height="15" fill="rgb(247,70,30)" fg:x="2951" fg:w="117"/><text x="2.0640%" y="335.50"></text></g><g><title>libobjc.A.dylib`object_getIndexedIvars (21 samples, 0.01%)</title><rect x="1.9142%" y="325" width="0.0129%" height="15" fill="rgb(212,68,19)" fg:x="3114" fg:w="21"/><text x="2.1642%" y="335.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _findWindowUsingContextID:] (283 samples, 0.17%)</title><rect x="1.7550%" y="341" width="0.1740%" height="15" fill="rgb(240,187,13)" fg:x="2855" fg:w="283"/><text x="2.0050%" y="351.50"></text></g><g><title>SkyLight`SLEventGetIntegerValueField (23 samples, 0.01%)</title><rect x="1.9985%" y="341" width="0.0141%" height="15" fill="rgb(223,113,26)" fg:x="3251" fg:w="23"/><text x="2.2485%" y="351.50"></text></g><g><title>SkyLight`SLSGetDisplayBounds (91 samples, 0.06%)</title><rect x="2.0132%" y="341" width="0.0559%" height="15" fill="rgb(206,192,2)" fg:x="3275" fg:w="91"/><text x="2.2632%" y="351.50"></text></g><g><title>SkyLight`get_current_display_system_state() (37 samples, 0.02%)</title><rect x="2.0464%" y="325" width="0.0227%" height="15" fill="rgb(241,108,4)" fg:x="3329" fg:w="37"/><text x="2.2964%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (36 samples, 0.02%)</title><rect x="2.0470%" y="309" width="0.0221%" height="15" fill="rgb(247,173,49)" fg:x="3330" fg:w="36"/><text x="2.2970%" y="319.50"></text></g><g><title>SkyLight`SLSMainDisplayID (72 samples, 0.04%)</title><rect x="2.0692%" y="341" width="0.0443%" height="15" fill="rgb(224,114,35)" fg:x="3366" fg:w="72"/><text x="2.3192%" y="351.50"></text></g><g><title>SkyLight`get_current_display_system_state() (50 samples, 0.03%)</title><rect x="2.0827%" y="325" width="0.0307%" height="15" fill="rgb(245,159,27)" fg:x="3388" fg:w="50"/><text x="2.3327%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (20 samples, 0.01%)</title><rect x="2.1011%" y="309" width="0.0123%" height="15" fill="rgb(245,172,44)" fg:x="3418" fg:w="20"/><text x="2.3511%" y="319.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (167 samples, 0.10%)</title><rect x="2.1140%" y="341" width="0.1027%" height="15" fill="rgb(236,23,11)" fg:x="3439" fg:w="167"/><text x="2.3640%" y="351.50"></text></g><g><title>AppKit`-[NSEvent _initWithCGEvent:eventRef:] (810 samples, 0.50%)</title><rect x="1.7304%" y="357" width="0.4979%" height="15" fill="rgb(205,117,38)" fg:x="2815" fg:w="810"/><text x="1.9804%" y="367.50"></text></g><g><title>CoreFoundation`_CFRelease (30 samples, 0.02%)</title><rect x="2.2849%" y="277" width="0.0184%" height="15" fill="rgb(237,72,25)" fg:x="3717" fg:w="30"/><text x="2.5349%" y="287.50"></text></g><g><title>SkyLight`CGSEventReclaimObjects (79 samples, 0.05%)</title><rect x="2.2653%" y="293" width="0.0486%" height="15" fill="rgb(244,70,9)" fg:x="3685" fg:w="79"/><text x="2.5153%" y="303.50"></text></g><g><title>SkyLight`event_finalize(void const*) (83 samples, 0.05%)</title><rect x="2.2634%" y="309" width="0.0510%" height="15" fill="rgb(217,125,39)" fg:x="3682" fg:w="83"/><text x="2.5134%" y="319.50"></text></g><g><title>CoreFoundation`_CFRelease (123 samples, 0.08%)</title><rect x="2.2499%" y="325" width="0.0756%" height="15" fill="rgb(235,36,10)" fg:x="3660" fg:w="123"/><text x="2.4999%" y="335.50"></text></g><g><title>HIToolbox`ReleaseEvent (156 samples, 0.10%)</title><rect x="2.2370%" y="341" width="0.0959%" height="15" fill="rgb(251,123,47)" fg:x="3639" fg:w="156"/><text x="2.4870%" y="351.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (19 samples, 0.01%)</title><rect x="2.3335%" y="341" width="0.0117%" height="15" fill="rgb(221,13,13)" fg:x="3796" fg:w="19"/><text x="2.5835%" y="351.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (199 samples, 0.12%)</title><rect x="2.2284%" y="357" width="0.1223%" height="15" fill="rgb(238,131,9)" fg:x="3625" fg:w="199"/><text x="2.4784%" y="367.50"></text></g><g><title>AppKit`-[NSEvent window] (21 samples, 0.01%)</title><rect x="2.3507%" y="357" width="0.0129%" height="15" fill="rgb(211,50,8)" fg:x="3824" fg:w="21"/><text x="2.6007%" y="367.50"></text></g><g><title>CoreFoundation`_CFSuddenTerminationDisable (20 samples, 0.01%)</title><rect x="2.3814%" y="325" width="0.0123%" height="15" fill="rgb(245,182,24)" fg:x="3874" fg:w="20"/><text x="2.6314%" y="335.50"></text></g><g><title>CoreFoundation`_CFSuddenTerminationDisable (54 samples, 0.03%)</title><rect x="2.4220%" y="309" width="0.0332%" height="15" fill="rgb(242,14,37)" fg:x="3940" fg:w="54"/><text x="2.6720%" y="319.50"></text></g><g><title>libxpc.dylib`_xpc_transaction_begin (33 samples, 0.02%)</title><rect x="2.4349%" y="293" width="0.0203%" height="15" fill="rgb(246,228,12)" fg:x="3961" fg:w="33"/><text x="2.6849%" y="303.50"></text></g><g><title>HIToolbox`_HIDisableSuddenTerminationForSendEvent (112 samples, 0.07%)</title><rect x="2.4116%" y="325" width="0.0688%" height="15" fill="rgb(213,55,15)" fg:x="3923" fg:w="112"/><text x="2.6616%" y="335.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (38 samples, 0.02%)</title><rect x="2.4804%" y="325" width="0.0234%" height="15" fill="rgb(209,9,3)" fg:x="4035" fg:w="38"/><text x="2.7304%" y="335.50"></text></g><g><title>AppKit`-[NSApplication _disableSuddenTermination] (204 samples, 0.13%)</title><rect x="2.3814%" y="341" width="0.1254%" height="15" fill="rgb(230,59,30)" fg:x="3874" fg:w="204"/><text x="2.6314%" y="351.50"></text></g><g><title>HIToolbox`GetGlobalMouse (27 samples, 0.02%)</title><rect x="2.5148%" y="309" width="0.0166%" height="15" fill="rgb(209,121,21)" fg:x="4091" fg:w="27"/><text x="2.7648%" y="319.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (66 samples, 0.04%)</title><rect x="2.5081%" y="341" width="0.0406%" height="15" fill="rgb(220,109,13)" fg:x="4080" fg:w="66"/><text x="2.7581%" y="351.50"></text></g><g><title>HIToolbox`ConvertEventRefToEventRecord (66 samples, 0.04%)</title><rect x="2.5081%" y="325" width="0.0406%" height="15" fill="rgb(232,18,1)" fg:x="4080" fg:w="66"/><text x="2.7581%" y="335.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (312 samples, 0.19%)</title><rect x="2.3808%" y="357" width="0.1918%" height="15" fill="rgb(215,41,42)" fg:x="3873" fg:w="312"/><text x="2.6308%" y="367.50"></text></g><g><title>CoreFoundation`-[NSDate timeIntervalSinceNow] (26 samples, 0.02%)</title><rect x="2.6365%" y="341" width="0.0160%" height="15" fill="rgb(224,123,36)" fg:x="4289" fg:w="26"/><text x="2.8865%" y="351.50"></text></g><g><title>HIToolbox`GetMainEventQueue (20 samples, 0.01%)</title><rect x="2.6820%" y="325" width="0.0123%" height="15" fill="rgb(240,125,3)" fg:x="4363" fg:w="20"/><text x="2.9320%" y="335.50"></text></g><g><title>AppKit`___DPSBlockUntilNextEventMatchingListInMode_block_invoke (20 samples, 0.01%)</title><rect x="2.7140%" y="309" width="0.0123%" height="15" fill="rgb(205,98,50)" fg:x="4415" fg:w="20"/><text x="2.9640%" y="319.50"></text></g><g><title>CarbonCore`MPCurrentTaskID (33 samples, 0.02%)</title><rect x="2.7324%" y="309" width="0.0203%" height="15" fill="rgb(205,185,37)" fg:x="4445" fg:w="33"/><text x="2.9824%" y="319.50"></text></g><g><title>CoreFoundation`CFStringCompare (29 samples, 0.02%)</title><rect x="2.7712%" y="309" width="0.0178%" height="15" fill="rgb(238,207,15)" fg:x="4508" fg:w="29"/><text x="3.0212%" y="319.50"></text></g><g><title>CoreFoundation`_CFRunLoopSetCurrent (22 samples, 0.01%)</title><rect x="2.7945%" y="309" width="0.0135%" height="15" fill="rgb(213,199,42)" fg:x="4546" fg:w="22"/><text x="3.0445%" y="319.50"></text></g><g><title>HIToolbox`MenuBarInstance::SetBoundsAndUpdateResolution (17 samples, 0.01%)</title><rect x="2.8591%" y="213" width="0.0105%" height="15" fill="rgb(235,201,11)" fg:x="4651" fg:w="17"/><text x="3.1091%" y="223.50"></text></g><g><title>HIToolbox`MenuBarInstance::ForEachWindowDo(unsigned char, bool  (17 samples, 0.01%)</title><rect x="2.8591%" y="197" width="0.0105%" height="15" fill="rgb(207,46,11)" fg:x="4651" fg:w="17"/><text x="3.1091%" y="207.50"></text></g><g><title>HIToolbox`HIApplication::HandleActivated (19 samples, 0.01%)</title><rect x="2.8591%" y="261" width="0.0117%" height="15" fill="rgb(241,35,35)" fg:x="4651" fg:w="19"/><text x="3.1091%" y="271.50"></text></g><g><title>HIToolbox`SetMenuBarObscured (19 samples, 0.01%)</title><rect x="2.8591%" y="245" width="0.0117%" height="15" fill="rgb(243,32,47)" fg:x="4651" fg:w="19"/><text x="3.1091%" y="255.50"></text></g><g><title>HIToolbox`MenuBarInstance::Show (19 samples, 0.01%)</title><rect x="2.8591%" y="229" width="0.0117%" height="15" fill="rgb(247,202,23)" fg:x="4651" fg:w="19"/><text x="3.1091%" y="239.50"></text></g><g><title>HIToolbox`HIApplication::EventObserver (34 samples, 0.02%)</title><rect x="2.8535%" y="277" width="0.0209%" height="15" fill="rgb(219,102,11)" fg:x="4642" fg:w="34"/><text x="3.1035%" y="287.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (72 samples, 0.04%)</title><rect x="2.8425%" y="293" width="0.0443%" height="15" fill="rgb(243,110,44)" fg:x="4624" fg:w="72"/><text x="3.0925%" y="303.50"></text></g><g><title>HIToolbox`AcquireEventFromQueue (133 samples, 0.08%)</title><rect x="2.8081%" y="309" width="0.0818%" height="15" fill="rgb(222,74,54)" fg:x="4568" fg:w="133"/><text x="3.0581%" y="319.50"></text></g><g><title>CarbonCore`MPTaskIsPreemptive (22 samples, 0.01%)</title><rect x="2.9150%" y="293" width="0.0135%" height="15" fill="rgb(216,99,12)" fg:x="4742" fg:w="22"/><text x="3.1650%" y="303.50"></text></g><g><title>HIToolbox`GetCurrentEventQueue (49 samples, 0.03%)</title><rect x="2.9126%" y="309" width="0.0301%" height="15" fill="rgb(226,22,26)" fg:x="4738" fg:w="49"/><text x="3.1626%" y="319.50"></text></g><g><title>HIToolbox`GetMainEventQueue (32 samples, 0.02%)</title><rect x="2.9525%" y="309" width="0.0197%" height="15" fill="rgb(217,163,10)" fg:x="4803" fg:w="32"/><text x="3.2025%" y="319.50"></text></g><g><title>CoreFoundation`_CFGetTSDCreateIfNeeded (17 samples, 0.01%)</title><rect x="3.0214%" y="277" width="0.0105%" height="15" fill="rgb(213,25,53)" fg:x="4915" fg:w="17"/><text x="3.2714%" y="287.50"></text></g><g><title>CoreFoundation`CFRunLoopGetCurrent (23 samples, 0.01%)</title><rect x="3.0183%" y="293" width="0.0141%" height="15" fill="rgb(252,105,26)" fg:x="4910" fg:w="23"/><text x="3.2683%" y="303.50"></text></g><g><title>CoreFoundation`CFEqual (18 samples, 0.01%)</title><rect x="3.0884%" y="277" width="0.0111%" height="15" fill="rgb(220,39,43)" fg:x="5024" fg:w="18"/><text x="3.3384%" y="287.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (42 samples, 0.03%)</title><rect x="3.1363%" y="245" width="0.0258%" height="15" fill="rgb(229,68,48)" fg:x="5102" fg:w="42"/><text x="3.3863%" y="255.50"></text></g><g><title>CoreFoundation`CFSetGetValue (82 samples, 0.05%)</title><rect x="3.1314%" y="261" width="0.0504%" height="15" fill="rgb(252,8,32)" fg:x="5094" fg:w="82"/><text x="3.3814%" y="271.50"></text></g><g><title>CoreFoundation`__CFStringHash (26 samples, 0.02%)</title><rect x="3.1658%" y="245" width="0.0160%" height="15" fill="rgb(223,20,43)" fg:x="5150" fg:w="26"/><text x="3.4158%" y="255.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (20 samples, 0.01%)</title><rect x="3.1873%" y="261" width="0.0123%" height="15" fill="rgb(229,81,49)" fg:x="5185" fg:w="20"/><text x="3.4373%" y="271.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeID (19 samples, 0.01%)</title><rect x="3.1880%" y="245" width="0.0117%" height="15" fill="rgb(236,28,36)" fg:x="5186" fg:w="19"/><text x="3.4380%" y="255.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (139 samples, 0.09%)</title><rect x="3.1240%" y="277" width="0.0854%" height="15" fill="rgb(249,185,26)" fg:x="5082" fg:w="139"/><text x="3.3740%" y="287.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler (30 samples, 0.02%)</title><rect x="3.3134%" y="245" width="0.0184%" height="15" fill="rgb(249,174,33)" fg:x="5390" fg:w="30"/><text x="3.5634%" y="255.50"></text></g><g><title>QuartzCore`CA::Context::retain_all_contexts (41 samples, 0.03%)</title><rect x="3.5162%" y="197" width="0.0252%" height="15" fill="rgb(233,201,37)" fg:x="5720" fg:w="41"/><text x="3.7662%" y="207.50"></text></g><g><title>QuartzCore`CA::Layer::thread_flags_ (26 samples, 0.02%)</title><rect x="3.5691%" y="181" width="0.0160%" height="15" fill="rgb(221,78,26)" fg:x="5806" fg:w="26"/><text x="3.8191%" y="191.50"></text></g><g><title>QuartzCore`CA::Layer::layout_if_needed (44 samples, 0.03%)</title><rect x="3.5635%" y="197" width="0.0270%" height="15" fill="rgb(250,127,30)" fg:x="5797" fg:w="44"/><text x="3.8135%" y="207.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (914 samples, 0.56%)</title><rect x="3.6318%" y="181" width="0.5619%" height="15" fill="rgb(230,49,44)" fg:x="5908" fg:w="914"/><text x="3.8818%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (890 samples, 0.55%)</title><rect x="3.6465%" y="165" width="0.5471%" height="15" fill="rgb(229,67,23)" fg:x="5932" fg:w="890"/><text x="3.8965%" y="175.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (973 samples, 0.60%)</title><rect x="3.6158%" y="197" width="0.5981%" height="15" fill="rgb(249,83,47)" fg:x="5882" fg:w="973"/><text x="3.8658%" y="207.50"></text></g><g><title>QuartzCore`x_hash_table_foreach (31 samples, 0.02%)</title><rect x="4.2182%" y="181" width="0.0191%" height="15" fill="rgb(215,43,3)" fg:x="6862" fg:w="31"/><text x="4.4682%" y="191.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::set_object_cache (40 samples, 0.02%)</title><rect x="4.2139%" y="197" width="0.0246%" height="15" fill="rgb(238,154,13)" fg:x="6855" fg:w="40"/><text x="4.4639%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (22 samples, 0.01%)</title><rect x="4.2957%" y="117" width="0.0135%" height="15" fill="rgb(219,56,2)" fg:x="6988" fg:w="22"/><text x="4.5457%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (39 samples, 0.02%)</title><rect x="4.2871%" y="165" width="0.0240%" height="15" fill="rgb(233,0,4)" fg:x="6974" fg:w="39"/><text x="4.5371%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (31 samples, 0.02%)</title><rect x="4.2920%" y="149" width="0.0191%" height="15" fill="rgb(235,30,7)" fg:x="6982" fg:w="31"/><text x="4.5420%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (31 samples, 0.02%)</title><rect x="4.2920%" y="133" width="0.0191%" height="15" fill="rgb(250,79,13)" fg:x="6982" fg:w="31"/><text x="4.5420%" y="143.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_alloc_from_heap (52 samples, 0.03%)</title><rect x="4.2840%" y="181" width="0.0320%" height="15" fill="rgb(211,146,34)" fg:x="6969" fg:w="52"/><text x="4.5340%" y="191.50"></text></g><g><title>libdispatch.dylib`_dispatch_async_f_slow (86 samples, 0.05%)</title><rect x="4.2711%" y="197" width="0.0529%" height="15" fill="rgb(228,22,38)" fg:x="6948" fg:w="86"/><text x="4.5211%" y="207.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (1,011 samples, 0.62%)</title><rect x="4.3270%" y="197" width="0.6215%" height="15" fill="rgb(235,168,5)" fg:x="7039" fg:w="1011"/><text x="4.5770%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (983 samples, 0.60%)</title><rect x="4.3442%" y="181" width="0.6043%" height="15" fill="rgb(221,155,16)" fg:x="7067" fg:w="983"/><text x="4.5942%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (142 samples, 0.09%)</title><rect x="4.9706%" y="197" width="0.0873%" height="15" fill="rgb(215,215,53)" fg:x="8086" fg:w="142"/><text x="5.2206%" y="207.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (21 samples, 0.01%)</title><rect x="5.0592%" y="197" width="0.0129%" height="15" fill="rgb(223,4,10)" fg:x="8230" fg:w="21"/><text x="5.3092%" y="207.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (2,772 samples, 1.70%)</title><rect x="3.3828%" y="213" width="1.7040%" height="15" fill="rgb(234,103,6)" fg:x="5503" fg:w="2772"/><text x="3.6328%" y="223.50"></text></g><g><title>libdispatch.dylib`dispatch_async_f (20 samples, 0.01%)</title><rect x="5.2233%" y="213" width="0.0123%" height="15" fill="rgb(227,97,0)" fg:x="8497" fg:w="20"/><text x="5.4733%" y="223.50"></text></g><g><title>libdispatch.dylib`firehose_buffer_ring_enqueue (17 samples, 0.01%)</title><rect x="5.4083%" y="149" width="0.0105%" height="15" fill="rgb(234,150,53)" fg:x="8798" fg:w="17"/><text x="5.6583%" y="159.50"></text></g><g><title>libdispatch.dylib`firehose_send_push_async (17 samples, 0.01%)</title><rect x="5.4083%" y="133" width="0.0105%" height="15" fill="rgb(228,201,54)" fg:x="8798" fg:w="17"/><text x="5.6583%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (17 samples, 0.01%)</title><rect x="5.4083%" y="117" width="0.0105%" height="15" fill="rgb(222,22,37)" fg:x="8798" fg:w="17"/><text x="5.6583%" y="127.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (88 samples, 0.05%)</title><rect x="5.3727%" y="165" width="0.0541%" height="15" fill="rgb(237,53,32)" fg:x="8740" fg:w="88"/><text x="5.6227%" y="175.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (253 samples, 0.16%)</title><rect x="5.2848%" y="197" width="0.1555%" height="15" fill="rgb(233,25,53)" fg:x="8597" fg:w="253"/><text x="5.5348%" y="207.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (210 samples, 0.13%)</title><rect x="5.3112%" y="181" width="0.1291%" height="15" fill="rgb(210,40,34)" fg:x="8640" fg:w="210"/><text x="5.5612%" y="191.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_unreliably_with_name_impl (289 samples, 0.18%)</title><rect x="5.2663%" y="213" width="0.1777%" height="15" fill="rgb(241,220,44)" fg:x="8567" fg:w="289"/><text x="5.5163%" y="223.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (3,428 samples, 2.11%)</title><rect x="3.3558%" y="229" width="2.1073%" height="15" fill="rgb(235,28,35)" fg:x="5459" fg:w="3428"/><text x="3.6058%" y="239.50">Q..</text></g><g><title>libsystem_trace.dylib`os_signpost_enabled (31 samples, 0.02%)</title><rect x="5.4440%" y="213" width="0.0191%" height="15" fill="rgb(210,56,17)" fg:x="8856" fg:w="31"/><text x="5.6940%" y="223.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (3,523 samples, 2.17%)</title><rect x="3.3367%" y="245" width="2.1657%" height="15" fill="rgb(224,130,29)" fg:x="5428" fg:w="3523"/><text x="3.5867%" y="255.50">Q..</text></g><g><title>QuartzCore`CA::Transaction::observer_callback (20 samples, 0.01%)</title><rect x="5.5024%" y="245" width="0.0123%" height="15" fill="rgb(235,212,8)" fg:x="8951" fg:w="20"/><text x="5.7524%" y="255.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (3,615 samples, 2.22%)</title><rect x="3.3097%" y="261" width="2.2222%" height="15" fill="rgb(223,33,50)" fg:x="5384" fg:w="3615"/><text x="3.5597%" y="271.50">C..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (17 samples, 0.01%)</title><rect x="5.5571%" y="261" width="0.0105%" height="15" fill="rgb(219,149,13)" fg:x="9040" fg:w="17"/><text x="5.8071%" y="271.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (17 samples, 0.01%)</title><rect x="5.5675%" y="261" width="0.0105%" height="15" fill="rgb(250,156,29)" fg:x="9057" fg:w="17"/><text x="5.8175%" y="271.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (3,867 samples, 2.38%)</title><rect x="3.2162%" y="277" width="2.3771%" height="15" fill="rgb(216,193,19)" fg:x="5232" fg:w="3867"/><text x="3.4662%" y="287.50">Co..</text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (28 samples, 0.02%)</title><rect x="5.6173%" y="245" width="0.0172%" height="15" fill="rgb(216,135,14)" fg:x="9138" fg:w="28"/><text x="5.8673%" y="255.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (39 samples, 0.02%)</title><rect x="5.6130%" y="261" width="0.0240%" height="15" fill="rgb(241,47,5)" fg:x="9131" fg:w="39"/><text x="5.8630%" y="271.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeIsEmpty (59 samples, 0.04%)</title><rect x="5.6026%" y="277" width="0.0363%" height="15" fill="rgb(233,42,35)" fg:x="9114" fg:w="59"/><text x="5.8526%" y="287.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetCurrent (62 samples, 0.04%)</title><rect x="5.7114%" y="261" width="0.0381%" height="15" fill="rgb(231,13,6)" fg:x="9291" fg:w="62"/><text x="5.9614%" y="271.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (31 samples, 0.02%)</title><rect x="5.7526%" y="261" width="0.0191%" height="15" fill="rgb(207,181,40)" fg:x="9358" fg:w="31"/><text x="6.0026%" y="271.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (17 samples, 0.01%)</title><rect x="5.8595%" y="245" width="0.0105%" height="15" fill="rgb(254,173,49)" fg:x="9532" fg:w="17"/><text x="6.1095%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (20 samples, 0.01%)</title><rect x="5.9198%" y="197" width="0.0123%" height="15" fill="rgb(221,1,38)" fg:x="9630" fg:w="20"/><text x="6.1698%" y="207.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt; &gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt; &gt; &gt; &gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (17 samples, 0.01%)</title><rect x="5.9394%" y="165" width="0.0105%" height="15" fill="rgb(206,124,46)" fg:x="9662" fg:w="17"/><text x="6.1894%" y="175.50"></text></g><g><title>libobjc.A.dylib`_object_remove_assocations (27 samples, 0.02%)</title><rect x="5.9358%" y="181" width="0.0166%" height="15" fill="rgb(249,21,11)" fg:x="9656" fg:w="27"/><text x="6.1858%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (44 samples, 0.03%)</title><rect x="5.9321%" y="197" width="0.0270%" height="15" fill="rgb(222,201,40)" fg:x="9650" fg:w="44"/><text x="6.1821%" y="207.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (71 samples, 0.04%)</title><rect x="5.9161%" y="213" width="0.0436%" height="15" fill="rgb(235,61,29)" fg:x="9624" fg:w="71"/><text x="6.1661%" y="223.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (104 samples, 0.06%)</title><rect x="5.9007%" y="229" width="0.0639%" height="15" fill="rgb(219,207,3)" fg:x="9599" fg:w="104"/><text x="6.1507%" y="239.50"></text></g><g><title>CoreFoundation`CFRunLoopObserverInvalidate (136 samples, 0.08%)</title><rect x="5.8921%" y="245" width="0.0836%" height="15" fill="rgb(222,56,46)" fg:x="9585" fg:w="136"/><text x="6.1421%" y="255.50"></text></g><g><title>CoreFoundation`_CFRelease (25 samples, 0.02%)</title><rect x="5.9831%" y="245" width="0.0154%" height="15" fill="rgb(239,76,54)" fg:x="9733" fg:w="25"/><text x="6.2331%" y="255.50"></text></g><g><title>AppKit`-[NSWindow _allowsActiveInputContext] (34 samples, 0.02%)</title><rect x="6.0526%" y="165" width="0.0209%" height="15" fill="rgb(231,124,27)" fg:x="9846" fg:w="34"/><text x="6.3026%" y="175.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (23 samples, 0.01%)</title><rect x="6.0778%" y="149" width="0.0141%" height="15" fill="rgb(249,195,6)" fg:x="9887" fg:w="23"/><text x="6.3278%" y="159.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (23 samples, 0.01%)</title><rect x="6.0778%" y="133" width="0.0141%" height="15" fill="rgb(237,174,47)" fg:x="9887" fg:w="23"/><text x="6.3278%" y="143.50"></text></g><g><title>AppKit`-[NSWindow firstResponder] (29 samples, 0.02%)</title><rect x="6.0753%" y="165" width="0.0178%" height="15" fill="rgb(206,201,31)" fg:x="9883" fg:w="29"/><text x="6.3253%" y="175.50"></text></g><g><title>libobjc.A.dylib`objc_getAssociatedObject (24 samples, 0.01%)</title><rect x="6.0999%" y="165" width="0.0148%" height="15" fill="rgb(231,57,52)" fg:x="9923" fg:w="24"/><text x="6.3499%" y="175.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (148 samples, 0.09%)</title><rect x="6.0390%" y="181" width="0.0910%" height="15" fill="rgb(248,177,22)" fg:x="9824" fg:w="148"/><text x="6.2890%" y="191.50"></text></g><g><title>CoreFoundation`CFEqual (41 samples, 0.03%)</title><rect x="6.2118%" y="69" width="0.0252%" height="15" fill="rgb(215,211,37)" fg:x="10105" fg:w="41"/><text x="6.4618%" y="79.50"></text></g><g><title>CoreFoundation`CFCachedStringEqual (64 samples, 0.04%)</title><rect x="6.2112%" y="85" width="0.0393%" height="15" fill="rgb(241,128,51)" fg:x="10104" fg:w="64"/><text x="6.4612%" y="95.50"></text></g><g><title>CoreFoundation`__CFStringEqual (22 samples, 0.01%)</title><rect x="6.2370%" y="69" width="0.0135%" height="15" fill="rgb(227,165,31)" fg:x="10146" fg:w="22"/><text x="6.4870%" y="79.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (88 samples, 0.05%)</title><rect x="6.2044%" y="101" width="0.0541%" height="15" fill="rgb(228,167,24)" fg:x="10093" fg:w="88"/><text x="6.4544%" y="111.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (95 samples, 0.06%)</title><rect x="6.2019%" y="117" width="0.0584%" height="15" fill="rgb(228,143,12)" fg:x="10089" fg:w="95"/><text x="6.4519%" y="127.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (115 samples, 0.07%)</title><rect x="6.1976%" y="133" width="0.0707%" height="15" fill="rgb(249,149,8)" fg:x="10082" fg:w="115"/><text x="6.4476%" y="143.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (132 samples, 0.08%)</title><rect x="6.1976%" y="149" width="0.0811%" height="15" fill="rgb(243,35,44)" fg:x="10082" fg:w="132"/><text x="6.4476%" y="159.50"></text></g><g><title>CoreFoundation`-[NSArray makeObjectsPerformSelector:] (183 samples, 0.11%)</title><rect x="6.1749%" y="165" width="0.1125%" height="15" fill="rgb(246,89,9)" fg:x="10045" fg:w="183"/><text x="6.4249%" y="175.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (34 samples, 0.02%)</title><rect x="6.3058%" y="165" width="0.0209%" height="15" fill="rgb(233,213,13)" fg:x="10258" fg:w="34"/><text x="6.5558%" y="175.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (17 samples, 0.01%)</title><rect x="6.3458%" y="165" width="0.0105%" height="15" fill="rgb(233,141,41)" fg:x="10323" fg:w="17"/><text x="6.5958%" y="175.50"></text></g><g><title>AppKit`-[NSApplication(NSWindowCache) _updateWindowsUsingCache] (388 samples, 0.24%)</title><rect x="6.1448%" y="181" width="0.2385%" height="15" fill="rgb(239,167,4)" fg:x="9996" fg:w="388"/><text x="6.3948%" y="191.50"></text></g><g><title>Foundation`-[NSConcreteNotification dealloc] (24 samples, 0.01%)</title><rect x="6.4288%" y="181" width="0.0148%" height="15" fill="rgb(209,217,16)" fg:x="10458" fg:w="24"/><text x="6.6788%" y="191.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:] (17 samples, 0.01%)</title><rect x="6.4527%" y="181" width="0.0105%" height="15" fill="rgb(219,88,35)" fg:x="10497" fg:w="17"/><text x="6.7027%" y="191.50"></text></g><g><title>CoreFoundation`CFEqual (55 samples, 0.03%)</title><rect x="6.5486%" y="101" width="0.0338%" height="15" fill="rgb(220,193,23)" fg:x="10653" fg:w="55"/><text x="6.7986%" y="111.50"></text></g><g><title>CoreFoundation`__CFStringEqual (23 samples, 0.01%)</title><rect x="6.5824%" y="101" width="0.0141%" height="15" fill="rgb(230,90,52)" fg:x="10708" fg:w="23"/><text x="6.8324%" y="111.50"></text></g><g><title>CoreFoundation`CFCachedStringEqual (80 samples, 0.05%)</title><rect x="6.5480%" y="117" width="0.0492%" height="15" fill="rgb(252,106,19)" fg:x="10652" fg:w="80"/><text x="6.7980%" y="127.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (141 samples, 0.09%)</title><rect x="6.5204%" y="133" width="0.0867%" height="15" fill="rgb(206,74,20)" fg:x="10607" fg:w="141"/><text x="6.7704%" y="143.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (211 samples, 0.13%)</title><rect x="6.4970%" y="149" width="0.1297%" height="15" fill="rgb(230,138,44)" fg:x="10569" fg:w="211"/><text x="6.7470%" y="159.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (283 samples, 0.17%)</title><rect x="6.4853%" y="165" width="0.1740%" height="15" fill="rgb(235,182,43)" fg:x="10550" fg:w="283"/><text x="6.7353%" y="175.50"></text></g><g><title>Foundation`-[NSConcreteNotification initWithName:object:userInfo:] (19 samples, 0.01%)</title><rect x="6.6716%" y="165" width="0.0117%" height="15" fill="rgb(242,16,51)" fg:x="10853" fg:w="19"/><text x="6.9216%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (24 samples, 0.01%)</title><rect x="6.6888%" y="101" width="0.0148%" height="15" fill="rgb(248,9,4)" fg:x="10881" fg:w="24"/><text x="6.9388%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (27 samples, 0.02%)</title><rect x="6.6876%" y="133" width="0.0166%" height="15" fill="rgb(210,31,22)" fg:x="10879" fg:w="27"/><text x="6.9376%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (25 samples, 0.02%)</title><rect x="6.6888%" y="117" width="0.0154%" height="15" fill="rgb(239,54,39)" fg:x="10881" fg:w="25"/><text x="6.9388%" y="127.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (29 samples, 0.02%)</title><rect x="6.6870%" y="149" width="0.0178%" height="15" fill="rgb(230,99,41)" fg:x="10878" fg:w="29"/><text x="6.9370%" y="159.50"></text></g><g><title>Foundation`NSAllocateObject (34 samples, 0.02%)</title><rect x="6.6845%" y="165" width="0.0209%" height="15" fill="rgb(253,106,12)" fg:x="10874" fg:w="34"/><text x="6.9345%" y="175.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (41 samples, 0.03%)</title><rect x="6.7097%" y="165" width="0.0252%" height="15" fill="rgb(213,46,41)" fg:x="10915" fg:w="41"/><text x="6.9597%" y="175.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (459 samples, 0.28%)</title><rect x="6.4632%" y="181" width="0.2822%" height="15" fill="rgb(215,133,35)" fg:x="10514" fg:w="459"/><text x="6.7132%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (116 samples, 0.07%)</title><rect x="6.7644%" y="181" width="0.0713%" height="15" fill="rgb(213,28,5)" fg:x="11004" fg:w="116"/><text x="7.0144%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_retain (21 samples, 0.01%)</title><rect x="6.8449%" y="181" width="0.0129%" height="15" fill="rgb(215,77,49)" fg:x="11135" fg:w="21"/><text x="7.0949%" y="191.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (1,357 samples, 0.83%)</title><rect x="6.0267%" y="197" width="0.8342%" height="15" fill="rgb(248,100,22)" fg:x="9804" fg:w="1357"/><text x="6.2767%" y="207.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectsInRange:] (20 samples, 0.01%)</title><rect x="6.8837%" y="181" width="0.0123%" height="15" fill="rgb(208,67,9)" fg:x="11198" fg:w="20"/><text x="7.1337%" y="191.50"></text></g><g><title>CoreFoundation`CFArrayGetFirstIndexOfValue (18 samples, 0.01%)</title><rect x="6.8978%" y="181" width="0.0111%" height="15" fill="rgb(219,133,21)" fg:x="11221" fg:w="18"/><text x="7.1478%" y="191.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (26 samples, 0.02%)</title><rect x="6.9255%" y="149" width="0.0160%" height="15" fill="rgb(246,46,29)" fg:x="11266" fg:w="26"/><text x="7.1755%" y="159.50"></text></g><g><title>CoreFoundation`CFSetGetValue (43 samples, 0.03%)</title><rect x="6.9242%" y="165" width="0.0264%" height="15" fill="rgb(246,185,52)" fg:x="11264" fg:w="43"/><text x="7.1742%" y="175.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (60 samples, 0.04%)</title><rect x="6.9205%" y="181" width="0.0369%" height="15" fill="rgb(252,136,11)" fg:x="11258" fg:w="60"/><text x="7.1705%" y="191.50"></text></g><g><title>CoreFoundation`CFRunLoopRemoveObserver (177 samples, 0.11%)</title><rect x="6.8751%" y="197" width="0.1088%" height="15" fill="rgb(219,138,53)" fg:x="11184" fg:w="177"/><text x="7.1251%" y="207.50"></text></g><g><title>CoreFoundation`_CFXNotificationRegistrarFindName (39 samples, 0.02%)</title><rect x="7.0121%" y="149" width="0.0240%" height="15" fill="rgb(211,51,23)" fg:x="11407" fg:w="39"/><text x="7.2621%" y="159.50"></text></g><g><title>CoreFoundation`CFXNotificationRegistrarFind (50 samples, 0.03%)</title><rect x="7.0091%" y="165" width="0.0307%" height="15" fill="rgb(247,221,28)" fg:x="11402" fg:w="50"/><text x="7.2591%" y="175.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (70 samples, 0.04%)</title><rect x="7.0060%" y="181" width="0.0430%" height="15" fill="rgb(251,222,45)" fg:x="11397" fg:w="70"/><text x="7.2560%" y="191.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (92 samples, 0.06%)</title><rect x="7.0017%" y="197" width="0.0566%" height="15" fill="rgb(217,162,53)" fg:x="11390" fg:w="92"/><text x="7.2517%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (20 samples, 0.01%)</title><rect x="7.0669%" y="181" width="0.0123%" height="15" fill="rgb(229,93,14)" fg:x="11496" fg:w="20"/><text x="7.3169%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (33 samples, 0.02%)</title><rect x="7.0613%" y="197" width="0.0203%" height="15" fill="rgb(209,67,49)" fg:x="11487" fg:w="33"/><text x="7.3113%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (89 samples, 0.05%)</title><rect x="7.0822%" y="197" width="0.0547%" height="15" fill="rgb(213,87,29)" fg:x="11521" fg:w="89"/><text x="7.3322%" y="207.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (1,829 samples, 1.12%)</title><rect x="6.0181%" y="213" width="1.1243%" height="15" fill="rgb(205,151,52)" fg:x="9790" fg:w="1829"/><text x="6.2681%" y="223.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (19 samples, 0.01%)</title><rect x="7.1437%" y="181" width="0.0117%" height="15" fill="rgb(253,215,39)" fg:x="11621" fg:w="19"/><text x="7.3937%" y="191.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (27 samples, 0.02%)</title><rect x="7.1425%" y="213" width="0.0166%" height="15" fill="rgb(221,220,41)" fg:x="11619" fg:w="27"/><text x="7.3925%" y="223.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (25 samples, 0.02%)</title><rect x="7.1437%" y="197" width="0.0154%" height="15" fill="rgb(218,133,21)" fg:x="11621" fg:w="25"/><text x="7.3937%" y="207.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (1,901 samples, 1.17%)</title><rect x="6.0095%" y="229" width="1.1686%" height="15" fill="rgb(221,193,43)" fg:x="9776" fg:w="1901"/><text x="6.2595%" y="239.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events::_{{closure}} (29 samples, 0.02%)</title><rect x="7.2285%" y="165" width="0.0178%" height="15" fill="rgb(240,128,52)" fg:x="11759" fg:w="29"/><text x="7.4785%" y="175.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (49 samples, 0.03%)</title><rect x="7.2199%" y="181" width="0.0301%" height="15" fill="rgb(253,114,12)" fg:x="11745" fg:w="49"/><text x="7.4699%" y="191.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (74 samples, 0.05%)</title><rect x="7.2150%" y="197" width="0.0455%" height="15" fill="rgb(215,223,47)" fg:x="11737" fg:w="74"/><text x="7.4650%" y="207.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::wakeup (131 samples, 0.08%)</title><rect x="7.1892%" y="213" width="0.0805%" height="15" fill="rgb(248,225,23)" fg:x="11695" fg:w="131"/><text x="7.4392%" y="223.50"></text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_begin_handler (146 samples, 0.09%)</title><rect x="7.1830%" y="229" width="0.0897%" height="15" fill="rgb(250,108,0)" fg:x="11685" fg:w="146"/><text x="7.4330%" y="239.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) postEvent:atStart:] (21 samples, 0.01%)</title><rect x="7.2882%" y="197" width="0.0129%" height="15" fill="rgb(228,208,7)" fg:x="11856" fg:w="21"/><text x="7.5382%" y="207.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_user_events (20 samples, 0.01%)</title><rect x="7.3066%" y="197" width="0.0123%" height="15" fill="rgb(244,45,10)" fg:x="11886" fg:w="20"/><text x="7.5566%" y="207.50"></text></g><g><title>AppKit` (22 samples, 0.01%)</title><rect x="7.3761%" y="181" width="0.0135%" height="15" fill="rgb(207,125,25)" fg:x="11999" fg:w="22"/><text x="7.6261%" y="191.50"></text></g><g><title>Foundation`NSKVOCopyPendingNotificationStack (27 samples, 0.02%)</title><rect x="7.4345%" y="149" width="0.0166%" height="15" fill="rgb(210,195,18)" fg:x="12094" fg:w="27"/><text x="7.6845%" y="159.50"></text></g><g><title>Foundation`NSKeyValueDidChangeWithPerThreadPendingNotifications (50 samples, 0.03%)</title><rect x="7.4246%" y="165" width="0.0307%" height="15" fill="rgb(249,80,12)" fg:x="12078" fg:w="50"/><text x="7.6746%" y="175.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (35 samples, 0.02%)</title><rect x="7.4842%" y="133" width="0.0215%" height="15" fill="rgb(221,65,9)" fg:x="12175" fg:w="35"/><text x="7.7342%" y="143.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (25 samples, 0.02%)</title><rect x="7.4904%" y="117" width="0.0154%" height="15" fill="rgb(235,49,36)" fg:x="12185" fg:w="25"/><text x="7.7404%" y="127.50"></text></g><g><title>Foundation`_NSKeyValueRetainedObservationInfoForObject (45 samples, 0.03%)</title><rect x="7.4793%" y="149" width="0.0277%" height="15" fill="rgb(225,32,20)" fg:x="12167" fg:w="45"/><text x="7.7293%" y="159.50"></text></g><g><title>Foundation`NSKeyValueWillChangeWithPerThreadPendingNotifications (111 samples, 0.07%)</title><rect x="7.4554%" y="165" width="0.0682%" height="15" fill="rgb(215,141,46)" fg:x="12128" fg:w="111"/><text x="7.7054%" y="175.50"></text></g><g><title>Foundation`__chkstk_darwin (18 samples, 0.01%)</title><rect x="7.5254%" y="165" width="0.0111%" height="15" fill="rgb(250,160,47)" fg:x="12242" fg:w="18"/><text x="7.7754%" y="175.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_recursive_lock_lock_with_options (23 samples, 0.01%)</title><rect x="7.5445%" y="165" width="0.0141%" height="15" fill="rgb(216,222,40)" fg:x="12273" fg:w="23"/><text x="7.7945%" y="175.50"></text></g><g><title>AppKit`-[NSApplication stop:] (271 samples, 0.17%)</title><rect x="7.3957%" y="181" width="0.1666%" height="15" fill="rgb(234,217,39)" fg:x="12031" fg:w="271"/><text x="7.6457%" y="191.50"></text></g><g><title>AppKit`-[NSEvent CGEvent] (24 samples, 0.01%)</title><rect x="7.5869%" y="165" width="0.0148%" height="15" fill="rgb(207,178,40)" fg:x="12342" fg:w="24"/><text x="7.8369%" y="175.50"></text></g><g><title>AppKit`+[_NSScreenConfiguration latestZeroScreenHeight] (28 samples, 0.02%)</title><rect x="7.6674%" y="133" width="0.0172%" height="15" fill="rgb(221,136,13)" fg:x="12473" fg:w="28"/><text x="7.9174%" y="143.50"></text></g><g><title>libobjc.A.dylib`object_getIndexedIvars (26 samples, 0.02%)</title><rect x="7.7099%" y="117" width="0.0160%" height="15" fill="rgb(249,199,10)" fg:x="12542" fg:w="26"/><text x="7.9599%" y="127.50"></text></g><g><title>AppKit`-[NSEvent window] (70 samples, 0.04%)</title><rect x="7.6846%" y="133" width="0.0430%" height="15" fill="rgb(249,222,13)" fg:x="12501" fg:w="70"/><text x="7.9346%" y="143.50"></text></g><g><title>SkyLight`CGSEventSourceForID (29 samples, 0.02%)</title><rect x="7.7824%" y="117" width="0.0178%" height="15" fill="rgb(244,185,38)" fg:x="12660" fg:w="29"/><text x="8.0324%" y="127.50"></text></g><g><title>SkyLight`CGSScoreboard (20 samples, 0.01%)</title><rect x="7.7879%" y="101" width="0.0123%" height="15" fill="rgb(236,202,9)" fg:x="12669" fg:w="20"/><text x="8.0379%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (21 samples, 0.01%)</title><rect x="7.8094%" y="101" width="0.0129%" height="15" fill="rgb(250,229,37)" fg:x="12704" fg:w="21"/><text x="8.0594%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (18 samples, 0.01%)</title><rect x="7.8113%" y="85" width="0.0111%" height="15" fill="rgb(206,174,23)" fg:x="12707" fg:w="18"/><text x="8.0613%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.01%)</title><rect x="7.8113%" y="69" width="0.0111%" height="15" fill="rgb(211,33,43)" fg:x="12707" fg:w="18"/><text x="8.0613%" y="79.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (22 samples, 0.01%)</title><rect x="7.8094%" y="117" width="0.0135%" height="15" fill="rgb(245,58,50)" fg:x="12704" fg:w="22"/><text x="8.0594%" y="127.50"></text></g><g><title>SkyLight`SLEventCreate (125 samples, 0.08%)</title><rect x="7.7510%" y="133" width="0.0768%" height="15" fill="rgb(244,68,36)" fg:x="12609" fg:w="125"/><text x="8.0010%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (32 samples, 0.02%)</title><rect x="7.8795%" y="69" width="0.0197%" height="15" fill="rgb(232,229,15)" fg:x="12818" fg:w="32"/><text x="8.1295%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (30 samples, 0.02%)</title><rect x="7.8807%" y="53" width="0.0184%" height="15" fill="rgb(254,30,23)" fg:x="12820" fg:w="30"/><text x="8.1307%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (29 samples, 0.02%)</title><rect x="7.8814%" y="37" width="0.0178%" height="15" fill="rgb(235,160,14)" fg:x="12821" fg:w="29"/><text x="8.1314%" y="47.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (63 samples, 0.04%)</title><rect x="7.8684%" y="85" width="0.0387%" height="15" fill="rgb(212,155,44)" fg:x="12800" fg:w="63"/><text x="8.1184%" y="95.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (67 samples, 0.04%)</title><rect x="7.8678%" y="101" width="0.0412%" height="15" fill="rgb(226,2,50)" fg:x="12799" fg:w="67"/><text x="8.1178%" y="111.50"></text></g><g><title>SkyLight`SLEventRecordSetIntegerValue(SLSEventRecord*, CGEventField, long long) (141 samples, 0.09%)</title><rect x="7.8279%" y="133" width="0.0867%" height="15" fill="rgb(234,177,6)" fg:x="12734" fg:w="141"/><text x="8.0779%" y="143.50"></text></g><g><title>SkyLight`CGSEventAppendixCreate (77 samples, 0.05%)</title><rect x="7.8672%" y="117" width="0.0473%" height="15" fill="rgb(217,24,9)" fg:x="12798" fg:w="77"/><text x="8.1172%" y="127.50"></text></g><g><title>SkyLight`SLSMainConnectionID (20 samples, 0.01%)</title><rect x="7.9244%" y="133" width="0.0123%" height="15" fill="rgb(220,13,46)" fg:x="12891" fg:w="20"/><text x="8.1744%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (22 samples, 0.01%)</title><rect x="7.9699%" y="85" width="0.0135%" height="15" fill="rgb(239,221,27)" fg:x="12965" fg:w="22"/><text x="8.2199%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (19 samples, 0.01%)</title><rect x="7.9717%" y="69" width="0.0117%" height="15" fill="rgb(222,198,25)" fg:x="12968" fg:w="19"/><text x="8.2217%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (18 samples, 0.01%)</title><rect x="7.9723%" y="53" width="0.0111%" height="15" fill="rgb(211,99,13)" fg:x="12969" fg:w="18"/><text x="8.2223%" y="63.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (71 samples, 0.04%)</title><rect x="7.9416%" y="101" width="0.0436%" height="15" fill="rgb(232,111,31)" fg:x="12919" fg:w="71"/><text x="8.1916%" y="111.50"></text></g><g><title>SkyLight`SLTypeCreateInstance (76 samples, 0.05%)</title><rect x="7.9404%" y="117" width="0.0467%" height="15" fill="rgb(245,82,37)" fg:x="12917" fg:w="76"/><text x="8.1904%" y="127.50"></text></g><g><title>SkyLight`_SLEventCreate(SLSEventRecord*) (89 samples, 0.05%)</title><rect x="7.9367%" y="133" width="0.0547%" height="15" fill="rgb(227,149,46)" fg:x="12911" fg:w="89"/><text x="8.1867%" y="143.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (34 samples, 0.02%)</title><rect x="8.0025%" y="133" width="0.0209%" height="15" fill="rgb(218,36,50)" fg:x="13018" fg:w="34"/><text x="8.2525%" y="143.50"></text></g><g><title>AppKit`-[NSEvent CGEvent] (657 samples, 0.40%)</title><rect x="7.6262%" y="149" width="0.4039%" height="15" fill="rgb(226,80,48)" fg:x="12406" fg:w="657"/><text x="7.8762%" y="159.50"></text></g><g><title>HIToolbox`CreateEvent (40 samples, 0.02%)</title><rect x="8.0854%" y="133" width="0.0246%" height="15" fill="rgb(238,224,15)" fg:x="13153" fg:w="40"/><text x="8.3354%" y="143.50"></text></g><g><title>SkyLight`SLEventGetIntegerValueField (21 samples, 0.01%)</title><rect x="8.1186%" y="133" width="0.0129%" height="15" fill="rgb(241,136,10)" fg:x="13207" fg:w="21"/><text x="8.3686%" y="143.50"></text></g><g><title>HIToolbox`CreateEventWithCGEvent (130 samples, 0.08%)</title><rect x="8.0559%" y="149" width="0.0799%" height="15" fill="rgb(208,32,45)" fg:x="13105" fg:w="130"/><text x="8.3059%" y="159.50"></text></g><g><title>SkyLight`SLEventCreate (22 samples, 0.01%)</title><rect x="8.1445%" y="149" width="0.0135%" height="15" fill="rgb(207,135,9)" fg:x="13249" fg:w="22"/><text x="8.3945%" y="159.50"></text></g><g><title>SkyLight`SLEventSetType (19 samples, 0.01%)</title><rect x="8.1844%" y="149" width="0.0117%" height="15" fill="rgb(206,86,44)" fg:x="13314" fg:w="19"/><text x="8.4344%" y="159.50"></text></g><g><title>SkyLight`SLSMainConnectionID (25 samples, 0.02%)</title><rect x="8.1979%" y="149" width="0.0154%" height="15" fill="rgb(245,177,15)" fg:x="13336" fg:w="25"/><text x="8.4479%" y="159.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (89 samples, 0.05%)</title><rect x="8.2274%" y="149" width="0.0547%" height="15" fill="rgb(206,64,50)" fg:x="13384" fg:w="89"/><text x="8.4774%" y="159.50"></text></g><g><title>AppKit`-[NSEvent _eventRefInternal] (1,109 samples, 0.68%)</title><rect x="7.6017%" y="165" width="0.6817%" height="15" fill="rgb(234,36,40)" fg:x="12366" fg:w="1109"/><text x="7.8517%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (235 samples, 0.14%)</title><rect x="8.3344%" y="149" width="0.1445%" height="15" fill="rgb(213,64,8)" fg:x="13558" fg:w="235"/><text x="8.5844%" y="159.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (278 samples, 0.17%)</title><rect x="8.3123%" y="165" width="0.1709%" height="15" fill="rgb(210,75,36)" fg:x="13522" fg:w="278"/><text x="8.5623%" y="175.50"></text></g><g><title>HIToolbox`CreateEventWithCGEvent (17 samples, 0.01%)</title><rect x="8.4893%" y="165" width="0.0105%" height="15" fill="rgb(229,88,21)" fg:x="13810" fg:w="17"/><text x="8.7393%" y="175.50"></text></g><g><title>CoreFoundation`CFRunLoopSourceSignal (20 samples, 0.01%)</title><rect x="8.5397%" y="149" width="0.0123%" height="15" fill="rgb(252,204,47)" fg:x="13892" fg:w="20"/><text x="8.7897%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1,872 samples, 1.15%)</title><rect x="8.5785%" y="133" width="1.1508%" height="15" fill="rgb(208,77,27)" fg:x="13955" fg:w="1872"/><text x="8.8285%" y="143.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (1,925 samples, 1.18%)</title><rect x="8.5520%" y="149" width="1.1833%" height="15" fill="rgb(221,76,26)" fg:x="13912" fg:w="1925"/><text x="8.8020%" y="159.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (49 samples, 0.03%)</title><rect x="9.7624%" y="149" width="0.0301%" height="15" fill="rgb(225,139,18)" fg:x="15881" fg:w="49"/><text x="10.0124%" y="159.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (2,090 samples, 1.28%)</title><rect x="8.5256%" y="165" width="1.2848%" height="15" fill="rgb(230,137,11)" fg:x="13869" fg:w="2090"/><text x="8.7756%" y="175.50"></text></g><g><title>AppKit`-[NSEvent _postAtStart:] (3,672 samples, 2.26%)</title><rect x="7.5679%" y="181" width="2.2573%" height="15" fill="rgb(212,28,1)" fg:x="12311" fg:w="3672"/><text x="7.8179%" y="191.50">A..</text></g><g><title>App`glutin_window::GlutinWindow::poll_events::_{{closure}} (35 samples, 0.02%)</title><rect x="9.8663%" y="165" width="0.0215%" height="15" fill="rgb(248,164,17)" fg:x="16050" fg:w="35"/><text x="10.1163%" y="175.50"></text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (53 samples, 0.03%)</title><rect x="9.8909%" y="165" width="0.0326%" height="15" fill="rgb(222,171,42)" fg:x="16090" fg:w="53"/><text x="10.1409%" y="175.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_user_events (136 samples, 0.08%)</title><rect x="9.8448%" y="181" width="0.0836%" height="15" fill="rgb(243,84,45)" fg:x="16015" fg:w="136"/><text x="10.0948%" y="191.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::events (19 samples, 0.01%)</title><rect x="9.9407%" y="181" width="0.0117%" height="15" fill="rgb(252,49,23)" fg:x="16171" fg:w="19"/><text x="10.1907%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (20 samples, 0.01%)</title><rect x="9.9536%" y="165" width="0.0123%" height="15" fill="rgb(215,19,7)" fg:x="16192" fg:w="20"/><text x="10.2036%" y="175.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::get_old_and_new_control_flow (25 samples, 0.02%)</title><rect x="9.9524%" y="181" width="0.0154%" height="15" fill="rgb(238,81,41)" fg:x="16190" fg:w="25"/><text x="10.2024%" y="191.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::_&lt;impl winit::event::Event&lt;Never&gt;&gt;::userify (34 samples, 0.02%)</title><rect x="10.0065%" y="149" width="0.0209%" height="15" fill="rgb(210,199,37)" fg:x="16278" fg:w="34"/><text x="10.2565%" y="159.50"></text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (69 samples, 0.04%)</title><rect x="9.9862%" y="165" width="0.0424%" height="15" fill="rgb(244,192,49)" fg:x="16245" fg:w="69"/><text x="10.2362%" y="175.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (121 samples, 0.07%)</title><rect x="9.9677%" y="181" width="0.0744%" height="15" fill="rgb(226,211,11)" fg:x="16215" fg:w="121"/><text x="10.2177%" y="191.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::application::NSApp (31 samples, 0.02%)</title><rect x="10.0501%" y="181" width="0.0191%" height="15" fill="rgb(236,162,54)" fg:x="16349" fg:w="31"/><text x="10.3001%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (28 samples, 0.02%)</title><rect x="10.0907%" y="101" width="0.0172%" height="15" fill="rgb(220,229,9)" fg:x="16415" fg:w="28"/><text x="10.3407%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (33 samples, 0.02%)</title><rect x="10.0882%" y="133" width="0.0203%" height="15" fill="rgb(250,87,22)" fg:x="16411" fg:w="33"/><text x="10.3382%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (29 samples, 0.02%)</title><rect x="10.0907%" y="117" width="0.0178%" height="15" fill="rgb(239,43,17)" fg:x="16415" fg:w="29"/><text x="10.3407%" y="127.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (39 samples, 0.02%)</title><rect x="10.0851%" y="149" width="0.0240%" height="15" fill="rgb(231,177,25)" fg:x="16406" fg:w="39"/><text x="10.3351%" y="159.50"></text></g><g><title>AppKit`+[NSEvent otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:] (74 samples, 0.05%)</title><rect x="10.0722%" y="165" width="0.0455%" height="15" fill="rgb(219,179,1)" fg:x="16385" fg:w="74"/><text x="10.3222%" y="175.50"></text></g><g><title>App`winit::platform_impl::platform::appkit::event::NSEvent::dummy (126 samples, 0.08%)</title><rect x="10.0692%" y="181" width="0.0775%" height="15" fill="rgb(238,219,53)" fg:x="16380" fg:w="126"/><text x="10.3192%" y="191.50"></text></g><g><title>HIToolbox`PostEventToQueueInternal (25 samples, 0.02%)</title><rect x="10.1823%" y="181" width="0.0154%" height="15" fill="rgb(232,167,36)" fg:x="16564" fg:w="25"/><text x="10.4323%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (38 samples, 0.02%)</title><rect x="10.2327%" y="117" width="0.0234%" height="15" fill="rgb(244,19,51)" fg:x="16646" fg:w="38"/><text x="10.4827%" y="127.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (37 samples, 0.02%)</title><rect x="10.2333%" y="101" width="0.0227%" height="15" fill="rgb(224,6,22)" fg:x="16647" fg:w="37"/><text x="10.4833%" y="111.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (44 samples, 0.03%)</title><rect x="10.2321%" y="133" width="0.0270%" height="15" fill="rgb(224,145,5)" fg:x="16645" fg:w="44"/><text x="10.4821%" y="143.50"></text></g><g><title>AppKit`-[NSEvent dealloc] (92 samples, 0.06%)</title><rect x="10.2173%" y="149" width="0.0566%" height="15" fill="rgb(234,130,49)" fg:x="16621" fg:w="92"/><text x="10.4673%" y="159.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (25 samples, 0.02%)</title><rect x="10.2898%" y="149" width="0.0154%" height="15" fill="rgb(254,6,2)" fg:x="16739" fg:w="25"/><text x="10.5398%" y="159.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (151 samples, 0.09%)</title><rect x="10.2161%" y="165" width="0.0928%" height="15" fill="rgb(208,96,46)" fg:x="16619" fg:w="151"/><text x="10.4661%" y="175.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (209 samples, 0.13%)</title><rect x="10.1976%" y="181" width="0.1285%" height="15" fill="rgb(239,3,39)" fg:x="16589" fg:w="209"/><text x="10.4476%" y="191.50"></text></g><g><title>libobjc.A.dylib`objc_release (17 samples, 0.01%)</title><rect x="10.3157%" y="165" width="0.0105%" height="15" fill="rgb(233,210,1)" fg:x="16781" fg:w="17"/><text x="10.5657%" y="175.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (103 samples, 0.06%)</title><rect x="10.3261%" y="181" width="0.0633%" height="15" fill="rgb(244,137,37)" fg:x="16798" fg:w="103"/><text x="10.5761%" y="191.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (33 samples, 0.02%)</title><rect x="10.4030%" y="181" width="0.0203%" height="15" fill="rgb(240,136,2)" fg:x="16923" fg:w="33"/><text x="10.6530%" y="191.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::cleared (5,045 samples, 3.10%)</title><rect x="7.3293%" y="197" width="3.1013%" height="15" fill="rgb(239,18,37)" fg:x="11923" fg:w="5045"/><text x="7.5793%" y="207.50">App..</text></g><g><title>libobjc.A.dylib`objc_msgSend (28 samples, 0.02%)</title><rect x="10.4503%" y="197" width="0.0172%" height="15" fill="rgb(218,185,22)" fg:x="17000" fg:w="28"/><text x="10.7003%" y="207.50"></text></g><g><title>libobjc.A.dylib`objc_release (19 samples, 0.01%)</title><rect x="10.4675%" y="197" width="0.0117%" height="15" fill="rgb(225,218,4)" fg:x="17028" fg:w="19"/><text x="10.7175%" y="207.50"></text></g><g><title>App`std::panicking::try (5,221 samples, 3.21%)</title><rect x="7.2802%" y="213" width="3.2095%" height="15" fill="rgb(230,182,32)" fg:x="11843" fg:w="5221"/><text x="7.5302%" y="223.50">App..</text></g><g><title>App`winit::platform_impl::platform::observer::control_flow_end_handler (5,254 samples, 3.23%)</title><rect x="7.2728%" y="229" width="3.2298%" height="15" fill="rgb(242,56,43)" fg:x="11831" fg:w="5254"/><text x="7.5228%" y="239.50">App..</text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::cleared (21 samples, 0.01%)</title><rect x="10.4896%" y="213" width="0.0129%" height="15" fill="rgb(233,99,24)" fg:x="17064" fg:w="21"/><text x="10.7396%" y="223.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (7,353 samples, 4.52%)</title><rect x="6.0028%" y="245" width="4.5201%" height="15" fill="rgb(234,209,42)" fg:x="9765" fg:w="7353"/><text x="6.2528%" y="255.50">CoreF..</text></g><g><title>CoreFoundation`__CFRunLoopPerCalloutARPEnd (17 samples, 0.01%)</title><rect x="10.5234%" y="245" width="0.0105%" height="15" fill="rgb(227,7,12)" fg:x="17119" fg:w="17"/><text x="10.7734%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (17 samples, 0.01%)</title><rect x="10.5462%" y="245" width="0.0105%" height="15" fill="rgb(245,203,43)" fg:x="17156" fg:w="17"/><text x="10.7962%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (20 samples, 0.01%)</title><rect x="10.5609%" y="245" width="0.0123%" height="15" fill="rgb(238,205,33)" fg:x="17180" fg:w="20"/><text x="10.8109%" y="255.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (25 samples, 0.02%)</title><rect x="10.5732%" y="245" width="0.0154%" height="15" fill="rgb(231,56,7)" fg:x="17200" fg:w="25"/><text x="10.8232%" y="255.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (7,778 samples, 4.78%)</title><rect x="5.8196%" y="261" width="4.7813%" height="15" fill="rgb(244,186,29)" fg:x="9467" fg:w="7778"/><text x="6.0696%" y="271.50">CoreFo..</text></g><g><title>CoreFoundation`CFBasicHashGetBucket (19 samples, 0.01%)</title><rect x="10.6163%" y="213" width="0.0117%" height="15" fill="rgb(234,111,31)" fg:x="17270" fg:w="19"/><text x="10.8663%" y="223.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (116 samples, 0.07%)</title><rect x="10.6107%" y="229" width="0.0713%" height="15" fill="rgb(241,149,10)" fg:x="17261" fg:w="116"/><text x="10.8607%" y="239.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (84 samples, 0.05%)</title><rect x="10.6304%" y="213" width="0.0516%" height="15" fill="rgb(249,206,44)" fg:x="17293" fg:w="84"/><text x="10.8804%" y="223.50"></text></g><g><title>CoreFoundation`__CFRunLoopCollectSources0 (82 samples, 0.05%)</title><rect x="10.6316%" y="197" width="0.0504%" height="15" fill="rgb(251,153,30)" fg:x="17295" fg:w="82"/><text x="10.8816%" y="207.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (123 samples, 0.08%)</title><rect x="10.6070%" y="245" width="0.0756%" height="15" fill="rgb(239,152,38)" fg:x="17255" fg:w="123"/><text x="10.8570%" y="255.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource0 (19 samples, 0.01%)</title><rect x="10.6826%" y="245" width="0.0117%" height="15" fill="rgb(249,139,47)" fg:x="17378" fg:w="19"/><text x="10.9326%" y="255.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSources0 (161 samples, 0.10%)</title><rect x="10.6009%" y="261" width="0.0990%" height="15" fill="rgb(244,64,35)" fg:x="17245" fg:w="161"/><text x="10.8509%" y="271.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (55 samples, 0.03%)</title><rect x="10.7251%" y="245" width="0.0338%" height="15" fill="rgb(216,46,15)" fg:x="17447" fg:w="55"/><text x="10.9751%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (18 samples, 0.01%)</title><rect x="10.7712%" y="229" width="0.0111%" height="15" fill="rgb(250,74,19)" fg:x="17522" fg:w="18"/><text x="11.0212%" y="239.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (55 samples, 0.03%)</title><rect x="10.7589%" y="245" width="0.0338%" height="15" fill="rgb(249,42,33)" fg:x="17502" fg:w="55"/><text x="11.0089%" y="255.50"></text></g><g><title>CoreFoundation`_CFArrayCheckAndGetValueAtIndex (23 samples, 0.01%)</title><rect x="10.8253%" y="245" width="0.0141%" height="15" fill="rgb(242,149,17)" fg:x="17610" fg:w="23"/><text x="11.0753%" y="255.50"></text></g><g><title>CoreFoundation`CFRetain (31 samples, 0.02%)</title><rect x="11.3810%" y="229" width="0.0191%" height="15" fill="rgb(244,29,21)" fg:x="18514" fg:w="31"/><text x="11.6310%" y="239.50"></text></g><g><title>CoreFoundation`_CFRelease (20 samples, 0.01%)</title><rect x="11.4074%" y="229" width="0.0123%" height="15" fill="rgb(220,130,37)" fg:x="18557" fg:w="20"/><text x="11.6574%" y="239.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (47 samples, 0.03%)</title><rect x="11.4215%" y="229" width="0.0289%" height="15" fill="rgb(211,67,2)" fg:x="18580" fg:w="47"/><text x="11.6715%" y="239.50"></text></g><g><title>CoreFoundation`CFArrayGetFirstIndexOfValue (22 samples, 0.01%)</title><rect x="11.4566%" y="213" width="0.0135%" height="15" fill="rgb(235,68,52)" fg:x="18637" fg:w="22"/><text x="11.7066%" y="223.50"></text></g><g><title>CoreFoundation`__CFArrayReleaseValues (32 samples, 0.02%)</title><rect x="11.5008%" y="197" width="0.0197%" height="15" fill="rgb(246,142,3)" fg:x="18709" fg:w="32"/><text x="11.7508%" y="207.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (74 samples, 0.05%)</title><rect x="11.4812%" y="213" width="0.0455%" height="15" fill="rgb(241,25,7)" fg:x="18677" fg:w="74"/><text x="11.7312%" y="223.50"></text></g><g><title>CoreFoundation`__CFArmNextTimerInMode (31 samples, 0.02%)</title><rect x="11.5285%" y="213" width="0.0191%" height="15" fill="rgb(242,119,39)" fg:x="18754" fg:w="31"/><text x="11.7785%" y="223.50"></text></g><g><title>CoreFoundation`__CFRunLoopInsertionIndexInTimerArray (20 samples, 0.01%)</title><rect x="11.5500%" y="213" width="0.0123%" height="15" fill="rgb(241,98,45)" fg:x="18789" fg:w="20"/><text x="11.8000%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (509 samples, 0.31%)</title><rect x="11.5703%" y="213" width="0.3129%" height="15" fill="rgb(254,28,30)" fg:x="18822" fg:w="509"/><text x="11.8203%" y="223.50"></text></g><g><title>CoreFoundation`__CFRepositionTimerInMode (723 samples, 0.44%)</title><rect x="11.4504%" y="229" width="0.4444%" height="15" fill="rgb(241,142,54)" fg:x="18627" fg:w="723"/><text x="11.7004%" y="239.50"></text></g><g><title>libsystem_platform.dylib`flsl (18 samples, 0.01%)</title><rect x="11.8838%" y="213" width="0.0111%" height="15" fill="rgb(222,85,15)" fg:x="19332" fg:w="18"/><text x="12.1338%" y="223.50"></text></g><g><title>CoreFoundation`CFEqual (27 samples, 0.02%)</title><rect x="11.9207%" y="181" width="0.0166%" height="15" fill="rgb(210,85,47)" fg:x="19392" fg:w="27"/><text x="12.1707%" y="191.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (73 samples, 0.04%)</title><rect x="11.9059%" y="197" width="0.0449%" height="15" fill="rgb(224,206,25)" fg:x="19368" fg:w="73"/><text x="12.1559%" y="207.50"></text></g><g><title>CoreFoundation`CFHash (22 samples, 0.01%)</title><rect x="11.9373%" y="181" width="0.0135%" height="15" fill="rgb(243,201,19)" fg:x="19419" fg:w="22"/><text x="12.1873%" y="191.50"></text></g><g><title>CoreFoundation`CFSetGetValue (135 samples, 0.08%)</title><rect x="11.9035%" y="213" width="0.0830%" height="15" fill="rgb(236,59,4)" fg:x="19364" fg:w="135"/><text x="12.1535%" y="223.50"></text></g><g><title>CoreFoundation`__CFStringHash (55 samples, 0.03%)</title><rect x="11.9527%" y="197" width="0.0338%" height="15" fill="rgb(254,179,45)" fg:x="19444" fg:w="55"/><text x="12.2027%" y="207.50"></text></g><g><title>CoreFoundation`_CFRuntimeSetInstanceTypeIDAndIsa (17 samples, 0.01%)</title><rect x="11.9877%" y="213" width="0.0105%" height="15" fill="rgb(226,14,10)" fg:x="19501" fg:w="17"/><text x="12.2377%" y="223.50"></text></g><g><title>CoreFoundation`__CFRunLoopCopyMode (174 samples, 0.11%)</title><rect x="11.8949%" y="229" width="0.1070%" height="15" fill="rgb(244,27,41)" fg:x="19350" fg:w="174"/><text x="12.1449%" y="239.50"></text></g><g><title>CoreFoundation`__CFTSRToNanoseconds (20 samples, 0.01%)</title><rect x="12.0043%" y="229" width="0.0123%" height="15" fill="rgb(235,35,32)" fg:x="19528" fg:w="20"/><text x="12.2543%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`mk_timer_arm (180 samples, 0.11%)</title><rect x="12.0387%" y="229" width="0.1107%" height="15" fill="rgb(218,68,31)" fg:x="19584" fg:w="180"/><text x="12.2887%" y="239.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (24 samples, 0.01%)</title><rect x="12.1555%" y="229" width="0.0148%" height="15" fill="rgb(207,120,37)" fg:x="19774" fg:w="24"/><text x="12.4055%" y="239.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (2,163 samples, 1.33%)</title><rect x="10.8505%" y="245" width="1.3296%" height="15" fill="rgb(227,98,0)" fg:x="17651" fg:w="2163"/><text x="11.1005%" y="255.50"></text></g><g><title>CoreFoundation`__CFTimeIntervalUntilTSR (18 samples, 0.01%)</title><rect x="12.1813%" y="245" width="0.0111%" height="15" fill="rgb(207,7,3)" fg:x="19816" fg:w="18"/><text x="12.4313%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (27 samples, 0.02%)</title><rect x="12.1986%" y="197" width="0.0166%" height="15" fill="rgb(206,98,19)" fg:x="19844" fg:w="27"/><text x="12.4486%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (22 samples, 0.01%)</title><rect x="12.2016%" y="181" width="0.0135%" height="15" fill="rgb(217,5,26)" fg:x="19849" fg:w="22"/><text x="12.4516%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (22 samples, 0.01%)</title><rect x="12.2016%" y="165" width="0.0135%" height="15" fill="rgb(235,190,38)" fg:x="19849" fg:w="22"/><text x="12.4516%" y="175.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (30 samples, 0.02%)</title><rect x="12.1973%" y="213" width="0.0184%" height="15" fill="rgb(247,86,24)" fg:x="19842" fg:w="30"/><text x="12.4473%" y="223.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (34 samples, 0.02%)</title><rect x="12.1967%" y="229" width="0.0209%" height="15" fill="rgb(205,101,16)" fg:x="19841" fg:w="34"/><text x="12.4467%" y="239.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (52 samples, 0.03%)</title><rect x="12.1924%" y="245" width="0.0320%" height="15" fill="rgb(246,168,33)" fg:x="19834" fg:w="52"/><text x="12.4424%" y="255.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (17 samples, 0.01%)</title><rect x="12.2361%" y="245" width="0.0105%" height="15" fill="rgb(231,114,1)" fg:x="19905" fg:w="17"/><text x="12.4861%" y="255.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (2,558 samples, 1.57%)</title><rect x="10.6999%" y="261" width="1.5725%" height="15" fill="rgb(207,184,53)" fg:x="17406" fg:w="2558"/><text x="10.9499%" y="271.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (519 samples, 0.32%)</title><rect x="12.2772%" y="261" width="0.3190%" height="15" fill="rgb(224,95,51)" fg:x="19972" fg:w="519"/><text x="12.5272%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (478 samples, 0.29%)</title><rect x="12.3024%" y="245" width="0.2938%" height="15" fill="rgb(212,188,45)" fg:x="20013" fg:w="478"/><text x="12.5524%" y="255.50"></text></g><g><title>libdispatch.dylib`_dispatch_get_main_queue_port_4CF (22 samples, 0.01%)</title><rect x="12.5981%" y="261" width="0.0135%" height="15" fill="rgb(223,154,38)" fg:x="20494" fg:w="22"/><text x="12.8481%" y="271.50"></text></g><g><title>libdispatch.dylib`_dispatch_runloop_root_queue_get_port_4CF (19 samples, 0.01%)</title><rect x="12.6116%" y="261" width="0.0117%" height="15" fill="rgb(251,22,52)" fg:x="20516" fg:w="19"/><text x="12.8616%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (107 samples, 0.07%)</title><rect x="12.6282%" y="261" width="0.0658%" height="15" fill="rgb(229,209,22)" fg:x="20543" fg:w="107"/><text x="12.8782%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_extract_member_trap (132 samples, 0.08%)</title><rect x="12.7100%" y="261" width="0.0811%" height="15" fill="rgb(234,138,34)" fg:x="20676" fg:w="132"/><text x="12.9600%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (1,038 samples, 0.64%)</title><rect x="12.7911%" y="261" width="0.6381%" height="15" fill="rgb(212,95,11)" fg:x="20808" fg:w="1038"/><text x="13.0411%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`kdebug_trace (17 samples, 0.01%)</title><rect x="13.4292%" y="261" width="0.0105%" height="15" fill="rgb(240,179,47)" fg:x="21846" fg:w="17"/><text x="13.6792%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`voucher_mach_msg_revert (29 samples, 0.02%)</title><rect x="13.4538%" y="261" width="0.0178%" height="15" fill="rgb(240,163,11)" fg:x="21886" fg:w="29"/><text x="13.7038%" y="271.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (12,777 samples, 7.85%)</title><rect x="5.6401%" y="277" width="7.8543%" height="15" fill="rgb(236,37,12)" fg:x="9175" fg:w="12777"/><text x="5.8901%" y="287.50">CoreFoundat..</text></g><g><title>CoreFoundation`__CFStringEqual (18 samples, 0.01%)</title><rect x="13.4944%" y="277" width="0.0111%" height="15" fill="rgb(232,164,16)" fg:x="21952" fg:w="18"/><text x="13.7444%" y="287.50"></text></g><g><title>libdispatch.dylib`_dispatch_get_main_queue_port_4CF (24 samples, 0.01%)</title><rect x="13.5079%" y="277" width="0.0148%" height="15" fill="rgb(244,205,15)" fg:x="21974" fg:w="24"/><text x="13.7579%" y="287.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (22 samples, 0.01%)</title><rect x="13.5251%" y="277" width="0.0135%" height="15" fill="rgb(223,117,47)" fg:x="22002" fg:w="22"/><text x="13.7751%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (36 samples, 0.02%)</title><rect x="13.5614%" y="245" width="0.0221%" height="15" fill="rgb(244,107,35)" fg:x="22061" fg:w="36"/><text x="13.8114%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (48 samples, 0.03%)</title><rect x="13.5546%" y="277" width="0.0295%" height="15" fill="rgb(205,140,8)" fg:x="22050" fg:w="48"/><text x="13.8046%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (37 samples, 0.02%)</title><rect x="13.5614%" y="261" width="0.0227%" height="15" fill="rgb(228,84,46)" fg:x="22061" fg:w="37"/><text x="13.8114%" y="271.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (17,239 samples, 10.60%)</title><rect x="3.0367%" y="293" width="10.5972%" height="15" fill="rgb(254,188,9)" fg:x="4940" fg:w="17239"/><text x="3.2867%" y="303.50">CoreFoundation`..</text></g><g><title>CoreFoundation`CFStringCompareWithOptionsAndLocale (78 samples, 0.05%)</title><rect x="13.6358%" y="293" width="0.0479%" height="15" fill="rgb(206,112,54)" fg:x="22182" fg:w="78"/><text x="13.8858%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp$VARIANT$Base (26 samples, 0.02%)</title><rect x="13.6677%" y="277" width="0.0160%" height="15" fill="rgb(216,84,49)" fg:x="22234" fg:w="26"/><text x="13.9177%" y="287.50"></text></g><g><title>CoreFoundation`CFStringGetLength (53 samples, 0.03%)</title><rect x="13.6837%" y="293" width="0.0326%" height="15" fill="rgb(214,194,35)" fg:x="22260" fg:w="53"/><text x="13.9337%" y="303.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (25 samples, 0.02%)</title><rect x="13.8122%" y="261" width="0.0154%" height="15" fill="rgb(249,28,3)" fg:x="22469" fg:w="25"/><text x="14.0622%" y="271.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (25 samples, 0.02%)</title><rect x="13.8276%" y="261" width="0.0154%" height="15" fill="rgb(222,56,52)" fg:x="22494" fg:w="25"/><text x="14.0776%" y="271.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (77 samples, 0.05%)</title><rect x="13.8005%" y="277" width="0.0473%" height="15" fill="rgb(245,217,50)" fg:x="22450" fg:w="77"/><text x="14.0505%" y="287.50"></text></g><g><title>HIToolbox`_NotifyEventLoopObservers (174 samples, 0.11%)</title><rect x="13.7538%" y="293" width="0.1070%" height="15" fill="rgb(213,201,24)" fg:x="22374" fg:w="174"/><text x="14.0038%" y="303.50"></text></g><g><title>libsystem_pthread.dylib`pthread_getspecific (18 samples, 0.01%)</title><rect x="13.8786%" y="293" width="0.0111%" height="15" fill="rgb(248,116,28)" fg:x="22577" fg:w="18"/><text x="14.1286%" y="303.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (17,761 samples, 10.92%)</title><rect x="2.9783%" y="309" width="10.9181%" height="15" fill="rgb(219,72,43)" fg:x="4845" fg:w="17761"/><text x="3.2283%" y="319.50">HIToolbox`RunCur..</text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (21 samples, 0.01%)</title><rect x="13.9401%" y="309" width="0.0129%" height="15" fill="rgb(209,138,14)" fg:x="22677" fg:w="21"/><text x="14.1901%" y="319.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (18,349 samples, 11.28%)</title><rect x="2.6943%" y="325" width="11.2795%" height="15" fill="rgb(222,18,33)" fg:x="4383" fg:w="18349"/><text x="2.9443%" y="335.50">HIToolbox`Receive..</text></g><g><title>libsystem_pthread.dylib`pthread_self (31 samples, 0.02%)</title><rect x="13.9548%" y="309" width="0.0191%" height="15" fill="rgb(213,199,7)" fg:x="22701" fg:w="31"/><text x="14.2048%" y="319.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (18,415 samples, 11.32%)</title><rect x="2.6648%" y="341" width="11.3201%" height="15" fill="rgb(250,110,10)" fg:x="4335" fg:w="18415"/><text x="2.9148%" y="351.50">HIToolbox`_BlockU..</text></g><g><title>AppKit`_DPSNextEvent (18,585 samples, 11.42%)</title><rect x="2.5726%" y="357" width="11.4246%" height="15" fill="rgb(248,123,6)" fg:x="4185" fg:w="18585"/><text x="2.8226%" y="367.50">AppKit`_DPSNextEv..</text></g><g><title>SkyLight`SLEventGetIntegerValueField (18 samples, 0.01%)</title><rect x="14.0913%" y="357" width="0.0111%" height="15" fill="rgb(206,91,31)" fg:x="22923" fg:w="18"/><text x="14.3413%" y="367.50"></text></g><g><title>SkyLight`SLSMainDisplayID (23 samples, 0.01%)</title><rect x="14.1165%" y="357" width="0.0141%" height="15" fill="rgb(211,154,13)" fg:x="22964" fg:w="23"/><text x="14.3665%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (25 samples, 0.02%)</title><rect x="14.1374%" y="309" width="0.0154%" height="15" fill="rgb(225,148,7)" fg:x="22998" fg:w="25"/><text x="14.3874%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_calloc (31 samples, 0.02%)</title><rect x="14.1362%" y="341" width="0.0191%" height="15" fill="rgb(220,160,43)" fg:x="22996" fg:w="31"/><text x="14.3862%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc (31 samples, 0.02%)</title><rect x="14.1362%" y="325" width="0.0191%" height="15" fill="rgb(213,52,39)" fg:x="22996" fg:w="31"/><text x="14.3862%" y="335.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (32 samples, 0.02%)</title><rect x="14.1362%" y="357" width="0.0197%" height="15" fill="rgb(243,137,7)" fg:x="22996" fg:w="32"/><text x="14.3862%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (21 samples, 0.01%)</title><rect x="14.1626%" y="357" width="0.0129%" height="15" fill="rgb(230,79,13)" fg:x="23039" fg:w="21"/><text x="14.4126%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (149 samples, 0.09%)</title><rect x="14.1767%" y="357" width="0.0916%" height="15" fill="rgb(247,105,23)" fg:x="23062" fg:w="149"/><text x="14.4267%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (21 samples, 0.01%)</title><rect x="14.2683%" y="357" width="0.0129%" height="15" fill="rgb(223,179,41)" fg:x="23211" fg:w="21"/><text x="14.5183%" y="367.50"></text></g><g><title>AppKit`-[NSApplication(NSEvent) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (20,681 samples, 12.71%)</title><rect x="1.5829%" y="373" width="12.7131%" height="15" fill="rgb(218,9,34)" fg:x="2575" fg:w="20681"/><text x="1.8329%" y="383.50">AppKit`-[NSApplicat..</text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (20 samples, 0.01%)</title><rect x="14.3150%" y="373" width="0.0123%" height="15" fill="rgb(222,106,8)" fg:x="23287" fg:w="20"/><text x="14.5650%" y="383.50"></text></g><g><title>Foundation` (27 samples, 0.02%)</title><rect x="14.3273%" y="373" width="0.0166%" height="15" fill="rgb(211,220,0)" fg:x="23307" fg:w="27"/><text x="14.5773%" y="383.50"></text></g><g><title>Foundation`-[NSAutoreleasePool drain] (41 samples, 0.03%)</title><rect x="14.3470%" y="373" width="0.0252%" height="15" fill="rgb(229,52,16)" fg:x="23339" fg:w="41"/><text x="14.5970%" y="383.50"></text></g><g><title>Foundation`NSKVOCopyPendingNotificationStack (33 samples, 0.02%)</title><rect x="14.4005%" y="357" width="0.0203%" height="15" fill="rgb(212,155,18)" fg:x="23426" fg:w="33"/><text x="14.6505%" y="367.50"></text></g><g><title>Foundation`NSKVOPendingPerThreadNotificationStack (21 samples, 0.01%)</title><rect x="14.4079%" y="341" width="0.0129%" height="15" fill="rgb(242,21,14)" fg:x="23438" fg:w="21"/><text x="14.6579%" y="351.50"></text></g><g><title>Foundation`NSKeyValueDidChangeWithPerThreadPendingNotifications (58 samples, 0.04%)</title><rect x="14.3894%" y="373" width="0.0357%" height="15" fill="rgb(222,19,48)" fg:x="23408" fg:w="58"/><text x="14.6394%" y="383.50"></text></g><g><title>CoreFoundation`CFDictionaryGetValue (53 samples, 0.03%)</title><rect x="14.4497%" y="341" width="0.0326%" height="15" fill="rgb(232,45,27)" fg:x="23506" fg:w="53"/><text x="14.6997%" y="351.50"></text></g><g><title>CoreFoundation`CFBasicHashFindBucket (39 samples, 0.02%)</title><rect x="14.4583%" y="325" width="0.0240%" height="15" fill="rgb(249,103,42)" fg:x="23520" fg:w="39"/><text x="14.7083%" y="335.50"></text></g><g><title>Foundation`_NSKeyValueRetainedObservationInfoForObject (69 samples, 0.04%)</title><rect x="14.4448%" y="357" width="0.0424%" height="15" fill="rgb(246,81,33)" fg:x="23498" fg:w="69"/><text x="14.6948%" y="367.50"></text></g><g><title>Foundation`NSKeyValueWillChangeWithPerThreadPendingNotifications (125 samples, 0.08%)</title><rect x="14.4251%" y="373" width="0.0768%" height="15" fill="rgb(252,33,42)" fg:x="23466" fg:w="125"/><text x="14.6751%" y="383.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (181 samples, 0.11%)</title><rect x="14.5413%" y="373" width="0.1113%" height="15" fill="rgb(209,212,41)" fg:x="23655" fg:w="181"/><text x="14.7913%" y="383.50"></text></g><g><title>libobjc.A.dylib`objc_opt_new (23 samples, 0.01%)</title><rect x="14.6525%" y="373" width="0.0141%" height="15" fill="rgb(207,154,6)" fg:x="23836" fg:w="23"/><text x="14.9025%" y="383.50"></text></g><g><title>libobjc.A.dylib`objc_release (17 samples, 0.01%)</title><rect x="14.6667%" y="373" width="0.0105%" height="15" fill="rgb(223,64,47)" fg:x="23859" fg:w="17"/><text x="14.9167%" y="383.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_recursive_lock_lock_with_options (20 samples, 0.01%)</title><rect x="14.6906%" y="373" width="0.0123%" height="15" fill="rgb(211,161,38)" fg:x="23898" fg:w="20"/><text x="14.9406%" y="383.50"></text></g><g><title>AppKit`-[NSApplication run] (22,545 samples, 13.86%)</title><rect x="0.8471%" y="389" width="13.8589%" height="15" fill="rgb(219,138,40)" fg:x="1378" fg:w="22545"/><text x="1.0971%" y="399.50">AppKit`-[NSApplicatio..</text></g><g><title>App`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (36 samples, 0.02%)</title><rect x="14.7681%" y="357" width="0.0221%" height="15" fill="rgb(241,228,46)" fg:x="24024" fg:w="36"/><text x="15.0181%" y="367.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (59 samples, 0.04%)</title><rect x="14.7613%" y="373" width="0.0363%" height="15" fill="rgb(223,209,38)" fg:x="24013" fg:w="59"/><text x="15.0113%" y="383.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::exit (108 samples, 0.07%)</title><rect x="14.7423%" y="389" width="0.0664%" height="15" fill="rgb(236,164,45)" fg:x="23982" fg:w="108"/><text x="14.9923%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (17 samples, 0.01%)</title><rect x="14.8117%" y="373" width="0.0105%" height="15" fill="rgb(231,15,5)" fg:x="24095" fg:w="17"/><text x="15.0617%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.01%)</title><rect x="14.8117%" y="357" width="0.0105%" height="15" fill="rgb(252,35,15)" fg:x="24095" fg:w="17"/><text x="15.0617%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (17 samples, 0.01%)</title><rect x="14.8117%" y="341" width="0.0105%" height="15" fill="rgb(248,181,18)" fg:x="24095" fg:w="17"/><text x="15.0617%" y="351.50"></text></g><g><title>App`winit::platform_impl::platform::app_state::AppState::set_callback (28 samples, 0.02%)</title><rect x="14.8087%" y="389" width="0.0172%" height="15" fill="rgb(233,39,42)" fg:x="24090" fg:w="28"/><text x="15.0587%" y="399.50"></text></g><g><title>Foundation`NSPushAutoreleasePool (23 samples, 0.01%)</title><rect x="14.8960%" y="389" width="0.0141%" height="15" fill="rgb(238,110,33)" fg:x="24232" fg:w="23"/><text x="15.1460%" y="399.50"></text></g><g><title>HIToolbox`_HIEnableSuddenTerminationIfRequestedByPlist (20 samples, 0.01%)</title><rect x="14.9101%" y="389" width="0.0123%" height="15" fill="rgb(233,195,10)" fg:x="24255" fg:w="20"/><text x="15.1601%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (152 samples, 0.09%)</title><rect x="14.9341%" y="389" width="0.0934%" height="15" fill="rgb(254,105,3)" fg:x="24294" fg:w="152"/><text x="15.1841%" y="399.50"></text></g><g><title>libobjc.A.dylib`objc_retain (20 samples, 0.01%)</title><rect x="15.0287%" y="389" width="0.0123%" height="15" fill="rgb(221,225,9)" fg:x="24448" fg:w="20"/><text x="15.2787%" y="399.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run_return (23,176 samples, 14.25%)</title><rect x="0.8145%" y="405" width="14.2468%" height="15" fill="rgb(224,227,45)" fg:x="1325" fg:w="23176"/><text x="1.0645%" y="415.50">App`winit::platform_im..</text></g><g><title>App`std::sync::mpmc::list::Channel&lt;T&gt;::send (31 samples, 0.02%)</title><rect x="15.0669%" y="389" width="0.0191%" height="15" fill="rgb(229,198,43)" fg:x="24510" fg:w="31"/><text x="15.3169%" y="399.50"></text></g><g><title>CoreFoundation`CFRunLoopSourceSignal (18 samples, 0.01%)</title><rect x="15.0865%" y="389" width="0.0111%" height="15" fill="rgb(206,209,35)" fg:x="24542" fg:w="18"/><text x="15.3365%" y="399.50"></text></g><g><title>App`winit::platform_impl::platform::event_loop::EventLoopProxy&lt;T&gt;::send_event (78 samples, 0.05%)</title><rect x="15.0613%" y="405" width="0.0479%" height="15" fill="rgb(245,195,53)" fg:x="24501" fg:w="78"/><text x="15.3113%" y="415.50"></text></g><g><title>CoreFoundation`__CFRunLoopSourceDeallocate (28 samples, 0.02%)</title><rect x="15.1535%" y="389" width="0.0172%" height="15" fill="rgb(240,92,26)" fg:x="24651" fg:w="28"/><text x="15.4035%" y="399.50"></text></g><g><title>CoreFoundation`_CFRelease (56 samples, 0.03%)</title><rect x="15.1418%" y="405" width="0.0344%" height="15" fill="rgb(207,40,23)" fg:x="24632" fg:w="56"/><text x="15.3918%" y="415.50"></text></g><g><title>App`glutin_window::GlutinWindow::poll_events (24,438 samples, 15.02%)</title><rect x="0.1758%" y="421" width="15.0226%" height="15" fill="rgb(223,111,35)" fg:x="286" fg:w="24438"/><text x="0.4258%" y="431.50">App`glutin_window::Glut..</text></g><g><title>App`glutin_window::GlutinWindow::poll_event (24,538 samples, 15.08%)</title><rect x="0.1316%" y="437" width="15.0841%" height="15" fill="rgb(229,147,28)" fg:x="214" fg:w="24538"/><text x="0.3816%" y="447.50">App`glutin_window::Glut..</text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::Window&gt;::poll_event (24,547 samples, 15.09%)</title><rect x="0.1266%" y="453" width="15.0896%" height="15" fill="rgb(211,29,28)" fg:x="206" fg:w="24547"/><text x="0.3766%" y="463.50">App`&lt;glutin_window::Glu..</text></g><g><title>CoreFoundation`__CFNumberHash (25 samples, 0.02%)</title><rect x="15.2476%" y="309" width="0.0154%" height="15" fill="rgb(228,72,33)" fg:x="24804" fg:w="25"/><text x="15.4976%" y="319.50"></text></g><g><title>CoreFoundation`__CFNumberGetValue (22 samples, 0.01%)</title><rect x="15.2494%" y="293" width="0.0135%" height="15" fill="rgb(205,214,31)" fg:x="24807" fg:w="22"/><text x="15.4994%" y="303.50"></text></g><g><title>Foundation`probeGC (37 samples, 0.02%)</title><rect x="15.2427%" y="325" width="0.0227%" height="15" fill="rgb(224,111,15)" fg:x="24796" fg:w="37"/><text x="15.4927%" y="335.50"></text></g><g><title>Foundation`-[NSConcreteMapTable objectForKey:] (56 samples, 0.03%)</title><rect x="15.2396%" y="341" width="0.0344%" height="15" fill="rgb(253,21,26)" fg:x="24791" fg:w="56"/><text x="15.4896%" y="351.50"></text></g><g><title>AppKit`+[NSCGLSurface surfaceWithID:] (68 samples, 0.04%)</title><rect x="15.2353%" y="357" width="0.0418%" height="15" fill="rgb(245,139,43)" fg:x="24784" fg:w="68"/><text x="15.4853%" y="367.50"></text></g><g><title>IOAccelerator`IOAccelResourceCreateDataBuffer (22 samples, 0.01%)</title><rect x="15.3226%" y="261" width="0.0135%" height="15" fill="rgb(252,170,7)" fg:x="24926" fg:w="22"/><text x="15.5726%" y="271.50"></text></g><g><title>IOAccelerator`_IOAccelResourceAlloc (19 samples, 0.01%)</title><rect x="15.3244%" y="245" width="0.0117%" height="15" fill="rgb(231,118,14)" fg:x="24929" fg:w="19"/><text x="15.5744%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (641 samples, 0.39%)</title><rect x="15.3410%" y="213" width="0.3940%" height="15" fill="rgb(238,83,0)" fg:x="24956" fg:w="641"/><text x="15.5910%" y="223.50"></text></g><g><title>IOKit`io_connect_method (650 samples, 0.40%)</title><rect x="15.3373%" y="229" width="0.3996%" height="15" fill="rgb(221,39,39)" fg:x="24950" fg:w="650"/><text x="15.5873%" y="239.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (653 samples, 0.40%)</title><rect x="15.3361%" y="261" width="0.4014%" height="15" fill="rgb(222,119,46)" fg:x="24948" fg:w="653"/><text x="15.5861%" y="271.50"></text></g><g><title>IOKit`IOConnectCallMethod (653 samples, 0.40%)</title><rect x="15.3361%" y="245" width="0.4014%" height="15" fill="rgb(222,165,49)" fg:x="24948" fg:w="653"/><text x="15.5861%" y="255.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (706 samples, 0.43%)</title><rect x="15.3103%" y="277" width="0.4340%" height="15" fill="rgb(219,113,52)" fg:x="24906" fg:w="706"/><text x="15.5603%" y="287.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (708 samples, 0.44%)</title><rect x="15.3097%" y="293" width="0.4352%" height="15" fill="rgb(214,7,15)" fg:x="24905" fg:w="708"/><text x="15.5597%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelCommandBuffer::getNew (719 samples, 0.44%)</title><rect x="15.3060%" y="309" width="0.4420%" height="15" fill="rgb(235,32,4)" fg:x="24899" fg:w="719"/><text x="15.5560%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`intelSubmitCommands (724 samples, 0.45%)</title><rect x="15.3047%" y="325" width="0.4451%" height="15" fill="rgb(238,90,54)" fg:x="24897" fg:w="724"/><text x="15.5547%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramPipeline (90 samples, 0.06%)</title><rect x="15.7842%" y="277" width="0.0553%" height="15" fill="rgb(213,208,19)" fg:x="25677" fg:w="90"/><text x="16.0342%" y="287.50"></text></g><g><title>GLEngine`gleBeginPrimitiveTCLFunc (95 samples, 0.06%)</title><rect x="15.7818%" y="309" width="0.0584%" height="15" fill="rgb(233,156,4)" fg:x="25673" fg:w="95"/><text x="16.0318%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrIntelBeginPrimitiveBuffer (92 samples, 0.06%)</title><rect x="15.7836%" y="293" width="0.0566%" height="15" fill="rgb(207,194,5)" fg:x="25676" fg:w="92"/><text x="16.0336%" y="303.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (29 samples, 0.02%)</title><rect x="15.8451%" y="293" width="0.0178%" height="15" fill="rgb(206,111,30)" fg:x="25776" fg:w="29"/><text x="16.0951%" y="303.50"></text></g><g><title>GLEngine`gleUpdateDeferredStateFull (35 samples, 0.02%)</title><rect x="15.8672%" y="293" width="0.0215%" height="15" fill="rgb(243,70,54)" fg:x="25812" fg:w="35"/><text x="16.1172%" y="303.50"></text></g><g><title>libGPUSupportMercury.dylib`gldLoadFramebuffer (17 samples, 0.01%)</title><rect x="15.9010%" y="277" width="0.0105%" height="15" fill="rgb(242,28,8)" fg:x="25867" fg:w="17"/><text x="16.1510%" y="287.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrBindContextDrawFramebuffer (19 samples, 0.01%)</title><rect x="15.9115%" y="261" width="0.0117%" height="15" fill="rgb(219,106,18)" fg:x="25884" fg:w="19"/><text x="16.1615%" y="271.50"></text></g><g><title>GLEngine`gleUpdateDrawFramebufferState (59 samples, 0.04%)</title><rect x="15.8887%" y="293" width="0.0363%" height="15" fill="rgb(244,222,10)" fg:x="25847" fg:w="59"/><text x="16.1387%" y="303.50"></text></g><g><title>libGPUSupportMercury.dylib`gldUpdateDrawFramebuffer (22 samples, 0.01%)</title><rect x="15.9115%" y="277" width="0.0135%" height="15" fill="rgb(236,179,52)" fg:x="25884" fg:w="22"/><text x="16.1615%" y="287.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCore (150 samples, 0.09%)</title><rect x="15.8402%" y="309" width="0.0922%" height="15" fill="rgb(213,23,39)" fg:x="25768" fg:w="150"/><text x="16.0902%" y="319.50"></text></g><g><title>GLEngine`glDrawArrays_IMM_Exec (262 samples, 0.16%)</title><rect x="15.7738%" y="325" width="0.1611%" height="15" fill="rgb(238,48,10)" fg:x="25660" fg:w="262"/><text x="16.0238%" y="335.50"></text></g><g><title>GLEngine`glFramebufferTexture2DEXT_Exec (17 samples, 0.01%)</title><rect x="15.9355%" y="325" width="0.0105%" height="15" fill="rgb(251,196,23)" fg:x="25923" fg:w="17"/><text x="16.1855%" y="335.50"></text></g><g><title>IOKit`io_connect_method (86 samples, 0.05%)</title><rect x="15.9939%" y="245" width="0.0529%" height="15" fill="rgb(250,152,24)" fg:x="26018" fg:w="86"/><text x="16.2439%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (81 samples, 0.05%)</title><rect x="15.9969%" y="229" width="0.0498%" height="15" fill="rgb(209,150,17)" fg:x="26023" fg:w="81"/><text x="16.2469%" y="239.50"></text></g><g><title>IOAccelerator`IOAccelDeviceGetSurfaceInfo (105 samples, 0.06%)</title><rect x="15.9846%" y="277" width="0.0645%" height="15" fill="rgb(234,202,34)" fg:x="26003" fg:w="105"/><text x="16.2346%" y="287.50"></text></g><g><title>IOKit`IOConnectCallMethod (90 samples, 0.06%)</title><rect x="15.9939%" y="261" width="0.0553%" height="15" fill="rgb(253,148,53)" fg:x="26018" fg:w="90"/><text x="16.2439%" y="271.50"></text></g><g><title>OpenGL`GLCGetParameter (128 samples, 0.08%)</title><rect x="15.9711%" y="309" width="0.0787%" height="15" fill="rgb(218,129,16)" fg:x="25981" fg:w="128"/><text x="16.2211%" y="319.50"></text></g><g><title>libGPUSupportMercury.dylib`gldGetInteger (114 samples, 0.07%)</title><rect x="15.9797%" y="293" width="0.0701%" height="15" fill="rgb(216,85,19)" fg:x="25995" fg:w="114"/><text x="16.2297%" y="303.50"></text></g><g><title>OpenGL`CGLGetParameter (138 samples, 0.08%)</title><rect x="15.9668%" y="325" width="0.0848%" height="15" fill="rgb(235,228,7)" fg:x="25974" fg:w="138"/><text x="16.2168%" y="335.50"></text></g><g><title>AppKit`-[NSIOAccelSurface frontBuffer] (1,278 samples, 0.79%)</title><rect x="15.2875%" y="341" width="0.7856%" height="15" fill="rgb(245,175,0)" fg:x="24869" fg:w="1278"/><text x="15.5375%" y="351.50"></text></g><g><title>AppKit`is_surface_opaque (181 samples, 0.11%)</title><rect x="16.0787%" y="341" width="0.1113%" height="15" fill="rgb(208,168,36)" fg:x="26156" fg:w="181"/><text x="16.3287%" y="351.50"></text></g><g><title>SkyLight`SLSGetSurfaceOpacity (179 samples, 0.11%)</title><rect x="16.0799%" y="325" width="0.1100%" height="15" fill="rgb(246,171,24)" fg:x="26158" fg:w="179"/><text x="16.3299%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (147 samples, 0.09%)</title><rect x="16.0996%" y="309" width="0.0904%" height="15" fill="rgb(215,142,24)" fg:x="26190" fg:w="147"/><text x="16.3496%" y="319.50"></text></g><g><title>Foundation`hashProbe (19 samples, 0.01%)</title><rect x="16.1961%" y="325" width="0.0117%" height="15" fill="rgb(250,187,7)" fg:x="26347" fg:w="19"/><text x="16.4461%" y="335.50"></text></g><g><title>Foundation`-[NSConcreteHashTable addObject:] (24 samples, 0.01%)</title><rect x="16.1949%" y="341" width="0.0148%" height="15" fill="rgb(228,66,33)" fg:x="26345" fg:w="24"/><text x="16.4449%" y="351.50"></text></g><g><title>IOKit`io_registry_entry_get_registry_entry_id (105 samples, 0.06%)</title><rect x="16.2231%" y="325" width="0.0645%" height="15" fill="rgb(234,215,21)" fg:x="26391" fg:w="105"/><text x="16.4731%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (103 samples, 0.06%)</title><rect x="16.2244%" y="309" width="0.0633%" height="15" fill="rgb(222,191,20)" fg:x="26393" fg:w="103"/><text x="16.4744%" y="319.50"></text></g><g><title>IOKit`IORegistryEntryGetRegistryEntryID (108 samples, 0.07%)</title><rect x="16.2219%" y="341" width="0.0664%" height="15" fill="rgb(245,79,54)" fg:x="26389" fg:w="108"/><text x="16.4719%" y="351.50"></text></g><g><title>IOKit`io_connect_method (215 samples, 0.13%)</title><rect x="16.3117%" y="277" width="0.1322%" height="15" fill="rgb(240,10,37)" fg:x="26535" fg:w="215"/><text x="16.5617%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (207 samples, 0.13%)</title><rect x="16.3166%" y="261" width="0.1272%" height="15" fill="rgb(214,192,32)" fg:x="26543" fg:w="207"/><text x="16.5666%" y="271.50"></text></g><g><title>IOSurface`IOSurfaceClientDecrementUseCount (228 samples, 0.14%)</title><rect x="16.3067%" y="309" width="0.1402%" height="15" fill="rgb(209,36,54)" fg:x="26527" fg:w="228"/><text x="16.5567%" y="319.50"></text></g><g><title>IOKit`IOConnectCallMethod (226 samples, 0.14%)</title><rect x="16.3080%" y="293" width="0.1389%" height="15" fill="rgb(220,10,11)" fg:x="26529" fg:w="226"/><text x="16.5580%" y="303.50"></text></g><g><title>QuartzCore`release_image(_CAImageQueue*, unsigned long, CAImageQueueReleased*, bool) (262 samples, 0.16%)</title><rect x="16.3012%" y="325" width="0.1611%" height="15" fill="rgb(221,106,17)" fg:x="26518" fg:w="262"/><text x="16.5512%" y="335.50"></text></g><g><title>Foundation`objectEqual (22 samples, 0.01%)</title><rect x="16.4819%" y="245" width="0.0135%" height="15" fill="rgb(251,142,44)" fg:x="26812" fg:w="22"/><text x="16.7319%" y="255.50"></text></g><g><title>Foundation`hashProbe (34 samples, 0.02%)</title><rect x="16.4770%" y="261" width="0.0209%" height="15" fill="rgb(238,13,15)" fg:x="26804" fg:w="34"/><text x="16.7270%" y="271.50"></text></g><g><title>Foundation`-[NSConcreteHashTable removeItem:] (47 samples, 0.03%)</title><rect x="16.4727%" y="277" width="0.0289%" height="15" fill="rgb(208,107,27)" fg:x="26797" fg:w="47"/><text x="16.7227%" y="287.50"></text></g><g><title>AppKit`__26-[NSCGLSurface flushRect:]_block_invoke (75 samples, 0.05%)</title><rect x="16.4709%" y="293" width="0.0461%" height="15" fill="rgb(205,136,37)" fg:x="26794" fg:w="75"/><text x="16.7209%" y="303.50"></text></g><g><title>AppKit`invoke_and_release_block (89 samples, 0.05%)</title><rect x="16.4690%" y="309" width="0.0547%" height="15" fill="rgb(250,205,27)" fg:x="26791" fg:w="89"/><text x="16.7190%" y="319.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (26 samples, 0.02%)</title><rect x="16.5256%" y="309" width="0.0160%" height="15" fill="rgb(210,80,43)" fg:x="26883" fg:w="26"/><text x="16.7756%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.01%)</title><rect x="16.5416%" y="309" width="0.0117%" height="15" fill="rgb(247,160,36)" fg:x="26909" fg:w="19"/><text x="16.7916%" y="319.50"></text></g><g><title>QuartzCore`release_images(_CAImageQueue*, CAImageQueueReleased*) (153 samples, 0.09%)</title><rect x="16.4623%" y="325" width="0.0941%" height="15" fill="rgb(234,13,49)" fg:x="26780" fg:w="153"/><text x="16.7123%" y="335.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (451 samples, 0.28%)</title><rect x="16.2914%" y="341" width="0.2772%" height="15" fill="rgb(234,122,0)" fg:x="26502" fg:w="451"/><text x="16.5414%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (83 samples, 0.05%)</title><rect x="16.5871%" y="261" width="0.0510%" height="15" fill="rgb(207,146,38)" fg:x="26983" fg:w="83"/><text x="16.8371%" y="271.50"></text></g><g><title>IOSurface`IOSurfaceClientIncrementUseCount (88 samples, 0.05%)</title><rect x="16.5846%" y="309" width="0.0541%" height="15" fill="rgb(207,177,25)" fg:x="26979" fg:w="88"/><text x="16.8346%" y="319.50"></text></g><g><title>IOKit`IOConnectCallMethod (84 samples, 0.05%)</title><rect x="16.5871%" y="293" width="0.0516%" height="15" fill="rgb(211,178,42)" fg:x="26983" fg:w="84"/><text x="16.8371%" y="303.50"></text></g><g><title>IOKit`io_connect_method (84 samples, 0.05%)</title><rect x="16.5871%" y="277" width="0.0516%" height="15" fill="rgb(230,69,54)" fg:x="26983" fg:w="84"/><text x="16.8371%" y="287.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (122 samples, 0.07%)</title><rect x="16.6424%" y="309" width="0.0750%" height="15" fill="rgb(214,135,41)" fg:x="27073" fg:w="122"/><text x="16.8924%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (112 samples, 0.07%)</title><rect x="16.6485%" y="293" width="0.0688%" height="15" fill="rgb(237,67,25)" fg:x="27083" fg:w="112"/><text x="16.8985%" y="303.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (247 samples, 0.15%)</title><rect x="16.5723%" y="325" width="0.1518%" height="15" fill="rgb(222,189,50)" fg:x="26959" fg:w="247"/><text x="16.8223%" y="335.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage (255 samples, 0.16%)</title><rect x="16.5692%" y="341" width="0.1568%" height="15" fill="rgb(245,148,34)" fg:x="26954" fg:w="255"/><text x="16.8192%" y="351.50"></text></g><g><title>SkyLight`SLSGetDisplaysWithOpenGLDisplayMask (25 samples, 0.02%)</title><rect x="16.7364%" y="341" width="0.0154%" height="15" fill="rgb(222,29,6)" fg:x="27226" fg:w="25"/><text x="16.9864%" y="351.50"></text></g><g><title>SkyLight`surface_is_shimmable (42 samples, 0.03%)</title><rect x="16.7702%" y="325" width="0.0258%" height="15" fill="rgb(221,189,43)" fg:x="27281" fg:w="42"/><text x="17.0202%" y="335.50"></text></g><g><title>SkyLight`SLSGetSurfaceBinding (303 samples, 0.19%)</title><rect x="16.7518%" y="341" width="0.1863%" height="15" fill="rgb(207,36,27)" fg:x="27251" fg:w="303"/><text x="17.0018%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (230 samples, 0.14%)</title><rect x="16.7967%" y="325" width="0.1414%" height="15" fill="rgb(217,90,24)" fg:x="27324" fg:w="230"/><text x="17.0467%" y="335.50"></text></g><g><title>AppKit`-[NSCGLSurface flushRect:] (2,772 samples, 1.70%)</title><rect x="15.2771%" y="357" width="1.7040%" height="15" fill="rgb(224,66,35)" fg:x="24852" fg:w="2772"/><text x="15.5271%" y="367.50"></text></g><g><title>AppKit`-[NSCGLSurface synchronize] (28 samples, 0.02%)</title><rect x="16.9811%" y="357" width="0.0172%" height="15" fill="rgb(221,13,50)" fg:x="27624" fg:w="28"/><text x="17.2311%" y="367.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (32 samples, 0.02%)</title><rect x="17.0340%" y="357" width="0.0197%" height="15" fill="rgb(236,68,49)" fg:x="27710" fg:w="32"/><text x="17.2840%" y="367.50"></text></g><g><title>AppKit`NSCGLSurfaceFlush (2,976 samples, 1.83%)</title><rect x="15.2322%" y="373" width="1.8294%" height="15" fill="rgb(229,146,28)" fg:x="24779" fg:w="2976"/><text x="15.4822%" y="383.50">A..</text></g><g><title>IOAccelerator`IOAccelResourceCreateDataBuffer (17 samples, 0.01%)</title><rect x="17.0782%" y="293" width="0.0105%" height="15" fill="rgb(225,31,38)" fg:x="27782" fg:w="17"/><text x="17.3282%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (1,074 samples, 0.66%)</title><rect x="17.0924%" y="245" width="0.6602%" height="15" fill="rgb(250,208,3)" fg:x="27805" fg:w="1074"/><text x="17.3424%" y="255.50"></text></g><g><title>IOKit`io_connect_method (1,085 samples, 0.67%)</title><rect x="17.0905%" y="261" width="0.6670%" height="15" fill="rgb(246,54,23)" fg:x="27802" fg:w="1085"/><text x="17.3405%" y="271.50"></text></g><g><title>IOKit`IOConnectCallStructMethod (1,093 samples, 0.67%)</title><rect x="17.0893%" y="293" width="0.6719%" height="15" fill="rgb(243,76,11)" fg:x="27800" fg:w="1093"/><text x="17.3393%" y="303.50"></text></g><g><title>IOKit`IOConnectCallMethod (1,092 samples, 0.67%)</title><rect x="17.0899%" y="277" width="0.6713%" height="15" fill="rgb(245,21,50)" fg:x="27801" fg:w="1092"/><text x="17.3399%" y="287.50"></text></g><g><title>IOAccelerator`IOAccelContextSubmitDataBuffersExt2 (1,125 samples, 0.69%)</title><rect x="17.0721%" y="309" width="0.6916%" height="15" fill="rgb(228,9,43)" fg:x="27772" fg:w="1125"/><text x="17.3221%" y="319.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusSubmitDataBuffers (1,133 samples, 0.70%)</title><rect x="17.0690%" y="325" width="0.6965%" height="15" fill="rgb(208,100,47)" fg:x="27767" fg:w="1133"/><text x="17.3190%" y="335.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`intelSubmitCommands (1,145 samples, 0.70%)</title><rect x="17.0622%" y="357" width="0.7039%" height="15" fill="rgb(232,26,8)" fg:x="27756" fg:w="1145"/><text x="17.3122%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelCommandBuffer::getNew (1,143 samples, 0.70%)</title><rect x="17.0635%" y="341" width="0.7026%" height="15" fill="rgb(216,166,38)" fg:x="27758" fg:w="1143"/><text x="17.3135%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (176 samples, 0.11%)</title><rect x="17.7796%" y="341" width="0.1082%" height="15" fill="rgb(251,202,51)" fg:x="28923" fg:w="176"/><text x="18.0296%" y="351.50"></text></g><g><title>SkyLight`SLSFlushSurfaceWithOptionsAndIndex (204 samples, 0.13%)</title><rect x="17.7673%" y="357" width="0.1254%" height="15" fill="rgb(254,216,34)" fg:x="28903" fg:w="204"/><text x="18.0173%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gldPresentFramebufferData (1,359 samples, 0.84%)</title><rect x="17.0616%" y="373" width="0.8354%" height="15" fill="rgb(251,32,27)" fg:x="27755" fg:w="1359"/><text x="17.3116%" y="383.50"></text></g><g><title>GLEngine`glSwap_Exec (4,375 samples, 2.69%)</title><rect x="15.2236%" y="389" width="2.6894%" height="15" fill="rgb(208,127,28)" fg:x="24765" fg:w="4375"/><text x="15.4736%" y="399.50">GL..</text></g><g><title>OpenGL`CGLFlushDrawable (4,384 samples, 2.69%)</title><rect x="15.2218%" y="405" width="2.6949%" height="15" fill="rgb(224,137,22)" fg:x="24762" fg:w="4384"/><text x="15.4718%" y="415.50">Op..</text></g><g><title>AppKit`-[NSOpenGLContext flushBuffer] (4,391 samples, 2.70%)</title><rect x="15.2193%" y="421" width="2.6992%" height="15" fill="rgb(254,70,32)" fg:x="24758" fg:w="4391"/><text x="15.4693%" y="431.50">Ap..</text></g><g><title>App`glutin::api::cgl::context::ContextInner::flush_buffer (4,393 samples, 2.70%)</title><rect x="15.2193%" y="437" width="2.7005%" height="15" fill="rgb(229,75,37)" fg:x="24758" fg:w="4393"/><text x="15.4693%" y="447.50">Ap..</text></g><g><title>App`&lt;glutin_window::GlutinWindow as window::Window&gt;::swap_buffers (4,397 samples, 2.70%)</title><rect x="15.2181%" y="453" width="2.7029%" height="15" fill="rgb(252,64,23)" fg:x="24756" fg:w="4397"/><text x="15.4681%" y="463.50">Ap..</text></g><g><title>libsystem_kernel.dylib`clock_get_time (219 samples, 0.13%)</title><rect x="17.9769%" y="405" width="0.1346%" height="15" fill="rgb(232,162,48)" fg:x="29244" fg:w="219"/><text x="18.2269%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (217 samples, 0.13%)</title><rect x="17.9782%" y="389" width="0.1334%" height="15" fill="rgb(246,160,12)" fg:x="29246" fg:w="217"/><text x="18.2282%" y="399.50"></text></g><g><title>libsystem_c.dylib`nanosleep (254 samples, 0.16%)</title><rect x="17.9622%" y="421" width="0.1561%" height="15" fill="rgb(247,166,0)" fg:x="29220" fg:w="254"/><text x="18.2122%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (243 samples, 0.15%)</title><rect x="18.1220%" y="421" width="0.1494%" height="15" fill="rgb(249,219,21)" fg:x="29480" fg:w="243"/><text x="18.3720%" y="431.50"></text></g><g><title>App`std::thread::sleep (535 samples, 0.33%)</title><rect x="17.9536%" y="437" width="0.3289%" height="15" fill="rgb(205,209,3)" fg:x="29206" fg:w="535"/><text x="18.2036%" y="447.50"></text></g><g><title>App`std::time::Instant::elapsed (44 samples, 0.03%)</title><rect x="18.2825%" y="437" width="0.0270%" height="15" fill="rgb(243,44,1)" fg:x="29741" fg:w="44"/><text x="18.5325%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (25 samples, 0.02%)</title><rect x="18.2941%" y="421" width="0.0154%" height="15" fill="rgb(206,159,16)" fg:x="29760" fg:w="25"/><text x="18.5441%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`swtch_pri (228 samples, 0.14%)</title><rect x="18.3150%" y="437" width="0.1402%" height="15" fill="rgb(244,77,30)" fg:x="29794" fg:w="228"/><text x="18.5650%" y="447.50"></text></g><g><title>App`spin_sleep::sleep (837 samples, 0.51%)</title><rect x="17.9419%" y="453" width="0.5145%" height="15" fill="rgb(218,69,12)" fg:x="29187" fg:w="837"/><text x="18.1919%" y="463.50"></text></g><g><title>App`event_loop::Events::next (29,882 samples, 18.37%)</title><rect x="0.0977%" y="469" width="18.3691%" height="15" fill="rgb(212,87,7)" fg:x="159" fg:w="29882"/><text x="0.3477%" y="479.50">App`event_loop::Events::next</text></g><g><title>App`App::App::render::draw_board (33 samples, 0.02%)</title><rect x="18.4755%" y="453" width="0.0203%" height="15" fill="rgb(245,114,25)" fg:x="30055" fg:w="33"/><text x="18.7255%" y="463.50"></text></g><g><title>App`graphics::rectangle::Rectangle::draw_tri (28 samples, 0.02%)</title><rect x="18.4786%" y="437" width="0.0172%" height="15" fill="rgb(210,61,42)" fg:x="30060" fg:w="28"/><text x="18.7286%" y="447.50"></text></g><g><title>App`&lt;opengl_graphics::back_end::GlGraphics as graphics::graphics::Graphics&gt;::tri_list (26 samples, 0.02%)</title><rect x="18.4798%" y="421" width="0.0160%" height="15" fill="rgb(211,52,33)" fg:x="30062" fg:w="26"/><text x="18.7298%" y="431.50"></text></g><g><title>libsystem_m.dylib`0x00007ff82a51f6f0 (22 samples, 0.01%)</title><rect x="18.4822%" y="405" width="0.0135%" height="15" fill="rgb(234,58,33)" fg:x="30066" fg:w="22"/><text x="18.7322%" y="415.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramPipeline (22 samples, 0.01%)</title><rect x="18.5259%" y="373" width="0.0135%" height="15" fill="rgb(220,115,36)" fg:x="30137" fg:w="22"/><text x="18.7759%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrIntelRenderVertexArray (26 samples, 0.02%)</title><rect x="18.5247%" y="389" width="0.0160%" height="15" fill="rgb(243,153,54)" fg:x="30135" fg:w="26"/><text x="18.7747%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (27 samples, 0.02%)</title><rect x="18.5437%" y="357" width="0.0166%" height="15" fill="rgb(251,47,18)" fg:x="30166" fg:w="27"/><text x="18.7937%" y="367.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (47 samples, 0.03%)</title><rect x="18.5413%" y="373" width="0.0289%" height="15" fill="rgb(242,102,42)" fg:x="30162" fg:w="47"/><text x="18.7913%" y="383.50"></text></g><g><title>GLEngine`glDrawArrays_GL3Exec (77 samples, 0.05%)</title><rect x="18.5241%" y="405" width="0.0473%" height="15" fill="rgb(234,31,38)" fg:x="30134" fg:w="77"/><text x="18.7741%" y="415.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (50 samples, 0.03%)</title><rect x="18.5406%" y="389" width="0.0307%" height="15" fill="rgb(221,117,51)" fg:x="30161" fg:w="50"/><text x="18.7906%" y="399.50"></text></g><g><title>App`opengl_graphics::back_end::Colored::flush (107 samples, 0.07%)</title><rect x="18.5093%" y="421" width="0.0658%" height="15" fill="rgb(212,20,18)" fg:x="30110" fg:w="107"/><text x="18.7593%" y="431.50"></text></g><g><title>GLEngine`glUseProgramObjectARB_Exec (25 samples, 0.02%)</title><rect x="18.5769%" y="405" width="0.0154%" height="15" fill="rgb(245,133,36)" fg:x="30220" fg:w="25"/><text x="18.8269%" y="415.50"></text></g><g><title>GLEngine`gleUseProgramObject (22 samples, 0.01%)</title><rect x="18.5788%" y="389" width="0.0135%" height="15" fill="rgb(212,6,19)" fg:x="30223" fg:w="22"/><text x="18.8288%" y="399.50"></text></g><g><title>App`opengl_graphics::back_end::GlGraphics::use_program (27 samples, 0.02%)</title><rect x="18.5769%" y="421" width="0.0166%" height="15" fill="rgb(218,1,36)" fg:x="30220" fg:w="27"/><text x="18.8269%" y="431.50"></text></g><g><title>IOAccelerator`IOAccelResourceCheckSysMem (18 samples, 0.01%)</title><rect x="18.6353%" y="357" width="0.0111%" height="15" fill="rgb(246,84,54)" fg:x="30315" fg:w="18"/><text x="18.8853%" y="367.50"></text></g><g><title>GLEngine`gleGetFreeOrphanNode (45 samples, 0.03%)</title><rect x="18.6267%" y="373" width="0.0277%" height="15" fill="rgb(242,110,6)" fg:x="30301" fg:w="45"/><text x="18.8767%" y="383.50"></text></g><g><title>GLEngine`gleAcquireBufferData (59 samples, 0.04%)</title><rect x="18.6243%" y="389" width="0.0363%" height="15" fill="rgb(214,47,5)" fg:x="30297" fg:w="59"/><text x="18.8743%" y="399.50"></text></g><g><title>GLEngine`glBufferData_Exec (98 samples, 0.06%)</title><rect x="18.6175%" y="405" width="0.0602%" height="15" fill="rgb(218,159,25)" fg:x="30286" fg:w="98"/><text x="18.8675%" y="415.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::CheckOOM (28 samples, 0.02%)</title><rect x="18.6962%" y="357" width="0.0172%" height="15" fill="rgb(215,211,28)" fg:x="30414" fg:w="28"/><text x="18.9462%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::CheckOOM (28 samples, 0.02%)</title><rect x="18.6962%" y="341" width="0.0172%" height="15" fill="rgb(238,59,32)" fg:x="30414" fg:w="28"/><text x="18.9462%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`void updateBindingTable&lt;SGfx3dStateBindingTablePointers&gt;(GenContext*, unsigned int, SGfx3dStateBindingTablePointers&amp;) (27 samples, 0.02%)</title><rect x="18.7275%" y="357" width="0.0166%" height="15" fill="rgb(226,82,3)" fg:x="30465" fg:w="27"/><text x="18.9775%" y="367.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramPipeline (102 samples, 0.06%)</title><rect x="18.6845%" y="373" width="0.0627%" height="15" fill="rgb(240,164,32)" fg:x="30395" fg:w="102"/><text x="18.9345%" y="383.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrIntelRenderVertexArray (120 samples, 0.07%)</title><rect x="18.6814%" y="389" width="0.0738%" height="15" fill="rgb(232,46,7)" fg:x="30390" fg:w="120"/><text x="18.9314%" y="399.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`IntelVertexArray::buildBufData (20 samples, 0.01%)</title><rect x="18.8074%" y="309" width="0.0123%" height="15" fill="rgb(229,129,53)" fg:x="30595" fg:w="20"/><text x="19.0574%" y="319.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`updateDispatch (94 samples, 0.06%)</title><rect x="18.7663%" y="357" width="0.0578%" height="15" fill="rgb(234,188,29)" fg:x="30528" fg:w="94"/><text x="19.0163%" y="367.50"></text></g><g><title>libGPUSupportMercury.dylib`gpusLoadCurrentVertexArray (33 samples, 0.02%)</title><rect x="18.8037%" y="341" width="0.0203%" height="15" fill="rgb(246,141,4)" fg:x="30589" fg:w="33"/><text x="19.0537%" y="351.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`glrUpdateVertexArrayBuffers (28 samples, 0.02%)</title><rect x="18.8068%" y="325" width="0.0172%" height="15" fill="rgb(229,23,39)" fg:x="30594" fg:w="28"/><text x="19.0568%" y="335.50"></text></g><g><title>GLEngine`gleUpdateDeferredStateFull (18 samples, 0.01%)</title><rect x="18.8253%" y="357" width="0.0111%" height="15" fill="rgb(206,12,3)" fg:x="30624" fg:w="18"/><text x="19.0753%" y="367.50"></text></g><g><title>GLEngine`gleDoDrawDispatchCoreGL3 (128 samples, 0.08%)</title><rect x="18.7595%" y="373" width="0.0787%" height="15" fill="rgb(252,226,20)" fg:x="30517" fg:w="128"/><text x="19.0095%" y="383.50"></text></g><g><title>GLEngine`glDrawArrays_GL3Exec (262 samples, 0.16%)</title><rect x="18.6777%" y="405" width="0.1611%" height="15" fill="rgb(216,123,35)" fg:x="30384" fg:w="262"/><text x="18.9277%" y="415.50"></text></g><g><title>GLEngine`gleDrawArraysOrElements_Entries_Body (135 samples, 0.08%)</title><rect x="18.7558%" y="389" width="0.0830%" height="15" fill="rgb(212,68,40)" fg:x="30511" fg:w="135"/><text x="19.0058%" y="399.50"></text></g><g><title>App`opengl_graphics::back_end::Textured::flush (439 samples, 0.27%)</title><rect x="18.5935%" y="421" width="0.2699%" height="15" fill="rgb(254,125,32)" fg:x="30247" fg:w="439"/><text x="18.8435%" y="431.50"></text></g><g><title>App`&lt;opengl_graphics::back_end::GlGraphics as graphics::graphics::Graphics&gt;::tri_list_uv (609 samples, 0.37%)</title><rect x="18.5013%" y="437" width="0.3744%" height="15" fill="rgb(253,97,22)" fg:x="30097" fg:w="609"/><text x="18.7513%" y="447.50"></text></g><g><title>App`App::App::render::draw_pieces (619 samples, 0.38%)</title><rect x="18.4958%" y="453" width="0.3805%" height="15" fill="rgb(241,101,14)" fg:x="30088" fg:w="619"/><text x="18.7458%" y="463.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`GenContext::ProgramClearPipeline (33 samples, 0.02%)</title><rect x="18.9009%" y="421" width="0.0203%" height="15" fill="rgb(238,103,29)" fg:x="30747" fg:w="33"/><text x="19.1509%" y="431.50"></text></g><g><title>AppleIntelKBLGraphicsGLDriver`gldClearFramebufferData (47 samples, 0.03%)</title><rect x="18.8953%" y="437" width="0.0289%" height="15" fill="rgb(233,195,47)" fg:x="30738" fg:w="47"/><text x="19.1453%" y="447.50"></text></g><g><title>GLEngine`glClear_Exec (52 samples, 0.03%)</title><rect x="18.8929%" y="453" width="0.0320%" height="15" fill="rgb(246,218,30)" fg:x="30734" fg:w="52"/><text x="19.1429%" y="463.50"></text></g><g><title>App`opengl_graphics::back_end::GlGraphics::draw (747 samples, 0.46%)</title><rect x="18.4718%" y="469" width="0.4592%" height="15" fill="rgb(219,145,47)" fg:x="30049" fg:w="747"/><text x="18.7218%" y="479.50"></text></g><g><title>App`App::main (30,816 samples, 18.94%)</title><rect x="0.0012%" y="485" width="18.9433%" height="15" fill="rgb(243,12,26)" fg:x="2" fg:w="30816"/><text x="0.2512%" y="495.50">App`App::main</text></g><g><title>App`main (30,821 samples, 18.95%)</title><rect x="0.0000%" y="549" width="18.9464%" height="15" fill="rgb(214,87,16)" fg:x="0" fg:w="30821"/><text x="0.2500%" y="559.50">App`main</text></g><g><title>App`std::rt::lang_start_internal (30,821 samples, 18.95%)</title><rect x="0.0000%" y="533" width="18.9464%" height="15" fill="rgb(208,99,42)" fg:x="0" fg:w="30821"/><text x="0.2500%" y="543.50">App`std::rt::lang_start_intern..</text></g><g><title>App`std::rt::lang_start::_{{closure}} (30,821 samples, 18.95%)</title><rect x="0.0000%" y="517" width="18.9464%" height="15" fill="rgb(253,99,2)" fg:x="0" fg:w="30821"/><text x="0.2500%" y="527.50">App`std::rt::lang_start::_{{cl..</text></g><g><title>App`std::sys_common::backtrace::__rust_begin_short_backtrace (30,821 samples, 18.95%)</title><rect x="0.0000%" y="501" width="18.9464%" height="15" fill="rgb(220,168,23)" fg:x="0" fg:w="30821"/><text x="0.2500%" y="511.50">App`std::sys_common::backtrace..</text></g><g><title>dyld`start (30,827 samples, 18.95%)</title><rect x="0.0000%" y="565" width="18.9501%" height="15" fill="rgb(242,38,24)" fg:x="0" fg:w="30827"/><text x="0.2500%" y="575.50">dyld`start</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (17 samples, 0.01%)</title><rect x="19.0214%" y="549" width="0.0105%" height="15" fill="rgb(225,182,9)" fg:x="30943" fg:w="17"/><text x="19.2714%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1,771 samples, 1.09%)</title><rect x="19.0318%" y="549" width="1.0887%" height="15" fill="rgb(243,178,37)" fg:x="30960" fg:w="1771"/><text x="19.2818%" y="559.50"></text></g><g><title>QuartzCore`CABackingStoreCollect_(double, bool) (66 samples, 0.04%)</title><rect x="20.3510%" y="437" width="0.0406%" height="15" fill="rgb(232,139,19)" fg:x="33106" fg:w="66"/><text x="20.6010%" y="447.50"></text></g><g><title>QuartzCore`CABackingStoreCollect (68 samples, 0.04%)</title><rect x="20.3510%" y="453" width="0.0418%" height="15" fill="rgb(225,201,24)" fg:x="33106" fg:w="68"/><text x="20.6010%" y="463.50"></text></g><g><title>QuartzCore`async_collect_callback(void*) (97 samples, 0.06%)</title><rect x="20.3510%" y="469" width="0.0596%" height="15" fill="rgb(221,47,46)" fg:x="33106" fg:w="97"/><text x="20.6010%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (21 samples, 0.01%)</title><rect x="20.3977%" y="453" width="0.0129%" height="15" fill="rgb(249,23,13)" fg:x="33182" fg:w="21"/><text x="20.6477%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (120 samples, 0.07%)</title><rect x="20.3442%" y="485" width="0.0738%" height="15" fill="rgb(219,9,5)" fg:x="33095" fg:w="120"/><text x="20.5942%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`free (43 samples, 0.03%)</title><rect x="20.4180%" y="469" width="0.0264%" height="15" fill="rgb(254,171,16)" fg:x="33215" fg:w="43"/><text x="20.6680%" y="479.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (21 samples, 0.01%)</title><rect x="20.4315%" y="453" width="0.0129%" height="15" fill="rgb(230,171,20)" fg:x="33237" fg:w="21"/><text x="20.6815%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_free_to_cache_limit (50 samples, 0.03%)</title><rect x="20.4180%" y="485" width="0.0307%" height="15" fill="rgb(210,71,41)" fg:x="33215" fg:w="50"/><text x="20.6680%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (244 samples, 0.15%)</title><rect x="20.3117%" y="501" width="0.1500%" height="15" fill="rgb(206,173,20)" fg:x="33042" fg:w="244"/><text x="20.5617%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (24 samples, 0.01%)</title><rect x="20.4696%" y="501" width="0.0148%" height="15" fill="rgb(233,88,34)" fg:x="33299" fg:w="24"/><text x="20.7196%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (310 samples, 0.19%)</title><rect x="20.2957%" y="517" width="0.1906%" height="15" fill="rgb(223,209,46)" fg:x="33016" fg:w="310"/><text x="20.5457%" y="527.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (2,501 samples, 1.54%)</title><rect x="18.9587%" y="565" width="1.5374%" height="15" fill="rgb(250,43,18)" fg:x="30841" fg:w="2501"/><text x="19.2087%" y="575.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (606 samples, 0.37%)</title><rect x="20.1236%" y="549" width="0.3725%" height="15" fill="rgb(208,13,10)" fg:x="32736" fg:w="606"/><text x="20.3736%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (561 samples, 0.34%)</title><rect x="20.1512%" y="533" width="0.3449%" height="15" fill="rgb(212,200,36)" fg:x="32781" fg:w="561"/><text x="20.4012%" y="543.50"></text></g><g><title>SkyLight`CGSEventLogEvent (17 samples, 0.01%)</title><rect x="20.5237%" y="373" width="0.0105%" height="15" fill="rgb(225,90,30)" fg:x="33387" fg:w="17"/><text x="20.7737%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (50 samples, 0.03%)</title><rect x="20.5465%" y="357" width="0.0307%" height="15" fill="rgb(236,182,39)" fg:x="33424" fg:w="50"/><text x="20.7965%" y="367.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (71 samples, 0.04%)</title><rect x="20.5342%" y="373" width="0.0436%" height="15" fill="rgb(212,144,35)" fg:x="33404" fg:w="71"/><text x="20.7842%" y="383.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (102 samples, 0.06%)</title><rect x="20.5194%" y="405" width="0.0627%" height="15" fill="rgb(228,63,44)" fg:x="33380" fg:w="102"/><text x="20.7694%" y="415.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (100 samples, 0.06%)</title><rect x="20.5207%" y="389" width="0.0615%" height="15" fill="rgb(228,109,6)" fg:x="33382" fg:w="100"/><text x="20.7707%" y="399.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (124 samples, 0.08%)</title><rect x="20.5078%" y="421" width="0.0762%" height="15" fill="rgb(238,117,24)" fg:x="33361" fg:w="124"/><text x="20.7578%" y="431.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (128 samples, 0.08%)</title><rect x="20.5065%" y="437" width="0.0787%" height="15" fill="rgb(242,26,26)" fg:x="33359" fg:w="128"/><text x="20.7565%" y="447.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (139 samples, 0.09%)</title><rect x="20.5010%" y="485" width="0.0854%" height="15" fill="rgb(221,92,48)" fg:x="33350" fg:w="139"/><text x="20.7510%" y="495.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (137 samples, 0.08%)</title><rect x="20.5022%" y="469" width="0.0842%" height="15" fill="rgb(209,209,32)" fg:x="33352" fg:w="137"/><text x="20.7522%" y="479.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (136 samples, 0.08%)</title><rect x="20.5028%" y="453" width="0.0836%" height="15" fill="rgb(221,70,22)" fg:x="33353" fg:w="136"/><text x="20.7528%" y="463.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (29 samples, 0.02%)</title><rect x="20.5871%" y="485" width="0.0178%" height="15" fill="rgb(248,145,5)" fg:x="33490" fg:w="29"/><text x="20.8371%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_trap (24 samples, 0.01%)</title><rect x="20.5901%" y="469" width="0.0148%" height="15" fill="rgb(226,116,26)" fg:x="33495" fg:w="24"/><text x="20.8401%" y="479.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (179 samples, 0.11%)</title><rect x="20.4979%" y="501" width="0.1100%" height="15" fill="rgb(244,5,17)" fg:x="33345" fg:w="179"/><text x="20.7479%" y="511.50"></text></g><g><title>AppKit`_NSEventThread (185 samples, 0.11%)</title><rect x="20.4961%" y="533" width="0.1137%" height="15" fill="rgb(252,159,33)" fg:x="33342" fg:w="185"/><text x="20.7461%" y="543.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (185 samples, 0.11%)</title><rect x="20.4961%" y="517" width="0.1137%" height="15" fill="rgb(206,71,0)" fg:x="33342" fg:w="185"/><text x="20.7461%" y="527.50"></text></g><g><title>App`App::game_manager::board2::BoardState::game_state (39 samples, 0.02%)</title><rect x="20.6584%" y="405" width="0.0240%" height="15" fill="rgb(233,118,54)" fg:x="33606" fg:w="39"/><text x="20.9084%" y="415.50"></text></g><g><title>App`App::game_manager::board2::BoardState::perform_move_mutable (27 samples, 0.02%)</title><rect x="20.6823%" y="405" width="0.0166%" height="15" fill="rgb(234,83,48)" fg:x="33645" fg:w="27"/><text x="20.9323%" y="415.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (27 samples, 0.02%)</title><rect x="20.7082%" y="405" width="0.0166%" height="15" fill="rgb(228,3,54)" fg:x="33687" fg:w="27"/><text x="20.9582%" y="415.50"></text></g><g><title>App`App::game_manager::board2::BoardState::is_in_check (93 samples, 0.06%)</title><rect x="20.8993%" y="373" width="0.0572%" height="15" fill="rgb(226,155,13)" fg:x="33998" fg:w="93"/><text x="21.1493%" y="383.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_rook_moves (27 samples, 0.02%)</title><rect x="20.9651%" y="373" width="0.0166%" height="15" fill="rgb(241,28,37)" fg:x="34105" fg:w="27"/><text x="21.2151%" y="383.50"></text></g><g><title>App`App::game_manager::board2::BoardState::game_state (213 samples, 0.13%)</title><rect x="20.8686%" y="389" width="0.1309%" height="15" fill="rgb(233,93,10)" fg:x="33948" fg:w="213"/><text x="21.1186%" y="399.50"></text></g><g><title>App`App::game_manager::board2::BoardState::perform_move_mutable (161 samples, 0.10%)</title><rect x="20.9995%" y="389" width="0.0990%" height="15" fill="rgb(225,113,19)" fg:x="34161" fg:w="161"/><text x="21.2495%" y="399.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (20 samples, 0.01%)</title><rect x="21.0985%" y="389" width="0.0123%" height="15" fill="rgb(241,2,18)" fg:x="34322" fg:w="20"/><text x="21.3485%" y="399.50"></text></g><g><title>App`App::game_manager::board2::BoardState::undo_move_mutable (85 samples, 0.05%)</title><rect x="21.1108%" y="389" width="0.0523%" height="15" fill="rgb(228,207,21)" fg:x="34342" fg:w="85"/><text x="21.3608%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (117 samples, 0.07%)</title><rect x="21.2448%" y="357" width="0.0719%" height="15" fill="rgb(213,211,35)" fg:x="34560" fg:w="117"/><text x="21.4948%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (109 samples, 0.07%)</title><rect x="21.2497%" y="341" width="0.0670%" height="15" fill="rgb(209,83,10)" fg:x="34568" fg:w="109"/><text x="21.4997%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (56 samples, 0.03%)</title><rect x="21.2823%" y="325" width="0.0344%" height="15" fill="rgb(209,164,1)" fg:x="34621" fg:w="56"/><text x="21.5323%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (148 samples, 0.09%)</title><rect x="21.2276%" y="373" width="0.0910%" height="15" fill="rgb(213,184,43)" fg:x="34532" fg:w="148"/><text x="21.4776%" y="383.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (258 samples, 0.16%)</title><rect x="21.1631%" y="389" width="0.1586%" height="15" fill="rgb(231,61,34)" fg:x="34427" fg:w="258"/><text x="21.4131%" y="399.50"></text></g><g><title>App`App::game_manager::board2::BoardState::is_in_check (913 samples, 0.56%)</title><rect x="23.1468%" y="357" width="0.5612%" height="15" fill="rgb(235,75,3)" fg:x="37654" fg:w="913"/><text x="23.3968%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::perform_move_mutable (133 samples, 0.08%)</title><rect x="23.7080%" y="357" width="0.0818%" height="15" fill="rgb(220,106,47)" fg:x="38567" fg:w="133"/><text x="23.9580%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_bishop_moves (420 samples, 0.26%)</title><rect x="23.7898%" y="357" width="0.2582%" height="15" fill="rgb(210,196,33)" fg:x="38700" fg:w="420"/><text x="24.0398%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_pawn_moves (51 samples, 0.03%)</title><rect x="24.0578%" y="357" width="0.0314%" height="15" fill="rgb(229,154,42)" fg:x="39136" fg:w="51"/><text x="24.3078%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_rook_moves (288 samples, 0.18%)</title><rect x="24.0928%" y="357" width="0.1770%" height="15" fill="rgb(228,114,26)" fg:x="39193" fg:w="288"/><text x="24.3428%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::undo_move_mutable (109 samples, 0.07%)</title><rect x="24.2699%" y="357" width="0.0670%" height="15" fill="rgb(208,144,1)" fg:x="39481" fg:w="109"/><text x="24.5199%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (146 samples, 0.09%)</title><rect x="24.3369%" y="357" width="0.0897%" height="15" fill="rgb(239,112,37)" fg:x="39590" fg:w="146"/><text x="24.5869%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::game_state (4,343 samples, 2.67%)</title><rect x="21.8362%" y="373" width="2.6697%" height="15" fill="rgb(210,96,50)" fg:x="35522" fg:w="4343"/><text x="22.0862%" y="383.50">Ap..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (129 samples, 0.08%)</title><rect x="24.4266%" y="357" width="0.0793%" height="15" fill="rgb(222,178,2)" fg:x="39736" fg:w="129"/><text x="24.6766%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::perform_move_mutable (735 samples, 0.45%)</title><rect x="24.5084%" y="373" width="0.4518%" height="15" fill="rgb(226,74,18)" fg:x="39869" fg:w="735"/><text x="24.7584%" y="383.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (209 samples, 0.13%)</title><rect x="24.9602%" y="373" width="0.1285%" height="15" fill="rgb(225,67,54)" fg:x="40604" fg:w="209"/><text x="25.2102%" y="383.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_bishop_moves (18 samples, 0.01%)</title><rect x="25.0887%" y="373" width="0.0111%" height="15" fill="rgb(251,92,32)" fg:x="40813" fg:w="18"/><text x="25.3387%" y="383.50"></text></g><g><title>App`App::game_manager::board2::BoardState::undo_move_mutable (254 samples, 0.16%)</title><rect x="25.1102%" y="373" width="0.1561%" height="15" fill="rgb(228,149,22)" fg:x="40848" fg:w="254"/><text x="25.3602%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (74 samples, 0.05%)</title><rect x="25.9813%" y="341" width="0.0455%" height="15" fill="rgb(243,54,13)" fg:x="42265" fg:w="74"/><text x="26.2313%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (79 samples, 0.05%)</title><rect x="26.3396%" y="309" width="0.0486%" height="15" fill="rgb(243,180,28)" fg:x="42848" fg:w="79"/><text x="26.5896%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (1,008 samples, 0.62%)</title><rect x="26.0267%" y="341" width="0.6196%" height="15" fill="rgb(208,167,24)" fg:x="42339" fg:w="1008"/><text x="26.2767%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (953 samples, 0.59%)</title><rect x="26.0606%" y="325" width="0.5858%" height="15" fill="rgb(245,73,45)" fg:x="42394" fg:w="953"/><text x="26.3106%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (416 samples, 0.26%)</title><rect x="26.3907%" y="309" width="0.2557%" height="15" fill="rgb(237,203,48)" fg:x="42931" fg:w="416"/><text x="26.6407%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (93 samples, 0.06%)</title><rect x="26.5892%" y="293" width="0.0572%" height="15" fill="rgb(211,197,16)" fg:x="43254" fg:w="93"/><text x="26.8392%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,214 samples, 0.75%)</title><rect x="25.9099%" y="357" width="0.7463%" height="15" fill="rgb(243,99,51)" fg:x="42149" fg:w="1214"/><text x="26.1599%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (58 samples, 0.04%)</title><rect x="26.6562%" y="357" width="0.0357%" height="15" fill="rgb(215,123,29)" fg:x="43363" fg:w="58"/><text x="26.9062%" y="367.50"></text></g><g><title>App`App::game_manager::board2::ChessMoveList::moves_vec (2,340 samples, 1.44%)</title><rect x="25.2663%" y="373" width="1.4385%" height="15" fill="rgb(239,186,37)" fg:x="41102" fg:w="2340"/><text x="25.5163%" y="383.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (184 samples, 0.11%)</title><rect x="26.7048%" y="373" width="0.1131%" height="15" fill="rgb(252,136,39)" fg:x="43442" fg:w="184"/><text x="26.9548%" y="383.50"></text></g><g><title>App`App::game_manager::board2::BoardState::is_in_check (5,110 samples, 3.14%)</title><rect x="38.2892%" y="341" width="3.1412%" height="15" fill="rgb(223,213,32)" fg:x="62287" fg:w="5110"/><text x="38.5392%" y="351.50">App..</text></g><g><title>App`App::game_manager::board2::BoardState::perform_move_mutable (699 samples, 0.43%)</title><rect x="41.4305%" y="341" width="0.4297%" height="15" fill="rgb(233,115,5)" fg:x="67397" fg:w="699"/><text x="41.6805%" y="351.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_bishop_moves (204 samples, 0.13%)</title><rect x="41.8602%" y="341" width="0.1254%" height="15" fill="rgb(207,226,44)" fg:x="68096" fg:w="204"/><text x="42.1102%" y="351.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_king_moves (179 samples, 0.11%)</title><rect x="41.9856%" y="341" width="0.1100%" height="15" fill="rgb(208,126,0)" fg:x="68300" fg:w="179"/><text x="42.2356%" y="351.50"></text></g><g><title>App`App::game_manager::board2::BoardState::is_in_check (104 samples, 0.06%)</title><rect x="42.0317%" y="325" width="0.0639%" height="15" fill="rgb(244,66,21)" fg:x="68375" fg:w="104"/><text x="42.2817%" y="335.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_pawn_moves (54 samples, 0.03%)</title><rect x="42.0956%" y="341" width="0.0332%" height="15" fill="rgb(222,97,12)" fg:x="68479" fg:w="54"/><text x="42.3456%" y="351.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_rook_moves (1,095 samples, 0.67%)</title><rect x="42.1312%" y="341" width="0.6731%" height="15" fill="rgb(219,213,19)" fg:x="68537" fg:w="1095"/><text x="42.3812%" y="351.50"></text></g><g><title>App`App::game_manager::board2::BoardState::undo_move_mutable (544 samples, 0.33%)</title><rect x="42.8044%" y="341" width="0.3344%" height="15" fill="rgb(252,169,30)" fg:x="69632" fg:w="544"/><text x="43.0544%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (692 samples, 0.43%)</title><rect x="43.1388%" y="341" width="0.4254%" height="15" fill="rgb(206,32,51)" fg:x="70176" fg:w="692"/><text x="43.3888%" y="351.50"></text></g><g><title>App`App::game_manager::board2::BoardState::game_state (11,227 samples, 6.90%)</title><rect x="37.0143%" y="357" width="6.9015%" height="15" fill="rgb(250,172,42)" fg:x="60213" fg:w="11227"/><text x="37.2643%" y="367.50">App`App::..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (572 samples, 0.35%)</title><rect x="43.5642%" y="341" width="0.3516%" height="15" fill="rgb(209,34,43)" fg:x="70868" fg:w="572"/><text x="43.8142%" y="351.50"></text></g><g><title>App`App::game_manager::board2::BoardState::is_in_check (49 samples, 0.03%)</title><rect x="43.9158%" y="357" width="0.0301%" height="15" fill="rgb(223,11,35)" fg:x="71440" fg:w="49"/><text x="44.1658%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::perform_move_mutable (22 samples, 0.01%)</title><rect x="43.9459%" y="357" width="0.0135%" height="15" fill="rgb(251,219,26)" fg:x="71489" fg:w="22"/><text x="44.1959%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::pseudo_legal_rook_moves (41 samples, 0.03%)</title><rect x="43.9754%" y="357" width="0.0252%" height="15" fill="rgb(231,119,3)" fg:x="71537" fg:w="41"/><text x="44.2254%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::undo_move_mutable (56 samples, 0.03%)</title><rect x="44.0006%" y="357" width="0.0344%" height="15" fill="rgb(216,97,11)" fg:x="71578" fg:w="56"/><text x="44.2506%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (68 samples, 0.04%)</title><rect x="44.0350%" y="357" width="0.0418%" height="15" fill="rgb(223,59,9)" fg:x="71634" fg:w="68"/><text x="44.2850%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (1,233 samples, 0.76%)</title><rect x="52.9737%" y="325" width="0.7580%" height="15" fill="rgb(233,93,31)" fg:x="86175" fg:w="1233"/><text x="53.2237%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (3,399 samples, 2.09%)</title><rect x="52.4033%" y="341" width="2.0894%" height="15" fill="rgb(239,81,33)" fg:x="85247" fg:w="3399"/><text x="52.6533%" y="351.50">A..</text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (1,238 samples, 0.76%)</title><rect x="53.7317%" y="325" width="0.7610%" height="15" fill="rgb(213,120,34)" fg:x="87408" fg:w="1238"/><text x="53.9817%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_bishop_moves (41 samples, 0.03%)</title><rect x="54.4927%" y="341" width="0.0252%" height="15" fill="rgb(243,49,53)" fg:x="88646" fg:w="41"/><text x="54.7427%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (485 samples, 0.30%)</title><rect x="54.6728%" y="309" width="0.2981%" height="15" fill="rgb(247,216,33)" fg:x="88939" fg:w="485"/><text x="54.9228%" y="319.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (1,008 samples, 0.62%)</title><rect x="54.5923%" y="325" width="0.6196%" height="15" fill="rgb(226,26,14)" fg:x="88808" fg:w="1008"/><text x="54.8423%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (392 samples, 0.24%)</title><rect x="54.9710%" y="309" width="0.2410%" height="15" fill="rgb(215,49,53)" fg:x="89424" fg:w="392"/><text x="55.2210%" y="319.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_evading_king_moves (1,135 samples, 0.70%)</title><rect x="54.5179%" y="341" width="0.6977%" height="15" fill="rgb(245,162,40)" fg:x="88687" fg:w="1135"/><text x="54.7679%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (2,972 samples, 1.83%)</title><rect x="56.1844%" y="309" width="1.8270%" height="15" fill="rgb(229,68,17)" fg:x="91398" fg:w="2972"/><text x="56.4344%" y="319.50">A..</text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (5,780 samples, 3.55%)</title><rect x="55.6115%" y="325" width="3.5531%" height="15" fill="rgb(213,182,10)" fg:x="90466" fg:w="5780"/><text x="55.8615%" y="335.50">App`..</text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (1,876 samples, 1.15%)</title><rect x="58.0114%" y="309" width="1.1532%" height="15" fill="rgb(245,125,30)" fg:x="94370" fg:w="1876"/><text x="58.2614%" y="319.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (58 samples, 0.04%)</title><rect x="59.1646%" y="325" width="0.0357%" height="15" fill="rgb(232,202,2)" fg:x="96246" fg:w="58"/><text x="59.4146%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_king_moves (6,520 samples, 4.01%)</title><rect x="55.2156%" y="341" width="4.0080%" height="15" fill="rgb(237,140,51)" fg:x="89822" fg:w="6520"/><text x="55.4656%" y="351.50">App`..</text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (38 samples, 0.02%)</title><rect x="59.2002%" y="325" width="0.0234%" height="15" fill="rgb(236,157,25)" fg:x="96304" fg:w="38"/><text x="59.4502%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_knight_moves (40 samples, 0.02%)</title><rect x="59.2236%" y="341" width="0.0246%" height="15" fill="rgb(219,209,0)" fg:x="96342" fg:w="40"/><text x="59.4736%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_bishop_moves (3,842 samples, 2.36%)</title><rect x="59.9834%" y="325" width="2.3618%" height="15" fill="rgb(240,116,54)" fg:x="97578" fg:w="3842"/><text x="60.2334%" y="335.50">Ap..</text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (2,485 samples, 1.53%)</title><rect x="60.8176%" y="309" width="1.5276%" height="15" fill="rgb(216,10,36)" fg:x="98935" fg:w="2485"/><text x="61.0676%" y="319.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_knight_moves (1,251 samples, 0.77%)</title><rect x="62.3452%" y="325" width="0.7690%" height="15" fill="rgb(222,72,44)" fg:x="101420" fg:w="1251"/><text x="62.5952%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_pawn_moves (4,249 samples, 2.61%)</title><rect x="63.1142%" y="325" width="2.6120%" height="15" fill="rgb(232,159,9)" fg:x="102671" fg:w="4249"/><text x="63.3642%" y="335.50">Ap..</text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (1,389 samples, 0.85%)</title><rect x="66.4122%" y="309" width="0.8538%" height="15" fill="rgb(210,39,32)" fg:x="108036" fg:w="1389"/><text x="66.6622%" y="319.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_queen_moves (3,304 samples, 2.03%)</title><rect x="65.7261%" y="325" width="2.0310%" height="15" fill="rgb(216,194,45)" fg:x="106920" fg:w="3304"/><text x="65.9761%" y="335.50">A..</text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (799 samples, 0.49%)</title><rect x="67.2660%" y="309" width="0.4912%" height="15" fill="rgb(218,18,35)" fg:x="109425" fg:w="799"/><text x="67.5160%" y="319.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_rook_moves (2,708 samples, 1.66%)</title><rect x="67.7572%" y="325" width="1.6647%" height="15" fill="rgb(207,83,51)" fg:x="110224" fg:w="2708"/><text x="68.0072%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (1,637 samples, 1.01%)</title><rect x="68.4156%" y="309" width="1.0063%" height="15" fill="rgb(225,63,43)" fg:x="111295" fg:w="1637"/><text x="68.6656%" y="319.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (98 samples, 0.06%)</title><rect x="69.4219%" y="325" width="0.0602%" height="15" fill="rgb(207,57,36)" fg:x="112932" fg:w="98"/><text x="69.6719%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_moves (16,730 samples, 10.28%)</title><rect x="59.2482%" y="341" width="10.2843%" height="15" fill="rgb(216,99,33)" fg:x="96382" fg:w="16730"/><text x="59.4982%" y="351.50">App`App::game_m..</text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (82 samples, 0.05%)</title><rect x="69.4821%" y="325" width="0.0504%" height="15" fill="rgb(225,42,16)" fg:x="113030" fg:w="82"/><text x="69.7321%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_pawn_moves (42 samples, 0.03%)</title><rect x="69.5325%" y="341" width="0.0258%" height="15" fill="rgb(220,201,45)" fg:x="113112" fg:w="42"/><text x="69.7825%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_queen_moves (32 samples, 0.02%)</title><rect x="69.5583%" y="341" width="0.0197%" height="15" fill="rgb(225,33,4)" fg:x="113154" fg:w="32"/><text x="69.8083%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_rook_moves (47 samples, 0.03%)</title><rect x="69.5780%" y="341" width="0.0289%" height="15" fill="rgb(224,33,50)" fg:x="113186" fg:w="47"/><text x="69.8280%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (2,676 samples, 1.64%)</title><rect x="69.6069%" y="341" width="1.6450%" height="15" fill="rgb(246,198,51)" fg:x="113233" fg:w="2676"/><text x="69.8569%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (2,603 samples, 1.60%)</title><rect x="71.2519%" y="341" width="1.6001%" height="15" fill="rgb(205,22,4)" fg:x="115909" fg:w="2603"/><text x="71.5019%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (332 samples, 0.20%)</title><rect x="72.8520%" y="341" width="0.2041%" height="15" fill="rgb(206,3,8)" fg:x="118512" fg:w="332"/><text x="73.1020%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (662 samples, 0.41%)</title><rect x="73.0561%" y="341" width="0.4069%" height="15" fill="rgb(251,23,15)" fg:x="118844" fg:w="662"/><text x="73.3061%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::gen_moves_legal (48,111 samples, 29.57%)</title><rect x="44.0768%" y="357" width="29.5749%" height="15" fill="rgb(252,88,28)" fg:x="71702" fg:w="48111"/><text x="44.3268%" y="367.50">App`App::game_manager::move_gen::MoveGen::gen_mo..</text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (307 samples, 0.19%)</title><rect x="73.4630%" y="341" width="0.1887%" height="15" fill="rgb(212,127,14)" fg:x="119506" fg:w="307"/><text x="73.7130%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_evading_king_moves (21 samples, 0.01%)</title><rect x="73.6518%" y="357" width="0.0129%" height="15" fill="rgb(247,145,37)" fg:x="119813" fg:w="21"/><text x="73.9018%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_king_moves (29 samples, 0.02%)</title><rect x="73.6647%" y="357" width="0.0178%" height="15" fill="rgb(209,117,53)" fg:x="119834" fg:w="29"/><text x="73.9147%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_moves (56 samples, 0.03%)</title><rect x="73.6825%" y="357" width="0.0344%" height="15" fill="rgb(212,90,42)" fg:x="119863" fg:w="56"/><text x="73.9325%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (66 samples, 0.04%)</title><rect x="73.7169%" y="357" width="0.0406%" height="15" fill="rgb(218,164,37)" fg:x="119919" fg:w="66"/><text x="73.9669%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (19 samples, 0.01%)</title><rect x="73.7575%" y="357" width="0.0117%" height="15" fill="rgb(246,65,34)" fg:x="119985" fg:w="19"/><text x="74.0075%" y="367.50"></text></g><g><title>App`DYLD-STUB$$__bzero (50 samples, 0.03%)</title><rect x="73.7692%" y="357" width="0.0307%" height="15" fill="rgb(231,100,33)" fg:x="120004" fg:w="50"/><text x="74.0192%" y="367.50"></text></g><g><title>App`DYLD-STUB$$memcpy (38 samples, 0.02%)</title><rect x="73.7999%" y="357" width="0.0234%" height="15" fill="rgb(228,126,14)" fg:x="120054" fg:w="38"/><text x="74.0499%" y="367.50"></text></g><g><title>App`DYLD-STUB$$memset_pattern16 (19 samples, 0.01%)</title><rect x="73.8233%" y="357" width="0.0117%" height="15" fill="rgb(215,173,21)" fg:x="120092" fg:w="19"/><text x="74.0733%" y="367.50"></text></g><g><title>App`&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (63 samples, 0.04%)</title><rect x="74.3218%" y="325" width="0.0387%" height="15" fill="rgb(210,6,40)" fg:x="120903" fg:w="63"/><text x="74.5718%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`getentropy (61 samples, 0.04%)</title><rect x="74.3230%" y="309" width="0.0375%" height="15" fill="rgb(212,48,18)" fg:x="120905" fg:w="61"/><text x="74.5730%" y="319.50"></text></g><g><title>App`rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt;::reseed_and_generate (67 samples, 0.04%)</title><rect x="74.3206%" y="341" width="0.0412%" height="15" fill="rgb(230,214,11)" fg:x="120901" fg:w="67"/><text x="74.5706%" y="351.50"></text></g><g><title>App`rand_chacha::guts::refill_wide (32 samples, 0.02%)</title><rect x="74.3624%" y="341" width="0.0197%" height="15" fill="rgb(254,105,39)" fg:x="120969" fg:w="32"/><text x="74.6124%" y="351.50"></text></g><g><title>App`rand::rng::Rng::gen_range (1,115 samples, 0.69%)</title><rect x="73.8349%" y="357" width="0.6854%" height="15" fill="rgb(245,158,5)" fg:x="120111" fg:w="1115"/><text x="74.0849%" y="367.50"></text></g><g><title>App`rand_chacha::guts::refill_wide::impl_avx2 (225 samples, 0.14%)</title><rect x="74.3821%" y="341" width="0.1383%" height="15" fill="rgb(249,208,11)" fg:x="121001" fg:w="225"/><text x="74.6321%" y="351.50"></text></g><g><title>App`rand::rngs::thread::thread_rng (423 samples, 0.26%)</title><rect x="74.5284%" y="357" width="0.2600%" height="15" fill="rgb(210,39,28)" fg:x="121239" fg:w="423"/><text x="74.7784%" y="367.50"></text></g><g><title>libdyld.dylib`tlv_get_addr (277 samples, 0.17%)</title><rect x="74.7964%" y="357" width="0.1703%" height="15" fill="rgb(211,56,53)" fg:x="121675" fg:w="277"/><text x="75.0464%" y="367.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$__bzero (73 samples, 0.04%)</title><rect x="74.9667%" y="357" width="0.0449%" height="15" fill="rgb(226,201,30)" fg:x="121952" fg:w="73"/><text x="75.2167%" y="367.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (64 samples, 0.04%)</title><rect x="75.0115%" y="357" width="0.0393%" height="15" fill="rgb(239,101,34)" fg:x="122025" fg:w="64"/><text x="75.2615%" y="367.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memset_pattern16 (48 samples, 0.03%)</title><rect x="75.0509%" y="357" width="0.0295%" height="15" fill="rgb(226,209,5)" fg:x="122089" fg:w="48"/><text x="75.3009%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (102 samples, 0.06%)</title><rect x="75.0804%" y="357" width="0.0627%" height="15" fill="rgb(250,105,47)" fg:x="122137" fg:w="102"/><text x="75.3304%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (138 samples, 0.08%)</title><rect x="75.1431%" y="357" width="0.0848%" height="15" fill="rgb(230,72,3)" fg:x="122239" fg:w="138"/><text x="75.3931%" y="367.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (78,797 samples, 48.44%)</title><rect x="26.8179%" y="373" width="48.4383%" height="15" fill="rgb(232,218,39)" fg:x="43626" fg:w="78797"/><text x="27.0679%" y="383.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (46 samples, 0.03%)</title><rect x="75.2279%" y="357" width="0.0283%" height="15" fill="rgb(248,166,6)" fg:x="122377" fg:w="46"/><text x="75.4779%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (210 samples, 0.13%)</title><rect x="77.3112%" y="341" width="0.1291%" height="15" fill="rgb(247,89,20)" fg:x="125766" fg:w="210"/><text x="77.5612%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (729 samples, 0.45%)</title><rect x="77.1667%" y="357" width="0.4481%" height="15" fill="rgb(248,130,54)" fg:x="125531" fg:w="729"/><text x="77.4167%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (284 samples, 0.17%)</title><rect x="77.4403%" y="341" width="0.1746%" height="15" fill="rgb(234,196,4)" fg:x="125976" fg:w="284"/><text x="77.6903%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (663 samples, 0.41%)</title><rect x="77.8964%" y="325" width="0.4076%" height="15" fill="rgb(250,143,31)" fg:x="126718" fg:w="663"/><text x="78.1464%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (1,360 samples, 0.84%)</title><rect x="77.7292%" y="341" width="0.8360%" height="15" fill="rgb(211,110,34)" fg:x="126446" fg:w="1360"/><text x="77.9792%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (425 samples, 0.26%)</title><rect x="78.3040%" y="325" width="0.2613%" height="15" fill="rgb(215,124,48)" fg:x="127381" fg:w="425"/><text x="78.5540%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_king_moves (1,553 samples, 0.95%)</title><rect x="77.6284%" y="357" width="0.9547%" height="15" fill="rgb(216,46,13)" fg:x="126282" fg:w="1553"/><text x="77.8784%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_bishop_moves (799 samples, 0.49%)</title><rect x="78.7380%" y="341" width="0.4912%" height="15" fill="rgb(205,184,25)" fg:x="128087" fg:w="799"/><text x="78.9880%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (511 samples, 0.31%)</title><rect x="78.9150%" y="325" width="0.3141%" height="15" fill="rgb(228,1,10)" fg:x="128375" fg:w="511"/><text x="79.1650%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_knight_moves (256 samples, 0.16%)</title><rect x="79.2291%" y="341" width="0.1574%" height="15" fill="rgb(213,116,27)" fg:x="128886" fg:w="256"/><text x="79.4791%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_pawn_moves (1,003 samples, 0.62%)</title><rect x="79.3865%" y="341" width="0.6166%" height="15" fill="rgb(241,95,50)" fg:x="129142" fg:w="1003"/><text x="79.6365%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (421 samples, 0.26%)</title><rect x="80.2563%" y="325" width="0.2588%" height="15" fill="rgb(238,48,32)" fg:x="130557" fg:w="421"/><text x="80.5063%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_queen_moves (1,188 samples, 0.73%)</title><rect x="80.0031%" y="341" width="0.7303%" height="15" fill="rgb(235,113,49)" fg:x="130145" fg:w="1188"/><text x="80.2531%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (355 samples, 0.22%)</title><rect x="80.5151%" y="325" width="0.2182%" height="15" fill="rgb(205,127,43)" fg:x="130978" fg:w="355"/><text x="80.7651%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_rook_moves (440 samples, 0.27%)</title><rect x="80.7334%" y="341" width="0.2705%" height="15" fill="rgb(250,162,2)" fg:x="131333" fg:w="440"/><text x="80.9834%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (284 samples, 0.17%)</title><rect x="80.8293%" y="325" width="0.1746%" height="15" fill="rgb(220,13,41)" fg:x="131489" fg:w="284"/><text x="81.0793%" y="335.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_moves (3,961 samples, 2.43%)</title><rect x="78.5892%" y="357" width="2.4349%" height="15" fill="rgb(249,221,25)" fg:x="127845" fg:w="3961"/><text x="78.8392%" y="367.50">Ap..</text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (17 samples, 0.01%)</title><rect x="81.0137%" y="341" width="0.0105%" height="15" fill="rgb(215,208,19)" fg:x="131789" fg:w="17"/><text x="81.2637%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (557 samples, 0.34%)</title><rect x="81.0450%" y="357" width="0.3424%" height="15" fill="rgb(236,175,2)" fg:x="131840" fg:w="557"/><text x="81.2950%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (635 samples, 0.39%)</title><rect x="81.3874%" y="357" width="0.3903%" height="15" fill="rgb(241,52,2)" fg:x="132397" fg:w="635"/><text x="81.6374%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (130 samples, 0.08%)</title><rect x="81.7778%" y="357" width="0.0799%" height="15" fill="rgb(248,140,14)" fg:x="133032" fg:w="130"/><text x="82.0278%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (133 samples, 0.08%)</title><rect x="81.8577%" y="357" width="0.0818%" height="15" fill="rgb(253,22,42)" fg:x="133162" fg:w="133"/><text x="82.1077%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::gen_moves_legal (10,937 samples, 6.72%)</title><rect x="75.2611%" y="373" width="6.7232%" height="15" fill="rgb(234,61,47)" fg:x="122431" fg:w="10937"/><text x="75.5111%" y="383.50">App`App::..</text></g><g><title>libsystem_platform.dylib`_platform_memset_pattern16$VARIANT$Haswell (73 samples, 0.04%)</title><rect x="81.9394%" y="357" width="0.0449%" height="15" fill="rgb(208,226,15)" fg:x="133295" fg:w="73"/><text x="82.1894%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (17 samples, 0.01%)</title><rect x="81.9960%" y="373" width="0.0105%" height="15" fill="rgb(217,221,4)" fg:x="133387" fg:w="17"/><text x="82.2460%" y="383.50"></text></g><g><title>App`DYLD-STUB$$memcpy (24 samples, 0.01%)</title><rect x="82.0175%" y="373" width="0.0148%" height="15" fill="rgb(212,174,34)" fg:x="133422" fg:w="24"/><text x="82.2675%" y="383.50"></text></g><g><title>App`__rdl_alloc (37 samples, 0.02%)</title><rect x="82.0372%" y="373" width="0.0227%" height="15" fill="rgb(253,83,4)" fg:x="133454" fg:w="37"/><text x="82.2872%" y="383.50"></text></g><g><title>App`__rdl_dealloc (24 samples, 0.01%)</title><rect x="82.0599%" y="373" width="0.0148%" height="15" fill="rgb(250,195,49)" fg:x="133491" fg:w="24"/><text x="82.3099%" y="383.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (103 samples, 0.06%)</title><rect x="82.0851%" y="373" width="0.0633%" height="15" fill="rgb(241,192,25)" fg:x="133532" fg:w="103"/><text x="82.3351%" y="383.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (31 samples, 0.02%)</title><rect x="82.1294%" y="357" width="0.0191%" height="15" fill="rgb(208,124,10)" fg:x="133604" fg:w="31"/><text x="82.3794%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (1,838 samples, 1.13%)</title><rect x="86.8855%" y="357" width="1.1299%" height="15" fill="rgb(222,33,0)" fg:x="141341" fg:w="1838"/><text x="87.1355%" y="367.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (3,993 samples, 2.45%)</title><rect x="88.0154%" y="357" width="2.4546%" height="15" fill="rgb(234,209,28)" fg:x="143179" fg:w="3993"/><text x="88.2654%" y="367.50">Ap..</text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (1,416 samples, 0.87%)</title><rect x="89.5995%" y="341" width="0.8704%" height="15" fill="rgb(224,11,23)" fg:x="145756" fg:w="1416"/><text x="89.8495%" y="351.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (917 samples, 0.56%)</title><rect x="92.4303%" y="341" width="0.5637%" height="15" fill="rgb(232,99,1)" fg:x="150361" fg:w="917"/><text x="92.6803%" y="351.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (7,058 samples, 4.34%)</title><rect x="90.4706%" y="357" width="4.3387%" height="15" fill="rgb(237,95,45)" fg:x="147173" fg:w="7058"/><text x="90.7206%" y="367.50">App`c..</text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (2,953 samples, 1.82%)</title><rect x="92.9940%" y="341" width="1.8153%" height="15" fill="rgb(208,109,11)" fg:x="151278" fg:w="2953"/><text x="93.2440%" y="351.50">A..</text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (1,080 samples, 0.66%)</title><rect x="94.1454%" y="325" width="0.6639%" height="15" fill="rgb(216,190,48)" fg:x="153151" fg:w="1080"/><text x="94.3954%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (885 samples, 0.54%)</title><rect x="94.9095%" y="325" width="0.5440%" height="15" fill="rgb(251,171,36)" fg:x="154394" fg:w="885"/><text x="95.1595%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (489 samples, 0.30%)</title><rect x="95.1529%" y="309" width="0.3006%" height="15" fill="rgb(230,62,22)" fg:x="154790" fg:w="489"/><text x="95.4029%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1,057 samples, 0.65%)</title><rect x="94.8093%" y="357" width="0.6498%" height="15" fill="rgb(225,114,35)" fg:x="154231" fg:w="1057"/><text x="95.0593%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (965 samples, 0.59%)</title><rect x="94.8658%" y="341" width="0.5932%" height="15" fill="rgb(215,118,42)" fg:x="154323" fg:w="965"/><text x="95.1158%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (35 samples, 0.02%)</title><rect x="95.4590%" y="357" width="0.0215%" height="15" fill="rgb(243,119,21)" fg:x="155288" fg:w="35"/><text x="95.7090%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (225 samples, 0.14%)</title><rect x="95.5599%" y="341" width="0.1383%" height="15" fill="rgb(252,177,53)" fg:x="155452" fg:w="225"/><text x="95.8099%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (366 samples, 0.22%)</title><rect x="95.4806%" y="357" width="0.2250%" height="15" fill="rgb(237,209,29)" fg:x="155323" fg:w="366"/><text x="95.7306%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (34 samples, 0.02%)</title><rect x="95.7055%" y="357" width="0.0209%" height="15" fill="rgb(212,65,23)" fg:x="155689" fg:w="34"/><text x="95.9555%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (241 samples, 0.15%)</title><rect x="95.7264%" y="357" width="0.1481%" height="15" fill="rgb(230,222,46)" fg:x="155723" fg:w="241"/><text x="95.9764%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (22 samples, 0.01%)</title><rect x="95.8758%" y="357" width="0.0135%" height="15" fill="rgb(215,135,32)" fg:x="155966" fg:w="22"/><text x="96.1258%" y="367.50"></text></g><g><title>App`core::slice::sort::merge_sort (22,816 samples, 14.03%)</title><rect x="82.1485%" y="373" width="14.0255%" height="15" fill="rgb(246,101,22)" fg:x="133635" fg:w="22816"/><text x="82.3985%" y="383.50">App`core::slice::sort..</text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (463 samples, 0.28%)</title><rect x="95.8893%" y="357" width="0.2846%" height="15" fill="rgb(206,107,13)" fg:x="155988" fg:w="463"/><text x="96.1393%" y="367.50"></text></g><g><title>App`rand::rng::Rng::gen_range (59 samples, 0.04%)</title><rect x="96.1740%" y="373" width="0.0363%" height="15" fill="rgb(250,100,44)" fg:x="156451" fg:w="59"/><text x="96.4240%" y="383.50"></text></g><g><title>App`rand::rngs::thread::thread_rng (18 samples, 0.01%)</title><rect x="96.2102%" y="373" width="0.0111%" height="15" fill="rgb(231,147,38)" fg:x="156510" fg:w="18"/><text x="96.4602%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (28 samples, 0.02%)</title><rect x="96.2213%" y="373" width="0.0172%" height="15" fill="rgb(229,8,40)" fg:x="156528" fg:w="28"/><text x="96.4713%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (155 samples, 0.10%)</title><rect x="96.3805%" y="357" width="0.0953%" height="15" fill="rgb(221,135,30)" fg:x="156787" fg:w="155"/><text x="96.6305%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (87 samples, 0.05%)</title><rect x="96.4758%" y="357" width="0.0535%" height="15" fill="rgb(249,193,18)" fg:x="156942" fg:w="87"/><text x="96.7258%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (189 samples, 0.12%)</title><rect x="96.5293%" y="357" width="0.1162%" height="15" fill="rgb(209,133,39)" fg:x="157029" fg:w="189"/><text x="96.7793%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (177 samples, 0.11%)</title><rect x="96.5367%" y="341" width="0.1088%" height="15" fill="rgb(232,100,14)" fg:x="157041" fg:w="177"/><text x="96.7867%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (653 samples, 0.40%)</title><rect x="96.2483%" y="373" width="0.4014%" height="15" fill="rgb(224,185,1)" fg:x="156572" fg:w="653"/><text x="96.4983%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`get_tiny_previous_free_msize (39 samples, 0.02%)</title><rect x="96.8600%" y="357" width="0.0240%" height="15" fill="rgb(223,139,8)" fg:x="157567" fg:w="39"/><text x="97.1100%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (109 samples, 0.07%)</title><rect x="97.1397%" y="341" width="0.0670%" height="15" fill="rgb(232,213,38)" fg:x="158022" fg:w="109"/><text x="97.3897%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1,001 samples, 0.62%)</title><rect x="96.6498%" y="373" width="0.6153%" height="15" fill="rgb(207,94,22)" fg:x="157225" fg:w="1001"/><text x="96.8998%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (612 samples, 0.38%)</title><rect x="96.8889%" y="357" width="0.3762%" height="15" fill="rgb(219,183,54)" fg:x="157614" fg:w="612"/><text x="97.1389%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (95 samples, 0.06%)</title><rect x="97.2067%" y="341" width="0.0584%" height="15" fill="rgb(216,185,54)" fg:x="158131" fg:w="95"/><text x="97.4567%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (34 samples, 0.02%)</title><rect x="97.2651%" y="373" width="0.0209%" height="15" fill="rgb(254,217,39)" fg:x="158226" fg:w="34"/><text x="97.5151%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_definite_size (89 samples, 0.05%)</title><rect x="97.2860%" y="373" width="0.0547%" height="15" fill="rgb(240,178,23)" fg:x="158260" fg:w="89"/><text x="97.5360%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (216 samples, 0.13%)</title><rect x="97.3407%" y="373" width="0.1328%" height="15" fill="rgb(218,11,47)" fg:x="158349" fg:w="216"/><text x="97.5907%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (26 samples, 0.02%)</title><rect x="97.4735%" y="373" width="0.0160%" height="15" fill="rgb(218,51,51)" fg:x="158565" fg:w="26"/><text x="97.7235%" y="383.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$__bzero (18 samples, 0.01%)</title><rect x="97.5018%" y="373" width="0.0111%" height="15" fill="rgb(238,126,27)" fg:x="158611" fg:w="18"/><text x="97.7518%" y="383.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (73 samples, 0.04%)</title><rect x="97.5128%" y="373" width="0.0449%" height="15" fill="rgb(249,202,22)" fg:x="158629" fg:w="73"/><text x="97.7628%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (21 samples, 0.01%)</title><rect x="97.5632%" y="373" width="0.0129%" height="15" fill="rgb(254,195,49)" fg:x="158711" fg:w="21"/><text x="97.8132%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (147 samples, 0.09%)</title><rect x="97.5761%" y="373" width="0.0904%" height="15" fill="rgb(208,123,14)" fg:x="158732" fg:w="147"/><text x="97.8261%" y="383.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (124,187 samples, 76.34%)</title><rect x="21.3290%" y="389" width="76.3406%" height="15" fill="rgb(224,200,8)" fg:x="34697" fg:w="124187"/><text x="21.5790%" y="399.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (33 samples, 0.02%)</title><rect x="97.8595%" y="357" width="0.0203%" height="15" fill="rgb(217,61,36)" fg:x="159193" fg:w="33"/><text x="98.1095%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (75 samples, 0.05%)</title><rect x="97.8454%" y="373" width="0.0461%" height="15" fill="rgb(206,35,45)" fg:x="159170" fg:w="75"/><text x="98.0954%" y="383.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (19 samples, 0.01%)</title><rect x="97.8798%" y="357" width="0.0117%" height="15" fill="rgb(217,65,33)" fg:x="159226" fg:w="19"/><text x="98.1298%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (47 samples, 0.03%)</title><rect x="97.9130%" y="341" width="0.0289%" height="15" fill="rgb(222,158,48)" fg:x="159280" fg:w="47"/><text x="98.1630%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::attackers (93 samples, 0.06%)</title><rect x="97.9038%" y="357" width="0.0572%" height="15" fill="rgb(254,2,54)" fg:x="159265" fg:w="93"/><text x="98.1538%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (31 samples, 0.02%)</title><rect x="97.9419%" y="341" width="0.0191%" height="15" fill="rgb(250,143,38)" fg:x="159327" fg:w="31"/><text x="98.1919%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_king_moves (104 samples, 0.06%)</title><rect x="97.8976%" y="373" width="0.0639%" height="15" fill="rgb(248,25,0)" fg:x="159255" fg:w="104"/><text x="98.1476%" y="383.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_bishop_moves (91 samples, 0.06%)</title><rect x="97.9769%" y="357" width="0.0559%" height="15" fill="rgb(206,152,27)" fg:x="159384" fg:w="91"/><text x="98.2269%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (56 samples, 0.03%)</title><rect x="97.9985%" y="341" width="0.0344%" height="15" fill="rgb(240,77,30)" fg:x="159419" fg:w="56"/><text x="98.2485%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_knight_moves (23 samples, 0.01%)</title><rect x="98.0329%" y="357" width="0.0141%" height="15" fill="rgb(231,5,3)" fg:x="159475" fg:w="23"/><text x="98.2829%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_pawn_moves (100 samples, 0.06%)</title><rect x="98.0470%" y="357" width="0.0615%" height="15" fill="rgb(207,226,32)" fg:x="159498" fg:w="100"/><text x="98.2970%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (20 samples, 0.01%)</title><rect x="98.1214%" y="341" width="0.0123%" height="15" fill="rgb(222,207,47)" fg:x="159619" fg:w="20"/><text x="98.3714%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_queen_moves (49 samples, 0.03%)</title><rect x="98.1085%" y="357" width="0.0301%" height="15" fill="rgb(229,115,45)" fg:x="159598" fg:w="49"/><text x="98.3585%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_rook_moves (55 samples, 0.03%)</title><rect x="98.1386%" y="357" width="0.0338%" height="15" fill="rgb(224,191,6)" fg:x="159647" fg:w="55"/><text x="98.3886%" y="367.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (25 samples, 0.02%)</title><rect x="98.1571%" y="341" width="0.0154%" height="15" fill="rgb(230,227,24)" fg:x="159677" fg:w="25"/><text x="98.4071%" y="351.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_moves (345 samples, 0.21%)</title><rect x="97.9622%" y="373" width="0.2121%" height="15" fill="rgb(228,80,19)" fg:x="159360" fg:w="345"/><text x="98.2122%" y="383.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::BishopMoves::mov_map (66 samples, 0.04%)</title><rect x="98.1773%" y="373" width="0.0406%" height="15" fill="rgb(247,229,0)" fg:x="159710" fg:w="66"/><text x="98.4273%" y="383.50"></text></g><g><title>App`App::game_manager::move_gen::bit_boards::RookMoves::mov_map (54 samples, 0.03%)</title><rect x="98.2179%" y="373" width="0.0332%" height="15" fill="rgb(237,194,15)" fg:x="159776" fg:w="54"/><text x="98.4679%" y="383.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::gen_moves_legal (973 samples, 0.60%)</title><rect x="97.6702%" y="389" width="0.5981%" height="15" fill="rgb(219,203,20)" fg:x="158885" fg:w="973"/><text x="97.9202%" y="399.50"></text></g><g><title>App`__rdl_dealloc (51 samples, 0.03%)</title><rect x="98.2763%" y="389" width="0.0314%" height="15" fill="rgb(234,128,8)" fg:x="159871" fg:w="51"/><text x="98.5263%" y="399.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (24 samples, 0.01%)</title><rect x="98.3138%" y="389" width="0.0148%" height="15" fill="rgb(248,202,8)" fg:x="159932" fg:w="24"/><text x="98.5638%" y="399.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (172 samples, 0.11%)</title><rect x="98.8203%" y="373" width="0.1057%" height="15" fill="rgb(206,104,37)" fg:x="160756" fg:w="172"/><text x="99.0703%" y="383.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (330 samples, 0.20%)</title><rect x="98.9261%" y="373" width="0.2029%" height="15" fill="rgb(223,8,27)" fg:x="160928" fg:w="330"/><text x="99.1761%" y="383.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (124 samples, 0.08%)</title><rect x="99.0527%" y="357" width="0.0762%" height="15" fill="rgb(216,217,28)" fg:x="161134" fg:w="124"/><text x="99.3027%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (41 samples, 0.03%)</title><rect x="99.2716%" y="357" width="0.0252%" height="15" fill="rgb(249,199,1)" fg:x="161490" fg:w="41"/><text x="99.5216%" y="367.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (463 samples, 0.28%)</title><rect x="99.1289%" y="373" width="0.2846%" height="15" fill="rgb(240,85,17)" fg:x="161258" fg:w="463"/><text x="99.3789%" y="383.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (190 samples, 0.12%)</title><rect x="99.2968%" y="357" width="0.1168%" height="15" fill="rgb(206,108,45)" fg:x="161531" fg:w="190"/><text x="99.5468%" y="367.50"></text></g><g><title>App`App::game_manager::board2::BoardState::piece_value (65 samples, 0.04%)</title><rect x="99.3736%" y="341" width="0.0400%" height="15" fill="rgb(245,210,41)" fg:x="161656" fg:w="65"/><text x="99.6236%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate (95 samples, 0.06%)</title><rect x="99.4271%" y="341" width="0.0584%" height="15" fill="rgb(206,13,37)" fg:x="161743" fg:w="95"/><text x="99.6771%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_from_block (55 samples, 0.03%)</title><rect x="99.4517%" y="325" width="0.0338%" height="15" fill="rgb(250,61,18)" fg:x="161783" fg:w="55"/><text x="99.7017%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (118 samples, 0.07%)</title><rect x="99.4136%" y="373" width="0.0725%" height="15" fill="rgb(235,172,48)" fg:x="161721" fg:w="118"/><text x="99.6636%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (101 samples, 0.06%)</title><rect x="99.4240%" y="357" width="0.0621%" height="15" fill="rgb(249,201,17)" fg:x="161738" fg:w="101"/><text x="99.6740%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (40 samples, 0.02%)</title><rect x="99.4978%" y="357" width="0.0246%" height="15" fill="rgb(219,208,6)" fg:x="161858" fg:w="40"/><text x="99.7478%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (53 samples, 0.03%)</title><rect x="99.4910%" y="373" width="0.0326%" height="15" fill="rgb(248,31,23)" fg:x="161847" fg:w="53"/><text x="99.7410%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (21 samples, 0.01%)</title><rect x="99.5254%" y="373" width="0.0129%" height="15" fill="rgb(245,15,42)" fg:x="161903" fg:w="21"/><text x="99.7754%" y="383.50"></text></g><g><title>App`core::slice::sort::merge_sort (2,010 samples, 1.24%)</title><rect x="98.3286%" y="389" width="1.2356%" height="15" fill="rgb(222,217,39)" fg:x="159956" fg:w="2010"/><text x="98.5786%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (40 samples, 0.02%)</title><rect x="99.5396%" y="373" width="0.0246%" height="15" fill="rgb(210,219,27)" fg:x="161926" fg:w="40"/><text x="99.7896%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (23 samples, 0.01%)</title><rect x="99.5672%" y="389" width="0.0141%" height="15" fill="rgb(252,166,36)" fg:x="161971" fg:w="23"/><text x="99.8172%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (19 samples, 0.01%)</title><rect x="99.6281%" y="373" width="0.0117%" height="15" fill="rgb(245,132,34)" fg:x="162070" fg:w="19"/><text x="99.8781%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (23 samples, 0.01%)</title><rect x="99.6428%" y="373" width="0.0141%" height="15" fill="rgb(236,54,3)" fg:x="162094" fg:w="23"/><text x="99.8928%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (20 samples, 0.01%)</title><rect x="99.6447%" y="357" width="0.0123%" height="15" fill="rgb(241,173,43)" fg:x="162097" fg:w="20"/><text x="99.8947%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (124 samples, 0.08%)</title><rect x="99.5814%" y="389" width="0.0762%" height="15" fill="rgb(215,190,9)" fg:x="161994" fg:w="124"/><text x="99.8314%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (18 samples, 0.01%)</title><rect x="99.7172%" y="357" width="0.0111%" height="15" fill="rgb(242,101,16)" fg:x="162215" fg:w="18"/><text x="99.9672%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (130 samples, 0.08%)</title><rect x="99.6576%" y="389" width="0.0799%" height="15" fill="rgb(223,190,21)" fg:x="162118" fg:w="130"/><text x="99.9076%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (69 samples, 0.04%)</title><rect x="99.6951%" y="373" width="0.0424%" height="15" fill="rgb(215,228,25)" fg:x="162179" fg:w="69"/><text x="99.9451%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_free_to_block (17 samples, 0.01%)</title><rect x="99.7504%" y="389" width="0.0105%" height="15" fill="rgb(225,36,22)" fg:x="162269" fg:w="17"/><text x="100.0004%" y="399.50"></text></g><g><title>libsystem_platform.dylib`DYLD-STUB$$_platform_memmove (17 samples, 0.01%)</title><rect x="99.7750%" y="389" width="0.0105%" height="15" fill="rgb(251,106,46)" fg:x="162309" fg:w="17"/><text x="100.0250%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.01%)</title><rect x="99.7867%" y="389" width="0.0111%" height="15" fill="rgb(208,90,1)" fg:x="162328" fg:w="18"/><text x="100.0367%" y="399.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (128,632 samples, 79.07%)</title><rect x="20.7254%" y="405" width="79.0730%" height="15" fill="rgb(243,10,4)" fg:x="33715" fg:w="128632"/><text x="20.9754%" y="415.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::move_gen::MoveGen::legal_moves (31 samples, 0.02%)</title><rect x="99.8223%" y="389" width="0.0191%" height="15" fill="rgb(212,137,27)" fg:x="162386" fg:w="31"/><text x="100.0723%" y="399.50"></text></g><g><title>App`App::game_manager::move_gen::MoveGen::gen_moves_legal (78 samples, 0.05%)</title><rect x="99.7984%" y="405" width="0.0479%" height="15" fill="rgb(231,220,49)" fg:x="162347" fg:w="78"/><text x="100.0484%" y="415.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (29 samples, 0.02%)</title><rect x="99.8986%" y="389" width="0.0178%" height="15" fill="rgb(237,96,20)" fg:x="162510" fg:w="29"/><text x="100.1486%" y="399.50"></text></g><g><title>App`core::slice::sort::insertion_sort_shift_left (41 samples, 0.03%)</title><rect x="99.9164%" y="389" width="0.0252%" height="15" fill="rgb(239,229,30)" fg:x="162539" fg:w="41"/><text x="100.1664%" y="399.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::promising_move (20 samples, 0.01%)</title><rect x="99.9293%" y="373" width="0.0123%" height="15" fill="rgb(219,65,33)" fg:x="162560" fg:w="20"/><text x="100.1793%" y="383.50"></text></g><g><title>App`core::slice::sort::merge_sort (161 samples, 0.10%)</title><rect x="99.8500%" y="405" width="0.0990%" height="15" fill="rgb(243,134,7)" fg:x="162431" fg:w="161"/><text x="100.1000%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (19 samples, 0.01%)</title><rect x="99.9514%" y="405" width="0.0117%" height="15" fill="rgb(216,177,54)" fg:x="162596" fg:w="19"/><text x="100.2014%" y="415.50"></text></g><g><title>App`App::game_manager::bot2::Bot2::search (129,083 samples, 79.35%)</title><rect x="20.6252%" y="421" width="79.3502%" height="15" fill="rgb(211,160,20)" fg:x="33552" fg:w="129083"/><text x="20.8752%" y="431.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`core::slice::sort::merge_sort (20 samples, 0.01%)</title><rect x="99.9852%" y="421" width="0.0123%" height="15" fill="rgb(239,85,39)" fg:x="162651" fg:w="20"/><text x="100.2352%" y="431.50"></text></g><g><title>all (162,675 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(232,125,22)" fg:x="0" fg:w="162675"/><text x="0.2500%" y="591.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (129,333 samples, 79.50%)</title><rect x="20.4961%" y="565" width="79.5039%" height="15" fill="rgb(244,57,34)" fg:x="33342" fg:w="129333"/><text x="20.7461%" y="575.50">libsystem_pthread.dylib`thread_start</text></g><g><title>libsystem_pthread.dylib`_pthread_start (129,333 samples, 79.50%)</title><rect x="20.4961%" y="549" width="79.5039%" height="15" fill="rgb(214,203,32)" fg:x="33342" fg:w="129333"/><text x="20.7461%" y="559.50">libsystem_pthread.dylib`_pthread_start</text></g><g><title>App`std::sys::unix::thread::Thread::new::thread_start (129,148 samples, 79.39%)</title><rect x="20.6098%" y="533" width="79.3902%" height="15" fill="rgb(207,58,43)" fg:x="33527" fg:w="129148"/><text x="20.8598%" y="543.50">App`std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>App`core::ops::function::FnOnce::call_once{{vtable.shim}} (129,148 samples, 79.39%)</title><rect x="20.6098%" y="517" width="79.3902%" height="15" fill="rgb(215,193,15)" fg:x="33527" fg:w="129148"/><text x="20.8598%" y="527.50">App`core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>App`std::sys_common::backtrace::__rust_begin_short_backtrace (129,148 samples, 79.39%)</title><rect x="20.6098%" y="501" width="79.3902%" height="15" fill="rgb(232,15,44)" fg:x="33527" fg:w="129148"/><text x="20.8598%" y="511.50">App`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>App`App::game_manager::bot2::Bot2::search (129,148 samples, 79.39%)</title><rect x="20.6098%" y="485" width="79.3902%" height="15" fill="rgb(212,3,48)" fg:x="33527" fg:w="129148"/><text x="20.8598%" y="495.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::bot2::Bot2::search (129,148 samples, 79.39%)</title><rect x="20.6098%" y="469" width="79.3902%" height="15" fill="rgb(218,128,7)" fg:x="33527" fg:w="129148"/><text x="20.8598%" y="479.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::bot2::Bot2::search (129,148 samples, 79.39%)</title><rect x="20.6098%" y="453" width="79.3902%" height="15" fill="rgb(226,216,39)" fg:x="33527" fg:w="129148"/><text x="20.8598%" y="463.50">App`App::game_manager::bot2::Bot2::search</text></g><g><title>App`App::game_manager::bot2::Bot2::search (129,145 samples, 79.39%)</title><rect x="20.6116%" y="437" width="79.3884%" height="15" fill="rgb(243,47,51)" fg:x="33530" fg:w="129145"/><text x="20.8616%" y="447.50">App`App::game_manager::bot2::Bot2::search</text></g></svg></svg>